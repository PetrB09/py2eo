memory > xd
memory > xpickle_copier
memory > xk
memory > xNode
memory > xSmallCatamaran
memory > xD
memory > xFakeStr
memory > xMyStr
memory > xcm
memory > xhexint
memory > xtypes
memory > xmultimetaclass
memory > xC
memory > xcopy
memory > xBoat
memory > xEditingMixin
memory > xMeta1
memory > xround
memory > xautoproperty
memory > xNasty
memory > xOverrideBoth
memory > xtp
memory > xImportError
memory > xcomplex
memory > xAttributeError
memory > xC3
memory > xDescriptor
memory > xmeta
memory > xEditablePane
memory > xCounted
memory > xFileIO
memory > xpickle
memory > xlist
memory > xRuntimeError
memory > xO
memory > xcls2
memory > xdelattr
memory > xconstructor
memory > xDictSub
memory > xA2
memory > xEngineLess
memory > xa1
memory > xmydict
memory > xPickleCopier
memory > xcistr
memory > xPTypesLongInitTest
memory > xMyComplex
memory > xDDbase
memory > xMroTest
memory > xo
memory > xPerverseMetaType
memory > xdeepcopy
memory > xabc
memory > xC12
memory > xK
memory > xValueError
memory > xDDsub
memory > xfrozenset
memory > xException2
memory > xZ
memory > xstr
memory > xQ
memory > xd2
memory > xio
memory > xSubType
memory > xMM
memory > xHVGrid
memory > xMyTuple
memory > xC0
memory > xBMeta
memory > xwarnings
memory > xDescr
memory > xWorkAlways
memory > xPicklingTests
memory > xBase
memory > xAssertionError
memory > xmadtuple
memory > xC11
memory > xprecfloat
memory > xWorkOnce
memory > xProxy
memory > xB
memory > xexec
memory > xHorizontalGrid
memory > xC4
memory > xOldClass
memory > xautosuper
memory > xS
memory > xrange
memory > xmath
memory > xC15
memory > xexpr
memory > xH
memory > xMyFloat
memory > xb
memory > xvalue
memory > xProvoker
memory > xZeroDivisionError
memory > xWrapper
memory > xOverrideNeither
memory > xT
memory > xMyException
memory > xErrDescr
memory > xG
memory > xOverrideNew
memory > xSharedKeyTests
memory > xModule1
memory > xeval
memory > xZZ
memory > xL
memory > xcase
memory > xStopIteration
memory > xIndexError
memory > xPane
memory > xbytearray
memory > xmsg
memory > xScrollablePane
memory > xDictProxyTests
memory > xANotMeta
memory > xbase
memory > xproto
memory > xC7
memory > xP
memory > xAMeta
memory > xPicky
memory > xmax
memory > xoctlong
memory > xQ1
memory > xbinascii
memory > xDocDescr
memory > xslot
memory > xMyKey
memory > xOperatorsTest
memory > xM2
memory > xEvil
memory > xInt
memory > xPedalWheelBoat
memory > xNumber
memory > xBNotMeta
memory > xFoo
memory > xreversed
memory > xmysuper
memory > xkw
memory > xW
memory > xprint
memory > xtype
memory > xcopyreg
memory > xMyFrozenSet
memory > xException1
memory > xEditableScrollablePane
memory > xrunner
memory > xMyCallable
memory > xPedalo
memory > xC10
memory > xmadstring
memory > xset
memory > xWheelBoat
memory > xrepr
memory > xint
memory > xOverrideInit
memory > xCdict
memory > x_instance
memory > xBase2
memory > xException
memory > xmeth_impl
memory > xX
memory > xhasattr
memory > xChecker
memory > xa2
memory > xproperty
memory > xC14
memory > xx
memory > xC6
memory > xI
memory > xx2
memory > xoperator
memory > xmadunicode
memory > xok
memory > xi
memory > xVerticalGrid
memory > xF
memory > xR
memory > xtrash
memory > xMyInt
memory > xarg
memory > xbuiltins
memory > xsuper
memory > xDerived2
memory > xs
memory > xsupport
memory > xsys
memory > xsomeclass
memory > xkwds
memory > xbool
memory > xissubclass
memory > x_metaclass
memory > xM
memory > xVHGrid
memory > xbytes
memory > xtuple
memory > xMapping
memory > xB1
memory > xNotImplemented
memory > xEvilGetattribute
memory > xd1
memory > xMyBytes
memory > xGridLayout
memory > xDeprecationWarning
memory > xMeta
memory > xM1
memory > xfloat
memory > xchr
memory > xbad
memory > xClassPropertiesAndMethods
memory > xmadcomplex
memory > xcls
memory > xModule2
memory > xRecursionError
memory > xStdoutGuard
memory > xgc
memory > xModuleType
memory > xC1
memory > xSpecialDescr
memory > xSmallMultihull
memory > xargs
memory > xclassic
memory > xitertools
memory > xobj
memory > xdir
memory > xUnrelated
memory > xlongclone
memory > xslice
memory > xweakref
memory > xpow
memory > xitem
memory > xval
memory > xgetattr
memory > xv
memory > xprotocol
memory > xid
memory > xvars
memory > xUnicodeEncodeError
memory > xoct
memory > xDebugHelperMeta
memory > xiter
memory > xMeta2
memory > xformat
memory > xScrollingMixin
memory > xord
memory > xmylist
memory > xsetattr
memory > xC9
memory > xattr
memory > xFrag
memory > xiexpr
memory > xE
memory > xMiscTests
memory > xname
memory > xzip
memory > xunittest
memory > xsublist
memory > xSub
memory > xstaticmethod
memory > xoctetstring
memory > xy
memory > xhash
memory > xY
memory > xmap
memory > xDerived1
memory > xn
memory > xobject
memory > xC16
memory > xA
memory > xA1
memory > xAddressBookEntry
memory > xenv
memory > xcomputed_attribute
memory > xC2
memory > xdynamicmetaclass
memory > xUserLong
memory > xB2
memory > xkwargs
memory > xabs
memory > xN
memory > xhex
memory > xC5
memory > xSubSpam
memory > xop
memory > xNoWeak
memory > xlen
memory > xNewClass
memory > xExceptionType
memory > xclassmethod
memory > xj
memory > xisinstance
memory > xF2
memory > xdict
memory > xMyABC
memory > xC13
memory > x__name__
memory > xkey
memory > xOops
memory > xa
memory > xEllipsis
memory > xDayBoat
memory > xTypeError
memory > xbadarg
memory > xWeak
memory > xJ
[] > test_descr
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_reent_set_bases_on_base
        memory > xtest_staticmethods
        memory > xtest_repr_as_str
        memory > xtest_dynamics
        memory > xtest_slots_descriptor
        memory > xtest_isinst_isclass
        memory > xtest_dict_type_with_metaclass
        memory > xtest_descrdoc
        memory > xtest_binary_operator_override
        memory > xtest_rmul
        memory > xtest_type_lookup_mro_reference
        memory > x__repr__
        memory > xtest_testcapi_no_segfault
        memory > xtest_subclasses
        memory > xtest_properties_plus
        memory > xtest_abstractmethods
        memory > xtest_doc_descriptor
        memory > xtest_newslots
        memory > xtest_carloverre_multi_inherit_invalid
        memory > xtest_iter_keys
        memory > xtest_incomplete_set_bases_on_self
        memory > xtest_set_dict
        memory > xtest_funny_new
        memory > xtest_multiple_inheritance
        memory > xassertNotHasAttr
        memory > xtest_deepcopy_recursive
        memory > xtest_classic_comparisons
        memory > xunop_test
        memory > xtest_pytype_long_ready
        memory > xtest_refleaks_in_staticmethod___init__
        memory > xtest_ints
        memory > xtest_dicts
        memory > xtest_mutable_names
        memory > xtest_getattr_hooks
        memory > xstep_until
        memory > xtest_builtin_function_or_method
        memory > xtest_keyword_arguments
        memory > xtest_mixing_slot_wrappers
        memory > xtest_delete_hook
        memory > xtest_tp_subclasses_cycle_in_update_slots
        memory > xtest_imul_bug
        memory > xtest_set_doc
        memory > xtest_keywords
        memory > xtest_rich_comparisons
        memory > xtest_properties_doc_attrib
        memory > xtest_subtype_resurrection
        memory > xtest_basic_inheritance
        memory > xtest_restored_object_new
        memory > xtest_spam_lists
        memory > xtest_unsubclassable_types
        memory > xtest_wrap_lenfunc_bad_cast
        memory > xtest_main
        memory > xtest_repr
        memory > xtest_buffer_inheritance
        memory > xtest_reent_set_bases_tp_base_cycle
        memory > xtest_slot_shadows_class_variable
        memory > xtest_meth_class_get
        memory > xtest_complexes
        memory > x_testcapi
        memory > xtest_diamond_inheritance
        memory > xtest_slots_special
        memory > xtest_bound_method_repr
        memory > xtest_init
        memory > xtest_dir
        memory > xtest_file_fault
        memory > xtest_mutable_bases
        memory > xtest_evil_type_name
        memory > xsliceop_test
        memory > xtest_issue24097
        memory > xtest_ipow
        memory > xsetUp
        memory > xtest_monotonicity
        memory > xtest_special_method_lookup
        memory > xtest_mutable_bases_catch_mro_conflict
        memory > xtest_object_reduce
        memory > xtest_slots_multiple_inheritance
        memory > xtest_iter_items
        memory > xtest_supers
        memory > xtest_classmethods
        memory > xtest_str_subclass_as_dict_key
        memory > xassertHasAttr
        memory > xtest_slots
        memory > xtest_slots_special2
        memory > xtest_explicit_reverse_methods
        memory > xtest_spam_dicts
        memory > xtest_incomplete_extend
        memory > xtest_staticmethods_in_c
        memory > xtest_wrong_class_slot_wrapper
        memory > xtest_altmro
        memory > xnumber_operators
        memory > xtest_hash_inheritance
        memory > xtest_slots_trash
        memory > xtest_bad_new
        memory > xassertNotOrderable
        memory > xtest_wrapper_segfault
        memory > xbinop_test
        memory > x_generate_pickle_copiers
        memory > xtest_proxy_super
        memory > xtest_type___getattribute__
        memory > xtest_metaclass
        memory > xtest_subclassing_does_not_duplicate_dict_descriptors
        memory > xtest_str_of_str_subclass
        memory > xtest_not_implemented
        memory > xtest_dict_constructors
        memory > xtest_refleaks_in_classmethod___init__
        memory > xtest_overloading
        memory > xtest_method_wrapper
        memory > xtest_module_subclasses
        memory > xtest_reduce
        memory > xtest_lists
        memory > x_assert_is_copy
        memory > xtest_uninitialized_modules
        memory > xtest_methods_in_c
        memory > xtest_special_unbound_method_types
        memory > xtest_object_new
        memory > xtest_weakref_segfault
        memory > xtest_errors
        memory > xtest_object_new_and_init_with_parameters
        memory > xtest_qualname
        memory > xtest_consistency_with_epg
        memory > xtest_compattr
        memory > x__init__
        memory > xtest_ex5_from_c3_switch
        memory > xtest_reduce_copying
        memory > xtest_classic
        memory > xtest_slices
        memory > xtest_weakrefs
        memory > xtest_carloverre
        memory > xtest_python_dicts
        memory > xtest_copy_setstate
        memory > xtest_properties
        memory > xtest_object_class
        memory > xtest_mutable_bases_with_failing_mro
        memory > xtest_subclass_propagation
        memory > xtest_mro_disagreement
        memory > xtest_iter_values
        memory > xsetsliceop_test
        memory > xtest_assign_slice
        memory > xtest_builtin_bases
        memory > xtest_qualname_dict
        memory > xtest_set_and_no_get
        memory > xtest_specials
        memory > x_check_reduce
        memory > xtest_subclass_right_op
        memory > xtest_classmethods_in_c
        memory > xtest_floats
        memory > xtest_python_lists
        memory > xtest_object_class_assignment_between_heaptypes_and_nonheaptypes
        memory > xtest_reent_set_bases_on_direct_base
        memory > xtest_tp_subclasses_cycle_error_return_path
        memory > xtest_str_operations
        memory > xsetop_test
        memory > xtest_pickle_slots
        memory > xtest_methods
        memory > xtest_cycle_through_dict
        memory > x__new__
        memory > xtest_set_class
        memory > xtest_incomplete_super
        memory > xtest_carloverre_multi_inherit_valid
        memory > xtest_bpo25750
        memory > xtest_recursive_call
        memory > xtest_vicious_descriptor_nonsense
        memory > xtest_proxy_call
        memory > xset2op_test
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) ((xImportError)))
              (((unsupported)) 0)
              x_testcapi.write "None: is there a None literal in the EO language?"
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                x__init__.write
                  [xself]
                    memory > xexpr
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write (((((xunittest).xTestCase).x__init__)) ((xself)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                        (((unsupported)) (((xself).xbinops)) ((((unsupported)) ("add") ("+") ("sub") ("-") ("mul") ("*") ("matmul") ("@") ("truediv") ("/") ("floordiv") ("//") ("divmod") ("divmod") ("pow") ("**") ("lshift") ("<<") ("rshift") (">>") ("and") ("&") ("xor") ("^") ("or") ("|") ("cmp") ("cmp") ("lt") ("<") ("le") ("<=") ("eq") ("==") ("ne") ("!=") ("gt") (">") ("ge") (">="))))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xexpr)))) ((((xlist)) ((((((xself).xbinops).xitems)) 0)))))
                          seq
                            ((((xexpr).xislower)) 0).if
                              xexpr.write ((xexpr).add "(a, b)")
                              xexpr.write ("a %s b".mod (xexpr))
                            (((unsupported)) ((((unsupported)) (((xself).xbinops)) ((xname)))) ((xexpr)))
                        (((unsupported)) (((xself).xunops)) ((((unsupported)) ("pos") ("+") ("neg") ("-") ("abs") ("abs") ("invert") ("~") ("int") ("int") ("float") ("float"))))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xexpr)))) ((((xlist)) ((((((xself).xunops).xitems)) 0)))))
                          seq
                            ((((xexpr).xislower)) 0).if
                              xexpr.write ((xexpr).add "(a)")
                              xexpr.write ("%s a".mod (xexpr))
                            (((unsupported)) ((((unsupported)) (((xself).xunops)) ((xname)))) ((xexpr)))
                xunop_test.write
                  [xself xa xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xd.write (((unsupported)) ("a") ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xm)) ((xa)))) ((xres)))
                        xbm.write (((xgetattr)) ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbm)) 0)) ((xres)))
                xbinop_test.write
                  [xself xa xb xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xd.write (((unsupported)) ("a") ((xa)) ("b") ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xm)) ((xa)) ((xb)))) ((xres)))
                        xbm.write (((xgetattr)) ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbm)) ((xb)))) ((xres)))
                xsliceop_test.write
                  [xself xa xb xc xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xd.write (((unsupported)) ("a") ((xa)) ("b") ((xb)) ("c") ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xm)) ((xa)) ((((xslice)) ((xb)) ((xc)))))) ((xres)))
                        xbm.write (((xgetattr)) ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbm)) ((((xslice)) ((xb)) ((xc)))))) ((xres)))
                xsetop_test.write
                  [xself xa xb xres xstmt xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xd.write (((unsupported)) ("a") ((((xdeepcopy)) ((xa)))) ("b") ((xb)))
                        bogusForceDataize.write (((xexec)) ((xstmt)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)) ((((unsupported)) ((xd)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        bogusForceDataize.write (((xm)) ((((unsupported)) ((xd)) ("a"))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                        (((unsupported)) ((((unsupported)) ((xd)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        xbm.write (((xgetattr)) ((((unsupported)) ((xd)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                xset2op_test.write
                  [xself xa xb xc xres xstmt xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xd.write (((unsupported)) ("a") ((((xdeepcopy)) ((xa)))) ("b") ((xb)) ("c") ((xc)))
                        bogusForceDataize.write (((xexec)) ((xstmt)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)) ((((unsupported)) ((xd)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        bogusForceDataize.write (((xm)) ((((unsupported)) ((xd)) ("a"))) ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                        (((unsupported)) ((((unsupported)) ((xd)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        xbm.write (((xgetattr)) ((((unsupported)) ((xd)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)) ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("a"))) ((xres)))
                xsetsliceop_test.write
                  [xself xa xb xc xd xres xstmt xmeth]
                    memory > xt
                    memory > xdictionary
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)) 0)
                        xdictionary.write (((unsupported)) ("a") ((((xdeepcopy)) ((xa)))) ("b") ((xb)) ("c") ((xc)) ("d") ((xd)))
                        bogusForceDataize.write (((xexec)) ((xstmt)) ((xdictionary)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdictionary)) ("a"))) ((xres)))
                        xt.write (((xtype)) ((xa)))
                        while.
                          (((unsupported)) ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)) (((xt).x__bases__)) (0))
                        xm.write (((xgetattr)) ((xt)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xm)) ("im_func") ((xm)))) ((((unsupported)) (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)) ((((unsupported)) ((xdictionary)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        bogusForceDataize.write (((xm)) ((((unsupported)) ((xdictionary)) ("a"))) ((((xslice)) ((xb)) ((xc)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdictionary)) ("a"))) ((xres)))
                        (((unsupported)) ((((unsupported)) ((xdictionary)) ("a"))) ((((xdeepcopy)) ((xa)))))
                        xbm.write (((xgetattr)) ((((unsupported)) ((xdictionary)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)) ((((xslice)) ((xb)) ((xc)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdictionary)) ("a"))) ((xres)))
                xtest_lists.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1))) ((((unsupported)) (2))) ((((unsupported)) (1) (2))) ("a+b") ("__add__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3))) (2) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3))) (4) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3))) (1) (2) ("a[b]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsliceop_test)) ((((unsupported)) (1) (2) (3))) (0) (2) ((((unsupported)) (1) (2))) ("a[b:c]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsetop_test)) ((((unsupported)) (1))) ((((unsupported)) (2))) ((((unsupported)) (1) (2))) ("a+=b") ("__iadd__"))
                        bogusForceDataize.write ((((xself).xsetop_test)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (1) (2) (1) (2) (1) (2))) ("a*=b") ("__imul__"))
                        bogusForceDataize.write ((((xself).xunop_test)) ((((unsupported)) (1) (2) (3))) (3) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (1) (2) (1) (2) (1) (2))) ("a*b") ("__mul__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (1) (2) (1) (2) (1) (2))) ("b*a") ("__rmul__"))
                        bogusForceDataize.write ((((xself).xset2op_test)) ((((unsupported)) (1) (2))) (1) (3) ((((unsupported)) (1) (3))) ("a[b]=c") ("__setitem__"))
                        bogusForceDataize.write ((((xself).xsetsliceop_test)) ((((unsupported)) (1) (2) (3) (4))) (1) (3) ((((unsupported)) (5) (6))) ((((unsupported)) (1) (5) (6) (4))) ("a[b:c]=d") ("__setitem__"))
                xtest_dicts.write
                  [xself]
                    memory > xd
                    memory > xl
                    memory > xl1
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3) (4))) (1) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3) (4))) (2) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((unsupported)) (1) (2) (3) (4))) (1) (2) ("a[b]") ("__getitem__"))
                        xd.write (((unsupported)) (1) (2) (3) (4))
                        xl1.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xlist)) (((((xd).xkeys)) 0)))))
                          bogusForceDataize.write ((((xl1).xappend)) ((xi)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xiter)) ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) (((((xd).x__iter__)) 0)))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) (((((xdict).x__iter__)) ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xd.write (((unsupported)) (1) (2) (3) (4))
                        bogusForceDataize.write ((((xself).xunop_test)) ((xd)) (2) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) ((((xrepr)) ((xd)))) ((((unsupported)) 0)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (((((xd).x__repr__)) 0)) ((((unsupported)) 0)))) ((xd)))
                        bogusForceDataize.write ((((xself).xset2op_test)) ((((unsupported)) (1) (2) (3) (4))) (2) (3) ((((unsupported)) (1) (2) (2) (3) (3) (4))) ("a[b]=c") ("__setitem__"))
                xnumber_operators.write
                  [xself xa xb xskip]
                    memory > xdict
                    memory > xname
                    memory > xres
                    seq > @
                      (((unsupported)) 0)
                        xdict.write (((unsupported)) ("a") ((xa)) ("b") ((xb)))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xexpr)))) ((((((xself).xbinops).xitems)) 0)))
                          (((unsupported)) ((xname)) ((xskip))).if
                            seq
                              xname.write ("__%s__".mod (xname))
                              (((xhasattr)) ((xa)) ((xname))).if
                                seq
                                  xres.write (((xeval)) ((xexpr)) ((xdict)))
                                  bogusForceDataize.write ((((xself).xbinop_test)) ((xa)) ((xb)) ((xres)) ((xexpr)) ((xname)))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xexpr)))) ((((xlist)) ((((((xself).xunops).xitems)) 0)))))
                          (((unsupported)) ((xname)) ((xskip))).if
                            seq
                              xname.write ("__%s__".mod (xname))
                              (((xhasattr)) ((xa)) ((xname))).if
                                seq
                                  xres.write (((xeval)) ((xexpr)) ((xdict)))
                                  bogusForceDataize.write ((((xself).xunop_test)) ((xa)) ((xres)) ((xexpr)) ((xname)))
                xtest_ints.write
                  [xself]
                    memory > x__add__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xnumber_operators)) (100) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((1.x__bool__)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((0.x__bool__)) 0)) (0))
                        (((unsupported)) ((xint)))
                          x__add__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xNotImplemented)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC)) (5))) (5))
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("NotImplemented should have caused TypeError"))
                xtest_floats.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xnumber_operators)) (100.0) (3.0))
                xtest_complexes.write
                  [xself]
                    memory > x__str__
                    memory > x__repr__
                    memory > x__slots__
                    memory > x__new__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) (((xself).xnumber_operators)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) ("lt") ("le") ("gt") ("ge") ("int") ("float") ("floordiv") ("divmod") ("mod"))))
                        (((unsupported)) ((xcomplex)))
                          seq
                            x__slots__.write (((unsupported)) ("prec"))
                            x__new__.write
                              [xcls]
                                memory > xresult
                                seq > @
                                  (((unsupported)) 0)
                                    xresult.write ((((xcomplex).x__new__)) ((xcls)) ((((unsupported)) ((xargs)))))
                                    (((unsupported)) (((xresult).xprec)) (((((xkwds).xget)) ("prec") (12))))
                                    (((unsupported)) ((xresult)))
                            x__repr__.write
                              [xself]
                                memory > xprec
                                seq > @
                                  seq
                                    xprec.write ((xself).xprec)
                                    (((xself).ximag).eq 0.0).if
                                      (((unsupported)) (("%.*g".mod (((unsupported)) ((xprec)) (((xself).xreal))))))
                                    (((xself).xreal).eq 0.0).if
                                      (((unsupported)) (("%.*gj".mod (((unsupported)) ((xprec)) (((xself).ximag))))))
                                    (((unsupported)) (("(%.*g+%.*gj)".mod (((unsupported)) ((xprec)) (((xself).xreal)) ((xprec)) (((xself).ximag))))))
                            x__str__.write (x__repr__)
                        xa.write (((unsupported)) ((xNumber)) (3.14) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("3.14"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xprec)) (6))
                        xa.write (((unsupported)) ((xNumber)) ((xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("3.1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xprec)) (2))
                        xa.write (((xNumber)) (234.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("234.5"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xprec)) (12))
                xtest_explicit_reverse_methods.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcomplex).x__radd__)) ((((unsupported)) 0)) (4.0))) ((((xcomplex)) (4.0) (3.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfloat).x__rsub__)) (3.0) (1))) ((2.0.neg)))
                xtest_spam_lists.write
                  [xself]
                    memory > xspam
                    memory > xspamlist
                    memory > xfoo
                    memory > xa
                    seq > @
                      (((unsupported)) 0)
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        xspamlist.write
                          [xl xmemo]
                            memory > xspam
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) (((((xspam).xspamlist)) ((xl)))))
                        (((unsupported)) ((((unsupported)) (((xcopy).x_deepcopy_dispatch)) (((xspam).xspamlist)))) ((xspamlist)))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1))))) ((((xspamlist)) ((((unsupported)) (2))))) ((((xspamlist)) ((((unsupported)) (1) (2))))) ("a+b") ("__add__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3))))) (2) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3))))) (4) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3))))) (1) (2) ("a[b]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsliceop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3))))) (0) (2) ((((xspamlist)) ((((unsupported)) (1) (2))))) ("a[b:c]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsetop_test)) ((((xspamlist)) ((((unsupported)) (1))))) ((((xspamlist)) ((((unsupported)) (2))))) ((((xspamlist)) ((((unsupported)) (1) (2))))) ("a+=b") ("__iadd__"))
                        bogusForceDataize.write ((((xself).xsetop_test)) ((((xspamlist)) ((((unsupported)) (1) (2))))) (3) ((((xspamlist)) ((((unsupported)) (1) (2) (1) (2) (1) (2))))) ("a*=b") ("__imul__"))
                        bogusForceDataize.write ((((xself).xunop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3))))) (3) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1) (2))))) (3) ((((xspamlist)) ((((unsupported)) (1) (2) (1) (2) (1) (2))))) ("a*b") ("__mul__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamlist)) ((((unsupported)) (1) (2))))) (3) ((((xspamlist)) ((((unsupported)) (1) (2) (1) (2) (1) (2))))) ("b*a") ("__rmul__"))
                        bogusForceDataize.write ((((xself).xset2op_test)) ((((xspamlist)) ((((unsupported)) (1) (2))))) (1) (3) ((((xspamlist)) ((((unsupported)) (1) (3))))) ("a[b]=c") ("__setitem__"))
                        bogusForceDataize.write ((((xself).xsetsliceop_test)) ((((xspamlist)) ((((unsupported)) (1) (2) (3) (4))))) (1) (3) ((((xspamlist)) ((((unsupported)) (5) (6))))) ((((xspamlist)) ((((unsupported)) (1) (5) (6) (4))))) ("a[b:c]=d") ("__setitem__"))
                        (((unsupported)) (((xspam).xspamlist)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)) (1))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xfoo)) 0)) (1))
                        bogusForceDataize.write ((((xa).xappend)) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (42))
                xtest_spam_dicts.write
                  [xself]
                    memory > xd
                    memory > xl1
                    memory > xspamdict
                    memory > xl
                    memory > xspamd
                    memory > xspam
                    memory > xstraightd
                    memory > xfoo
                    memory > xa
                    seq > @
                      (((unsupported)) 0)
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        xspamdict.write
                          [xd xmemo]
                            memory > xspam
                            memory > xsd
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                xsd.write ((((xspam).xspamdict)) 0)
                                (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) ((((xlist)) (((((xd).xitems)) 0)))))
                                  (((unsupported)) ((((unsupported)) ((xsd)) ((xk)))) ((xv)))
                                (((unsupported)) ((xsd)))
                        (((unsupported)) ((((unsupported)) (((xcopy).x_deepcopy_dispatch)) (((xspam).xspamdict)))) ((xspamdict)))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamdict)) ((((unsupported)) (1) (2) (3) (4))))) (1) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamdict)) ((((unsupported)) (1) (2) (3) (4))))) (2) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)) ((((xspamdict)) ((((unsupported)) (1) (2) (3) (4))))) (1) (2) ("a[b]") ("__getitem__"))
                        xd.write (((xspamdict)) ((((unsupported)) (1) (2) (3) (4))))
                        xl1.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xlist)) (((((xd).xkeys)) 0)))))
                          bogusForceDataize.write ((((xl1).xappend)) ((xi)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xiter)) ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) (((((xd).x__iter__)) 0)))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xl.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) (((((((xtype)) ((((xspamdict)) ((((unsupported)) 0))))).x__iter__)) ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)) ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xl)) ((xl1)))
                        xstraightd.write (((unsupported)) (1) (2) (3) (4))
                        xspamd.write (((xspamdict)) ((xstraightd)))
                        bogusForceDataize.write ((((xself).xunop_test)) ((xspamd)) (2) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xunop_test)) ((xspamd)) ((((xrepr)) ((xstraightd)))) ("repr(a)") ("__repr__"))
                        bogusForceDataize.write ((((xself).xset2op_test)) ((((xspamdict)) ((((unsupported)) (1) (2) (3) (4))))) (2) (3) ((((xspamdict)) ((((unsupported)) (1) (2) (2) (3) (3) (4))))) ("a[b]=c") ("__setitem__"))
                        (((unsupported)) (((xspam).xspamdict)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)) (1))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xa).xitems)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xfoo)) 0)) (1))
                        (((unsupported)) ((((unsupported)) ((xa)) ("foo"))) ("bar"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xa).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("foo") ("bar"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (100))
                xtest_wrap_lenfunc_bad_cast.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (((xsys).xmaxsize))).x__len__)) 0)) (((xsys).xmaxsize)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xassertHasAttr.write
                  [xself xobj xname]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)) ((((xhasattr)) ((xobj)) ((xname)))) (("%r has no attribute %r".mod (((unsupported)) ((xobj)) ((xname))))))
                xassertNotHasAttr.write
                  [xself xobj xname]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xobj)) ((xname)))) (("%r has unexpected attribute %r".mod (((unsupported)) ((xobj)) ((xname))))))
                xtest_python_dicts.write
                  [xself]
                    memory > xd
                    memory > xa1
                    memory > x__getitem__
                    memory > xa2
                    memory > x__setitem__
                    memory > xsetstate
                    memory > xN
                    memory > xgetstate
                    memory > x__init__
                    memory > xstate
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xdict)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) ((xdict)))
                        xd.write (((xdict)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xd).x__class__)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xdict)))
                        (((unsupported)) ((xdict)))
                          seq
                            xstate.write (1.neg)
                            x__init__.write
                              [xself_local]
                                seq > @
                                  (((unsupported)) 0)
                                    (xa).if
                                      seq
                                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xa)))) (1))
                                        (((unsupported)) (((xself_local).xstate)) ((((unsupported)) ((xa)) (0))))
                                    (xkw).if
                                      (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) ((((xlist)) (((((xkw).xitems)) 0)))))
                                        (((unsupported)) ((((unsupported)) ((xself_local)) ((xv)))) ((xk)))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)) (((((xself).xget)) ((xkey)) (0))))
                            x__setitem__.write
                              [xself_local xkey xvalue]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertIsInstance)) ((xkey)) ((((xtype)) (0))))
                                    bogusForceDataize.write ((((xdict).x__setitem__)) ((xself_local)) ((xkey)) ((xvalue)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)) (((xself).xstate)) ((xstate)))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xstate)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xC)) ((xdict)))))
                        xa1.write (((xC)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa1).xstate)) (12))
                        xa2.write (((unsupported)) ((xC)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((unsupported)) ((xa2)) (1)).eq "foo").and (((unsupported)) ((xa2)) (2)))) ("bar"))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xstate)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) ((1.neg)))
                        bogusForceDataize.write ((((xa).xsetstate)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xstate)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (42))) (0))
                        (((unsupported)) ((((unsupported)) ((xa)) (42))) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (42))) (24))
                        xN.write 50
                        (((unsupported)) ((xi)) ((((xrange)) ((xN)))))
                          seq
                            (((unsupported)) ((((unsupported)) ((xa)) ((xi)))) ((((xC)) 0)))
                            (((unsupported)) ((xj)) ((((xrange)) ((xN)))))
                              (((unsupported)) ((((unsupported)) ((((unsupported)) ((xa)) ((xi)))) ((xj)))) (((xi).mul (xj))))
                        (((unsupported)) ((xi)) ((((xrange)) ((xN)))))
                          (((unsupported)) ((xj)) ((((xrange)) ((xN)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xa)) ((xi)))) ((xj)))) (((xi).mul (xj))))
                xtest_python_lists.write
                  [xself]
                    memory > x__getitem__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xlist)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((xisinstance)) ((xi)) ((xslice))).if
                                    (((unsupported)) ((((unsupported)) (((xi).xstart)) (((xi).xstop)))))
                                  (((unsupported)) ((((((xlist).x__getitem__)) ((xself)) ((xi))).add 100)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xa).xextend)) ((((unsupported)) (0) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (0))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (1))) (101))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (2))) (102))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) (100) (200))))) ((((unsupported)) (100) (200))))
                xtest_metaclass.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xcounter
                    memory > xmeth
                    memory > xfunc
                    memory > xspam
                    memory > xprepare_calls
                    memory > xnew_calls
                    memory > x_set_x
                    memory > x__new__
                    memory > xa
                    memory > xmyself
                    memory > x__call__
                    memory > x__prepare__
                    memory > x_get_x
                    memory > xgetstate
                    memory > x__init__
                    memory > xsetstate
                    memory > xmarker
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__state)) (0))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__state)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)) (((xself).x__state)) ((xstate)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (10))
                        (((unsupported)) ((xtype)))
                          xmyself.write
                            [xcls]
                              seq > @
                                (((unsupported)) ((xcls)))
                        (((unsupported)) ((x_metaclass)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xmyself)) 0)) ((xD)))
                        xd.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).x__class__)) ((xD)))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xdict]
                              seq > @
                                seq
                                  (((unsupported)) ((((unsupported)) ((xdict)) ("__spam__"))) (1))
                                  (((unsupported)) (((((xtype).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xdict)))))
                        (((unsupported)) ((xM1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__spam__)) (1))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).x__spam__)) (1))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__new__.write
                              [xcls xname xbases xdict]
                                memory > xself
                                seq > @
                                  (((unsupported)) 0)
                                    xself.write ((((xobject).x__new__)) ((xcls)))
                                    (((unsupported)) (((xself).xname)) ((xname)))
                                    (((unsupported)) (((xself).xbases)) ((xbases)))
                                    (((unsupported)) (((xself).xdict)) ((xdict)))
                                    (((unsupported)) ((xself)))
                            x__call__.write
                              [xself]
                                memory > xit
                                seq > @
                                  seq
                                    xit.write (((x_instance)) 0)
                                    (((unsupported)) ((xkey)) (((xself).xdict)))
                                      seq
                                        ((((xkey).xstartswith)) ("__")).if
                                          (((unsupported)) 0)
                                        bogusForceDataize.write (((xsetattr)) ((xit)) ((xkey)) (((((((unsupported)) (((xself).xdict)) ((xkey))).x__get__)) ((xit)) ((xself)))))
                                    (((unsupported)) ((xit)))
                        (((unsupported)) ((xM2)))
                          xspam.write
                            [xself]
                              seq > @
                                (((unsupported)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xname)) ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xbases)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("spam") (((xC).xdict)))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xspam)) 0)) (42))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xmetaclass xname xbases xdict]
                              memory > xcls
                              seq > @
                                seq
                                  xcls.write ((((((xsuper)) ((xautosuper)) ((xmetaclass))).x__new__)) ((xmetaclass)) ((xname)) ((xbases)) ((xdict)))
                                  while.
                                    ((((unsupported)) ((xname)) ((((unsupported)) (1)))).eq "_")
                                    [unused]
                                      seq > @
                                        xname.write (((unsupported)) ((xname)) ((((unsupported)) (1))))
                                  (xname).if
                                    xname.write ("_%s__super".mod (xname))
                                    xname.write "__super"
                                  bogusForceDataize.write (((xsetattr)) ((xcls)) ((xname)) ((((xsuper)) ((xcls)))))
                                  (((unsupported)) ((xcls)))
                        (((unsupported)) ((xautosuper)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)) ("A"))
                        (((unsupported)) ((xA)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)) (("B".add (((((xself).x__super).xmeth)) 0))))
                        (((unsupported)) ((xA)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)) (("C".add (((((xself).x__super).xmeth)) 0))))
                        (((unsupported)) ((xC)) ((xB)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)) (("D".add (((((xself).x__super).xmeth)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xD)) 0).xmeth)) 0)) ("DCBA"))
                        (((unsupported)) ((xB)) ((xC)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)) (("E".add (((((xself).x__super).xmeth)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xE)) 0).xmeth)) 0)) ("EBCA"))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xmetaclass xname xbases xdict]
                              memory > xset
                              memory > xhits
                              memory > xkey
                              memory > xget
                              seq > @
                                seq
                                  xhits.write (((unsupported)) 0)
                                  (((unsupported)) ((((unsupported)) ((xkey)) ((xval)))) (((((xdict).xitems)) 0)))
                                    ((((xkey).xstartswith)) ("_get_")).if
                                      seq
                                        xkey.write (((unsupported)) ((xkey)) ((((unsupported)) (5))))
                                        (((unsupported)) ((((unsupported)) ((xget)) ((xset)))) (((((xhits).xget)) ((xkey)) ((((unsupported)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))))
                                        xget.write (xval)
                                        (((unsupported)) ((((unsupported)) ((xhits)) ((xkey)))) ((((unsupported)) ((xget)) ((xset)))))
                                      ((((xkey).xstartswith)) ("_set_")).if
                                        seq
                                          xkey.write (((unsupported)) ((xkey)) ((((unsupported)) (5))))
                                          (((unsupported)) ((((unsupported)) ((xget)) ((xset)))) (((((xhits).xget)) ((xkey)) ((((unsupported)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))))
                                          xset.write (xval)
                                          (((unsupported)) ((((unsupported)) ((xhits)) ((xkey)))) ((((unsupported)) ((xget)) ((xset)))))
                                  (((unsupported)) ((((unsupported)) ((xkey)) ((((unsupported)) ((xget)) ((xset)))))) (((((xhits).xitems)) 0)))
                                    (((unsupported)) ((((unsupported)) ((xdict)) ((xkey)))) ((((xproperty)) ((xget)) ((xset)))))
                                  (((unsupported)) (((((((xsuper)) ((xautoproperty)) ((xmetaclass))).x__new__)) ((xmetaclass)) ((xname)) ((xbases)) ((xdict)))))
                        (((unsupported)) ((xautoproperty)))
                          seq
                            x_get_x.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xself).x__x).neg)))
                            x_set_x.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).x__x)) (((xx).neg)))
                        xa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("x"))
                        (((unsupported)) (((xa).xx)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x_A__x)) ((12.neg)))
                        (((unsupported)) ((xautoproperty)) ((xautosuper)))
                        (((unsupported)) ((xmultimetaclass)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)) ("A"))
                        (((unsupported)) ((xA)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)) (("B".add (((((xself).x__super).x_get_x)) 0))))
                        (((unsupported)) ((xA)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)) (("C".add (((((xself).x__super).x_get_x)) 0))))
                        (((unsupported)) ((xC)) ((xB)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)) (("D".add (((((xself).x__super).x_get_x)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD)) 0).xx)) ("DCBA"))
                        (((unsupported)) ((xtype)))
                          seq
                            xcounter.write 0
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xT).xcounter)) (1))
                        (((unsupported)) ((xT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xT).xcounter)) (1))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xa)))) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xT).xcounter)) (1))
                        (((unsupported)) ((xobject)))
                        xc.write (((xC)) 0)
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xc)) 0)
                          bogusForceDataize.write ((((xself).xfail)) ("calling object w/o call method should raise TypeError"))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((xtype).x__new__)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)) ((xA)))
                        (((unsupported)) ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xA)) ((((xtype)) ((xD)))))
                        xnew_calls.write (((unsupported)) 0)
                        (((unsupported)) ((xtype)))
                          seq
                            x__new__.write
                              [xmcls xname xbases xns]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xnew_calls).xappend)) ("AMeta"))
                                    (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xmcls)) ((xname)) ((xbases)) ((xns)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) 0)))
                        (((unsupported)) ((xAMeta)))
                          seq
                            x__new__.write
                              [xmcls xname xbases xns]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xnew_calls).xappend)) ("BMeta"))
                                    (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xmcls)) ((xname)) ((xbases)) ((xns)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                memory > xns
                                seq > @
                                  (((unsupported)) 0)
                                    xns.write ((((((xsuper)) 0).x__prepare__)) ((xname)) ((xbases)))
                                    (((unsupported)) ((((unsupported)) ((xns)) ("BMeta_was_here"))) (TRUE))
                                    (((unsupported)) ((xns)))
                        (((unsupported)) ((xAMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        (((unsupported)) ((xBMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        (((unsupported)) ((xA)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ("BMeta_was_here") (((xC).x__dict__)))
                        (((unsupported)) ((xB)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ("BMeta_was_here") (((xC2).x__dict__)))
                        (((unsupported)) ((xC)) ((xtype)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ("BMeta_was_here") (((xD).x__dict__)))
                        (((unsupported)) ((xC)) ((xAMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ("BMeta_was_here") (((xE).x__dict__)))
                        xmarker.write (((xobject)) 0)
                        xfunc.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xmarker)))
                        (((unsupported)) ((xfunc)))
                        (((unsupported)) ((xobject)) ((xfunc)))
                        (((unsupported)) ((xD)) ((xfunc)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xmarker)) ((xX)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xmarker)) ((xY)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xmarker)) ((xZ)))
                        xprepare_calls.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            x__new__.write
                              [xmcls]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xnew_calls).xappend)) ("ANotMeta"))
                                    (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xmcls)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xprepare_calls).xappend)) ("ANotMeta"))
                                    (((unsupported)) ((((unsupported)) 0)))
                        (((unsupported)) ((xANotMeta)))
                          seq
                            x__new__.write
                              [xmcls]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xnew_calls).xappend)) ("BNotMeta"))
                                    (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xmcls)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xprepare_calls).xappend)) ("BNotMeta"))
                                    (((unsupported)) (((((((xsuper)) 0).x__prepare__)) ((xname)) ((xbases)))))
                        (((unsupported)) ((xANotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xANotMeta)) ((((xtype)) ((xA)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        (((unsupported)) ((xBNotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xB)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        (((unsupported)) ((xA)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        (((unsupported)) ((xB)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xC2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xC)) ((xtype)))
                        (((unsupported)) ((xC)) ((xANotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xE)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        (((unsupported)) ((((xobject)) 0)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xF)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        (((unsupported)) ((xC)) ((((xobject)) 0)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBNotMeta)) ((((xtype)) ((xF2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xC)) ((((xint)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xint)) 0)) ((xC)))
                xtest_module_subclasses.write
                  [xself]
                    memory > x__getattribute__
                    memory > x__delattr__
                    memory > xx
                    memory > xlog
                    memory > x__init__
                    memory > x__setattr__
                    memory > xMT
                    memory > xa
                    seq > @
                      seq
                        xlog.write (((unsupported)) 0)
                        xMT.write (((xtype)) ((xsys)))
                        (((unsupported)) ((xMT)))
                          seq
                            x__init__.write
                              [xself xname]
                                seq > @
                                  bogusForceDataize.write ((((xMT).x__init__)) ((xself)) ((xname)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)) ((((unsupported)) ("getattr") ((xname)))))
                                    (((unsupported)) (((((xMT).x__getattribute__)) ((xself)) ((xname)))))
                            x__setattr__.write
                              [xself xname xvalue]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)) ((((unsupported)) ("setattr") ((xname)) ((xvalue)))))
                                    bogusForceDataize.write ((((xMT).x__setattr__)) ((xself)) ((xname)) ((xvalue)))
                            x__delattr__.write
                              [xself xname]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)) ((((unsupported)) ("delattr") ((xname)))))
                                    bogusForceDataize.write ((((xMT).x__delattr__)) ((xself)) ((xname)))
                        xa.write (((xMM)) ("a"))
                        (((unsupported)) (((xa).xfoo)) (12))
                        xx.write ((xa).xfoo)
                        (((unsupported)) ((((unsupported)) (((xa).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xlog)) ((((unsupported)) ((((unsupported)) ("setattr") ("foo") (12))) ((((unsupported)) ("getattr") ("foo"))) ((((unsupported)) ("delattr") ("foo"))))))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xtypes).xModuleType)) ((xstr)))
                          bogusForceDataize.write ((((xself).xfail)) ("inheriting from ModuleType and str at the same time should fail"))
                xtest_multiple_inheritance.write
                  [xself]
                    memory > xd
                    memory > xsetstate
                    memory > xa
                    memory > xgetstate
                    memory > x__init__
                    memory > x__int__
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__state)) (0))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__state)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)) (((xself).x__state)) ((xstate)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetstate)) 0)) (10))
                        (((unsupported)) ((xdict)) ((xC)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((((xtype)) ((((unsupported)) 0))).x__init__)) ((xself)))
                                  bogusForceDataize.write ((((xC).x__init__)) ((xself)))
                        xd.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xkeys)) 0)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xd)) ("hello"))) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("hello") ("world"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ("hello"))) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xgetstate)) 0)) (0))
                        bogusForceDataize.write ((((xd).xsetstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xgetstate)) 0)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__mro__)) ((((unsupported)) ((xD)) ((xdict)) ((xC)) ((xobject)))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__int__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xint)) (((((xself).xfoo)) 0)))))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("23"))
                        (((unsupported)) ((xNode)) ((xlist)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)) ("42"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xNode)) 0).x__int__)) 0)) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((((xNode)) 0)))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xFrag)) 0).x__int__)) 0)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((((xFrag)) 0)))) (42))
                xtest_diamond_inheritance.write
                  [xself]
                    memory > xboo
                    memory > xspam
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          xspam.write
                            [xself]
                              seq > @
                                (((unsupported)) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xA)) 0).xspam)) 0)) ("A"))
                        (((unsupported)) ((xA)))
                          seq
                            xboo.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("B"))
                            xspam.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xB)) 0).xspam)) 0)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xB)) 0).xboo)) 0)) ("B"))
                        (((unsupported)) ((xA)))
                          xboo.write
                            [xself]
                              seq > @
                                (((unsupported)) ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xC)) 0).xspam)) 0)) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xC)) 0).xboo)) 0)) ("C"))
                        (((unsupported)) ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xD)) 0).xspam)) 0)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xD)) 0).xboo)) 0)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__mro__)) ((((unsupported)) ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        (((unsupported)) ((xC)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xE)) 0).xspam)) 0)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xE)) 0).xboo)) 0)) ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xE).x__mro__)) ((((unsupported)) ((xE)) ((xC)) ((xB)) ((xA)) ((xobject)))))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xD)) ((xE)))
                          bogusForceDataize.write ((((xself).xfail)) ("expected MRO order disagreement (F)"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xE)) ((xD)))
                          bogusForceDataize.write ((((xself).xfail)) ("expected MRO order disagreement (G)"))
                xtest_ex5_from_c3_switch.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xX)) ((xB)) ((xY)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xZ).x__mro__)) ((((unsupported)) ((xZ)) ((xX)) ((xB)) ((xY)) ((xA)) ((xC)) ((xobject)))))
                xtest_monotonicity.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xBoat)))
                        (((unsupported)) ((xBoat)))
                        (((unsupported)) ((xDayBoat)))
                        (((unsupported)) ((xDayBoat)))
                        (((unsupported)) ((xEngineLess)) ((xWheelBoat)))
                        (((unsupported)) ((xSmallMultihull)))
                        (((unsupported)) ((xPedalWheelBoat)) ((xSmallCatamaran)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPedalWheelBoat).x__mro__)) ((((unsupported)) ((xPedalWheelBoat)) ((xEngineLess)) ((xDayBoat)) ((xWheelBoat)) ((xBoat)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xSmallCatamaran).x__mro__)) ((((unsupported)) ((xSmallCatamaran)) ((xSmallMultihull)) ((xDayBoat)) ((xBoat)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPedalo).x__mro__)) ((((unsupported)) ((xPedalo)) ((xPedalWheelBoat)) ((xEngineLess)) ((xSmallCatamaran)) ((xSmallMultihull)) ((xDayBoat)) ((xWheelBoat)) ((xBoat)) ((xobject)))))
                xtest_consistency_with_epg.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xPane)) ((xScrollingMixin)))
                        (((unsupported)) ((xPane)) ((xEditingMixin)))
                        (((unsupported)) ((xScrollablePane)) ((xEditablePane)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEditableScrollablePane).x__mro__)) ((((unsupported)) ((xEditableScrollablePane)) ((xScrollablePane)) ((xEditablePane)) ((xPane)) ((xScrollingMixin)) ((xEditingMixin)) ((xobject)))))
                xtest_mro_disagreement.write
                  [xself]
                    memory > xraises
                    memory > xmro_err_msg
                    seq > @
                      seq
                        xmro_err_msg.write (((unsupported)) 0)
                        xraises.write
                          [xexc xexpected xcallable]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xexc)))
                                  bogusForceDataize.write (((xcallable)) ((((unsupported)) ((xargs)))))
                                  ((((xsupport).xcheck_impl_detail)) 0).if
                                    (((((((xstr)) ((xmsg))).xstartswith)) ((xexpected))).not).if
                                      bogusForceDataize.write ((((xself).xfail)) (("Message %r, expected %r".mod (((unsupported)) ((((xstr)) ((xmsg)))) ((xexpected))))))
                                  bogusForceDataize.write ((((xself).xfail)) (("Expected %s".mod (xexc))))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write (((xraises)) ((xTypeError)) ("duplicate base class A") ((xtype)) ("X") ((((unsupported)) ((xA)) ((xA)))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xraises)) ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("X") ((((unsupported)) ((xA)) ((xB)))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xraises)) ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("X") ((((unsupported)) ((xA)) ((xC)) ((xB)))) ((((unsupported)) 0)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xGridLayout)))
                        (((unsupported)) ((xGridLayout)))
                        (((unsupported)) ((xHorizontalGrid)) ((xVerticalGrid)))
                        (((unsupported)) ((xVerticalGrid)) ((xHorizontalGrid)))
                        bogusForceDataize.write (((xraises)) ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("ConfusedGrid") ((((unsupported)) ((xHVGrid)) ((xVHGrid)))) ((((unsupported)) 0)))
                xtest_object_class.write
                  [xself]
                    memory > xx
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xobject)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__class__)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xa)))) ((xobject)))
                        xb.write (((xobject)) 0)
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("foo"))
                        (((unsupported)) ((((unsupported)) ((xAttributeError)) ((xTypeError)))))
                          (((unsupported)) (((xa).xfoo)) (12))
                          bogusForceDataize.write ((((xself).xfail)) ("object() should not allow setting a foo attribute"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((((xobject)) 0)) ("__dict__"))
                        (((unsupported)) ((xobject)))
                        xx.write (((xCdict)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).x__dict__)) ((((unsupported)) 0)))
                        (((unsupported)) (((xx).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).x__dict__)) ((((unsupported)) ("foo") (1))))
                xtest_object_class_assignment_between_heaptypes_and_nonheaptypes.write
                  [xself]
                    memory > x__slots__
                    memory > xm
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) (((xtypes).xModuleType)))
                          xa.write 1
                        xm.write ((((xtypes).xModuleType)) ("m"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xm).x__class__)) (((xtypes).xModuleType)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xm)) ("a"))))
                        (((unsupported)) (((xm).x__class__)) ((xSubType)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xm).x__class__)) ((xSubType)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xhasattr)) ((xm)) ("a"))))
                        (((unsupported)) (((xm).x__class__)) (((xtypes).xModuleType)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xm).x__class__)) (((xtypes).xModuleType)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xm)) ("a"))))
                        (((unsupported)) ((xint)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((1.x__class__)) ((xMyInt)))
                        (((unsupported)) ((xfloat)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((1.0.x__class__)) ((xMyFloat)))
                        (((unsupported)) ((xcomplex)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((1.add (((unsupported)) 0)).x__class__)) ((xMyComplex)))
                        (((unsupported)) ((xstr)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (("a".x__class__)) ((xMyStr)))
                        (((unsupported)) ((xbytes)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (("a".x__class__)) ((xMyBytes)))
                        (((unsupported)) ((xtuple)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((((unsupported)) 0).x__class__)) ((xMyTuple)))
                        (((unsupported)) ((xfrozenset)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((((xfrozenset)) 0).x__class__)) ((xMyFrozenSet)))
                xtest_slots.write
                  [xself]
                    memory > xnew_objects
                    memory > xg
                    memory > xh
                    memory > xslots
                    memory > xorig_objects
                    memory > xs
                    memory > x__init__
                    memory > x__del__
                    memory > x__eq__
                    memory > xc
                    memory > xcounter
                    memory > xget
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) 0)
                        xx.write (((xC0)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("foo"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a"))
                        xx.write (((xC1)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("a"))
                        (((unsupported)) (((xx).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) (1))
                        (((unsupported)) (((xx).xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((((unsupported)) (((xx).xa)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("a"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b") ("c"))
                        xx.write (((xC3)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("a"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("b"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("c"))
                        (((unsupported)) (((xx).xa)) (1))
                        (((unsupported)) (((xx).xb)) (2))
                        (((unsupported)) (((xx).xc)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xb)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xc)) (3))
                        (((unsupported)) ((xobject)))
                          seq
                            unsupported
                            x__slots__.write (((unsupported)) ("__a"))
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).x__a)) ((xvalue)))
                            xget.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__a)))
                        xx.write (((xC4)) (5))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xx)) ("__a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xx).xget)) 0)) (5))
                        (((unsupported)) ((xAttributeError)))
                          (((unsupported)) (((xx).x__a)) (6))
                          bogusForceDataize.write ((((xself).xfail)) ("Double underscored names not mangled"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)) ("[None] slots not caught"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) ("foo bar"))
                          bogusForceDataize.write ((((xself).xfail)) ("['foo bar'] slots not caught"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) ("foo0bar"))
                          bogusForceDataize.write ((((xself).xfail)) ((((unsupported)) 0)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) ("1"))
                          bogusForceDataize.write ((((xself).xfail)) ("['1'] slots not caught"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) (""))
                          bogusForceDataize.write ((((xself).xfail)) ("[''] slots not caught"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("a_b") ("_a") ("A0123456789Z"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write "abc"
                        xc.write (((xC)) 0)
                        (((unsupported)) (((xc).xabc)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xabc)) (5))
                        (((unsupported)) ((xobject)))
                          x__slots__.write "abc"
                        xc.write (((xC)) 0)
                        (((unsupported)) (((xc).xabc)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xabc)) (5))
                        xslots.write (((unsupported)) ("foo") ("bar"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (xslots)
                        xx.write (((xC)) 0)
                        (((unsupported)) (((xx).xfoo)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xfoo)) (5))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xslots)) (0))))) ((xstr)))
                        (((unsupported)) ((((unsupported)) ((xTypeError)) ((xUnicodeEncodeError)))))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) ((((xchr)) (128))))
                          bogusForceDataize.write ((((xself).xfail)) ("[chr(128)] slots not caught"))
                        (((unsupported)) ((xobject)))
                          seq
                            xcounter.write 0
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xCounted).xcounter)) (1))
                            x__del__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xCounted).xcounter)) (1))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b") ("c"))
                        xx.write (((xC)) 0)
                        (((unsupported)) (((xx).xa)) ((((xCounted)) 0)))
                        (((unsupported)) (((xx).xb)) ((((xCounted)) 0)))
                        (((unsupported)) (((xx).xc)) ((((xCounted)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (3))
                        (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (0))
                        (((unsupported)) ((xC)))
                        xx.write (((xD)) 0)
                        (((unsupported)) (((xx).xa)) ((((xCounted)) 0)))
                        (((unsupported)) (((xx).xz)) ((((xCounted)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (2))
                        (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (0))
                        (((unsupported)) ((xD)))
                          x__slots__.write (((unsupported)) ("e"))
                        xx.write (((xE)) 0)
                        (((unsupported)) (((xx).xa)) ((((xCounted)) 0)))
                        (((unsupported)) (((xx).xz)) ((((xCounted)) 0)))
                        (((unsupported)) (((xx).xe)) ((((xCounted)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (3))
                        (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (0))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b"))
                        xs.write (((xF)) 0)
                        (((unsupported)) (((xs).xa)) ((((unsupported)) ((((xCounted)) 0)) ((xs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (1))
                        xs.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCounted).xcounter)) (0))
                        (((xhasattr)) ((xgc)) ("get_objects")).if
                          seq
                            (((unsupported)) ((xobject)))
                              x__eq__.write
                                [xself xother]
                                  seq > @
                                    (((unsupported)) (FALSE))
                            xg.write (((xG)) 0)
                            xorig_objects.write (((xlen)) (((((xgc).xget_objects)) 0)))
                            (((unsupported)) ((xi)) ((((xrange)) (10))))
                              unsupported
                            xnew_objects.write (((xlen)) (((((xgc).xget_objects)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xorig_objects)) ((xnew_objects)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__slots__.write (((unsupported)) ("a") ("b"))
                            x__init__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xa)) (1))
                                    (((unsupported)) (((xself).xb)) (2))
                            x__del__.write
                              [xself_]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)) (((xself_).xa)) (1))
                                    bogusForceDataize.write ((((xself).xassertEqual)) (((xself_).xb)) (2))
                        (((unsupported)) (((((xsupport).xcaptured_output)) ("stderr"))) ((xs)))
                          seq
                            xh.write (((xH)) 0)
                            (((unsupported)) ((((unsupported)) ((xh)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xgetvalue)) 0)) (""))
                        (((unsupported)) ((xobject)))
                          x__slots__.write "a"
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((((xX)) 0).xa)))))
                xtest_slots_special.write
                  [xself]
                    memory > x__slots__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("__dict__"))
                        xa.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("__weakref__"))
                        (((unsupported)) (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__dict__)) ((((unsupported)) ("foo") (42))))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("__weakref__"))
                        xa.write (((xW)) 0)
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__weakref__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("__dict__"))
                        (((unsupported)) ((xAttributeError)))
                          (((unsupported)) (((xa).xfoo)) (42))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be allowed to set a.foo"))
                        (((unsupported)) ((xW)) ((xD)))
                          x__slots__.write (((unsupported)) 0)
                        xa.write (((xC1)) 0)
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__weakref__"))
                        (((unsupported)) (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__dict__)) ((((unsupported)) ("foo") (42))))
                        (((unsupported)) ((xD)) ((xW)))
                          x__slots__.write (((unsupported)) 0)
                        xa.write (((xC2)) 0)
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xa)) ("__weakref__"))
                        (((unsupported)) (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__dict__)) ((((unsupported)) ("foo") (42))))
                xtest_slots_special2.write
                  [xself]
                    memory > xc
                    memory > x__qualname__
                    memory > xq
                    memory > x__slots__
                    memory > x__init__
                    memory > x__new__
                    memory > x__classcell__
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xnamespace xattr]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xself).xassertIn)) ((xattr)) ((xnamespace)))
                                  (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xnamespace)))))
                        (((unsupported)) 0)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xb)) (42))
                        (((unsupported)) ((xC1)) ((xMeta)) ("__classcell__"))
                          seq
                            x__slots__.write (((unsupported)) ("__classcell__"))
                            x__init__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init__)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) (((xC2).x__dict__)) ("__classcell__"))) (((xtypes).xMemberDescriptorType)))
                        xc.write (((xC2)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xb)) (42))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xc)) ("__classcell__"))
                        (((unsupported)) (((xc).x__classcell__)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).x__classcell__)) (42))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) 0)
                            seq
                              x__classcell__.write 42
                              x__slots__.write (((unsupported)) ("__classcell__"))
                        (((unsupported)) ((xMeta)) ("__qualname__"))
                          x__slots__.write (((unsupported)) ("__qualname__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xQ1).x__qualname__)) (((((unsupported)) (((xC1).x__qualname__)) ((((unsupported)) ((2.neg))))).add "Q1")))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) (((xQ1).x__dict__)) ("__qualname__"))) (((xtypes).xMemberDescriptorType)))
                        xq.write (((xQ1)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xq)) ("__qualname__"))
                        (((unsupported)) (((xq).x__qualname__)) ("q"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xq).x__qualname__)) ("q"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) 0)
                            seq
                              x__qualname__.write (((xobject)) 0)
                              x__slots__.write (((unsupported)) ("__qualname__"))
                xtest_slots_descriptor.write
                  [xself]
                    memory > x__slots__
                    memory > xu
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) (((xabc).xABCMeta)))
                          x__slots__.write "a"
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xMyABC).xregister)) ((xUnrelated)))
                        xu.write (((xUnrelated)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xu)) ((xMyABC)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xMyABC).xa).x__set__)) ((xu)) (3))
                xtest_dynamics.write
                  [xself]
                    memory > xd
                    memory > xmysetattr
                    memory > xmygetattr
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xD)))
                        (((unsupported)) ((xD)))
                        (((unsupported)) (((xD).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xE).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xF).xfoo)) (1))
                        (((unsupported)) ((xobject)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("foobar"))
                        (((unsupported)) (((xC).xfoobar)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfoobar)) (2))
                        (((unsupported)) (((xC).xmethod)) ((((unsupported)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xmethod)) 0)) (42))
                        (((unsupported)) (((xC).x__repr__)) ((((unsupported)) ("C()"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("C()"))
                        (((unsupported)) (((xC).x__int__)) ((((unsupported)) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((xa)))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfoobar)) (2))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("spam"))
                        xmygetattr.write
                          [xself xname]
                            seq > @
                              seq
                                ((xname).eq "spam").if
                                  (((unsupported)) ("spam"))
                                (((unsupported)) ((xAttributeError)))
                        (((unsupported)) (((xC).x__getattr__)) ((xmygetattr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xspam)) ("spam"))
                        (((unsupported)) (((xa).xnew)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xnew)) (12))
                        xmysetattr.write
                          [xself xname xvalue]
                            seq > @
                              seq
                                ((xname).eq "spam").if
                                  (((unsupported)) ((xAttributeError)))
                                (((unsupported)) (((((xobject).x__setattr__)) ((xself)) ((xname)) ((xvalue)))))
                        (((unsupported)) (((xC).x__setattr__)) ((xmysetattr)))
                        (((unsupported)) ((xAttributeError)))
                          (((unsupported)) (((xa).xspam)) ("not spam"))
                          bogusForceDataize.write ((((xself).xfail)) ("expected AttributeError"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xspam)) ("spam"))
                        (((unsupported)) ((xC)))
                        xd.write (((xD)) 0)
                        (((unsupported)) (((xd).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (1))
                        (((unsupported)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("a".mul (((xI)) (2)))) ("aa"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xI)) (2)).mul "a")) ("aa"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2.mul (((xI)) (3)))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xI)) (3)).mul 2)) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xI)) (3)).mul (((xI)) (2)))) (6))
                        (((unsupported)) ((xtype)))
                        (((unsupported)) ((xdynamicmetaclass)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xsomeclass)) ((xobject)))
                xtest_errors.write
                  [xself]
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xlist)) ((xdict)))
                          bogusForceDataize.write ((((xself).xfail)) ("inheritance from both list and dict should be illegal"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)) ("inheritance from non-type should be illegal"))
                        (((unsupported)) 0)
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((((xtype)) ((xlen)))))
                          bogusForceDataize.write ((((xself).xfail)) ("inheritance from CFunction should be illegal"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write 1
                          bogusForceDataize.write ((((xself).xfail)) ("__slots__ = 1 should be illegal"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject)))
                            x__slots__.write (((unsupported)) (1))
                          bogusForceDataize.write ((((xself).xfail)) ("__slots__ = [1] should be illegal"))
                        (((unsupported)) ((xtype)))
                        (((unsupported)) ((xtype)))
                        (((unsupported)) ((xobject)) ((xM1)))
                        (((unsupported)) ((xobject)) ((xM2)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xA1)) ((xA2)))
                          bogusForceDataize.write ((((xself).xfail)) ("finding the most derived metaclass should have failed"))
                xtest_classmethods.write
                  [xself]
                    memory > xc
                    memory > xmeth
                    memory > xgoo
                    memory > xfoo
                    memory > xd
                    memory > xcm
                    memory > xf
                    memory > xff
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xa)))
                            xgoo.write (((xclassmethod)) ((xfoo)))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC).xgoo)) (1))) ((((unsupported)) ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xgoo)) (1))) ((((unsupported)) ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xfoo)) (1))) ((((unsupported)) ((xc)) (1))))
                        (((unsupported)) ((xC)))
                        xd.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xgoo)) (1))) ((((unsupported)) ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xgoo)) (1))) ((((unsupported)) ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xfoo)) (1))) ((((unsupported)) ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xfoo)) ((xd)) (1))) ((((unsupported)) ((xd)) (1))))
                        xf.write
                          [xcls xarg]
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xcls)) ((xarg)))))
                        xff.write (((xclassmethod)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xff).x__get__)) (0) ((xint)))) (42))) ((((unsupported)) ((xint)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xff).x__get__)) (0))) (42))) ((((unsupported)) ((xint)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC).xgoo).x__self__)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xD).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsuper)) ((xD)) ((xD))).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsuper)) ((xD)) ((xd))).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xsuper)) ((xD)) ((xD))).xgoo)) 0)) ((((unsupported)) ((xD)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xsuper)) ((xD)) ((xd))).xgoo)) 0)) ((((unsupported)) ((xD)))))
                        xmeth.write ((((((xclassmethod)) (1)).x__get__)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xmeth)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xclassmethod)) ((xf)) (1))
                          bogusForceDataize.write ((((xself).xfail)) ("classmethod shouldn't accept keyword args"))
                        xcm.write (((xclassmethod)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcm).x__dict__)) ((((unsupported)) 0)))
                        (((unsupported)) (((xcm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcm).x__dict__)) ((((unsupported)) ("x") (42))))
                        (((unsupported)) ((((unsupported)) (((xcm).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xcm)) ("x"))
                xtest_refleaks_in_classmethod___init__.write
                  [xself]
                    memory > xcm
                    memory > xgettotalrefcount
                    memory > xrefs_before
                    seq > @
                      (((unsupported)) 0)
                        xgettotalrefcount.write ((((xsupport).xget_attribute)) ((xsys)) ("gettotalrefcount"))
                        xcm.write (((xclassmethod)) ("None: is there a None literal in the EO language?"))
                        xrefs_before.write (((xgettotalrefcount)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          bogusForceDataize.write ((((xcm).x__init__)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((xself).xassertAlmostEqual)) (((((xgettotalrefcount)) 0).sub (xrefs_before))) (0) (10))
                xtest_classmethods_in_c.write
                  [xself]
                    memory > xd
                    memory > xspam
                    memory > xspam_cm
                    memory > xexpected_errmsg
                    memory > xa
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xa.write (((unsupported)) (1) (2) (3))
                        xd.write (((unsupported)) ("abc") (123))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xa1)) ((xd1)))) ((((((xspam).xspamlist).xclassmeth)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xd1)))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xa1)) ((xd1)))) ((((((((xspam).xspamlist)) 0).xclassmeth)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xd1)))
                        xspam_cm.write (((unsupported)) ((((xspam).xspamlist).x__dict__)) ("classmeth"))
                        (((unsupported)) ((((unsupported)) ((xx2)) ((xa2)) ((xd2)))) ((((xspam_cm)) (((xspam).xspamlist)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx2)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa2)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd2)) ((xd1)))
                        (((unsupported)) (((xspam).xspamlist)))
                        (((unsupported)) ((((unsupported)) ((xx2)) ((xa2)) ((xd2)))) ((((xspam_cm)) ((xSubSpam)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx2)) ((xSubSpam)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa2)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd2)) ((xd1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((xcm).xexception)))) ("descriptor 'classmeth' of 'xxsubtype.spamlist' object needs an argument"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)) (((((xspam).xspamlist)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((xcm).xexception)))) ("descriptor 'classmeth' requires a type but received a 'xxsubtype.spamlist' instance"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)) ((xlist)))
                        xexpected_errmsg.write "descriptor 'classmeth' requires a subtype of 'xxsubtype.spamlist' but received 'list'"
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((xcm).xexception)))) ((xexpected_errmsg)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xspam_cm).x__get__)) ("None: is there a None literal in the EO language?") ((xlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((xcm).xexception)))) ((xexpected_errmsg)))
                xtest_staticmethods.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xsm
                    memory > xgoo
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xa)))
                            xgoo.write (((xstaticmethod)) ((xfoo)))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC).xgoo)) (1))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xgoo)) (1))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xfoo)) (1))) ((((unsupported)) ((xc)) (1))))
                        (((unsupported)) ((xC)))
                        xd.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xgoo)) (1))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xgoo)) (1))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xfoo)) (1))) ((((unsupported)) ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xfoo)) ((xd)) (1))) ((((unsupported)) ((xd)) (1))))
                        xsm.write (((xstaticmethod)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xsm).x__dict__)) ((((unsupported)) 0)))
                        (((unsupported)) (((xsm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xsm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xsm).x__dict__)) ((((unsupported)) ("x") (42))))
                        (((unsupported)) ((((unsupported)) (((xsm).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xsm)) ("x"))
                xtest_refleaks_in_staticmethod___init__.write
                  [xself]
                    memory > xsm
                    memory > xgettotalrefcount
                    memory > xrefs_before
                    seq > @
                      (((unsupported)) 0)
                        xgettotalrefcount.write ((((xsupport).xget_attribute)) ((xsys)) ("gettotalrefcount"))
                        xsm.write (((xstaticmethod)) ("None: is there a None literal in the EO language?"))
                        xrefs_before.write (((xgettotalrefcount)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          bogusForceDataize.write ((((xsm).x__init__)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((xself).xassertAlmostEqual)) (((((xgettotalrefcount)) 0).sub (xrefs_before))) (0) (10))
                xtest_staticmethods_in_c.write
                  [xself]
                    memory > xd
                    memory > xspam
                    memory > xa
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xa.write (((unsupported)) (1) (2) (3))
                        xd.write (((unsupported)) ("abc") (123))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xa1)) ((xd1)))) ((((((xspam).xspamlist).xstaticmeth)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xd1)))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xa1)) ((xd2)))) ((((((((xspam).xspamlist)) 0).xstaticmeth)) ((((unsupported)) ((xa)))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xd1)))
                xtest_classic.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xfoo
                    memory > xgoo
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xa)))
                            xgoo.write (((xclassmethod)) ((xfoo)))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC).xgoo)) (1))) ((((unsupported)) ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xgoo)) (1))) ((((unsupported)) ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xfoo)) (1))) ((((unsupported)) ((xc)) (1))))
                        (((unsupported)) ((xC)))
                        xd.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xgoo)) (1))) ((((unsupported)) ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xgoo)) (1))) ((((unsupported)) ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xfoo)) (1))) ((((unsupported)) ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xfoo)) ((xd)) (1))) ((((unsupported)) ((xd)) (1))))
                        (((unsupported)) 0)
                          xfoo.write ((xC).xfoo)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xE)) 0).xfoo).x__func__)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((((xC).xfoo).x__get__)) ((((xC)) 0))))).xstartswith)) ("<bound method "))))
                xtest_compattr.write
                  [xself]
                    memory > x__set_x
                    memory > x__get__
                    memory > x__init__
                    memory > x__get_x
                    memory > x__delete__
                    memory > xa
                    memory > xx
                    memory > x__delete_x
                    memory > x__set__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            (((unsupported)) ((xobject)))
                              seq
                                x__init__.write
                                  [xself xget xset xdelete]
                                    seq > @
                                      (((unsupported)) 0)
                                        (((unsupported)) (((xself).x__get)) ((xget)))
                                        (((unsupported)) (((xself).x__set)) ((xset)))
                                        (((unsupported)) (((xself).x__delete)) ((xdelete)))
                                x__get__.write
                                  [xself xobj xtype]
                                    seq > @
                                      (((unsupported)) 0)
                                        (((unsupported)) (((((xself).x__get)) ((xobj)))))
                                x__set__.write
                                  [xself xobj xvalue]
                                    seq > @
                                      (((unsupported)) (((((xself).x__set)) ((xobj)) ((xvalue)))))
                                x__delete__.write
                                  [xself xobj]
                                    seq > @
                                      (((unsupported)) (((((xself).x__delete)) ((xobj)))))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__x)) (0))
                            x__get_x.write
                              [xself]
                                memory > xx
                                seq > @
                                  seq
                                    xx.write ((xself).x__x)
                                    (((unsupported)) (((xself).x__x)) (((xx).add 1)))
                                    (((unsupported)) ((xx)))
                            x__set_x.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).x__x)) ((xx)))
                            x__delete_x.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).x__x)))))
                            xx.write (((xcomputed_attribute)) ((x__get_x)) ((x__set_x)) ((x__delete_x)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (1))
                        (((unsupported)) (((xa).xx)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (11))
                        (((unsupported)) ((((unsupported)) (((xa).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("x"))
                xtest_newslots.write
                  [xself]
                    memory > x__new__
                    memory > xa
                    memory > x__init__
                    memory > xb
                    seq > @
                      seq
                        (((unsupported)) ((xlist)))
                          seq
                            x__new__.write
                              [xcls]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((xlist).x__new__)) ((xcls)))
                                    (((unsupported)) (((xself).xfoo)) (1))
                                    (((unsupported)) ((xself)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xfoo)) ((((xself).xfoo).add 2)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__class__)) ((xC)))
                        (((unsupported)) ((xC)))
                        xb.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x__class__)) ((xD)))
                xtest_bad_new.write
                  [xself]
                    memory > x__new__
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xlist).x__new__)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)) ((xlist)))
                        (((unsupported)) ((xobject)))
                          x__new__.write ((xlist).x__new__)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xC)))
                        (((unsupported)) ((xlist)))
                          x__new__.write ((xobject).x__new__)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xC)))
                xtest_object_new.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xobject).x__new__)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)) ((((xA)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__init__)) ((((xA)) 0)) (5))
                        (((unsupported)) ((xobject)))
                          x__init__.write
                            [xself xfoo]
                              seq > @
                                (((unsupported)) (((xself).xfoo)) ((xfoo)))
                        bogusForceDataize.write ((((xobject).x__new__)) ((xA)))
                        bogusForceDataize.write ((((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)) ((((xA)) (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__init__)) ((((xA)) (3))) (5))
                        (((unsupported)) ((xobject)))
                          x__new__.write
                            [xcls xfoo]
                              seq > @
                                (((unsupported)) (((((xobject).x__new__)) ((xcls)))))
                        bogusForceDataize.write ((((xobject).x__new__)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)) ((((xA)) (3))))
                        bogusForceDataize.write ((((xobject).x__init__)) ((((xA)) (3))) (5))
                        (((unsupported)) ((xobject)))
                          seq
                            x__new__.write
                              [xcls xfoo]
                                seq > @
                                  (((unsupported)) (((((xobject).x__new__)) ((xcls)))))
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)) (((xself).xfoo)) ((xfoo)))
                        bogusForceDataize.write ((((xobject).x__new__)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)) ((((xA)) (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xobject).x__init__)) ((((xA)) (3))) (5))
                xtest_restored_object_new.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    memory > xb
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          x__new__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xAssertionError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAssertionError)) ((xA)))
                        (((unsupported)) ((xA)))
                          seq
                            x__new__.write ((xobject).x__new__)
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)) (((xself).xfoo)) ((xfoo)))
                        (((unsupported)) (((((xwarnings).xcatch_warnings)) 0)))
                          seq
                            bogusForceDataize.write ((((xwarnings).xsimplefilter)) ("error") ((xDeprecationWarning)))
                            xb.write (((xB)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x__class__)) ((xB)))
                        (((unsupported)) ((((unsupported)) (((xB).x__new__)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAssertionError)) ((xB)))
                        (((unsupported)) ((((unsupported)) (((xA).x__new__)))))
                        (((unsupported)) (((((xwarnings).xcatch_warnings)) 0)))
                          seq
                            bogusForceDataize.write ((((xwarnings).xsimplefilter)) ("error") ((xDeprecationWarning)))
                            xb.write (((xB)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x__class__)) ((xB)))
                xtest_altmro.write
                  [xself]
                    memory > xx
                    memory > xmro
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)) ("A"))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)) ("C"))
                        (((unsupported)) ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xA).xmro)) 0)) ((((unsupported)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xA).x__mro__)) ((((unsupported)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xB).xmro)) 0)) ((((unsupported)) ((xB)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB).x__mro__)) ((((unsupported)) ((xB)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC).xmro)) 0)) ((((unsupported)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__mro__)) ((((unsupported)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xD).xmro)) 0)) ((((unsupported)) ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__mro__)) ((((unsupported)) ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xD)) 0).xf)) 0)) ("C"))
                        (((unsupported)) ((xtype)))
                          xmro.write
                            [xcls]
                              memory > xL
                              seq > @
                                seq
                                  xL.write ((((xtype).xmro)) ((xcls)))
                                  bogusForceDataize.write ((((xL).xreverse)) 0)
                                  (((unsupported)) ((xL)))
                        (((unsupported)) ((xD)) ((xB)) ((xC)) ((xA)) ((xPerverseMetaType)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).x__mro__)) ((((unsupported)) ((xobject)) ((xA)) ((xC)) ((xB)) ((xD)) ((xX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xX)) 0).xf)) 0)) ("A"))
                        (((unsupported)) ((xTypeError)))
                          seq
                            (((unsupported)) ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)) ((((unsupported)) ((xself)) ((xdict)) ((xobject)))))
                            (((unsupported)) ((xobject)) ((x_metaclass)))
                            xx.write ((((xobject).x__new__)) ((xX)))
                            (((unsupported)) ((((unsupported)) ((xx)) (5))) (6))
                          bogusForceDataize.write ((((xself).xfail)) ("devious mro() return not caught"))
                        (((unsupported)) ((xTypeError)))
                          seq
                            (((unsupported)) ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)) ((((unsupported)) (1))))
                            (((unsupported)) ((xobject)) ((x_metaclass)))
                          bogusForceDataize.write ((((xself).xfail)) ("non-class mro() return not caught"))
                        (((unsupported)) ((xTypeError)))
                          seq
                            (((unsupported)) ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)) (1))
                            (((unsupported)) ((xobject)) ((x_metaclass)))
                          bogusForceDataize.write ((((xself).xfail)) ("non-sequence mro() return not caught"))
                xtest_overloading.write
                  [xself]
                    memory > x__getattr__
                    memory > x__getitem__
                    memory > x__delitem__
                    memory > x__delattr__
                    memory > x__setitem__
                    memory > x__setattr__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          unsupported
                        (((unsupported)) ((xB)))
                          seq
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)) ((((unsupported)) ("getattr") ((xname)))))
                                    (((unsupported)) ((xAttributeError)))
                            x__setattr__.write
                              [xself xname xvalue]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)) (((xself).xsetattr)) ((((unsupported)) ((xname)) ((xvalue)))))
                                    (((unsupported)) (((((xB).x__setattr__)) ((xself)) ((xname)) ((xvalue)))))
                            x__delattr__.write
                              [xself xname]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)) (((xself).xdelattr)) ((xname)))
                                    (((unsupported)) (((((xB).x__delattr__)) ((xself)) ((xname)))))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ("getitem") ((xkey)))))
                            x__setitem__.write
                              [xself xkey xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xsetitem)) ((((unsupported)) ((xkey)) ((xvalue)))))
                            x__delitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)) (((xself).xdelitem)) ((xkey)))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfoo)) ((((unsupported)) ("getattr") ("foo"))))
                        (((unsupported)) (((xa).xfoo)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xsetattr)) ((((unsupported)) ("foo") (12))))
                        (((unsupported)) ((((unsupported)) (((xa).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xdelattr)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (12))) ((((unsupported)) ("getitem") (12))))
                        (((unsupported)) ((((unsupported)) ((xa)) (12))) (21))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xsetitem)) ((((unsupported)) (12) (21))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xa)) (12))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xdelitem)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) (0) (10))))) ((((unsupported)) ("getitem") ((((xslice)) (0) (10))))))
                        (((unsupported)) ((((unsupported)) ((xa)) ((((unsupported)) (0) (10))))) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xsetitem)) ((((unsupported)) ((((xslice)) (0) (10))) ("foo"))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xa)) ((((unsupported)) (0) (10))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xdelitem)) ((((xslice)) (0) (10))))
                xtest_methods.write
                  [xself]
                    memory > xd2
                    memory > xboo
                    memory > xgoo
                    memory > x__init__
                    memory > xfoo
                    memory > xc1
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xx)))
                        xc1.write (((xC)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc1).xfoo)) 0)) (1))
                        (((unsupported)) ((xC)))
                          seq
                            xboo.write ((xC).xfoo)
                            xgoo.write ((xc1).xfoo)
                        xd2.write (((xD)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd2).xfoo)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd2).xboo)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd2).xgoo)) 0)) (1))
                        (((unsupported)) ((xobject)))
                          xfoo.write ((xC).xfoo)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xE)) 0).xfoo).x__func__)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((((xC).xfoo).x__get__)) ((((xC)) (1)))))).xstartswith)) ("<bound method "))))
                xtest_methods_in_c.write
                  [xself]
                    memory > xexpected_errmsg
                    memory > xset_add
                    seq > @
                      (((unsupported)) 0)
                        xset_add.write ((xset).xadd)
                        xexpected_errmsg.write "descriptor 'add' of 'set' object needs an argument"
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xset_add)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                        xexpected_errmsg.write "descriptor 'add' for 'set' objects doesn't apply to a 'int' object"
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xset_add)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xset_add).x__get__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                xtest_special_method_lookup.write
                  [xself]
                    memory > x__getattr__
                    memory > xswallow
                    memory > xformat_impl
                    memory > xdo_isinstance
                    memory > xstop
                    memory > xspecials
                    memory > xsome_number
                    memory > xdo_issubclass
                    memory > x__init__
                    memory > xiden
                    memory > xrun_context
                    memory > xempty_seq
                    memory > xreturn_true
                    memory > x__getattribute__
                    memory > xrecord
                    memory > xcomplex_num
                    memory > xhello
                    memory > x__get__
                    memory > xdo_dict_missing
                    memory > xzero
                    seq > @
                      seq
                        xrun_context.write
                          [xmanager]
                            seq > @
                              (((unsupported)) ((xmanager)))
                        xiden.write
                          [xself]
                            seq > @
                              (((unsupported)) ((xself)))
                        xhello.write
                          [xself]
                            seq > @
                              (((unsupported)) ("hello"))
                        xempty_seq.write
                          [xself]
                            seq > @
                              (((unsupported)) ((((unsupported)) 0)))
                        xzero.write
                          [xself]
                            seq > @
                              (((unsupported)) (0))
                        xcomplex_num.write
                          [xself]
                            seq > @
                              (((unsupported)) ((((unsupported)) 0)))
                        xstop.write
                          [xself]
                            seq > @
                              (((unsupported)) ((xStopIteration)))
                        xreturn_true.write
                          [xself xthing]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (TRUE))
                        xdo_isinstance.write
                          [xobj]
                            seq > @
                              (((unsupported)) ((((xisinstance)) ((xint)) ((xobj)))))
                        xdo_issubclass.write
                          [xobj]
                            seq > @
                              (((unsupported)) ((((xissubclass)) ((xint)) ((xobj)))))
                        xdo_dict_missing.write
                          [xchecker]
                            seq > @
                              seq
                                (((unsupported)) (((xchecker).x__class__)) ((xdict)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xDictSub)) 0)) ("hi"))) (4))
                        xsome_number.write
                          [xself_ xkey]
                            seq > @
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xkey)) ("hi"))
                                (((unsupported)) (4))
                        xswallow.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        xformat_impl.write
                          [xself xspec]
                            seq > @
                              (((unsupported)) ("hello"))
                        xspecials.write (((unsupported)) ((((unsupported)) ("__bytes__") ((xbytes)) ((xhello)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__reversed__") ((xreversed)) ((xempty_seq)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__length_hint__") ((xlist)) ((xzero)) ((((xset)) 0)) ((((unsupported)) ("__iter__") ((xiden)) ("__next__") ((xstop)))))) ((((unsupported)) ("__sizeof__") (((xsys).xgetsizeof)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__instancecheck__") ((xdo_isinstance)) ((xreturn_true)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__missing__") ((xdo_dict_missing)) ((xsome_number)) ((((xset)) ((((unsupported)) ("__class__"))))) ((((unsupported)) 0)))) ((((unsupported)) ("__subclasscheck__") ((xdo_issubclass)) ((xreturn_true)) ((((xset)) ((((unsupported)) ("__bases__"))))) ((((unsupported)) 0)))) ((((unsupported)) ("__enter__") ((xrun_context)) ((xiden)) ((((xset)) 0)) ((((unsupported)) ("__exit__") ((xswallow)))))) ((((unsupported)) ("__exit__") ((xrun_context)) ((xswallow)) ((((xset)) 0)) ((((unsupported)) ("__enter__") ((xiden)))))) ((((unsupported)) ("__complex__") ((xcomplex)) ((xcomplex_num)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__format__") ((xformat)) ((xformat_impl)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__floor__") (((xmath).xfloor)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__trunc__") (((xmath).xtrunc)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__trunc__") ((xint)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__ceil__") (((xmath).xceil)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__dir__") ((xdir)) ((xempty_seq)) ((((xset)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ("__round__") ((xround)) ((xzero)) ((((xset)) 0)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__getattr__.write
                              [xself xattr xtest]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xtest).xfail)) (((("__getattr__ called with {0}".xformat)) ((xattr)))))
                            x__getattribute__.write
                              [xself xattr xtest]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xattr)) ((xok))).if
                                      bogusForceDataize.write ((((xtest).xfail)) (((("__getattribute__ called with {0}".xformat)) ((xattr)))))
                                    (((unsupported)) (((((xobject).x__getattribute__)) ((xself)) ((xattr)))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself ximpl]
                                seq > @
                                  (((unsupported)) (((xself).ximpl)) ((ximpl)))
                            x__get__.write
                              [xself xobj xowner]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xrecord).xappend)) (1))
                                    (((unsupported)) ((((((xself).ximpl).x__get__)) ((xobj)) ((xowner)))))
                        (((unsupported)) ((xException)))
                        (((unsupported)) ((xobject)))
                          x__get__.write
                            [xself xobj xowner]
                              seq > @
                                (((unsupported)) ((xMyException)))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xrunner)) ((xmeth_impl)) ((xok)) ((xenv)))) ((xspecials)))
                          seq
                            (((unsupported)) ((xChecker)))
                            (((unsupported)) ((((unsupported)) ((xattr)) ((xobj)))) (((((xenv).xitems)) 0)))
                              bogusForceDataize.write (((xsetattr)) ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)) ((xX)) ((xname)) ((xmeth_impl)))
                            bogusForceDataize.write (((xrunner)) ((((xX)) 0)))
                            xrecord.write (((unsupported)) 0)
                            (((unsupported)) ((xChecker)))
                            (((unsupported)) ((((unsupported)) ((xattr)) ((xobj)))) (((((xenv).xitems)) 0)))
                              bogusForceDataize.write (((xsetattr)) ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)) ((xX)) ((xname)) ((((xSpecialDescr)) ((xmeth_impl)))))
                            bogusForceDataize.write (((xrunner)) ((((xX)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xrecord)) ((((unsupported)) (1))) ((xname)))
                            (((unsupported)) ((xChecker)))
                            (((unsupported)) ((((unsupported)) ((xattr)) ((xobj)))) (((((xenv).xitems)) 0)))
                              bogusForceDataize.write (((xsetattr)) ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)) ((xX)) ((xname)) ((((xErrDescr)) 0)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xMyException)) ((xrunner)) ((((xX)) 0)))
                xtest_specials.write
                  [xself]
                    memory > x__str__
                    memory > x__contains__
                    memory > x__getitem__
                    memory > x__ne__
                    memory > x__gt__
                    memory > xd1
                    memory > xp0
                    memory > x__init__
                    memory > x__hash__
                    memory > x__bool__
                    memory > x__eq__
                    memory > x__repr__
                    memory > xp_1
                    memory > xd2
                    memory > xc2
                    memory > x__le__
                    memory > x__lt__
                    memory > xc1
                    memory > xp10
                    memory > xp1
                    memory > x__ge__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((unsupported)) (0) ((xi)) (10)).if
                                    (((unsupported)) ((xi)))
                                  (((unsupported)) ((xIndexError)))
                        xc1.write (((xC)) 0)
                        xc2.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xc1).not)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xc1)))) ((((xid)) ((xc2)))))
                        bogusForceDataize.write (((xhash)) ((xc1)))
                        bogusForceDataize.write (((xhash)) ((xc2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc1)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xc1).neq (xc2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xc1).neq (xc1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xc1).eq (xc2))))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)) (((((((xstr)) ((xc1))).xfind)) ("C object at "))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xc1)))) ((((xrepr)) ((xc1)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xc1)))
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xi)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xc1)))
                        (((unsupported)) ((xobject)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((unsupported)) (0) ((xi)) (10)).if
                                    (((unsupported)) ((xi)))
                                  (((unsupported)) ((xIndexError)))
                        xd1.write (((xD)) 0)
                        xd2.write (((xD)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xd1).not)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xd1)))) ((((xid)) ((xd2)))))
                        bogusForceDataize.write (((xhash)) ((xd1)))
                        bogusForceDataize.write (((xhash)) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd1)) ((xd1)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xd1)) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xd1).neq (xd1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xd1).eq (xd2))))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)) (((((((xstr)) ((xd1))).xfind)) ("D object at "))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xd1)))) ((((xrepr)) ((xd1)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xd1)))
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xi)) ((xd1)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xd1)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                            x__bool__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((((xself).xx).not).not)))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xhash)) (((xself).xx)))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).eq (xother))))
                            x__ne__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).neq (xother))))
                            x__ge__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).geq (xother))))
                            x__gt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).greater (xother))))
                            x__le__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).leq (xother))))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).less (xother))))
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("Proxy:%s".mod ((xself).xx))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("Proxy(%r)".mod ((xself).xx))))
                            x__contains__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xvalue)) (((xself).xx)))))
                        xp0.write (((xProxy)) (0))
                        xp1.write (((xProxy)) (1))
                        xp_1.write (((xProxy)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xp0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xp1).not)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xp0)))) ((((xhash)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp0)) ((xp0)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xp0)) ((xp1)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xp0).neq (xp0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp0).not)) ((xp1)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xp0).less (xp1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xp0).leq (xp1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xp1).greater (xp0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xp1).geq (xp0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xp0)))) ("Proxy:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xp0)))) ("Proxy(0)"))
                        xp10.write (((xProxy)) ((((xrange)) (10))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xp10)))
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xi)) ((xp10)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xp10)))
                xtest_weakrefs.write
                  [xself]
                    memory > xc
                    memory > x__slots__
                    memory > xno
                    memory > xyes
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                        xc.write (((xC)) 0)
                        xr.write ((((xweakref).xref)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xr)) 0)) ((xc)))
                        (((unsupported)) ((((unsupported)) ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xr)) 0)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((((unsupported)) ((xr)))))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("foo"))
                        xno.write (((xNoWeak)) 0)
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xweakref).xref)) ((xno)))
                          bogusForceDataize.write ((((xself).xassertIn)) ("weak reference") ((((xstr)) ((xmsg)))))
                          bogusForceDataize.write ((((xself).xfail)) ("weakref.ref(no) should be illegal"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("foo") ("__weakref__"))
                        xyes.write (((xWeak)) 0)
                        xr.write ((((xweakref).xref)) ((xyes)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xr)) 0)) ((xyes)))
                        (((unsupported)) ((((unsupported)) ((xyes)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xr)) 0)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((((unsupported)) ((xr)))))
                xtest_properties.write
                  [xself]
                    memory > xdelx
                    memory > x__getitem__
                    memory > xgetx
                    memory > xraw
                    memory > xsetx
                    memory > xx
                    memory > xa
                    memory > xd
                    memory > xattrs
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__x)))
                            xsetx.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).x__x)) ((xvalue)))
                            xdelx.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).x__x)))))
                            xx.write (((unsupported)) ((xproperty)) ((xgetx)) ((xsetx)) ((xdelx)) ("I'm the x property."))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("x"))
                        (((unsupported)) (((xa).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x_C__x)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (42))
                        (((unsupported)) ((((unsupported)) (((xa).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("x"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("_C__x"))
                        bogusForceDataize.write (((((xC).xx).x__set__)) ((xa)) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xC).xx).x__get__)) ((xa)))) (100))
                        bogusForceDataize.write (((((xC).xx).x__delete__)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xa)) ("x"))
                        xraw.write (((unsupported)) (((xC).x__dict__)) ("x"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xraw)) ((xproperty)))
                        xattrs.write (((xdir)) ((xraw)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("__doc__") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("fget") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("fset") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("fdel") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xraw).x__doc__)) ("I'm the x property."))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xraw).xfget)) ((((unsupported)) (((xC).x__dict__)) ("getx"))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xraw).xfset)) ((((unsupported)) (((xC).x__dict__)) ("setx"))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xraw).xfdel)) ((((unsupported)) (((xC).x__dict__)) ("delx"))))
                        (((unsupported)) ((xattr)) ((((unsupported)) ("fget") ("fset") ("fdel"))))
                          (((unsupported)) ((xAttributeError)))
                            bogusForceDataize.write (((xsetattr)) ((xraw)) ((xattr)) (42))
                            (((((((xstr)) ((xmsg))).xfind)) ("readonly")).less 0).if
                              bogusForceDataize.write ((((xself).xfail)) (("when setting readonly attr %r on a property, got unexpected AttributeError msg %r".mod (((unsupported)) ((xattr)) ((((xstr)) ((xmsg))))))))
                            bogusForceDataize.write ((((xself).xfail)) (("expected AttributeError from trying to set readonly %r attr on a property".mod (xattr))))
                        (((unsupported)) (((xraw).x__doc__)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xraw).x__doc__)) (42))
                        (((unsupported)) ((xobject)))
                          x__getitem__.write (((xproperty)) ((((unsupported)) ((1.div 0)))))
                        xd.write (((xD)) 0)
                        (((unsupported)) ((xZeroDivisionError)))
                          (((unsupported)) ((xi)) ((xd)))
                            bogusForceDataize.write (((xstr)) ((xi)))
                          bogusForceDataize.write ((((xself).xfail)) ("expected ZeroDivisionError from bad property"))
                xtest_properties_doc_attrib.write
                  [xself]
                    memory > xgetter
                    memory > xsetter
                    memory > xprop2
                    memory > xprop
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          seq
                            xgetter.write
                              [xself]
                                seq > @
                                  seq
                                    unsupported
                                    (((unsupported)) (0))
                            xsetter.write
                              [xself_ xvalue]
                                seq > @
                                  seq
                                    unsupported
                            xprop.write (((xproperty)) ((xgetter)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xprop).x__doc__)) ("getter method"))
                            xprop2.write (((unsupported)) ((xproperty)) ((xsetter)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xprop2).x__doc__)) ("None: is there a None literal in the EO language?"))
                xtest_testcapi_no_segfault.write
                  [xself]
                    memory > xp
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xImportError)))
                          (((unsupported)) 0)
                          (((unsupported)) ((xobject)))
                            xp.write (((xproperty)) (((x_testcapi).xtest_with_docstring)))
                xtest_properties_plus.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xf
                    memory > xe
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xfoo.write (((unsupported)) ((xproperty)) ("hello"))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).x_foo)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).x_foo)) ((((xabs)) ((xvalue)))))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) (((xself).x_foo)))))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC).xfoo).x__doc__)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xc)) ("foo"))
                        (((unsupported)) (((xc).xfoo)) ((42.neg)))
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xc)) ("_foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).x_foo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xfoo)) (42))
                        (((unsupported)) ((((unsupported)) (((xc).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xc)) ("_foo"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xc)) ("foo"))
                        (((unsupported)) ((xC)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xAttributeError)))
                                    (((unsupported)) ((((unsupported)) (((xself).x_foo)))))
                        xd.write (((xD)) 0)
                        (((unsupported)) (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (24))
                        (((unsupported)) ((((unsupported)) (((xd).xfoo)))))
                        (((unsupported)) ((((unsupported)) (((xd).xfoo)))))
                        (((unsupported)) ((xobject)))
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).x_foo)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xRuntimeError)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).x_foo)) ((((xabs)) ((xvalue)))))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) (((xself).x_foo)))))
                        xe.write (((xE)) 0)
                        (((unsupported)) (((xe).xfoo)) ((42.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xe).xfoo)) (42))
                        (((unsupported)) ((((unsupported)) (((xe).xfoo)))))
                        (((unsupported)) ((xE)))
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) (((xself).x_foo)))))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).x_foo)) ((((xmax)) (0) ((xvalue)))))
                        xf.write (((xF)) 0)
                        (((unsupported)) (((xf).xfoo)) ((10.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xfoo)) (0))
                        (((unsupported)) ((((unsupported)) (((xf).xfoo)))))
                xtest_dict_constructors.write
                  [xself]
                    memory > xdict
                    memory > xd
                    memory > x__init__
                    memory > x__iter__
                    seq > @
                      seq
                        xd.write (((xdict)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) 0)))
                        xd.write (((xdict)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) 0)))
                        xd.write (((xdict)) ((((unsupported)) (1) (2) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) (1) (2) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((xlist)) (((((xd).xitems)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((xiter)) (((((xd).xitems)) 0)))))))
                        xd.write (((xdict)) ((((unsupported)) ("one") (1) ("two") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ((xdict)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ((xdict)) ((((unsupported)) ("one") (1))) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ((xdict)) ((((unsupported)) ((((unsupported)) ("two") (2))))) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((unsupported)) ((((unsupported)) ("one") (100))) ((((unsupported)) ("two") (200))))) ((((unsupported)) ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((unsupported)) ((xd)))))))
                        (((unsupported)) ((xbadarg)) ((((unsupported)) (0) (0) ((((unsupported)) 0)) ("0") ((((unsupported)) (0))) ((((unsupported)) (0))))))
                          (((unsupported)) ((xTypeError)) ((xValueError)))
                            bogusForceDataize.write (((xdict)) ((xbadarg)))
                            ((xbadarg).eq "0").if
                              bogusForceDataize.write ((((xself).xfail)) (("no TypeError from dict(%r)".mod (xbadarg))))
                            bogusForceDataize.write ((((xself).xfail)) (("no TypeError from dict(%r)".mod (xbadarg))))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xdict)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xself).xfail)) ("no TypeError from dict({}, {})"))
                        (((unsupported)) 0)
                          xdict.write (((unsupported)) (1) (2) (3) (4) ("a") ((((unsupported)) 0)))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xdict)) ((((xMapping)) 0)))
                          bogusForceDataize.write ((((xself).xfail)) ("no TypeError from dict(incomplete mapping)"))
                        (((unsupported)) (((xMapping).xkeys)) ((((unsupported)) ((((xlist)) ((((((xself).xdict).xkeys)) 0)))))))
                        (((unsupported)) (((xMapping).x__getitem__)) ((((unsupported)) ((((unsupported)) (((xself).xdict)) ((xi)))))))
                        xd.write (((xdict)) ((((xMapping)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) (((xMapping).xdict)))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xfirst xlast]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xfirst)) ((xfirst)))
                                    (((unsupported)) (((xself).xlast)) ((xlast)))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) (((xself).xfirst)) (((xself).xlast)))))))
                        xd.write (((xdict)) ((((unsupported)) ((((xAddressBookEntry)) ("Tim") ("Warsaw"))) ((((xAddressBookEntry)) ("Barry") ("Peters"))) ((((xAddressBookEntry)) ("Tim") ("Peters"))) ((((xAddressBookEntry)) ("Barry") ("Warsaw"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ("Barry") ("Warsaw") ("Tim") ("Peters"))))
                        xd.write (((xdict)) ((((xzip)) ((((xrange)) (4))) ((((xrange)) (1) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xi)) (((xi).add 1)))) ((xi)) ((((xrange)) (4))))))))
                        (((unsupported)) ((xbad)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ("tooshort"))))) ((((unsupported)) ((((unsupported)) ("too") ("long") ("by 1"))))))))
                          (((unsupported)) ((xValueError)))
                            bogusForceDataize.write (((xdict)) ((xbad)))
                            bogusForceDataize.write ((((xself).xfail)) (("no ValueError from dict(%r)".mod (xbad))))
                xtest_dir.write
                  [xself]
                    memory > x__getattr__
                    memory > xjunk
                    memory > x__class__
                    memory > xCmethod
                    memory > xgetdict
                    memory > xastuff
                    memory > xnames
                    memory > xAmethod
                    memory > x__init__
                    memory > x__getclass
                    memory > xc
                    memory > x__repr__
                    memory > xinteresting
                    memory > xminstance
                    memory > xAdata
                    memory > x__getitem__
                    memory > x__len__
                    memory > xm2instance
                    memory > xdefault_attributes
                    memory > xCdata
                    memory > x__dict__
                    memory > xcstuff
                    memory > xa
                    seq > @
                      seq
                        xjunk.write 12
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdir)) 0)) ((((unsupported)) ("junk") ("self"))))
                        (((unsupported)) ((((unsupported)) ((xjunk)))))
                        (((unsupported)) ((xarg)) ((((unsupported)) (2) (2) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) (2))) ("2") ("2") ((((unsupported)) (2))) ((((unsupported)) (2) (2))) ((xtype)) (((xself).xtest_dir)))))
                          bogusForceDataize.write (((xdir)) ((xarg)))
                        xinteresting.write
                          [xstrings]
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xs)) ((xs)) ((xstrings)) ((((((xs).xstartswith)) ("_")).not)))))
                        (((unsupported)) ((xobject)))
                          seq
                            xCdata.write 1
                            xCmethod.write
                              [xself]
                                seq > @
                        xcstuff.write (((unsupported)) ("Cdata") ("Cmethod"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xC)))))) ((xcstuff)))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xc)))))) ((xcstuff)))
                        (((unsupported)) (((xc).xcdata)) (2))
                        (((unsupported)) (((xc).xcmethod)) ((((unsupported)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xc)))))) (((xcstuff).add (((unsupported)) ("cdata") ("cmethod")))))
                        (((unsupported)) ((xC)))
                          seq
                            xAdata.write 1
                            xAmethod.write
                              [xself]
                                seq > @
                        xastuff.write ((((unsupported)) ("Adata") ("Amethod")).add (xcstuff))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xA)))))) ((xastuff)))
                        xa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xa)))))) ((xastuff)))
                        (((unsupported)) (((xa).xadata)) (42))
                        (((unsupported)) (((xa).xamethod)) ((((unsupported)) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinteresting)) ((((xdir)) ((xa)))))) (((xastuff).add (((unsupported)) ("adata") ("amethod")))))
                        (((unsupported)) ((((xtype)) ((xsys)))))
                        xminstance.write (((xM)) ("m"))
                        (((unsupported)) (((xminstance).xb)) (2))
                        (((unsupported)) (((xminstance).xa)) (1))
                        xdefault_attributes.write (((unsupported)) ("__name__") ("__doc__") ("__package__") ("__loader__") ("__spec__"))
                        xnames.write (((unsupported)) ((xx)) ((xx)) ((((xdir)) ((xminstance)))) ((((unsupported)) ((xx)) ((xdefault_attributes)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xnames)) ((((unsupported)) ("a") ("b"))))
                        (((unsupported)) ((xM)))
                          seq
                            xgetdict.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("Not a dict!"))
                            x__dict__.write (((xproperty)) ((xgetdict)))
                        xm2instance.write (((xM2)) ("m2"))
                        (((unsupported)) (((xm2instance).xb)) (2))
                        (((unsupported)) (((xm2instance).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xm2instance).x__dict__)) ("Not a dict!"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xdir)) ((xm2instance)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdir)) ((xNotImplemented)))) ((((xdir)) ((xEllipsis)))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)) (((xself).x__obj)) ((xobj)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("Wrapper(%s)".mod (((xrepr)) (((xself).x__obj))))))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)) ((((xWrapper)) ((((unsupported)) (((xself).x__obj)) ((xkey)))))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).x__obj)))))
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)) ((((xWrapper)) ((((xgetattr)) (((xself).x__obj)) ((xname)))))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__getclass.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xWrapper)) ((((xtype)) ((xself)))))))
                            x__class__.write (((xproperty)) ((x__getclass)))
                        bogusForceDataize.write (((xdir)) ((((xC)) 0)))
                xtest_supers.write
                  [xself]
                    memory > xtest
                    memory > xgetx
                    memory > xdd
                    memory > xx
                    memory > x__init__
                    memory > xmeth
                    memory > xaProp
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)) (("A(%r)".mod (xa))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xA)) 0).xmeth)) (1))) ("A(1)"))
                        (((unsupported)) ((xA)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__super)) ((((xsuper)) ((xB)) ((xself)))))
                            xmeth.write
                              [xself xa]
                                seq > @
                                  (((unsupported)) ((("B(%r)".mod (xa)).add (((((xself).x__super).xmeth)) ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xB)) 0).xmeth)) (2))) ("B(2)A(2)"))
                        (((unsupported)) ((xA)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)) ((("C(%r)".mod (xa)).add (((((xself).x__super).xmeth)) ((xa))))))
                        (((unsupported)) (((xC).x_C__super)) ((((xsuper)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xC)) 0).xmeth)) (3))) ("C(3)A(3)"))
                        (((unsupported)) ((xC)) ((xB)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)) ((("D(%r)".mod (xa)).add ((((((xsuper)) ((xD)) ((xself))).xmeth)) ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xD)) 0).xmeth)) (4))) ("D(4)C(4)B(4)A(4)"))
                        (((unsupported)) ((xsuper)))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((((xsuper)) ((xmysuper)) ((xself))).x__init__)) ((((unsupported)) ((xargs)))))))
                        (((unsupported)) ((xD)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)) ((("E(%r)".mod (xa)).add ((((((xmysuper)) ((xE)) ((xself))).xmeth)) ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xE)) 0).xmeth)) (5))) ("E(5)D(5)C(5)B(5)A(5)"))
                        (((unsupported)) ((xE)))
                          xmeth.write
                            [xself xa]
                              memory > xs
                              seq > @
                                seq
                                  xs.write ((xself).x__super)
                                  (((unsupported)) ((("F(%r)[%s]".mod (((unsupported)) ((xa)) ((((xs).x__class__).x__name__)))).add ((((xs).xmeth)) ((xa))))))
                        (((unsupported)) (((xF).x_F__super)) ((((xmysuper)) ((xF)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) 0).xmeth)) (6))) ("F(6)[mysuper]E(6)D(6)C(6)B(6)A(6)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xsuper)) ((xD)) (42))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't allow super(D, 42)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xsuper)) ((xD)) ((((xC)) 0)))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't allow super(D, C())"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((((xsuper)) ((xD))).x__get__)) (12))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't allow super(D).__get__(12)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((((xsuper)) ((xD))).x__get__)) ((((xC)) 0)))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't allow super(D).__get__(C())"))
                        (((unsupported)) ((xobject)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)) (42))
                            xx.write (((xproperty)) ((xgetx)))
                        (((unsupported)) ((xDDbase)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("hello"))
                            xx.write (((xproperty)) ((xgetx)))
                        xdd.write (((xDDsub)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdd).xx)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsuper)) ((xDDsub)) ((xdd))).xx)) (42))
                        (((unsupported)) ((xobject)))
                          xaProp.write (((xproperty)) ((((unsupported)) ("foo"))))
                        (((unsupported)) ((xBase)))
                          xtest.write
                            [xklass]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((xsuper)) ((xSub)) ((xklass))).xaProp)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xSub).xtest)) 0)) (((xBase).xaProp)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xsuper)) ((xBase)) (1))
                xtest_basic_inheritance.write
                  [xself]
                    memory > xidentitytab
                    memory > xt
                    memory > xbase
                    memory > x__slots__
                    memory > xs
                    memory > xrev
                    memory > x__add__
                    memory > xa
                    memory > x__str__
                    memory > xu
                    memory > x__radd__
                    memory > x_rev
                    memory > x__repr__
                    memory > x__init__
                    memory > xv
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          seq
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xhex)) ((xself)))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xhexint)) (((((xint).x__add__)) ((xself)) ((xother)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) (((((xhexint)) (7)).add 9)))) ("0x10"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) (((((xhexint)) (1000)).add 7)))) ("0x3ef"))
                        xa.write (((xhexint)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((xa)))) (12345))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xint)) ((xa))).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) (12345))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((xhexint)) (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((xhexint)) (0))) (12)).x__class__)) ((xint)))
                        (((unsupported)) ((xint)))
                          seq
                            x__slots__.write (((unsupported)) 0)
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xoct)) ((xself)))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) (((((xself).x__class__)) (((((((xsuper)) ((xoctlong)) ((xself))).x__add__)) ((xother)))))))
                            x__radd__.write (x__add__)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((((xoctlong)) (3)).add 5)))) ("0o10"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((5.add (((xoctlong)) (3000)))))) ("0o5675"))
                        xa.write (((xoctlong)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((xa)))) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) (12345))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xint)) ((xa))).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).neg).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xoctlong)) (0)).neg).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).sub 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 1).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (1)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (1)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((1.mul (xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).or 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).and (1.neg)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((xoctlong)) (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((xoctlong)) (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xabs)) ((((xoctlong)) (0)))).x__class__)) ((xint)))
                        (((unsupported)) ((xint)))
                        xa.write (((xlongclone)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).add 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((0.add (xa)).x__class__)) ((xint)))
                        xa.write (((xlongclone)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__dict__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint)) ((xa)))) ((1.neg)))
                        (((unsupported)) ((xfloat)))
                          seq
                            x__slots__.write (((unsupported)) ("prec"))
                            x__init__.write
                              [xself xvalue xprec]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xprec)) ((((xint)) ((xprec)))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("%.*g".mod (((unsupported)) (((xself).xprec)) ((xself))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xprecfloat)) (1.1))))) ("1.1"))
                        xa.write (((xprecfloat)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (12345.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfloat)) ((xa)))) (12345.0))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xfloat)) ((xa))).x__class__)) ((xfloat)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) (12345.0))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa)).x__class__)) ((xfloat)))
                        (((unsupported)) ((xcomplex)))
                          x__repr__.write
                            [xself]
                              seq > @
                                (((unsupported)) (("%.17gj%+.17g".mod (((unsupported)) (((xself).ximag)) (((xself).xreal))))))
                        xa.write (((xmadcomplex)) ((3.neg)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("4j-3"))
                        xbase.write (((xcomplex)) ((3.neg)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbase).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomplex)) ((xa)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcomplex)) ((xa))).x__class__)) ((xcomplex)))
                        xa.write (((xmadcomplex)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xa)))) ("4j-3"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomplex)) ((xa)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcomplex)) ((xa))).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xa)).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xa).add 0).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).add 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xa).sub 0).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).sub 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xa).mul 1).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xa).div 1).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).div 1)) ((xbase)))
                        (((unsupported)) ((xtuple)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)) (((xself).x_rev)))
                                    xL.write (((xlist)) ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)) 0)
                                    (((unsupported)) (((xself).x_rev)) (((((xself).x__class__)) ((xL)))))
                                    (((unsupported)) (((xself).x_rev)))
                        xa.write (((xmadtuple)) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xrev)) 0)) ((((xmadtuple)) ((((unsupported)) (0) (9) (8) (7) (6) (5) (4) (3) (2) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xa).xrev)) 0).xrev)) 0)) ((((xmadtuple)) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))))
                        (((unsupported)) ((xi)) ((((xrange)) (512))))
                          seq
                            xt.write (((xmadtuple)) ((((xrange)) ((xi)))))
                            xu.write ((((xt).xrev)) 0)
                            xv.write ((((xu).xrev)) 0)
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xv)) ((xt)))
                        xa.write (((xmadtuple)) ((((unsupported)) (1) (2) (3) (4) (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xa)))) ((((unsupported)) (1) (2) (3) (4) (5))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xtuple)) ((xa))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) ((((unsupported)) (1) (2) (3) (4) (5))))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) ((((unsupported)) 0))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 1).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 0).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).add (((unsupported)) 0)).x__class__)) ((xtuple)))
                        xa.write (((xmadtuple)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xa)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xtuple)) ((xa))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).add (xa)).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 0).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 1).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xa).mul 2).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xa)) ((((unsupported)) 0))).x__class__)) ((xtuple)))
                        (((unsupported)) ((xstr)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)) (((xself).x_rev)))
                                    xL.write (((xlist)) ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)) 0)
                                    (((unsupported)) (((xself).x_rev)) (((((xself).x__class__)) (((("".xjoin)) ((xL)))))))
                                    (((unsupported)) (((xself).x_rev)))
                        xs.write (((xmadstring)) ("abcdefghijklmnopqrstuvwxyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ("abcdefghijklmnopqrstuvwxyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xrev)) 0)) ((((xmadstring)) ("zyxwvutsrqponmlkjihgfedcba"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xs).xrev)) 0).xrev)) 0)) ((((xmadstring)) ("abcdefghijklmnopqrstuvwxyz"))))
                        (((unsupported)) ((xi)) ((((xrange)) (256))))
                          seq
                            xs.write (((xmadstring)) (((("".xjoin)) ((((xmap)) ((xchr)) ((((xrange)) ((xi)))))))))
                            xt.write ((((xs).xrev)) 0)
                            xu.write ((((xt).xrev)) 0)
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xu)) ((xs)))
                        xs.write (((xmadstring)) ("12345"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xs)))) ("12345"))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xstr)) ((xs))).x__class__)) ((xstr)))
                        xbase.write ("x00".mul 5)
                        xs.write (((xmadstring)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xs)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xstr)) ((xs))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xs)))) ((((xhash)) ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xs)) (1))) ((xbase)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xbase)) (1))) ((xs)))) (1))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xs).add "").x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xs).add "")) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((("".add (xs)).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("".add (xs))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xs).mul 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xs).mul 0)) (""))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xs).mul 1).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xs).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xs).mul 2).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xs).mul 2)) (((xbase).add (xbase))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xs)) ((((unsupported)) 0))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xs)) ((((unsupported)) 0)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xs)) ((((unsupported)) (0) (0)))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xs)) ((((unsupported)) (0) (0))))) (""))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xstrip)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xlstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xlstrip)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xrstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xrstrip)) 0)) ((xbase)))
                        xidentitytab.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xtranslate)) ((xidentitytab))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xtranslate)) ((xidentitytab)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xreplace)) ("x") ("x")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xreplace)) ("x") ("x"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xljust)) ((((xlen)) ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xljust)) ((((xlen)) ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xrjust)) ((((xlen)) ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xrjust)) ((((xlen)) ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xcenter)) ((((xlen)) ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xcenter)) ((((xlen)) ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xs).xlower)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xs).xlower)) 0)) ((xbase)))
                        (((unsupported)) ((xstr)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)) (((xself).x_rev)))
                                    xL.write (((xlist)) ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)) 0)
                                    (((unsupported)) (((xself).x_rev)) (((((xself).x__class__)) (((("".xjoin)) ((xL)))))))
                                    (((unsupported)) (((xself).x_rev)))
                        xu.write (((xmadunicode)) ("ABCDEF"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu)) ("ABCDEF"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xrev)) 0)) ((((xmadunicode)) ("FEDCBA"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xu).xrev)) 0).xrev)) 0)) ((((xmadunicode)) ("ABCDEF"))))
                        xbase.write "12345"
                        xu.write (((xmadunicode)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xu)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xstr)) ((xu))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xu)))) ((((xhash)) ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xu)) (1))) ((xbase)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xbase)) (1))) ((xu)))) (1))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xstrip)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xlstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xlstrip)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xrstrip)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xrstrip)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xreplace)) ("x") ("x")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xreplace)) ("x") ("x"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xreplace)) ("xy") ("xy")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xreplace)) ("xy") ("xy"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xcenter)) ((((xlen)) ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xcenter)) ((((xlen)) ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xljust)) ((((xlen)) ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xljust)) ((((xlen)) ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xrjust)) ((((xlen)) ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xrjust)) ((((xlen)) ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xlower)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xlower)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xupper)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xupper)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xcapitalize)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xcapitalize)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((xu).xtitle)) 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xtitle)) 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xu).add "").x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xu).add "")) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((("".add (xu)).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("".add (xu))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xu).mul 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xu).mul 0)) (""))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xu).mul 1).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xu).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xu).mul 2).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xu).mul 2)) (((xbase).add (xbase))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xu)) ((((unsupported)) 0))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xu)) ((((unsupported)) 0)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xu)) ((((unsupported)) (0) (0)))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xu)) ((((unsupported)) (0) (0))))) (""))
                        (((unsupported)) ((xlist)))
                        xa.write (((xsublist)) ((((xrange)) (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xa).xappend)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (((((xlist)) ((((xrange)) (5)))).add (((unsupported)) ("hello")))))
                        (((unsupported)) ((((unsupported)) ((xa)) (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (6))))))
                        bogusForceDataize.write ((((xa).xextend)) ((((xrange)) (6) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (20))))))
                        (((unsupported)) ((((unsupported)) ((xa)) ((((unsupported)) ((5.neg)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (15))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xa)) ((((unsupported)) (10) (15))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xa)))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xa)))) ((((xlist)) ((((xrange)) (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) (9))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((10.neg)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((1.neg)))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) (5))))) ((((xlist)) ((((xrange)) (5))))))
                xtest_keywords.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("keyword argument"))))
                          (((unsupported)) ((xint)) (1))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("keyword argument"))))
                          (((unsupported)) ((xfloat)) (2))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("keyword argument"))))
                          (((unsupported)) ((xbool)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xcomplex)) (42) (666))) ((((xcomplex)) (666) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xstr)) (500))) ("500"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xstr)) ("abc") ("strict"))) ("abc"))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("keyword argument"))))
                          (((unsupported)) ((xtuple)) ((((xrange)) (3))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("keyword argument"))))
                          (((unsupported)) ((xlist)) ((((unsupported)) (0) (1) (2))))
                        (((unsupported)) ((xconstructor)) ((((unsupported)) ((xint)) ((xfloat)) ((xint)) ((xcomplex)) ((xstr)) ((xstr)) ((xtuple)) ((xlist)))))
                          (((unsupported)) ((xTypeError)))
                            (((unsupported)) ((xconstructor)) (1))
                            bogusForceDataize.write ((((xself).xfail)) (("expected TypeError from bogus keyword argument to %r".mod (xconstructor))))
                xtest_str_subclass_as_dict_key.write
                  [xself]
                    memory > xd
                    memory > x__eq__
                    memory > x__hash__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xstr)))
                          seq
                            (((unsupported)) 0)
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xcanonical)) (((((xvalue).xlower)) 0)))
                                    (((unsupported)) (((xself).xhashcode)) ((((xhash)) (((xself).xcanonical)))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    ((((xisinstance)) ((xother)) ((xcistr))).not).if
                                      xother.write (((xcistr)) ((xother)))
                                    (((unsupported)) ((((xself).xcanonical).eq ((xother).xcanonical))))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xhashcode)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcistr)) ("ABC"))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("aBc") ((((xcistr)) ("ABC"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xcistr)) ("ABC"))))) ("ABC"))
                        xd.write (((unsupported)) ((((xcistr)) ("one"))) (1) ((((xcistr)) ("two"))) (2) ((((xcistr)) ("tHree"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ((((xcistr)) ("one"))))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ((((xcistr)) ("tWo"))))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ((((xcistr)) ("THrEE"))))) (3))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xcistr)) ("ONe"))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xget)) ((((xcistr)) ("thrEE"))))) (3))
                xtest_classic_comparisons.write
                  [xself]
                    memory > xc3
                    memory > xc2
                    memory > x__ne__
                    memory > x__gt__
                    memory > x__init__
                    memory > xc1
                    memory > x__ge__
                    memory > x__eq__
                    memory > xc
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xbase)) ((((unsupported)) ((xclassic)) ((xint)) ((xobject)))))
                          seq
                            (((unsupported)) ((xbase)))
                              seq
                                x__init__.write
                                  [xself xvalue]
                                    seq > @
                                      (((unsupported)) (((xself).xvalue)) ((((xint)) ((xvalue)))))
                                x__eq__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).eq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__ne__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).neq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).neq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__lt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).less (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__le__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).leq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).leq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__gt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).greater ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).greater (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__ge__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).geq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).geq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                            xc1.write (((xC)) (1))
                            xc2.write (((xC)) (2))
                            xc3.write (((xC)) (3))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xc1)) (1))
                            xc.write (((unsupported)) (1) ((xc1)) (2) ((xc2)) (3) ((xc3)))
                            (((unsupported)) ((xx)) ((((unsupported)) (1) (2) (3))))
                              (((unsupported)) ((xy)) ((((unsupported)) (1) (2) (3))))
                                (((unsupported)) ((xop)) ((((unsupported)) ("<") ("<=") ("==") ("!=") (">") (">="))))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("c[x] %s c[y]".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("c[x] %s y".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("x %s c[y]".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                xtest_rich_comparisons.write
                  [xself]
                    memory > xc3
                    memory > xz
                    memory > xc2
                    memory > x__ne__
                    memory > x__gt__
                    memory > x__cmp__
                    memory > x__init__
                    memory > xzz
                    memory > xc1
                    memory > x__ge__
                    memory > x__eq__
                    memory > xc
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) ((xcomplex)))
                        xz.write (((xZ)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xz)) ((1.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((1.add (((unsupported)) 0))) ((xz)))
                        (((unsupported)) ((xcomplex)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((xabs)) (((xself).sub (xother)))).leq (((unsupported)) 0))))
                                  (((unsupported)) ((xNotImplemented)))
                        xzz.write (((xZZ)) (1.0000003))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xzz)) ((1.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((1.add (((unsupported)) 0))) ((xzz)))
                        (((unsupported)) 0)
                        (((unsupported)) ((xbase)) ((((unsupported)) ((xclassic)) ((xint)) ((xobject)) ((xlist)))))
                          seq
                            (((unsupported)) ((xbase)))
                              seq
                                x__init__.write
                                  [xself xvalue]
                                    seq > @
                                      (((unsupported)) (((xself).xvalue)) ((((xint)) ((xvalue)))))
                                x__cmp__.write
                                  [xself_ xother]
                                    seq > @
                                      bogusForceDataize.write ((((xself).xfail)) ("shouldn't call __cmp__"))
                                x__eq__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).eq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__ne__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).neq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).neq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__lt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).less (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__le__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).leq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).leq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__gt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).greater ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).greater (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                                x__ge__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)) ((xother)) ((xC))).if
                                          (((unsupported)) ((((xself).xvalue).geq ((xother).xvalue))))
                                        ((((xisinstance)) ((xother)) ((xint))).or (((xisinstance)) ((xother)) ((xint)))).if
                                          (((unsupported)) ((((xself).xvalue).geq (xother))))
                                        (((unsupported)) ((xNotImplemented)))
                            xc1.write (((xC)) (1))
                            xc2.write (((xC)) (2))
                            xc3.write (((xC)) (3))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xc1)) (1))
                            xc.write (((unsupported)) (1) ((xc1)) (2) ((xc2)) (3) ((xc3)))
                            (((unsupported)) ((xx)) ((((unsupported)) (1) (2) (3))))
                              (((unsupported)) ((xy)) ((((unsupported)) (1) (2) (3))))
                                (((unsupported)) ((xop)) ((((unsupported)) ("<") ("<=") ("==") ("!=") (">") (">="))))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("c[x] %s c[y]".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("c[x] %s y".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("x %s c[y]".mod (xop))))) ((((xeval)) (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)) ((xx)) ((xy))))))
                xtest_descrdoc.write
                  [xself]
                    memory > xcheck
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xcheck.write
                          [xdescr xwhat]
                            seq > @
                              bogusForceDataize.write ((((xself).xassertEqual)) (((xdescr).x__doc__)) ((xwhat)))
                        bogusForceDataize.write (((xcheck)) (((xFileIO).xclosed)) ("True if the file is closed"))
                        bogusForceDataize.write (((xcheck)) (((xcomplex).xreal)) ("the real part of a complex number"))
                xtest_doc_descriptor.write
                  [xself]
                    memory > x__doc__
                    memory > x__get__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__get__.write
                            [xself xobject xotype]
                              seq > @
                                seq
                                  (xobject).if
                                    xobject.write ((((xobject).x__class__).x__name__).add " instance")
                                  (xotype).if
                                    xotype.write ((xotype).x__name__)
                                  (((unsupported)) (("object=%s; type=%s".mod (((unsupported)) ((xobject)) ((xotype))))))
                        (((unsupported)) 0)
                          x__doc__.write (((xDocDescr)) 0)
                        (((unsupported)) ((xobject)))
                          x__doc__.write (((xDocDescr)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xOldClass).x__doc__)) ("object=None; type=OldClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xOldClass)) 0).x__doc__)) ("object=OldClass instance; type=OldClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xNewClass).x__doc__)) ("object=None; type=NewClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xNewClass)) 0).x__doc__)) ("object=NewClass instance; type=NewClass"))
                xtest_set_class.write
                  [xself]
                    memory > xo
                    memory > xcant
                    memory > xl
                    memory > x__del__
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xD)) ((xE)))
                        (((unsupported)) ((xcls)) ((((unsupported)) ((xC)) ((xD)) ((xE)) ((xF)))))
                          (((unsupported)) ((xcls2)) ((((unsupported)) ((xC)) ((xD)) ((xE)) ((xF)))))
                            seq
                              xx.write (((xcls)) 0)
                              (((unsupported)) (((xx).x__class__)) ((xcls2)))
                              bogusForceDataize.write ((((xself).xassertIs)) (((xx).x__class__)) ((xcls2)))
                              (((unsupported)) (((xx).x__class__)) ((xcls)))
                              bogusForceDataize.write ((((xself).xassertIs)) (((xx).x__class__)) ((xcls)))
                        xcant.write
                          [xx xC]
                            seq > @
                              seq
                                (((unsupported)) ((xTypeError)))
                                  (((unsupported)) (((xx).x__class__)) ((xC)))
                                  bogusForceDataize.write ((((xself).xfail)) (("shouldn't allow %r.__class__ = %r".mod (((unsupported)) ((xx)) ((xC))))))
                                (((unsupported)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))))
                                  bogusForceDataize.write (((xdelattr)) ((xx)) ("__class__"))
                                  bogusForceDataize.write ((((xself).xfail)) (("shouldn't allow del %r.__class__".mod (xx))))
                        bogusForceDataize.write (((xcant)) ((((xC)) 0)) ((xlist)))
                        bogusForceDataize.write (((xcant)) ((((xlist)) 0)) ((xC)))
                        bogusForceDataize.write (((xcant)) ((((xC)) 0)) (1))
                        bogusForceDataize.write (((xcant)) ((((xC)) 0)) ((xobject)))
                        bogusForceDataize.write (((xcant)) ((((xobject)) 0)) ((xlist)))
                        bogusForceDataize.write (((xcant)) ((((xlist)) 0)) ((xobject)))
                        (((unsupported)) ((xint)))
                          x__slots__.write (((unsupported)) 0)
                        bogusForceDataize.write (((xcant)) (TRUE) ((xint)))
                        bogusForceDataize.write (((xcant)) (2) ((xbool)))
                        xo.write (((xobject)) 0)
                        bogusForceDataize.write (((xcant)) ((xo)) ((((xtype)) (1))))
                        bogusForceDataize.write (((xcant)) ((xo)) ((((xtype)) ("None: is there a None literal in the EO language?"))))
                        (((unsupported)) ((((unsupported)) ((xo)))))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("b") ("a"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("c") ("b"))
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) ("a") ("b") ("d"))
                        (((unsupported)) ((xH)))
                          x__slots__.write (((unsupported)) ("e"))
                        (((unsupported)) ((xI)))
                          x__slots__.write (((unsupported)) ("e"))
                        (((unsupported)) ((xJ)))
                          x__slots__.write (((unsupported)) ("__weakref__"))
                        (((unsupported)) ((xJ)))
                          x__slots__.write (((unsupported)) ("__dict__"))
                        (((unsupported)) ((xJ)))
                        (((unsupported)) ((xJ)))
                          x__slots__.write (((unsupported)) ("__dict__") ("__weakref__"))
                        (((unsupported)) ((((unsupported)) ((xcls)) ((xcls2)))) ((((unsupported)) ((((unsupported)) ((xG)) ((xH)))) ((((unsupported)) ((xG)) ((xI)))) ((((unsupported)) ((xI)) ((xH)))) ((((unsupported)) ((xQ)) ((xR)))) ((((unsupported)) ((xR)) ((xQ)))))))
                          seq
                            xx.write (((xcls)) 0)
                            (((unsupported)) (((xx).xa)) (1))
                            (((unsupported)) (((xx).x__class__)) ((xcls2)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((xx).x__class__)) ((xcls2)) (("assigning %r as __class__ for %r silently failed".mod (((unsupported)) ((xcls2)) ((xx))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) (1))
                            (((unsupported)) (((xx).x__class__)) ((xcls)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((xx).x__class__)) ((xcls)) (("assigning %r as __class__ for %r silently failed".mod (((unsupported)) ((xcls)) ((xx))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) (1))
                        (((unsupported)) ((xcls)) ((((unsupported)) ((xG)) ((xJ)) ((xK)) ((xL)) ((xM)) ((xN)) ((xP)) ((xR)) ((xlist)) ((xInt)))))
                          (((unsupported)) ((xcls2)) ((((unsupported)) ((xG)) ((xJ)) ((xK)) ((xL)) ((xM)) ((xN)) ((xP)) ((xR)) ((xlist)) ((xInt)))))
                            seq
                              (((unsupported)) ((xcls)) ((xcls2))).if
                                (((unsupported)) 0)
                              bogusForceDataize.write (((xcant)) ((((xcls)) 0)) ((xcls2)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                          x__del__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).x__class__)) ((xO)))
                        xl.write (((unsupported)) ((((xA)) 0)) ((xx)) ((((xrange)) (100))))
                        (((unsupported)) ((((unsupported)) ((xl)))))
                xtest_set_dict.write
                  [xself]
                    memory > xcan_delete_dict
                    memory > xcant
                    memory > xclass_dict
                    memory > xverify_dict_readonly
                    memory > xmod
                    memory > xe
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        xa.write (((xC)) 0)
                        (((unsupported)) (((xa).x__dict__)) ((((unsupported)) ("b") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xb)) (1))
                        xcant.write
                          [xx xdict]
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xAttributeError)) ((xTypeError)))))
                                (((unsupported)) (((xx).x__dict__)) ((xdict)))
                                bogusForceDataize.write ((((xself).xfail)) (("shouldn't allow %r.__dict__ = %r".mod (((unsupported)) ((xx)) ((xdict))))))
                        bogusForceDataize.write (((xcant)) ((xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write (((xcant)) ((xa)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcant)) ((xa)) (1))
                        (((unsupported)) ((((unsupported)) (((xa).x__dict__)))))
                        (((unsupported)) ((xobject)))
                        xverify_dict_readonly.write
                          [xx]
                            memory > xdict_descr
                            seq > @
                              seq
                                (((unsupported)) 0)
                                bogusForceDataize.write (((xcant)) ((xx)) ((((unsupported)) 0)))
                                (((unsupported)) ((((unsupported)) ((xAttributeError)) ((xTypeError)))))
                                  (((unsupported)) ((((unsupported)) (((xx).x__dict__)))))
                                  bogusForceDataize.write ((((xself).xfail)) (("shouldn't allow del %r.__dict__".mod (xx))))
                                xdict_descr.write (((unsupported)) (((xBase).x__dict__)) ("__dict__"))
                                (((unsupported)) ((((unsupported)) ((xAttributeError)) ((xTypeError)))))
                                  bogusForceDataize.write ((((xdict_descr).x__set__)) ((xx)) ((((unsupported)) 0)))
                                  bogusForceDataize.write ((((xself).xfail)) (("dict_descr allowed access to %r's dict".mod (xx))))
                        (((unsupported)) ((xtype)) ((xBase)))
                        (((unsupported)) ((xBase)) ((xtype)))
                        (((unsupported)) ((xobject)) ((xMeta1)))
                        (((unsupported)) ((xobject)) ((xMeta2)))
                        (((unsupported)) ((xcls)) ((((unsupported)) ((xC)) ((xD)) ((xE)))))
                          seq
                            bogusForceDataize.write (((xverify_dict_readonly)) ((xcls)))
                            xclass_dict.write ((xcls).x__dict__)
                            (((unsupported)) ((xTypeError)))
                              (((unsupported)) ((((unsupported)) ((xclass_dict)) ("spam"))) ("eggs"))
                              bogusForceDataize.write ((((xself).xfail)) (("%r's __dict__ can be modified".mod (xcls))))
                        (((unsupported)) (((xtypes).xModuleType)) ((xBase)))
                        (((unsupported)) ((xBase)) (((xtypes).xModuleType)))
                        (((unsupported)) ((xModuleType)) ((((unsupported)) ((xModule1)) ((xModule2)))))
                          seq
                            xmod.write (((xModuleType)) ("spam"))
                            bogusForceDataize.write (((xverify_dict_readonly)) ((xmod)))
                            (((unsupported)) ((((unsupported)) (((xmod).x__dict__)) ("spam"))) ("eggs"))
                        xcan_delete_dict.write
                          [xe]
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))))
                                (((unsupported)) ((((unsupported)) (((xe).x__dict__)))))
                                (((unsupported)) (FALSE))
                                (((unsupported)) (TRUE))
                        (((unsupported)) ((xException)) ((xBase)))
                        (((unsupported)) ((xBase)) ((xException)))
                        (((unsupported)) ((xExceptionType)) ((((unsupported)) ((xException)) ((xException1)) ((xException2)))))
                          seq
                            xe.write (((xExceptionType)) 0)
                            (((unsupported)) (((xe).x__dict__)) ((((unsupported)) ("a") (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xe).xa)) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcan_delete_dict)) ((xe)))) ((((xcan_delete_dict)) ((((xValueError)) 0)))))
                xtest_binary_operator_override.write
                  [xself]
                    memory > x__pow__
                    memory > x__add__
                    memory > x__rpow__
                    memory > x__radd__
                    memory > x__eq__
                    memory > x__repr__
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          seq
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("I(%r)".mod (((xint)) ((xself))))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xI)) (((((xint)) ((xself))).add (((xint)) ((xother))))))))
                            x__radd__.write (x__add__)
                            x__pow__.write
                              [xself xother xmod]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xmod)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)) ((((xI)) ((((xpow)) ((((xint)) ((xself)))) ((((xint)) ((xother)))))))))
                                      (((unsupported)) ((((xI)) ((((xpow)) ((((xint)) ((xself)))) ((((xint)) ((xother)))) ((((xint)) ((xmod)))))))))
                            x__rpow__.write
                              [xself xother xmod]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xmod)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)) ((((xI)) ((((xpow)) ((((xint)) ((xother)))) ((((xint)) ((xself)))) ((xmod)))))))
                                      (((unsupported)) ((((xI)) ((((xpow)) ((((xint)) ((xother)))) ((((xint)) ((xself)))) ((((xint)) ((xmod)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) (((((xI)) (1)).add (((xI)) (2)))))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) (((((xI)) (1)).add 2)))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((1.add (((xI)) (2)))))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((xI)) (2))) ((((xI)) (3))))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) (2) ((((xI)) (3))))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((xI)) (2))) (3))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xpow)) ((((xI)) (2))) ((((xI)) (3))) ((((xI)) (5))))))) ("I(3)"))
                        (((unsupported)) ((xstr)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((((((xself).xlower)) 0).eq ((((xother).xlower)) 0))))
                xtest_subclass_propagation.write
                  [xself]
                    memory > xd
                    memory > x__getattribute__
                    memory > x__getattr__
                    memory > xorig_hash
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xB)) ((xC)))
                        xd.write (((xD)) 0)
                        xorig_hash.write (((xhash)) ((xd)))
                        (((unsupported)) (((xA).x__hash__)) ((((unsupported)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (42))
                        (((unsupported)) (((xC).x__hash__)) ((((unsupported)) (314))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (314))
                        (((unsupported)) (((xB).x__hash__)) ((((unsupported)) (144))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (144))
                        (((unsupported)) (((xD).x__hash__)) ((((unsupported)) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (100))
                        (((unsupported)) (((xD).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)) ((((unsupported)) (((xD).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (144))
                        (((unsupported)) (((xB).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)) ((((unsupported)) (((xB).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (314))
                        (((unsupported)) (((xC).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)) ((((unsupported)) (((xC).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) (42))
                        (((unsupported)) (((xA).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)) ((((unsupported)) (((xA).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xd)))) ((xorig_hash)))
                        (((unsupported)) (((xd).xfoo)) (42))
                        (((unsupported)) (((xd).xbar)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xbar)) (42))
                        x__getattribute__.write
                          [xself xname]
                            seq > @
                              seq
                                ((xname).eq "foo").if
                                  (((unsupported)) (24))
                                (((unsupported)) (((((xobject).x__getattribute__)) ((xself)) ((xname)))))
                        (((unsupported)) (((xA).x__getattribute__)) ((x__getattribute__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xbar)) (42))
                        x__getattr__.write
                          [xself xname]
                            seq > @
                              seq
                                (((unsupported)) ((xname)) ((((unsupported)) ("spam") ("foo") ("bar")))).if
                                  (((unsupported)) ("hello"))
                                (((unsupported)) ((((xAttributeError)) ((xname)))))
                        (((unsupported)) (((xB).x__getattr__)) ((x__getattr__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xspam)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xbar)) (42))
                        (((unsupported)) ((((unsupported)) (((xA).x__getattribute__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (42))
                        (((unsupported)) ((((unsupported)) (((xd).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xbar)) (42))
                        (((unsupported)) ((((unsupported)) (((xB).x__getattr__)))))
                        (((unsupported)) ((xAttributeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("d.foo should be undefined now"))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((((unsupported)) ((xB)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        (((unsupported)) (((xA).x__setitem__)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                xtest_buffer_inheritance.write
                  [xself]
                    memory > xbase
                    memory > xm
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xbytes)))
                        xbase.write "abc"
                        xm.write (((xMyBytes)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbinascii).xb2a_hex)) ((xm)))) (((((xbinascii).xb2a_hex)) ((xbase)))))
                        (((unsupported)) ((xint)))
                        xm.write (((xMyInt)) (42))
                        (((unsupported)) ((xTypeError)))
                          seq
                            bogusForceDataize.write ((((xbinascii).xb2a_hex)) ((xm)))
                            bogusForceDataize.write ((((xself).xfail)) ("subclass of int should not have a buffer interface"))
                xtest_str_of_str_subclass.write
                  [xself]
                    memory > xo
                    memory > x__str__
                    memory > xcapture
                    memory > x__repr__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) ((xstr)))
                          seq
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((((((xbinascii).xb2a_hex)) (((((xself).xencode)) ("ascii")))).xdecode)) ("ascii"))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).add " repr")))
                        xo.write (((xoctetstring)) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xo)))) ((xoctetstring)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xstr)) ((xo)))))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xrepr)) ((xo)))))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xord)) ((xo)))) (65))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xo)))) ("41"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xo)))) ("A repr"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xo).x__str__)) 0)) ("41"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xo).x__repr__)) 0)) ("A repr"))
                        xcapture.write ((((xio).xStringIO)) 0)
                        (((unsupported)) ((xprint)) ((xo)) ((xcapture)))
                        (((unsupported)) ((xprint)) ((((xstr)) ((xo)))) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcapture).xgetvalue)) 0)) ("41n41n"))
                        bogusForceDataize.write ((((xcapture).xclose)) 0)
                xtest_keyword_arguments.write
                  [xself]
                    memory > xf
                    memory > xba
                    seq > @
                      seq
                        xf.write
                          [xa]
                            seq > @
                              (((unsupported)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xf).x__call__)) (42))) (42))
                        xba.write (((xbytearray)) 0)
                        (((unsupported)) (((xbytearray).x__init__)) ((xba)) ("abcxbdu20ac") ("latin1") ("replace"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xba)) ("abcxbd?"))
                xtest_recursive_call.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) (((xA).x__call__)) ((((xA)) 0)))
                        (((unsupported)) ((xRecursionError)))
                          bogusForceDataize.write (((((xA)) 0)) 0)
                          bogusForceDataize.write ((((xself).xfail)) ("Recursion limit should have been reached for __call__()"))
                xtest_delete_hook.write
                  [xself]
                    memory > xc
                    memory > xlog
                    memory > xd
                    memory > x__del__
                    seq > @
                      seq
                        xlog.write (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          x__del__.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xlog).xappend)) (1))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xlog)) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xlog)) ((((unsupported)) (1))))
                        (((unsupported)) ((xobject)))
                        xd.write (((xD)) 0)
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((((unsupported)) ((((unsupported)) ((xd)) (0))))))
                          bogusForceDataize.write ((((xself).xfail)) ("invalid del() didn't raise TypeError"))
                xtest_hash_inheritance.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((xdict)))
                        xd.write (((xmydict)) 0)
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xhash)) ((xd)))
                          bogusForceDataize.write ((((xself).xfail)) ("hash() of dict subclass should fail"))
                        (((unsupported)) ((xlist)))
                        xd.write (((xmylist)) 0)
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xhash)) ((xd)))
                          bogusForceDataize.write ((((xself).xfail)) ("hash() of list subclass should fail"))
                xtest_str_operations.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'' + 5 doesn't raise TypeError"))
                        (((unsupported)) ((xValueError)))
                          bogusForceDataize.write ((("".xsplit)) (""))
                          bogusForceDataize.write ((((xself).xfail)) ("''.split('') doesn't raise ValueError"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((("".xjoin)) ((((unsupported)) (0))))
                          bogusForceDataize.write ((((xself).xfail)) ("''.join([0]) doesn't raise TypeError"))
                        (((unsupported)) ((xValueError)))
                          bogusForceDataize.write ((("".xrindex)) ("5"))
                          bogusForceDataize.write ((((xself).xfail)) ("''.rindex('5') doesn't raise ValueError"))
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%(n)s' % None doesn't raise TypeError"))
                        (((unsupported)) ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%(n' % {} '' doesn't raise ValueError"))
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%*s' % ('abc') doesn't raise TypeError"))
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%*.*s' % ('abc', 5) doesn't raise TypeError"))
                        (((unsupported)) ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%s' % (1, 2) doesn't raise TypeError"))
                        (((unsupported)) ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("'%' % None doesn't raise ValueError"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("534253".xisdigit)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("534253x".xisdigit)) 0)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("%c".mod 5)) ("x05"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("%c".mod "5")) ("5"))
                xtest_deepcopy_recursive.write
                  [xself]
                    memory > xz
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xa.write (((xNode)) 0)
                        xb.write (((xNode)) 0)
                        (((unsupported)) (((xa).xb)) ((xb)))
                        (((unsupported)) (((xb).xa)) ((xa)))
                        xz.write (((xdeepcopy)) ((xa)))
                xtest_uninitialized_modules.write
                  [xself]
                    memory > xm
                    memory > xM
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xm.write ((((xM).x__new__)) ((xM)))
                        bogusForceDataize.write (((xstr)) ((xm)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xm)) ("__name__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xm)) ("__file__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xm)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xm).x__dict__)))
                        (((unsupported)) (((xm).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xm).x__dict__)) ((((unsupported)) ("foo") (1))))
                xtest_funny_new.write
                  [xself]
                    memory > xd
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__new__.write
                            [xcls xarg]
                              seq > @
                                (((xisinstance)) ((xarg)) ((xstr))).if
                                  (((unsupported)) ((((unsupported)) (1) (2) (3))))
                                  (((xisinstance)) ((xarg)) ((xint))).if
                                    (((unsupported)) (((((xobject).x__new__)) ((xD)))))
                                    (((unsupported)) (((((xobject).x__new__)) ((xcls)))))
                        (((unsupported)) ((xC)))
                          x__init__.write
                            [xself xarg]
                              seq > @
                                (((unsupported)) (((xself).xfoo)) ((xarg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC)) ("1"))) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xD)) ("1"))) ((((unsupported)) (1) (2) (3))))
                        xd.write (((xD)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) ("None: is there a None literal in the EO language?"))
                        xd.write (((xC)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (1))
                        xd.write (((xD)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xfoo)) (1))
                        (((unsupported)) ((xobject)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC)) (1) (2))) ((((unsupported)) ((xC)) (1) (2))))
                        (((unsupported)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xD)) (1) (2))) ((((unsupported)) ((xD)) (1) (2))))
                        (((unsupported)) ((xobject)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xC)) (1) (2))) ((((unsupported)) ((xC)) ((xC)) (1) (2))))
                        (((unsupported)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xD)) (1) (2))) ((((unsupported)) ((xD)) ((xD)) (1) (2))))
                xtest_imul_bug.write
                  [xself]
                    memory > xx
                    memory > xy
                    memory > x__imul__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__imul__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((((unsupported)) ((xself)) ((xother)))))
                        xx.write (((xC)) 0)
                        xy.write (xx)
                        (((unsupported)) ((xy)) (1.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) (1.0))))
                        xy.write (xx)
                        (((unsupported)) ((xy)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) (2))))
                        xy.write (xx)
                        (((unsupported)) ((xy)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) (3))))
                        xy.write (xx)
                        (((unsupported)) ((xy)) ((((unsupported)) (1) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) ((((unsupported)) (1) (100))))))
                        xy.write (xx)
                        (((unsupported)) ((xy)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) ("None: is there a None literal in the EO language?"))))
                        xy.write (xx)
                        (((unsupported)) ((xy)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((unsupported)) ((xx)) ("foo"))))
                xtest_copy_setstate.write
                  [xself]
                    memory > x__setstate__
                    memory > xb
                    memory > x__getstate__
                    memory > x__init__
                    memory > xgetfoo
                    memory > xsetfoo
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xfoo)) ((xfoo)))
                                    (((unsupported)) (((xself).x__foo)) ((xfoo)))
                            xsetfoo.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xfoo)) ((xfoo)))
                            xgetfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x__foo)))
                            x__getstate__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).xfoo)))))
                            x__setstate__.write
                              [xself_ xlst]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xlst)))) (1))
                                    (((unsupported)) (((xself_).x__foo)) (((xself_).xfoo)) ((((unsupported)) ((xlst)) (0))))
                        xa.write (((xC)) (42))
                        bogusForceDataize.write ((((xa).xsetfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xgetfoo)) 0)) (42))
                        xb.write ((((xcopy).xcopy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xgetfoo)) 0)) (24))
                        xb.write ((((xcopy).xdeepcopy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xgetfoo)) 0)) (24))
                xtest_slices.write
                  [xself]
                    memory > x__getitem__
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("hello") ((((unsupported)) (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ("hello") ((((xslice)) (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xstr).x__getitem__)) ("hello") ((((xslice)) (4))))) ("hell"))
                        (((unsupported)) ((xstr)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)) (((((xstr).x__getitem__)) ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xS)) ("hello"))) ((((unsupported)) (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xS)) ("hello"))) ((((xslice)) (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xS)) ("hello")).x__getitem__)) ((((xslice)) (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (1) (2) (3))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xtuple).x__getitem__)) ((((unsupported)) (1) (2) (3))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        (((unsupported)) ((xtuple)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)) (((((xtuple).x__getitem__)) ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xT)) ((((unsupported)) (1) (2) (3))))) ((((unsupported)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xT)) ((((unsupported)) (1) (2) (3))))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xT)) ((((unsupported)) (1) (2) (3)))).x__getitem__)) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (1) (2) (3))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xlist).x__getitem__)) ((((unsupported)) (1) (2) (3))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        (((unsupported)) ((xlist)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)) (((((xlist).x__getitem__)) ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xL)) ((((unsupported)) (1) (2) (3))))) ((((unsupported)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xL)) ((((unsupported)) (1) (2) (3))))) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xL)) ((((unsupported)) (1) (2) (3)))).x__getitem__)) ((((xslice)) (2))))) ((((unsupported)) (1) (2))))
                        xa.write (((xL)) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) ((((unsupported)) ((xa)) ((((xslice)) (1) (3))))) ((((unsupported)) (3) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (1) (3) (2))))
                        (((unsupported)) ((((unsupported)) ((xa)) ((((xslice)) (0) (2) (1))))) ((((unsupported)) (3) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (3) (1) (2))))
                        bogusForceDataize.write ((((xa).x__setitem__)) ((((xslice)) (1) (3))) ((((unsupported)) (2) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (3) (2) (1))))
                        bogusForceDataize.write ((((xa).x__setitem__)) ((((xslice)) (0) (2) (1))) ((((unsupported)) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (2) (3) (1))))
                xtest_subtype_resurrection.write
                  [xself]
                    memory > x__del__
                    memory > xc
                    memory > xcontainer
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xcontainer.write (((unsupported)) 0)
                            x__del__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write (((((xC).xcontainer).xappend)) ((xself)))
                        xc.write (((xC)) 0)
                        (((unsupported)) (((xc).xattr)) (42))
                        (((unsupported)) ((((unsupported)) ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xC).xcontainer)))) (1))
                        (((unsupported)) ((((unsupported)) (((xC).x__del__)))))
                xtest_slots_trash.write
                  [xself]
                    memory > xo
                    memory > x__slots__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__slots__.write (((unsupported)) ("x"))
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                        xo.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((xi)) ((((xrange)) (50000))))
                          xo.write (((xtrash)) ((xo)))
                        (((unsupported)) ((((unsupported)) ((xo)))))
                xtest_slots_multiple_inheritance.write
                  [xself]
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__slots__.write (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)) ((xB)))
                          x__slots__.write (((unsupported)) 0)
                        ((((xsupport).xcheck_impl_detail)) 0).if
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__basicsize__)) (((xB).x__basicsize__)))
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xC)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)) ((xC)) ("__weakref__"))
                        (((unsupported)) (((((xC)) 0).xx)) (2))
                xtest_rmul.write
                  [xself]
                    memory > x__rmul__
                    memory > x__mul__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__mul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("mul"))
                            x__rmul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("rmul"))
                        xa.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).mul 2)) ("mul"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).mul 2.2)) ("mul"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2.mul (xa))) ("rmul"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2.2.mul (xa))) ("rmul"))
                xtest_ipow.write
                  [xself]
                    memory > x__ipow__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__ipow__.write
                            [xself xother]
                              seq > @
                        xa.write (((xC)) 0)
                        (((unsupported)) ((xa)) (2))
                xtest_mutable_bases.write
                  [xself]
                    memory > x__getattribute__
                    memory > xmeth
                    memory > xd
                    memory > xe
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__getattribute__.write
                              [xself xattr]
                                seq > @
                                  ((xattr).eq "a").if
                                    (((unsupported)) (2))
                                    (((unsupported)) (((((((xsuper)) ((xC2)) ((xself))).x__getattribute__)) ((xattr)))))
                            xmeth.write
                              [xself]
                                seq > @
                                  (((unsupported)) (1))
                        (((unsupported)) ((xC)))
                        (((unsupported)) ((xD)))
                        xd.write (((xD)) 0)
                        xe.write (((xE)) 0)
                        (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xC)))))
                        (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xC2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xmeth)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xe).xmeth)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xe).xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC2).x__subclasses__)) 0)) ((((unsupported)) ((xD)))))
                        (((unsupported)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xD).x__bases__)))))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to delete .__bases__"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) 0)))
                          ((((xstr)) ((xmsg))).eq "a new-style class can't have only classic bases").if
                            bogusForceDataize.write ((((xself).xfail)) ("wrong error message for .__bases__ = ()"))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to set .__bases__ to ()"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xD)))))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to create inheritance cycles"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xC)) ((xC)))))
                          bogusForceDataize.write ((((xself).xfail)) ("didn't detect repeated base classes"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xE)))))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to create inheritance cycles"))
                xtest_builtin_bases.write
                  [xself]
                    memory > xbuiltin_types
                    seq > @
                      seq
                        xbuiltin_types.write (((unsupported)) ((xtp)) ((xtp)) ((((((xbuiltins).x__dict__).xvalues)) 0)) ((((xisinstance)) ((xtp)) ((xtype)))))
                        (((unsupported)) ((xtp)) ((xbuiltin_types)))
                          seq
                            bogusForceDataize.write ((((xobject).x__getattribute__)) ((xtp)) ("__bases__"))
                            (((unsupported)) ((xtp)) ((xobject))).if
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xtp).x__bases__)))) (1) ((xtp)))
                        (((unsupported)) ((xlist)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xC)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xL).x__bases__)) ((((unsupported)) ((xdict)))))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't turn list subclass into dict subclass"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xlist).x__bases__)) ((((unsupported)) ((xdict)))))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to assign to list.__bases__"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xC)) ((xlist)))))
                          (((unsupported)) (0) ("best_base calculation found wanting"))
                xtest_unsubclassable_types.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xobject)) ((((xtype)) ("None: is there a None literal in the EO language?"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xO)) ((((xtype)) ("None: is there a None literal in the EO language?"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))) ((xO)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((xobject)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))) ((xobject)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((xO)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((((xtype)) ("None: is there a None literal in the EO language?"))) ((xO)))))
                xtest_mutable_bases_with_failing_mro.write
                  [xself]
                    memory > xD_mro_before
                    memory > x__new__
                    memory > xmro
                    memory > xE_mro_before
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          seq
                            x__new__.write
                              [xself xname xbases xns]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xflag)) (0))
                                    (((unsupported)) (((((((xsuper)) ((xWorkOnce)) ((xself))).x__new__)) ((xWorkOnce)) ((xname)) ((xbases)) ((xns)))))
                            xmro.write
                              [xself]
                                seq > @
                                  (((xself).xflag).greater 0).if
                                    (((unsupported)) ((((xRuntimeError)) ("bozo"))))
                                    seq
                                      (((unsupported)) (((xself).xflag)) (1))
                                      (((unsupported)) (((((xtype).xmro)) ((xself)))))
                        (((unsupported)) ((xtype)))
                          xmro.write
                            [xself]
                              seq > @
                                (((unsupported)) (((((xtype).xmro)) ((xself)))))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xC)))
                        (((unsupported)) ((xD)))
                        (((unsupported)) ((xD)) ((xWorkOnce)))
                        (((unsupported)) ((xD)) ((xWorkAlways)))
                        xE_mro_before.write ((xE).x__mro__)
                        xD_mro_before.write ((xD).x__mro__)
                        (((unsupported)) ((xRuntimeError)))
                          (((unsupported)) (((xD).x__bases__)) ((((unsupported)) ((xC2)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xE).x__mro__)) ((xE_mro_before)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__mro__)) ((xD_mro_before)))
                          bogusForceDataize.write ((((xself).xfail)) ("exception not propagated"))
                xtest_mutable_bases_catch_mro_conflict.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)) ((xB)))
                        (((unsupported)) ((xA)) ((xB)))
                        (((unsupported)) ((xC)) ((xD)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xC).x__bases__)) ((((unsupported)) ((xB)) ((xA)))))
                          bogusForceDataize.write ((((xself).xfail)) ("didn't catch MRO conflict"))
                xtest_mutable_names.write
                  [xself]
                    memory > xmod
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        xmod.write ((xC).x__module__)
                        (((unsupported)) (((xC).x__name__)) ("D"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xC).x__module__)) (((xC).x__name__)))) ((((unsupported)) ((xmod)) ("D"))))
                        (((unsupported)) (((xC).x__name__)) ("D.E"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xC).x__module__)) (((xC).x__name__)))) ((((unsupported)) ((xmod)) ("D.E"))))
                xtest_evil_type_name.write
                  [xself]
                    memory > x__del__
                    seq > @
                      seq
                        (((unsupported)) ((xstr)))
                          x__del__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xC).x__name__)) ("other"))
                        (((unsupported)) 0)
                        (((unsupported)) (((xC).x__name__)) ((((xNasty)) ("abc"))))
                        (((unsupported)) (((xC).x__name__)) ("normal"))
                xtest_subclass_right_op.write
                  [xself]
                    memory > x__rfloordiv__
                    memory > x__floordiv__
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("B.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("B.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xB)) (1))) (1))) ("B.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) ((((xB)) (1))))) ("B.__rfloordiv__"))
                        (((unsupported)) ((xobject)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("C.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("C.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xC)) 0)) (1))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) ((((xC)) 0)))) ("C.__rfloordiv__"))
                        (((unsupported)) ((xC)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("D.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("D.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xD)) 0)) ((((xC)) 0)))) ("D.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xC)) 0)) ((((xD)) 0)))) ("D.__rfloordiv__"))
                        (((unsupported)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xE).x__rfloordiv__)) (((xC).x__rfloordiv__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xE)) 0)) (1))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) ((((xE)) 0)))) ("C.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xE)) 0)) ((((xC)) 0)))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xC)) 0)) ((((xE)) 0)))) ("C.__floordiv__"))
                xtest_meth_class_get.write
                  [xself]
                    memory > xres
                    memory > xarg
                    memory > xdescr
                    seq > @
                      (((unsupported)) 0)
                        xarg.write (((unsupported)) (1) (2) (3))
                        xres.write (((unsupported)) (1) ("None: is there a None literal in the EO language?") (2) ("None: is there a None literal in the EO language?") (3) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xdict).xfromkeys)) ((xarg)))) ((xres)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((unsupported)) 0).xfromkeys)) ((xarg)))) ((xres)))
                        xdescr.write (((unsupported)) (((xdict).x__dict__)) ("fromkeys"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xdescr).x__get__)) ("None: is there a None literal in the EO language?") ((xdict)))) ((xarg)))) ((xres)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xdescr).x__get__)) ((((unsupported)) 0)))) ((xarg)))) ((xres)))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't have allowed descr.__get__(None, None)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)) (42))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't have allowed descr.__get__(42)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)) ("None: is there a None literal in the EO language?") (42))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't have allowed descr.__get__(None, 42)"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)) ("None: is there a None literal in the EO language?") ((xint)))
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't have allowed descr.__get__(None, int)"))
                xtest_isinst_isclass.write
                  [xself]
                    memory > x__getattribute__
                    memory > x__init__
                    memory > xpa
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)) (((xself).x__obj)) ((xobj)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  ((((xname).xstartswith)) ("_Proxy__")).if
                                    (((unsupported)) (((((xobject).x__getattribute__)) ((xself)) ((xname)))))
                                    (((unsupported)) ((((xgetattr)) (((xself).x__obj)) ((xname)))))
                        (((unsupported)) 0)
                        xa.write (((xC)) 0)
                        xpa.write (((xProxy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xpa)) ((xC)))
                        (((unsupported)) ((xC)))
                        xa.write (((xD)) 0)
                        xpa.write (((xProxy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xpa)) ((xC)))
                        (((unsupported)) ((xobject)))
                        xa.write (((xC)) 0)
                        xpa.write (((xProxy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xpa)) ((xC)))
                        (((unsupported)) ((xC)))
                        xa.write (((xD)) 0)
                        xpa.write (((xProxy)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xpa)) ((xC)))
                xtest_proxy_super.write
                  [xself]
                    memory > x__getattribute__
                    memory > xp
                    memory > xf
                    memory > xobj
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)) (((xself).x__obj)) ((xobj)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  ((((xname).xstartswith)) ("_Proxy__")).if
                                    (((unsupported)) (((((xobject).x__getattribute__)) ((xself)) ((xname)))))
                                    (((unsupported)) ((((xgetattr)) (((xself).x__obj)) ((xname)))))
                        (((unsupported)) ((xobject)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)) ("B.f"))
                        (((unsupported)) ((xB)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((((((xsuper)) ((xC)) ((xself))).xf)) 0).add "->C.f")))
                        xobj.write (((xC)) 0)
                        xp.write (((xProxy)) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((unsupported)) (((xC).x__dict__)) ("f"))) ((xp)))) ("B.f->C.f"))
                xtest_carloverre.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xobject).x__setattr__)) ((xstr)) ("foo") (42))
                          bogusForceDataize.write ((((xself).xfail)) ("Carlo Verre __setattr__ succeeded!"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((xobject).x__delattr__)) ((xstr)) ("lower"))
                          bogusForceDataize.write ((((xself).xfail)) ("Carlo Verre __delattr__ succeeded!"))
                xtest_carloverre_multi_inherit_valid.write
                  [xself]
                    memory > x__setattr__
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__setattr__.write
                            [xcls xkey xvalue]
                              seq > @
                                bogusForceDataize.write ((((xtype).x__setattr__)) ((xcls)) ((xkey)) ((xvalue)))
                        (((unsupported)) 0)
                        (((unsupported)) ((xB)) ((xA)))
                        xobj.write (((xC)) ("D") ((((unsupported)) ((xobject)))) ((((unsupported)) 0)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xobj).xtest)) (TRUE))
                          bogusForceDataize.write ((((xself).xfail)) ("setattr through direct base types should be legal"))
                xtest_carloverre_multi_inherit_invalid.write
                  [xself]
                    memory > x__setattr__
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__setattr__.write
                            [xcls xkey xvalue]
                              seq > @
                                bogusForceDataize.write ((((xobject).x__setattr__)) ((xcls)) ((xkey)) ((xvalue)))
                        (((unsupported)) 0)
                        (((unsupported)) ((xB)) ((xA)))
                        xobj.write (((xC)) ("D") ((((unsupported)) ((xobject)))) ((((unsupported)) 0)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) (((xobj).xtest)) (TRUE))
                          bogusForceDataize.write ((((xself).xfail)) ("setattr through indirect base types should be rejected"))
                xtest_weakref_segfault.write
                  [xself]
                    memory > x__del__
                    memory > xo
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xreferrent]
                                seq > @
                                  (((unsupported)) (((xself).xref)) (((((xweakref).xref)) ((xreferrent)))))
                            x__del__.write
                              [xself]
                                memory > xx
                                seq > @
                                  xx.write ((((xself).xref)) 0)
                        (((unsupported)) ((xobject)))
                        xo.write (((xOops)) 0)
                        (((unsupported)) (((xo).xwhatever)) ((((xProvoker)) ((xo)))))
                        (((unsupported)) ((((unsupported)) ((xo)))))
                xtest_wrapper_segfault.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xi)) ((((xrange)) (1000000))))
                          xf.write ((xf).x__call__)
                        xf.write "None: is there a None literal in the EO language?"
                xtest_file_fault.write
                  [xself]
                    memory > x__getattr__
                    memory > xtest_stdout
                    seq > @
                      seq
                        xtest_stdout.write ((xsys).xstdout)
                        (((unsupported)) 0)
                          x__getattr__.write
                            [xself xattr]
                              seq > @
                                seq
                                  (((unsupported)) (((xsys).xstdout)) (((xsys).x__stdout__)))
                                  (((unsupported)) ((((xRuntimeError)) (("Premature access to sys.stdout.%s".mod (xattr))))))
                        (((unsupported)) (((xsys).xstdout)) ((((xStdoutGuard)) 0)))
                        (((unsupported)) ((xRuntimeError)))
                          bogusForceDataize.write (((xprint)) ("Oops!"))
                          (((unsupported)) (((xsys).xstdout)) ((xtest_stdout)))
                xtest_vicious_descriptor_nonsense.write
                  [xself]
                    memory > x__get__
                    memory > x__eq__
                    memory > xc
                    memory > x__hash__
                    memory > xattr
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xhash)) ("attr"))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((unsupported)) ((xAttributeError)))
                                      (((unsupported)) ((((unsupported)) (((xC).xattr)))))
                                    (((unsupported)) (0))
                        (((unsupported)) ((xobject)))
                          x__get__.write
                            [xself xob xtype]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (1))
                        (((unsupported)) ((xobject)))
                          xattr.write (((xDescr)) 0)
                        xc.write (((xC)) 0)
                        (((unsupported)) ((((unsupported)) (((xc).x__dict__)) ((((xEvil)) 0)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xattr)) (1))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)) ((xc)) ("attr"))
                xtest_init.write
                  [xself]
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (10))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xFoo)) 0)
                          bogusForceDataize.write ((((xself).xfail)) ("did not test __init__() for None return"))
                xassertNotOrderable.write
                  [xself xa xb]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                xtest_method_wrapper.write
                  [xself]
                    memory > xl
                    seq > @
                      seq
                        xl.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).x__add__).eq ((xl).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).x__add__).neq ((xl).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).x__add__).eq ((((unsupported)) 0).x__add__))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).x__add__).neq ((((unsupported)) 0).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).x__add__).eq ((xl).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).x__add__).neq ((xl).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)) (((xl).x__add__)) (((xl).x__add__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xl).x__add__).x__name__)) ("__add__"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xl).x__add__).x__self__)) ((xl)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xl).x__add__).x__objclass__)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xl).x__add__).x__doc__)) ((((xlist).x__add__).x__doc__)))
                        bogusForceDataize.write (((xhash)) (((xl).x__add__)))
                xtest_builtin_function_or_method.write
                  [xself]
                    memory > xl
                    seq > @
                      seq
                        xl.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).xappend).eq ((xl).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).xappend).neq ((xl).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).xappend).eq ((((unsupported)) 0).xappend))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).xappend).neq ((((unsupported)) 0).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xl).xappend).eq ((xl).xpop))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xl).xappend).neq ((xl).xpop))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)) (((xl).xappend)) (((xl).xappend)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xl).xappend).x__name__)) ("append"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xl).xappend).x__self__)) ((xl)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xl).xappend).x__doc__)) ((((xlist).xappend).x__doc__)))
                        bogusForceDataize.write (((xhash)) (((xl).xappend)))
                xtest_special_unbound_method_types.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xlist).x__add__).eq ((xlist).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlist).x__add__).neq ((xlist).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlist).x__add__).eq ((xlist).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xlist).x__add__).neq ((xlist).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)) (((xlist).x__add__)) (((xlist).x__add__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist).x__add__).x__name__)) ("__add__"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xlist).x__add__).x__objclass__)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xlist).xappend).eq ((xlist).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlist).xappend).neq ((xlist).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlist).xappend).eq ((xlist).xpop))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xlist).xappend).neq ((xlist).xpop))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)) (((xlist).xappend)) (((xlist).xappend)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist).xappend).x__name__)) ("append"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xlist).xappend).x__objclass__)) ((xlist)))
                xtest_not_implemented.write
                  [xself]
                    memory > xc
                    memory > xN2
                    memory > xA
                    memory > xa
                    memory > xC
                    memory > xspecialmethod
                    memory > xiname
                    memory > xcheck
                    memory > xN1
                    memory > xrname
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xspecialmethod.write
                          [xself xother]
                            seq > @
                              (((unsupported)) ((xNotImplemented)))
                        xcheck.write
                          [xexpr xx xy]
                            seq > @
                              (((unsupported)) ((xTypeError)))
                                bogusForceDataize.write (((xexec)) ((xexpr)) ((((unsupported)) ("x") ((xx)) ("y") ((xy)) ("operator") ((xoperator)))))
                                bogusForceDataize.write ((((xself).xfail)) (("no TypeError from %r".mod (((unsupported)) ((xexpr))))))
                        xN1.write (((xsys).xmaxsize).add 1)
                        xN2.write ((xsys).xmaxsize)
                        (((unsupported)) ((((unsupported)) ((xname)) ((xexpr)) ((xiexpr)))) ((((unsupported)) ((((unsupported)) ("__add__") ("x + y") ("x += y"))) ((((unsupported)) ("__sub__") ("x - y") ("x -= y"))) ((((unsupported)) ("__mul__") ("x * y") ("x *= y"))) ((((unsupported)) ("__matmul__") ("x @ y") ("x @= y"))) ((((unsupported)) ("__truediv__") ("x / y") ("x /= y"))) ((((unsupported)) ("__floordiv__") ("x // y") ("x //= y"))) ((((unsupported)) ("__mod__") ("x % y") ("x %= y"))) ((((unsupported)) ("__divmod__") ("divmod(x, y)") ("None: is there a None literal in the EO language?"))) ((((unsupported)) ("__pow__") ("x ** y") ("x **= y"))) ((((unsupported)) ("__lshift__") ("x << y") ("x <<= y"))) ((((unsupported)) ("__rshift__") ("x >> y") ("x >>= y"))) ((((unsupported)) ("__and__") ("x & y") ("x &= y"))) ((((unsupported)) ("__or__") ("x | y") ("x |= y"))) ((((unsupported)) ("__xor__") ("x ^ y") ("x ^= y"))))))
                          seq
                            xrname.write ("__r".add (((unsupported)) ((xname)) ((((unsupported)) (2)))))
                            xA.write (((xtype)) ("A") ((((unsupported)) 0)) ((((unsupported)) ((xname)) ((xspecialmethod)))))
                            xa.write (((xA)) 0)
                            bogusForceDataize.write (((xcheck)) ((xexpr)) ((xa)) ((xa)))
                            bogusForceDataize.write (((xcheck)) ((xexpr)) ((xa)) ((xN1)))
                            bogusForceDataize.write (((xcheck)) ((xexpr)) ((xa)) ((xN2)))
                            (xiexpr).if
                              seq
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xa)) ((xa)))
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xa)) ((xN1)))
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xa)) ((xN2)))
                                xiname.write ("__i".add (((unsupported)) ((xname)) ((((unsupported)) (2)))))
                                xC.write (((xtype)) ("C") ((((unsupported)) 0)) ((((unsupported)) ((xiname)) ((xspecialmethod)))))
                                xc.write (((xC)) 0)
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xc)) ((xa)))
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xc)) ((xN1)))
                                bogusForceDataize.write (((xcheck)) ((xiexpr)) ((xc)) ((xN2)))
                xtest_assign_slice.write
                  [xself]
                    memory > x__setitem__
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__setitem__.write
                            [xself xidx xvalue]
                              seq > @
                                (((unsupported)) (((xself).xvalue)) ((xvalue)))
                        xc.write (((xC)) 0)
                        (((unsupported)) ((((unsupported)) ((xc)) ((((unsupported)) (1) (2))))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xvalue)) (3))
                xtest_set_and_no_get.write
                  [xself]
                    memory > xdescr
                    memory > x__init__
                    memory > xa
                    memory > xx
                    memory > x__set__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)) (((xself).xname)) ((xname)))
                            x__set__.write
                              [xself xobj xvalue]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xobj).x__dict__)) (((xself).xname)))) ((xvalue)))
                        xdescr.write (((xDescr)) ("a"))
                        (((unsupported)) ((xobject)))
                          xa.write (xdescr)
                        xx.write (((xX)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((xx).xa)) ((xdescr)))
                        (((unsupported)) (((xx).xa)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xa)) (42))
                        (((unsupported)) ((xtype)))
                        (((unsupported)) ((xMeta)))
                        (((unsupported)) (((xX).xa)) (42))
                        (((unsupported)) (((xMeta).xa)) ((((xDescr)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).xa)) (42))
                xtest_getattr_hooks.write
                  [xself]
                    memory > xcounter
                    memory > x__getattribute__
                    memory > x__getattr__
                    memory > xdescr
                    memory > x__get__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xcounter.write 0
                            x__get__.write
                              [xself xobj xobjtype]
                                memory > xgetter
                                seq > @
                                  (((unsupported)) 0)
                                    xgetter.write
                                      [xname]
                                        seq > @
                                          seq
                                            (((unsupported)) (((xself).xcounter)) (1))
                                            (((unsupported)) ((((xAttributeError)) ((xname)))))
                                    (((unsupported)) ((xgetter)))
                        xdescr.write (((xDescriptor)) 0)
                        (((unsupported)) ((xobject)))
                          x__getattribute__.write (xdescr)
                        (((unsupported)) ((xobject)))
                          x__getattr__.write (xdescr)
                        (((unsupported)) ((xobject)))
                          seq
                            x__getattribute__.write (xdescr)
                            x__getattr__.write (xdescr)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((((xA)) 0)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdescr).xcounter)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((((xB)) 0)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdescr).xcounter)) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((((xC)) 0)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdescr).xcounter)) (4))
                        (((unsupported)) ((xobject)))
                          seq
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)) ((((xAttributeError)) ((xname)))))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  seq
                                    (((unsupported)) ((((unsupported)) (((xEvilGetattribute).x__getattr__)))))
                                    (((unsupported)) ((xi)) ((((xrange)) (5))))
                                      bogusForceDataize.write ((((xgc).xcollect)) 0)
                                    (((unsupported)) ((((xAttributeError)) ((xname)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((((xEvilGetattribute)) 0)) ("attr"))
                xtest_type___getattribute__.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xtype).x__getattribute__)) ((xlist)) ((xtype)))
                xtest_abstractmethods.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((xtype)) ("__abstractmethods__"))
                        (((unsupported)) ((xtype)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xgetattr)) ((xmeta)) ("__abstractmethods__"))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xX).x__abstractmethods__)))))
                xtest_proxy_call.write
                  [xself]
                    memory > x__class__
                    memory > xfake_str
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__class__.write (xstr)
                        xfake_str.write (((xFakeStr)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xfake_str)) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xstr).xsplit)) ((xfake_str)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xstr).x__add__)) ((xfake_str)) ("abc"))
                xtest_repr_as_str.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) (((xFoo).x__repr__)) (((xFoo).x__str__)))
                        xfoo.write (((xFoo)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRecursionError)) ((xstr)) ((xfoo)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRecursionError)) ((xrepr)) ((xfoo)))
                xtest_mixing_slot_wrappers.write
                  [xself]
                    memory > x__neg__
                    memory > xx
                    memory > x__setattr__
                    seq > @
                      seq
                        (((unsupported)) ((xdict)))
                          seq
                            x__setattr__.write ((xdict).x__setitem__)
                            x__neg__.write ((xdict).xcopy)
                        xx.write (((xX)) 0)
                        (((unsupported)) (((xx).xy)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) ("y"))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((xx).neg)))
                xtest_wrong_class_slot_wrapper.write
                  [xself]
                    memory > x__eq__
                    memory > x__add__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          seq
                            x__eq__.write ((xstr).x__eq__)
                            x__add__.write ((xstr).x__add__)
                        xa.write (((xA)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                xtest_slot_shadows_class_variable.write
                  [xself]
                    memory > x__slots__
                    memory > xm
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))) ((xcm)))
                          (((unsupported)) 0)
                            seq
                              x__slots__.write (((unsupported)) ("foo"))
                              xfoo.write "None: is there a None literal in the EO language?"
                        xm.write (((xstr)) (((xcm).xexception)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("'foo' in __slots__ conflicts with class variable") ((xm)))
                xtest_set_doc.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                          unsupported
                        (((unsupported)) (((xX).x__doc__)) ("banana"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).x__doc__)) ("banana"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((((unsupported)) (((((xtype)) ((xlist))).x__dict__)) ("__doc__")).x__set__)) ((xlist)) ("blah"))
                        bogusForceDataize.write ((((xself).xassertIn)) ("can't set list.__doc__") ((((xstr)) (((xcm).xexception)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((((unsupported)) (((((xtype)) ((xX))).x__dict__)) ("__doc__")).x__delete__)) ((xX)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("can't delete X.__doc__") ((((xstr)) (((xcm).xexception)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).x__doc__)) ("banana"))
                xtest_qualname.write
                  [xself]
                    memory > xqualname
                    memory > xdescriptors
                    memory > xtypes
                    seq > @
                      seq
                        xdescriptors.write (((unsupported)) (((xstr).xlower)) (((xcomplex).xreal)) (((xfloat).xreal)) (((xint).x__add__)))
                        xtypes.write (((unsupported)) ("method") ("member") ("getset") ("wrapper"))
                        (((unsupported)) ((((unsupported)) ((xd)) ((xn)))) ((((xzip)) ((xdescriptors)) ((xtypes)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xtype)) ((xd))).x__name__)) (((xn).add "_descriptor")))
                        (((unsupported)) ((xd)) ((xdescriptors)))
                          seq
                            xqualname.write (((((xd).x__objclass__).x__qualname__).add ".").add ((xd).x__name__))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xd).x__qualname__)) ((xqualname)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr).xlower).x__qualname__)) ("str.lower"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomplex).xreal).x__qualname__)) ("complex.real"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfloat).xreal).x__qualname__)) ("float.real"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xint).x__add__).x__qualname__)) ("int.__add__"))
                        (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) (((xX).x__qualname__)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) (((xtype).x__dict__)) ("__qualname__")).x__set__)) ((xstr)) ("Oink"))
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).x__qualname__)) ("Y"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xY).xInside).x__qualname__)) ("Y.Inside"))
                xtest_qualname_dict.write
                  [xself]
                    memory > xtp
                    memory > xns
                    seq > @
                      seq
                        xns.write (((unsupported)) ("__qualname__") ("some.name"))
                        xtp.write (((xtype)) ("Foo") ((((unsupported)) 0)) ((xns)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtp).x__qualname__)) ("some.name"))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("__qualname__") (((xtp).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xns)) ((((unsupported)) ("__qualname__") ("some.name"))))
                        xns.write (((unsupported)) ("__qualname__") (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xtype)) ("Foo") ((((unsupported)) 0)) ((xns)))
                xtest_cycle_through_dict.write
                  [xself]
                    memory > xx
                    memory > xwr
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xdict)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xdict).x__init__)) ((xself)))
                                  (((unsupported)) (((xself).x__dict__)) ((xself)))
                        xx.write (((xX)) 0)
                        (((unsupported)) (((xx).xattr)) (42))
                        xwr.write ((((xweakref).xref)) ((xx)))
                        (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xwr)) 0)))
                        (((unsupported)) ((xo)) (((((xgc).xget_objects)) 0)))
                          bogusForceDataize.write ((((xself).xassertIsNot)) ((((xtype)) ((xo)))) ((xX)))
                xtest_object_new_and_init_with_parameters.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xOverrideNeither)) (1))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xOverrideNeither)) (1))
                        (((unsupported)) 0)
                          x__new__.write
                            [xcls xfoo xkw]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((xobject).x__new__)) ((xcls)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwds)))))))
                        (((unsupported)) 0)
                          x__init__.write
                            [xself xfoo xkw]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((xobject).x__init__)) ((xself)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))))
                        (((unsupported)) ((xOverrideNew)) ((xOverrideInit)))
                        (((unsupported)) ((xcase)) ((((unsupported)) ((xOverrideNew)) ((xOverrideInit)) ((xOverrideBoth)))))
                          seq
                            bogusForceDataize.write (((xcase)) (1))
                            (((unsupported)) ((xcase)) (1) (2))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcase)) (1) (2) (3))
                            (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xcase)) (1) (2) (3))
                xtest_subclassing_does_not_duplicate_dict_descriptors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xBase)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("__dict__") (((xBase).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("__dict__") (((xSub).x__dict__)))
                xtest_bound_method_repr.write
                  [xself]
                    memory > x__call__
                    memory > xsuper_d2
                    memory > xfunc
                    memory > xbase
                    memory > xinstance
                    memory > xderived1
                    memory > xfoo
                    memory > xderived2
                    memory > xmethod
                    seq > @
                      seq
                        (((unsupported)) 0)
                          xmethod.write
                            [xself]
                              seq > @
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((((xFoo)) 0).xmethod)))) ("<bound method .*Foo.method of <.*Foo object at .*>>"))
                        (((unsupported)) 0)
                          xmethod.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xBase)))
                        (((unsupported)) ((xBase)))
                          xmethod.write
                            [xself]
                              seq > @
                        xbase.write (((xBase)) 0)
                        xderived1.write (((xDerived1)) 0)
                        xderived2.write (((xDerived2)) 0)
                        xsuper_d2.write (((xsuper)) ((xDerived2)) ((xderived2)))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xbase).xmethod)))) ("<bound method .*Base.method of <.*Base object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xderived1).xmethod)))) ("<bound method .*Base.method of <.*Derived1 object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xderived2).xmethod)))) ("<bound method .*Derived2.method of <.*Derived2 object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xsuper_d2).xmethod)))) ("<bound method .*Base.method of <.*Derived2 object at .*>>"))
                        (((unsupported)) 0)
                          xmethod.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                        xfoo.write (((xFoo)) 0)
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xfoo).xmethod)))) ("<bound method .*Foo.method of <class '.*Foo'>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) (((xFoo).xmethod)))) ("<bound method .*Foo.method of <class '.*Foo'>>"))
                        (((unsupported)) 0)
                          x__call__.write
                            [xself xarg]
                              seq > @
                        xfunc.write (((xMyCallable)) 0)
                        xinstance.write (((xobject)) 0)
                        xmethod.write ((((xtypes).xMethodType)) ((xfunc)) ((xinstance)))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) ((xmethod)))) ("<bound method ? of <object object at .*>>"))
                        (((unsupported)) (((xfunc).x__name__)) ("name"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) ((xmethod)))) ("<bound method name of <object object at .*>>"))
                        (((unsupported)) (((xfunc).x__qualname__)) ("qualname"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xrepr)) ((xmethod)))) ("<bound method qualname of <object object at .*>>"))
                xtest_bpo25750.write
                  [xself]
                    memory > x__new__
                    memory > x__get__
                    memory > xdescr
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__get__.write ((x_testcapi).xbad_get)
                        (((unsupported)) 0)
                          seq
                            xdescr.write (((xDescr)) 0)
                            x__new__.write
                              [xcls]
                                seq > @
                                  seq
                                    (((unsupported)) (((xcls).xdescr)) ("None: is there a None literal in the EO language?"))
                                    (((unsupported)) (((xcls).xlst)) ((((unsupported)) ((((unsupported)) (2) ((xi)))) ((xi)) ((((xrange)) (10000))))))
                        unsupported
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    memory > xmeth
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) (((xself).xC)) ((xC)))
                xtest_iter_keys.write
                  [xself]
                    memory > xkeys
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xit.write ((((((xself).xC).x__dict__).xkeys)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xit)) ((xlist)))
                        xkeys.write (((xlist)) ((xit)))
                        bogusForceDataize.write ((((xkeys).xsort)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xkeys)) ((((unsupported)) ("__dict__") ("__doc__") ("__module__") ("__weakref__") ("meth"))))
                xtest_iter_values.write
                  [xself]
                    memory > xvalues
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xit.write ((((((xself).xC).x__dict__).xvalues)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xit)) ((xlist)))
                        xvalues.write (((xlist)) ((xit)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xvalues)))) (5))
                xtest_iter_items.write
                  [xself]
                    memory > xkeys
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xit.write ((((((xself).xC).x__dict__).xitems)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xit)) ((xlist)))
                        xkeys.write (((unsupported)) ((((unsupported)) ((xitem)) (0))) ((xitem)) ((xit)))
                        bogusForceDataize.write ((((xkeys).xsort)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xkeys)) ((((unsupported)) ("__dict__") ("__doc__") ("__module__") ("__weakref__") ("meth"))))
                xtest_dict_type_with_metaclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xtype)))
                        (((unsupported)) ((xM)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((xC).x__dict__)))) ((((xtype)) (((xB).x__dict__)))))
                xtest_repr.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xrepr)) ((((xself).xC).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xr).xstartswith)) ("mappingproxy("))) ((xr)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xr).xendswith)) (")"))) ((xr)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((xself).xC).x__dict__).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertIn)) (((("{!r}: {!r}".xformat)) ((xk)) ((xv)))) ((xr)))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_pytype_long_ready.write
                [xself]
                  memory > x__pow__
                  seq > @
                    seq
                      (((unsupported)) ((xobject)))
                        x__pow__.write
                          [xself]
                            seq > @
                              (((unsupported)) 0)
                      (((unsupported)) 0)
                        bogusForceDataize.write (((xpow)) (0) ((((xUserLong)) 0)) (0))
                      bogusForceDataize.write ((((xtype).xmro)) ((xtuple)))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_type_lookup_mro_reference.write
                [xself]
                  memory > x__eq__
                  memory > xmykey
                  memory > xX
                  memory > x__hash__
                  memory > xmykey2
                  seq > @
                    seq
                      (((unsupported)) ((xobject)))
                        seq
                          x__hash__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xhash)) ("mykey"))))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (((xX).x__bases__)) ((((unsupported)) ((xBase2)))))
                      (((unsupported)) ((xobject)))
                        seq
                          xmykey.write "from Base"
                          xmykey2.write "from Base"
                      (((unsupported)) ((xobject)))
                        seq
                          xmykey.write "from Base2"
                          xmykey2.write "from Base2"
                      xX.write (((xtype)) ("X") ((((unsupported)) ((xBase)))) ((((unsupported)) ((((xMyKey)) 0)) (5))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xX).xmykey)) ("from Base"))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xX).xmykey2)) ("from Base2"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                x_check_reduce.write
                  [xself xproto xobj xargs xkwargs xstate xlistitems xdictitems]
                    memory > xreduce_value
                    memory > xbase_type
                    seq > @
                      (((unsupported)) 0)
                        ((xproto).geq 2).if
                          seq
                            xreduce_value.write ((((xobj).x__reduce_ex__)) ((xproto)))
                            (xkwargs).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xreduce_value)) (0))) (((xcopyreg).x__newobj_ex__)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xreduce_value)) (1))) ((((unsupported)) ((((xtype)) ((xobj)))) ((xargs)) ((xkwargs)))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xreduce_value)) (0))) (((xcopyreg).x__newobj__)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xreduce_value)) (1))) (((((unsupported)) ((((xtype)) ((xobj))))).add (xargs))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xreduce_value)) (2))) ((xstate)))
                            (((unsupported)) ((xlistitems)) ("None: is there a None literal in the EO language?")).if
                              bogusForceDataize.write ((((xself).xassertListEqual)) ((((xlist)) ((((unsupported)) ((xreduce_value)) (3))))) ((xlistitems)))
                              bogusForceDataize.write ((((xself).xassertIsNone)) ((((unsupported)) ((xreduce_value)) (3))))
                            (((unsupported)) ((xdictitems)) ("None: is there a None literal in the EO language?")).if
                              bogusForceDataize.write ((((xself).xassertDictEqual)) ((((xdict)) ((((unsupported)) ((xreduce_value)) (4))))) ((xdictitems)))
                              bogusForceDataize.write ((((xself).xassertIsNone)) ((((unsupported)) ((xreduce_value)) (4))))
                          seq
                            xbase_type.write ((((xtype)) ((xobj))).x__base__)
                            xreduce_value.write (((unsupported)) (((xcopyreg).x_reconstructor)) ((((unsupported)) ((((xtype)) ((xobj)))) ((xbase_type)) (((((unsupported)) ((xbase_type)) ((xobject))).if "None: is there a None literal in the EO language?" (((xbase_type)) ((xobj))))))))
                            (((unsupported)) ((xstate)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)) ((xreduce_value)) ((((unsupported)) ((xstate)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).x__reduce_ex__)) ((xproto)))) ((xreduce_value)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).x__reduce__)) 0)) ((xreduce_value)))
                xtest_reduce.write
                  [xself]
                    memory > xprotocols
                    memory > x__getstate__
                    memory > x__slots__
                    memory > x__init__
                    memory > xkwargs
                    memory > xstate
                    memory > x__getnewargs_ex__
                    memory > x__getnewargs__
                    memory > xargs
                    memory > xobj
                    seq > @
                      seq
                        xprotocols.write (((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))
                        xargs.write (((unsupported)) ((101.neg)) ("spam"))
                        xkwargs.write (((unsupported)) ("bacon") ((201.neg)) ("fish") ((301.neg)))
                        xstate.write (((unsupported)) ("cheese") ((401.neg)))
                        (((unsupported)) 0)
                          x__getnewargs__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xargs)))
                        xobj.write (((xC1)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          bogusForceDataize.write ((((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xargs)))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xvalue)))) (((((xstate).xitems)) 0)))
                          bogusForceDataize.write (((xsetattr)) ((xobj)) ((xname)) ((xvalue)))
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xargs)) ((xstate)))
                        (((unsupported)) 0)
                          x__getnewargs__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("bad args"))
                        xobj.write (((xC2)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)) ((xproto)))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) ((xargs)) ((xkwargs)))))
                        xobj.write (((xC3)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            bogusForceDataize.write ((((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xargs)) ((xkwargs)))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) ((xargs)) ("bad dict"))))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) ("bad tuple") ((xkwargs)))))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) 0)))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("bad args"))
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) ((xcls)) ((((unsupported)) ((xC4)) ((xC5)) ((xC6)) ((xC7)))))
                            seq
                              xobj.write (((xcls)) 0)
                              ((xproto).geq 2).if
                                (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xValueError)))))))
                                  bogusForceDataize.write ((((xobj).x__reduce_ex__)) ((xproto)))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) ((xargs)) ((((unsupported)) 0)))))
                        xobj.write (((xC9)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          bogusForceDataize.write ((((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xargs)))
                        (((unsupported)) 0)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xIndexError)))
                        xobj.write (((xC10)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)) ((xproto)))
                        (((unsupported)) 0)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xstate)))
                        xobj.write (((xC11)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xstate)))
                        (((unsupported)) 0)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("not dict"))
                        xobj.write (((xC12)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ("not dict"))
                        (((unsupported)) 0)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xIndexError)))
                        xobj.write (((xC13)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          seq
                            (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)) ((xproto)))
                            ((xproto).less 2).if
                              (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                                bogusForceDataize.write ((((xobj).x__reduce__)) 0)
                        (((unsupported)) 0)
                          seq
                            x__slots__.write (((xtuple)) ((xstate)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xname)) ((xvalue)))) (((((xstate).xitems)) 0)))
                                    bogusForceDataize.write (((xsetattr)) ((xself)) ((xname)) ((xvalue)))
                        xobj.write (((xC14)) 0)
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((xstate)))))
                            seq
                              (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                                bogusForceDataize.write ((((xobj).x__reduce_ex__)) ((xproto)))
                              (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                                bogusForceDataize.write ((((xobj).x__reduce__)) 0)
                        (((unsupported)) ((xdict)))
                        xobj.write (((xC15)) ((((unsupported)) ("quebec") ((601.neg)))))
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((xdict)) ((xobj)))))
                        (((unsupported)) ((xlist)))
                        xobj.write (((xC16)) ((((unsupported)) ("yukon"))))
                        (((unsupported)) ((xproto)) ((xprotocols)))
                          (((unsupported)) (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((xlist)) ((xobj)))))
                xtest_special_method_lookup.write
                  [xself]
                    memory > x__getstate__
                    memory > xstate
                    memory > x__getattr__
                    memory > xprotocols
                    seq > @
                      seq
                        xprotocols.write (((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))
                        (((unsupported)) 0)
                          seq
                            x__getstate__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) 0)))
                            x__getattr__.write
                              [xself xattr]
                                seq > @
                                  seq
                                    (((unsupported)) ((xattr)) ((((unsupported)) ("__getnewargs__") ("__getnewargs_ex__")))).if
                                      (((unsupported)) ((((xAssertionError)) ((xattr)))))
                                    (((unsupported)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xprotocol)) ((xprotocols)))
                          seq
                            xstate.write (((xprotocol).geq 2).if (((unsupported)) 0) "None: is there a None literal in the EO language?")
                            (((unsupported)) (((xself).x_check_reduce)) ((xprotocol)) ((((xPicky)) 0)) ((xstate)))
                x_assert_is_copy.write
                  [xself xobj xobjcopy xmsg]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) ((xmsg)) ("None: is there a None literal in the EO language?")).if
                          xmsg.write ((("{!r} is not a copy of {!r}".xformat)) ((xobj)) ((xobjcopy)))
                        (((unsupported)) (((((xtype)) ((xobj))).x__repr__)) (((xobject).x__repr__))).if
                          (((unsupported)) ((((xValueError)) (("object passed to _assert_is_copy must ".add "override the __repr__ method.")))))
                        (((unsupported)) (((xself).xassertIsNot)) ((xobj)) ((xobjcopy)) ((xmsg)))
                        (((unsupported)) (((xself).xassertIs)) ((((xtype)) ((xobj)))) ((((xtype)) ((xobjcopy)))) ((xmsg)))
                        (((xhasattr)) ((xobj)) ("__dict__")).if
                          seq
                            (((unsupported)) (((xself).xassertDictEqual)) (((xobj).x__dict__)) (((xobjcopy).x__dict__)) ((xmsg)))
                            (((unsupported)) (((xself).xassertIsNot)) (((xobj).x__dict__)) (((xobjcopy).x__dict__)) ((xmsg)))
                        (((xhasattr)) ((xobj)) ("__slots__")).if
                          seq
                            (((unsupported)) (((xself).xassertListEqual)) (((xobj).x__slots__)) (((xobjcopy).x__slots__)) ((xmsg)))
                            (((unsupported)) ((xslot)) (((xobj).x__slots__)))
                              seq
                                (((unsupported)) (((xself).xassertEqual)) ((((xhasattr)) ((xobj)) ((xslot)))) ((((xhasattr)) ((xobjcopy)) ((xslot)))) ((xmsg)))
                                (((unsupported)) (((xself).xassertEqual)) ((((xgetattr)) ((xobj)) ((xslot)) ("None: is there a None literal in the EO language?"))) ((((xgetattr)) ((xobjcopy)) ((xslot)) ("None: is there a None literal in the EO language?"))) ((xmsg)))
                        (((unsupported)) (((xself).xassertEqual)) ((((xrepr)) ((xobj)))) ((((xrepr)) ((xobjcopy)))) ((xmsg)))
                x_generate_pickle_copiers.write
                  []
                    memory > xcopy
                    memory > x__init__
                    memory > x__repr__
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            unsupported
                            x__init__.write
                              [xself xproto xdumps xloads]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xproto)) ((xproto)))
                                    (((unsupported)) (((xself).xdumps)) ((xdumps)))
                                    (((unsupported)) (((xself).xloads)) ((xloads)))
                            xcopy.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)) (((((xself).xloads)) (((((xself).xdumps)) ((xobj)) (((xself).xproto)))))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((("PickleCopier(proto={}, dumps={}.{}, loads={}.{})".xformat)) (((xself).xproto)) ((((xself).xdumps).x__module__)) ((((xself).xdumps).x__qualname__)) ((((xself).xloads).x__module__)) ((((xself).xloads).x__qualname__)))))
                        (((unsupported)) ((((unsupported)) ((((xPickleCopier)) ((((unsupported)) ((xargs)))))) ((xargs)) (((((xitertools).xproduct)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))) ((((unsupported)) (((xpickle).xdumps)) (((xpickle).x_dumps)))) ((((unsupported)) (((xpickle).xloads)) (((xpickle).x_loads)))))))))
                xtest_pickle_slots.write
                  [xself]
                    memory > x__getstate__
                    memory > xy
                    memory > x__setstate__
                    memory > x__repr__
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__slots__.write (((unsupported)) ("a"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xpickle).xdumps)) ((((xC)) 0)) (0))
                        (((unsupported)) 0)
                        (((unsupported)) ((xC)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xpickle).xdumps)) ((((xD)) 0)) (0))
                        (((unsupported)) 0)
                          seq
                            unsupported
                            x__slots__.write (((unsupported)) ("a"))
                            x__getstate__.write
                              [xself]
                                memory > xstate
                                seq > @
                                  seq
                                    xstate.write ((((((xgetattr)) ((xself)) ("__dict__") ((((unsupported)) 0))).xcopy)) 0)
                                    (((unsupported)) ((xcls)) (((((xtype)) ((xself))).x__mro__)))
                                      (((unsupported)) ((xslot)) ((((((xcls).x__dict__).xget)) ("__slots__") ((((unsupported)) 0)))))
                                        (((unsupported)) ((xAttributeError)))
                                          (((unsupported)) ((((unsupported)) ((xstate)) ((xslot)))) ((((xgetattr)) ((xself)) ((xslot)))))
                                    (((unsupported)) ((xstate)))
                            x__setstate__.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xstate).xitems)) 0)))
                                    bogusForceDataize.write (((xsetattr)) ((xself)) ((xk)) ((xv)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("%s()<%r>".mod (((unsupported)) (((((xtype)) ((xself))).x__name__)) (((((xself).x__getstate__)) 0))))))
                        (((unsupported)) ((xC)))
                          seq
                            unsupported
                        (((unsupported)) 0)
                        (((unsupported)) ((xC)))
                          seq
                            unsupported
                            x__slots__.write (((unsupported)) ("b"))
                        (((unsupported)) ((xpickle_copier)) (((((xself).x_generate_pickle_copiers)) 0)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xpickle_copier)))))
                            seq
                              xx.write (((xC)) 0)
                              xy.write ((((xpickle_copier).xcopy)) ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xx)) ((xy)))
                              (((unsupported)) (((xx).xa)) (42))
                              xy.write ((((xpickle_copier).xcopy)) ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xx)) ((xy)))
                              xx.write (((xD)) 0)
                              (((unsupported)) (((xx).xa)) (42))
                              (((unsupported)) (((xx).xb)) (100))
                              xy.write ((((xpickle_copier).xcopy)) ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xx)) ((xy)))
                              xx.write (((xE)) 0)
                              (((unsupported)) (((xx).xa)) (42))
                              (((unsupported)) (((xx).xb)) ("foo"))
                              xy.write ((((xpickle_copier).xcopy)) ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xx)) ((xy)))
                xtest_reduce_copying.write
                  [xself]
                    memory > xobjcopy
                    memory > xtest_classes
                    memory > xARGS
                    memory > xproto
                    memory > xKWARGS
                    memory > x__getstate__
                    memory > xobj
                    memory > x__init__
                    memory > xobjcopy2
                    memory > xpickle_copiers
                    memory > xkwargs
                    memory > x__new__
                    memory > xNEED_DICT_COPYING
                    memory > x__setstate__
                    memory > x__repr__
                    memory > x__getnewargs_ex__
                    memory > x__getnewargs__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            unsupported
                            xARGS.write (((unsupported)) (1) (2))
                            xNEED_DICT_COPYING.write TRUE
                            x__init__.write
                              [xself xa xb]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((((xsuper)) 0).x__init__)) 0)
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("C1(%r, %r)".mod (((unsupported)) (((xself).xa)) (((xself).xb))))))
                        (((unsupported)) 0)
                        (((unsupported)) ((xlist)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)) (1) (2))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((((xsuper)) 0).x__new__)) ((xcls)))
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                                    (((unsupported)) ((xself)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((((xsuper)) 0).x__init__)) 0)
                                    bogusForceDataize.write ((((xself).xappend)) ("cheese"))
                            x__getnewargs__.write
                              [xcls]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xcls).xARGS)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("C2(%r, %r)<%r>".mod (((unsupported)) (((xself).xa)) (((xself).xb)) ((((xlist)) ((xself))))))))
                        (((unsupported)) 0)
                        (((unsupported)) ((xlist)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)) (1) (2))
                            xNEED_DICT_COPYING.write FALSE
                            x__init__.write
                              [xself xa xb]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                                    bogusForceDataize.write ((((xself).xappend)) ("cheese"))
                            x__getstate__.write
                              [xcls]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xcls).xARGS)))
                            x__setstate__.write
                              [xself xstate]
                                seq > @
                                  seq
                                    (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((xstate)))
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("C3(%r, %r)<%r>".mod (((unsupported)) (((xself).xa)) (((xself).xb)) ((((xlist)) ((xself))))))))
                        (((unsupported)) 0)
                        (((unsupported)) ((xint)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)) ("hello") ("world") (1))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb xvalue]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((((xsuper)) 0).x__new__)) ((xcls)) ((xvalue)))
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                                    (((unsupported)) ((xself)))
                            x__getnewargs__.write
                              [xcls]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xcls).xARGS)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("C4(%r, %r)<%r>".mod (((unsupported)) (((xself).xa)) (((xself).xb)) ((((xint)) ((xself))))))))
                        (((unsupported)) 0)
                        (((unsupported)) ((xint)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)) (1) (2))
                            xKWARGS.write (((unsupported)) ("value") (3))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb xvalue]
                                memory > xself
                                seq > @
                                  (((unsupported)) 0)
                                    xself.write ((((((xsuper)) 0).x__new__)) ((xcls)) ((xvalue)))
                                    (((unsupported)) (((xself).xa)) ((xa)))
                                    (((unsupported)) (((xself).xb)) ((xb)))
                                    (((unsupported)) ((xself)))
                            x__getnewargs_ex__.write
                              [xcls]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) (((xcls).xARGS)) (((xcls).xKWARGS)))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("C5(%r, %r)<%r>".mod (((unsupported)) (((xself).xa)) (((xself).xb)) ((((xint)) ((xself))))))))
                        xtest_classes.write (((unsupported)) ((xC1)) ((xC2)) ((xC3)) ((xC4)) ((xC5)))
                        xpickle_copiers.write ((((xself).x_generate_pickle_copiers)) 0)
                        (((unsupported)) ((((unsupported)) ((xcls)) ((xpickle_copier)))) (((((xitertools).xproduct)) ((xtest_classes)) ((xpickle_copiers)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xcls)) ((xpickle_copier)))))
                            seq
                              xkwargs.write (((xgetattr)) ((xcls)) ("KWARGS") ((((unsupported)) 0)))
                              xobj.write (((xcls)) ((((unsupported)) (((xcls).xARGS)))) ((((unsupported)) ((xkwargs)))))
                              xproto.write ((xpickle_copier).xproto)
                              xobjcopy.write ((((xpickle_copier).xcopy)) ((xobj)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xobj)) ((xobjcopy)))
                              (((xproto).geq 2).and (((xcls).xNEED_DICT_COPYING).not)).if
                                seq
                                  bogusForceDataize.write (((((xobjcopy).x__dict__).xclear)) 0)
                                  xobjcopy2.write ((((xpickle_copier).xcopy)) ((xobjcopy)))
                                  bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xobj)) ((xobjcopy2)))
                        (((unsupported)) ((xcls)) ((xtest_classes)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xcls)))))
                            seq
                              xkwargs.write (((xgetattr)) ((xcls)) ("KWARGS") ((((unsupported)) 0)))
                              xobj.write (((xcls)) ((((unsupported)) (((xcls).xARGS)))) ((((unsupported)) ((xkwargs)))))
                              xobjcopy.write (((xdeepcopy)) ((xobj)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xobj)) ((xobjcopy)))
                              (((xcls).xNEED_DICT_COPYING).not).if
                                seq
                                  bogusForceDataize.write (((((xobjcopy).x__dict__).xclear)) 0)
                                  xobjcopy2.write (((xdeepcopy)) ((xobjcopy)))
                                  bogusForceDataize.write ((((xself).x_assert_is_copy)) ((xobj)) ((xobjcopy2)))
                xtest_issue24097.write
                  [xself]
                    memory > x__getattr__
                    memory > xexpected
                    memory > x__slotnames__
                    seq > @
                      seq
                        (((unsupported)) ((xstr)))
                        (((unsupported)) 0)
                          seq
                            x__slotnames__.write (((unsupported)) ((((xS)) ("spam"))))
                            x__getattr__.write
                              [xself xattr]
                                seq > @
                                  ((xattr).eq "spam").if
                                    seq
                                      (((unsupported)) ((((unsupported)) (((xA).x__slotnames__)) ((((unsupported)) 0)))) ((((unsupported)) ((((xS)) ("spam"))))))
                                      (((unsupported)) (42))
                                    (((unsupported)) ((xAttributeError)))
                        (((unsupported)) 0)
                        xexpected.write (((unsupported)) (((xcopyreg).x__newobj__)) ((((unsupported)) ((xA)))) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((unsupported)) ("spam") (42))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xA)) 0).x__reduce_ex__)) (2))) ((xexpected)))
                xtest_object_reduce.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xobject)) 0).x__reduce__)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)) 0).x__reduce__)) (0))
                        bogusForceDataize.write ((((((xobject)) 0).x__reduce_ex__)) (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)) 0).x__reduce_ex__)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)) 0).x__reduce_ex__)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_subclasses.write
                [xself]
                  memory > xa2
                  seq > @
                    (((unsupported)) 0)
                      (((unsupported)) 0)
                      (((unsupported)) ((xA)))
                      (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) ((((xA)) 0)) ((((xB)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xsys).xgetsizeof)) ((((xvars)) ((xa)))))) (((((xsys).xgetsizeof)) ((((xvars)) ((xb)))))))
                      bogusForceDataize.write ((((xself).xassertLess)) (((((xsys).xgetsizeof)) ((((xvars)) ((xa)))))) (((((xsys).xgetsizeof)) ((((unsupported)) ("a") (1))))))
                      (((unsupported)) ((((unsupported)) (((xa).xx)) (((xa).xy)) (((xa).xz)) (((xa).xw)) (((xa).xv)) (((xa).xu)))) ((((xrange)) (6))))
                      bogusForceDataize.write ((((xself).xassertNotEqual)) (((((xsys).xgetsizeof)) ((((xvars)) ((xa)))))) (((((xsys).xgetsizeof)) ((((xvars)) ((xb)))))))
                      xa2.write (((xA)) 0)
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xsys).xgetsizeof)) ((((xvars)) ((xa)))))) (((((xsys).xgetsizeof)) ((((xvars)) ((xa2)))))))
                      bogusForceDataize.write ((((xself).xassertLess)) (((((xsys).xgetsizeof)) ((((xvars)) ((xa)))))) (((((xsys).xgetsizeof)) ((((unsupported)) ("a") (1))))))
                      (((unsupported)) ((((unsupported)) (((xb).xu)) (((xb).xv)) (((xb).xw)) (((xb).xt)) (((xb).xs)) (((xb).xr)))) ((((xrange)) (6))))
                      bogusForceDataize.write ((((xself).xassertLess)) (((((xsys).xgetsizeof)) ((((xvars)) ((xb)))))) (((((xsys).xgetsizeof)) ((((unsupported)) ("a") (1))))))
            (((unsupported)) ((xtype)))
              seq
                (((unsupported)) 0)
                x__new__.write
                  [xmcls xname xbases xattrs]
                    seq > @
                      seq
                        (((unsupported)) (((((xattrs).xget)) ("__doc__"))) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)) ((((unsupported)) ((xattrs)) ("__doc__"))) ((xname)))
                        (((unsupported)) (((((xtype).x__new__)) ((xmcls)) ((xname)) ((xbases)) ((xattrs)))))
                x__repr__.write
                  [xcls]
                    seq > @
                      (((unsupported)) ((((xrepr)) (((xcls).x__name__)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xstep)) (0))
                        (((unsupported)) (((xself).xready)) (FALSE))
                xstep_until.write
                  [xself xlimit]
                    memory > xret
                    seq > @
                      seq
                        xret.write (((xself).xstep).less (xlimit))
                        (xret).if
                          (((unsupported)) (((xself).xstep)) (1))
                        (((unsupported)) ((xret)))
                xtest_incomplete_set_bases_on_self.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((xself).xstep_until)) (1)).if
                                    seq
                                      (((unsupported)) ((((unsupported)) (((xcls).x__mro__)) ("None: is there a None literal in the EO language?"))))
                                      (((unsupported)) (((xcls).x__bases__)) ((((unsupported)) 0)))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                xtest_reent_set_bases_on_base.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((unsupported)) (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).and (((xcls).x__name__).eq "B")).if
                                    ((((xself).xstep_until)) (10)).if
                                      (((unsupported)) (((xA).x__bases__)) ((((unsupported)) 0)))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) (((xB).x__bases__)) ((((unsupported)) 0)))
                xtest_reent_set_bases_on_direct_base.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              memory > xbase
                              seq > @
                                seq
                                  xbase.write (((unsupported)) (((xcls).x__bases__)) (0))
                                  (((unsupported)) ((xbase)) ((xobject))).if
                                    ((((xself).xstep_until)) (5)).if
                                      (((unsupported)) (((xbase).x__bases__)) ((((unsupported)) 0)))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xB)))
                xtest_reent_set_bases_tp_base_cycle.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((xself).xready).if
                                    seq
                                      (((xcls).x__name__).eq "B1").if
                                        (((unsupported)) (((xB2).x__bases__)) ((((unsupported)) ((xB1)))))
                                      (((xcls).x__name__).eq "B2").if
                                        (((unsupported)) (((xB1).x__bases__)) ((((unsupported)) ((xB2)))))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) (((xself).xready)) (TRUE))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xB1).x__bases__)) ((((unsupported)) 0)))
                xtest_tp_subclasses_cycle_in_update_slots.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((xself).xready).and (((xcls).x__name__).eq "C")).if
                                    seq
                                      (((unsupported)) (((xself).xready)) (FALSE))
                                      (((unsupported)) (((xC).x__bases__)) ((((unsupported)) ((xB2)))))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) (((xself).xready)) (TRUE))
                        (((unsupported)) (((xC).x__bases__)) ((((unsupported)) ((xB1)))))
                        (((unsupported)) (((xB1).x__bases__)) ((((unsupported)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__bases__)) ((((unsupported)) ((xB2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xB2).x__subclasses__)) 0)) ((((unsupported)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xB1).x__subclasses__)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB1).x__bases__)) ((((unsupported)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC).x__subclasses__)) 0)) ((((unsupported)) ((xB1)))))
                xtest_tp_subclasses_cycle_error_return_path.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xException)))
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((xself).xready).and (((xcls).x__name__).eq "C")).if
                                    (((xC).x__bases__).eq (((unsupported)) ((xB2)))).if
                                      (((unsupported)) (((xself).xready)) (FALSE))
                                      seq
                                        (((unsupported)) (((xC).x__bases__)) ((((unsupported)) ((xB2)))))
                                        (((unsupported)) ((xE)))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) (((xself).xready)) (TRUE))
                        (((unsupported)) (((((xself).xassertRaises)) ((xE)))))
                          (((unsupported)) (((xC).x__bases__)) ((((unsupported)) ((xB1)))))
                        (((unsupported)) (((xB1).x__bases__)) ((((unsupported)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__bases__)) ((((unsupported)) ((xB2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__mro__)) ((((xtuple)) (((((xtype).xmro)) ((xC)))))))
                xtest_incomplete_extend.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((unsupported)) (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).and (((xcls).x__name__).neq "X")).if
                                    (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                                      (((unsupported)) ((xcls)))
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
                xtest_incomplete_super.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((unsupported)) (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).if
                                    (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                                      unsupported
                                  (((unsupported)) (((((xtype).xmro)) ((xcls)))))
                        (((unsupported)) ((xM)))
            xtest_main.write
              []
                seq > @
                  bogusForceDataize.write ((((xsupport).xrun_unittest)) ((xPTypesLongInitTest)) ((xOperatorsTest)) ((xClassPropertiesAndMethods)) ((xDictProxyTests)) ((xMiscTests)) ((xPicklingTests)) ((xSharedKeyTests)) ((xMroTest)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)) 0)