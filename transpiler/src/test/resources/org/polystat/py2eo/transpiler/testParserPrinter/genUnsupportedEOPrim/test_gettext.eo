memory > xcm
memory > xValueError
memory > x_
memory > xopen
memory > xgettext
memory > xx
memory > xDeprecationWarning
memory > xunittest
memory > xobject
memory > xlgettext
memory > xstr
memory > xrange
memory > xexpr
memory > xZeroDivisionError
memory > xDummyGNUTranslations
memory > xbase64
memory > xGettextBaseTest
memory > xpgettext
memory > xbuiltins
memory > xsupport
memory > xOSError
memory > xos
memory > xisinstance
memory > xlen
memory > xfp
memory > xTypeError
memory > x__name__
[] > test_gettext
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_security
        memory > xGNU_MO_DATA_ISSUE_17898
        memory > xMOFILE
        memory > xtest_bindtextdomain
        memory > xtest_lgettext_output_encoding
        memory > xtest_lngettext
        memory > xtest_ja
        memory > xtest_some_translations_with_context_and_domain
        memory > xUMO_DATA
        memory > xtest__all__
        memory > xtest_weird_metadata
        memory > xtest_de
        memory > xtest_some_translations
        memory > xtest_lt
        memory > xtest_lgettext
        memory > xtest_unicode_msgstr
        memory > xtest_plural_number
        memory > xtest_lngettext_bind_textdomain_codeset
        memory > xtest_gd2
        memory > xtest_pl
        memory > xLOCALEDIR
        memory > xassertDeprecated
        memory > xtest_triple_single_quotes
        memory > xtest_unicode_msgid
        memory > xtest_unicode_context_msgid
        memory > xtest_ignore_comments_in_headers_issue36239
        memory > xtest_lngettext_output_encoding
        memory > xtest_triple_double_quotes
        memory > xtest_decimal_number
        memory > xsetUp
        memory > xUMOFILE
        memory > xtest_gd
        memory > xtest_ro
        memory > xGNU_MO_DATA_BAD_MINOR_VERSION
        memory > xtest_multiline_strings
        memory > xtest_double_quotes
        memory > xtest_ar
        memory > xtest_lv
        memory > xMOFILE_BAD_MINOR_VERSION
        memory > xtest_unicode_msgstr_with_context
        memory > xtest_cs
        memory > xtest_ru
        memory > xtest_bad_minor_version
        memory > xtest_plural_context_forms2
        memory > xGNU_MO_DATA_BAD_MAJOR_VERSION
        memory > xtest_plural_forms2
        memory > xtest_plural_form_error_issue17898
        memory > xtest_cache
        memory > xtest_unicode_context_msgstr
        memory > xGNU_MO_DATA
        memory > xtest_lgettext_2
        memory > xtest_plural_context_forms1
        memory > xtest_lngettext_2
        memory > xtest_sl
        memory > xtest_division
        memory > xtest_plural_forms1
        memory > xtest_invalid_syntax
        memory > xtest_chained_comparison
        memory > xtest_nested_condition_operator
        memory > xtest_textdomain
        memory > xtest_lgettext_bind_textdomain_codeset
        memory > xtest_bad_major_version
        memory > xtest_fr
        memory > xMMOFILE
        memory > xtearDown
        memory > xMMO_DATA
        memory > xtest_some_translations_with_context
        memory > xtest_output_encoding
        memory > xfoo
        memory > xMOFILE_BAD_MAJOR_VERSION
        memory > xtest_the_alternative_interface
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xGNU_MO_DATA.write (((unsupported)) 0)
            xGNU_MO_DATA_BAD_MAJOR_VERSION.write (((unsupported)) 0)
            xGNU_MO_DATA_BAD_MINOR_VERSION.write (((unsupported)) 0)
            xUMO_DATA.write (((unsupported)) 0)
            xMMO_DATA.write (((unsupported)) 0)
            xLOCALEDIR.write (((((xos).xpath).xjoin)) ("xx") ("LC_MESSAGES"))
            xMOFILE.write (((((xos).xpath).xjoin)) ((xLOCALEDIR)) ("gettext.mo"))
            xMOFILE_BAD_MAJOR_VERSION.write (((((xos).xpath).xjoin)) ((xLOCALEDIR)) ("gettext_bad_major_version.mo"))
            xMOFILE_BAD_MINOR_VERSION.write (((((xos).xpath).xjoin)) ((xLOCALEDIR)) ("gettext_bad_minor_version.mo"))
            xUMOFILE.write (((((xos).xpath).xjoin)) ((xLOCALEDIR)) ("ugettext.mo"))
            xMMOFILE.write (((((xos).xpath).xjoin)) ((xLOCALEDIR)) ("metadata.mo"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        ((((((xos).xpath).xisdir)) ((xLOCALEDIR))).not).if
                          bogusForceDataize.write ((((xos).xmakedirs)) ((xLOCALEDIR)))
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xGNU_MO_DATA)))))
                        (((unsupported)) ((((xopen)) ((xMOFILE_BAD_MAJOR_VERSION)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xGNU_MO_DATA_BAD_MAJOR_VERSION)))))
                        (((unsupported)) ((((xopen)) ((xMOFILE_BAD_MINOR_VERSION)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xGNU_MO_DATA_BAD_MINOR_VERSION)))))
                        (((unsupported)) ((((xopen)) ((xUMOFILE)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xUMO_DATA)))))
                        (((unsupported)) ((((xopen)) ((xMMOFILE)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xMMO_DATA)))))
                        (((unsupported)) (((xself).xenv)) (((((xsupport).xEnvironmentVarGuard)) 0)))
                        (((unsupported)) ((((unsupported)) (((xself).xenv)) ("LANGUAGE"))) ("xx"))
                        bogusForceDataize.write (((((xgettext).x_translations).xclear)) 0)
                xtearDown.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xself).xenv).x__exit__)) 0)
                        (((unsupported)) ((((unsupported)) (((xself).xenv)))))
                        bogusForceDataize.write ((((xsupport).xrmtree)) ((((unsupported)) ((((((xos).xpath).xsplit)) ((xLOCALEDIR)))) (0))))
            xGNU_MO_DATA_ISSUE_17898.write (((unsupported)) 0)
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) (((xself).xlocaledir)) (((xos).xcurdir)))
                        (((unsupported)) (((xself).xmofile)) ((xMOFILE)))
                        (((unsupported)) (((xgettext).xinstall)) ("gettext") (((xself).xlocaledir)) ((((unsupported)) ("pgettext"))))
                xtest_some_translations.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("nudge nudge"))) ("wink wink"))
                xtest_some_translations_with_context.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((xpgettext)) ("my context") ("nudge nudge"))) ("wink wink (in \"my context\")"))
                        bogusForceDataize.write (((xeq)) ((((xpgettext)) ("my other context") ("nudge nudge"))) ("wink wink (in \"my other context\")"))
                xtest_double_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("nudge nudge"))) ("wink wink"))
                xtest_triple_single_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("nudge nudge"))) ("wink wink"))
                xtest_triple_double_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) ((((x_)) ("nudge nudge"))) ("wink wink"))
                xtest_multiline_strings.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) ((((x_)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                xtest_the_alternative_interface.write
                  [xself]
                    memory > xt
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        bogusForceDataize.write ((((xt).xinstall)) 0)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("nudge nudge"))) ("wink wink"))
                        bogusForceDataize.write ((((xt).xinstall)) 0)
                        bogusForceDataize.write (((xeq)) ((((x_)) ("mullusk"))) ("bacon"))
                        (((unsupported)) 0)
                        (((unsupported)) (((xt).xinstall)) ((((unsupported)) ("gettext") ("lgettext"))))
                        bogusForceDataize.write (((xeq)) ((x_)) (((xt).xgettext)))
                        bogusForceDataize.write (((xeq)) (((xbuiltins).xgettext)) (((xt).xgettext)))
                        bogusForceDataize.write (((xeq)) ((xlgettext)) (((xt).xlgettext)))
                        (((unsupported)) ((((unsupported)) (((xbuiltins).xgettext)))))
                        (((unsupported)) ((((unsupported)) (((xbuiltins).xlgettext)))))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) (((xself).xlocaledir)) (((xos).xcurdir)))
                        bogusForceDataize.write ((((xgettext).xbindtextdomain)) ("gettext") (((xself).xlocaledir)))
                        bogusForceDataize.write ((((xgettext).xtextdomain)) ("gettext"))
                        (((unsupported)) (((xself).x_)) (((xgettext).xgettext)))
                xtest_bindtextdomain.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xgettext).xbindtextdomain)) ("gettext"))) (((xself).xlocaledir)))
                xtest_textdomain.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xgettext).xtextdomain)) 0)) ("gettext"))
                xtest_bad_major_version.write
                  [xself]
                    memory > xexception
                    seq > @
                      (((unsupported)) ((((xopen)) ((xMOFILE_BAD_MAJOR_VERSION)) ("rb"))) ((xfp)))
                        seq
                          (((unsupported)) (((((xself).xassertRaises)) ((xOSError)))) ((xcm)))
                            bogusForceDataize.write ((((xgettext).xGNUTranslations)) ((xfp)))
                          xexception.write ((xcm).xexception)
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xexception).xerrno)) (0))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xexception).xstrerror)) ("Bad version number 5"))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xexception).xfilename)) ((xMOFILE_BAD_MAJOR_VERSION)))
                xtest_bad_minor_version.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xopen)) ((xMOFILE_BAD_MINOR_VERSION)) ("rb"))) ((xfp)))
                        bogusForceDataize.write ((((xgettext).xGNUTranslations)) ((xfp)))
                xtest_some_translations.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("nudge nudge"))) ("wink wink"))
                xtest_some_translations_with_context.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xgettext).xpgettext)) ("my context") ("nudge nudge"))) ("wink wink (in \"my context\")"))
                        bogusForceDataize.write (((xeq)) (((((xgettext).xpgettext)) ("my other context") ("nudge nudge"))) ("wink wink (in \"my other context\")"))
                xtest_some_translations_with_context_and_domain.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xgettext).xdpgettext)) ("gettext") ("my context") ("nudge nudge"))) ("wink wink (in \"my context\")"))
                        bogusForceDataize.write (((xeq)) (((((xgettext).xdpgettext)) ("gettext") ("my other context") ("nudge nudge"))) ("wink wink (in \"my other context\")"))
                xtest_double_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("nudge nudge"))) ("wink wink"))
                xtest_triple_single_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("nudge nudge"))) ("wink wink"))
                xtest_triple_double_quotes.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("albatross"))) ("albatross"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("mullusk"))) ("bacon"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("Raymond Luxury Yach-t"))) ("Throatwobbler Mangrove"))
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ("nudge nudge"))) ("wink wink"))
                xtest_multiline_strings.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        bogusForceDataize.write (((xeq)) (((((xself).x_)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) (((xself).xmofile)) ((xMOFILE)))
                xtest_plural_forms1.write
                  [xself]
                    memory > xeq
                    memory > xx
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xx.write ((((xgettext).xngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s fichero"))
                        xx.write ((((xgettext).xngettext)) ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s ficheros"))
                xtest_plural_context_forms1.write
                  [xself]
                    memory > xeq
                    memory > xx
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xx.write ((((xgettext).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s fichero (context)"))
                        xx.write ((((xgettext).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s ficheros (context)"))
                xtest_plural_forms2.write
                  [xself]
                    memory > xt
                    memory > xeq
                    memory > xx
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xx.write ((((xt).xngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s fichero"))
                        xx.write ((((xt).xngettext)) ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s ficheros"))
                xtest_plural_context_forms2.write
                  [xself]
                    memory > xt
                    memory > xeq
                    memory > xx
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xx.write ((((xt).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s fichero (context)"))
                        xx.write ((((xt).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write (((xeq)) ((xx)) ("Hay %s ficheros (context)"))
                xtest_ja.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("0"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))
                xtest_de.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n != 1"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("10111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"))
                xtest_fr.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n>1"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"))
                xtest_lv.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20111111111111111111101111111110111111111011111111101111111110111111111011111111101111111110111111111011111111111111111110111111111011111111101111111110111111111011111111101111111110111111111011111111"))
                xtest_gd.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n==1 ? 0 : n==2 ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"))
                xtest_gd2.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n==1 ? 0 : (n==2 ? 1 : 2)"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"))
                xtest_ro.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("10111111111111111111222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111122222222222222222222222222222222222222222222222222222222222222222222222222222222"))
                xtest_lt.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20111111112222222222201111111120111111112011111111201111111120111111112011111111201111111120111111112011111111222222222220111111112011111111201111111120111111112011111111201111111120111111112011111111"))
                xtest_ru.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20111222222222222222201112222220111222222011122222201112222220111222222011122222201112222220111222222011122222222222222220111222222011122222201112222220111222222011122222201112222220111222222011122222"))
                xtest_cs.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20111222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"))
                xtest_pl.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("20111222222222222222221112222222111222222211122222221112222222111222222211122222221112222222111222222211122222222222222222111222222211122222221112222222111222222211122222221112222222111222222211122222"))
                xtest_sl.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("30122333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333012233333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))
                xtest_ar.write
                  [xself]
                    memory > xf
                    memory > xeq
                    memory > xs
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xf.write ((((xgettext).xc2py)) ("n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5"))
                        xs.write ((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (200))))))
                        bogusForceDataize.write (((xeq)) ((xs)) ("01233333333444444444444444444444444444444444444444444444444444444444444444444444444444444444444444445553333333344444444444444444444444444444444444444444444444444444444444444444444444444444444444444444"))
                xtest_security.write
                  [xself]
                    memory > xraises
                    seq > @
                      seq
                        xraises.write ((xself).xassertRaises)
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) ("os.chmod('/etc/passwd',0777)"))
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) ("\"(eval(foo) && \"\""))
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) ("f\"{os.system('sh')}\""))
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) ((("n+".mul 10000).add "n")))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ((("n+".mul 100).add "n")))) (1))) (101))
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) (((("(".mul 100).add "n").add (")".mul 100))))
                        bogusForceDataize.write (((xraises)) ((xValueError)) (((xgettext).xc2py)) (((("(".mul 10000).add "n").add (")".mul 10000))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) (((("(".mul 20).add "n").add (")".mul 20))))) (1))) (1))
                xtest_chained_comparison.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xgettext).xc2py)) ("n == n == n"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (3))))))) ("010"))
                        xf.write ((((xgettext).xc2py)) ("1 < n == n"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (3))))))) ("100"))
                        xf.write ((((xgettext).xc2py)) ("n == n < 2"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (3))))))) ("010"))
                        xf.write ((((xgettext).xc2py)) ("0 < n < 2"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) ((((unsupported)) ((((xstr)) ((((xf)) ((xx)))))) ((xx)) ((((xrange)) (3))))))) ("111"))
                xtest_decimal_number.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ("0123"))) (1))) (123))
                xtest_invalid_syntax.write
                  [xself]
                    memory > xinvalid_expressions
                    seq > @
                      seq
                        xinvalid_expressions.write (((unsupported)) ("x>1") ("(n>1") ("n>1)") ("42**42**42") ("0xa") ("1.0") ("1e2") ("n>0x1") ("+n") ("-n") ("n()") ("n(1)") ("1+") ("nn") ("n n"))
                        (((unsupported)) ((xexpr)) ((xinvalid_expressions)))
                          (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                            bogusForceDataize.write ((((xgettext).xc2py)) ((xexpr)))
                xtest_nested_condition_operator.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ("n?1?2:3:4"))) (0))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ("n?1?2:3:4"))) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ("n?1:3?4:5"))) (0))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xgettext).xc2py)) ("n?1:3?4:5"))) (1))) (1))
                xtest_division.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xgettext).xc2py)) ("2/n*3"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (1))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (2))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (3))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((1.neg)))) ((6.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) (0))
                xtest_plural_number.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xgettext).xc2py)) ("n != 1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (1))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (2))) (1))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (1.0))) (0))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (2.0))) (1))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (1.1))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ("2"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ("2"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((((xobject)) 0)))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) (((xself).xmofile)) ((xMOFILE)))
                xassertDeprecated.write
                  [xself xname]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("^{name}() is deprecated"))))
                          (((unsupported)) 0)
                xtest_lgettext.write
                  [xself]
                    memory > xlgettext
                    memory > xldgettext
                    seq > @
                      seq
                        xlgettext.write ((xgettext).xlgettext)
                        xldgettext.write ((xgettext).xldgettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("mullusk"))) ("bacon"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("spam"))) ("spam"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xldgettext)) ("gettext") ("mullusk"))) ("bacon"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xldgettext)) ("gettext") ("spam"))) ("spam"))
                xtest_lgettext_2.write
                  [xself]
                    memory > xt
                    memory > xlgettext
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xlgettext.write ((xt).xlgettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("mullusk"))) ("bacon"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("spam"))) ("spam"))
                xtest_lgettext_bind_textdomain_codeset.write
                  [xself]
                    memory > xldgettext
                    memory > xsaved_codeset
                    memory > xlgettext
                    seq > @
                      seq
                        xlgettext.write ((xgettext).xlgettext)
                        xldgettext.write ((xgettext).xldgettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                          xsaved_codeset.write ((((xgettext).xbind_textdomain_codeset)) ("gettext"))
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                              bogusForceDataize.write ((((xgettext).xbind_textdomain_codeset)) ("gettext") ("utf-16"))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("mullusk"))) (((("bacon".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("spam"))) (((("spam".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldgettext"))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xldgettext)) ("gettext") ("mullusk"))) (((("bacon".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldgettext"))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xldgettext)) ("gettext") ("spam"))) (((("spam".xencode)) ("utf-16"))))
                          seq
                            (((unsupported)) ((((unsupported)) ((((unsupported)) (((xgettext).x_localecodesets)) ("gettext"))))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                              bogusForceDataize.write ((((xgettext).xbind_textdomain_codeset)) ("gettext") ((xsaved_codeset)))
                xtest_lgettext_output_encoding.write
                  [xself]
                    memory > xt
                    memory > xlgettext
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xlgettext.write ((xt).xlgettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("set_output_charset"))))
                          bogusForceDataize.write ((((xt).xset_output_charset)) ("utf-16"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("mullusk"))) (((("bacon".xencode)) ("utf-16"))))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lgettext"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlgettext)) ("spam"))) (((("spam".xencode)) ("utf-16"))))
                xtest_lngettext.write
                  [xself]
                    memory > xx
                    memory > xldngettext
                    memory > xlngettext
                    seq > @
                      seq
                        xlngettext.write ((xgettext).xlngettext)
                        xldngettext.write ((xgettext).xldngettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s fichero"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s ficheros"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There is %s directory"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There are %s directories"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                          xx.write (((xldngettext)) ("gettext") ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s fichero"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                          xx.write (((xldngettext)) ("gettext") ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s ficheros"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                          xx.write (((xldngettext)) ("gettext") ("There is %s directory") ("There are %s directories") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There is %s directory"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                          xx.write (((xldngettext)) ("gettext") ("There is %s directory") ("There are %s directories") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There are %s directories"))
                xtest_lngettext_2.write
                  [xself]
                    memory > xt
                    memory > xx
                    memory > xlngettext
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xlngettext.write ((xt).xlngettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s fichero"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("Hay %s ficheros"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There is %s directory"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("There are %s directories"))
                xtest_lngettext_bind_textdomain_codeset.write
                  [xself]
                    memory > xsaved_codeset
                    memory > xx
                    memory > xldngettext
                    memory > xlngettext
                    seq > @
                      seq
                        xlngettext.write ((xgettext).xlngettext)
                        xldngettext.write ((xgettext).xldngettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                          xsaved_codeset.write ((((xgettext).xbind_textdomain_codeset)) ("gettext"))
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                              bogusForceDataize.write ((((xgettext).xbind_textdomain_codeset)) ("gettext") ("utf-16"))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                              xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s fichero".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                              xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s ficheros".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                              xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There is %s directory".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                              xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There are %s directories".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                              xx.write (((xldngettext)) ("gettext") ("There is %s file") ("There are %s files") (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s fichero".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                              xx.write (((xldngettext)) ("gettext") ("There is %s file") ("There are %s files") (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s ficheros".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                              xx.write (((xldngettext)) ("gettext") ("There is %s directory") ("There are %s directories") (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There is %s directory".xencode)) ("utf-16"))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("ldngettext"))))
                              xx.write (((xldngettext)) ("gettext") ("There is %s directory") ("There are %s directories") (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There are %s directories".xencode)) ("utf-16"))))
                          seq
                            (((unsupported)) ((((unsupported)) ((((unsupported)) (((xgettext).x_localecodesets)) ("gettext"))))))
                            (((unsupported)) (((((xself).xassertDeprecated)) ("bind_textdomain_codeset"))))
                              bogusForceDataize.write ((((xgettext).xbind_textdomain_codeset)) ("gettext") ((xsaved_codeset)))
                xtest_lngettext_output_encoding.write
                  [xself]
                    memory > xt
                    memory > xx
                    memory > xlngettext
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        xlngettext.write ((xt).xlngettext)
                        (((unsupported)) (((((xself).xassertDeprecated)) ("set_output_charset"))))
                          bogusForceDataize.write ((((xt).xset_output_charset)) ("utf-16"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s fichero".xencode)) ("utf-16"))))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s file") ("There are %s files") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("Hay %s ficheros".xencode)) ("utf-16"))))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There is %s directory".xencode)) ("utf-16"))))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("lngettext"))))
                          xx.write (((xlngettext)) ("There is %s directory") ("There are %s directories") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (((("There are %s directories".xencode)) ("utf-16"))))
                xtest_output_encoding.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) (((xself).xmofile)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("set_output_charset"))))
                          bogusForceDataize.write ((((xt).xset_output_charset)) ("utf-16"))
                        (((unsupported)) (((((xself).xassertDeprecated)) ("output_charset"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xoutput_charset)) 0)) ("utf-16"))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xtest_plural_form_error_issue17898.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xGNU_MO_DATA_ISSUE_17898)))))
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("rb"))) ((xfp)))
                          xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                xtest_ignore_comments_in_headers_issue36239.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("wb"))) ((xfp)))
                          bogusForceDataize.write ((((xfp).xwrite)) (((((xbase64).xdecodebytes)) ((xGNU_MO_DATA_ISSUE_17898)))))
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("rb"))) ((xfp)))
                          seq
                            xt.write ((((xgettext).xGNUTranslations)) ((xfp)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((xt).xinfo)) 0)) ("plural-forms"))) ("nplurals=2; plural=(n != 1);"))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) ((((xopen)) ((xUMOFILE)) ("rb"))) ((xfp)))
                          (((unsupported)) (((xself).xt)) (((((xgettext).xGNUTranslations)) ((xfp)))))
                        (((unsupported)) (((xself).x_)) ((((xself).xt).xgettext)))
                        (((unsupported)) (((xself).xpgettext)) ((((xself).xt).xpgettext)))
                xtest_unicode_msgid.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xself).x_)) (""))) ((xstr)))
                xtest_unicode_msgstr.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).x_)) ("abxde"))) ("xa4yz"))
                xtest_unicode_context_msgstr.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        xt.write ((((xself).xpgettext)) ("mycontextxde") ("abxde"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((xt)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ("xa4yz (context version)"))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) ((((xopen)) ((xMOFILE)) ("rb"))) ((xfp)))
                          (((unsupported)) (((xself).xt)) (((((xgettext).xGNUTranslations)) ((xfp)))))
                        (((unsupported)) (((xself).xngettext)) ((((xself).xt).xngettext)))
                        (((unsupported)) (((xself).xnpgettext)) ((((xself).xt).xnpgettext)))
                xtest_unicode_msgid.write
                  [xself]
                    memory > xunless
                    seq > @
                      seq
                        xunless.write ((xself).xassertTrue)
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) (((((xself).xngettext)) ("") ("") (1))) ((xstr)))))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) (((((xself).xngettext)) ("") ("") (2))) ((xstr)))))
                xtest_unicode_context_msgid.write
                  [xself]
                    memory > xunless
                    seq > @
                      seq
                        xunless.write ((xself).xassertTrue)
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) (((((xself).xnpgettext)) ("") ("") ("") (1))) ((xstr)))))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) (((((xself).xnpgettext)) ("") ("") ("") (2))) ((xstr)))))
                xtest_unicode_msgstr.write
                  [xself]
                    memory > xt
                    memory > xeq
                    memory > xunless
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xunless.write ((xself).xassertTrue)
                        xt.write ((((xself).xngettext)) ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) ((xt)) ((xstr)))))
                        bogusForceDataize.write (((xeq)) ((xt)) ("Hay %s fichero"))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) ((xt)) ((xstr)))))
                        xt.write ((((xself).xngettext)) ("There is %s file") ("There are %s files") (5))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) ((xt)) ((xstr)))))
                        bogusForceDataize.write (((xeq)) ((xt)) ("Hay %s ficheros"))
                xtest_unicode_msgstr_with_context.write
                  [xself]
                    memory > xt
                    memory > xeq
                    memory > xunless
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xunless.write ((xself).xassertTrue)
                        xt.write ((((xself).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (1))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) ((xt)) ((xstr)))))
                        bogusForceDataize.write (((xeq)) ((xt)) ("Hay %s fichero (context)"))
                        xt.write ((((xself).xnpgettext)) ("With context") ("There is %s file") ("There are %s files") (5))
                        bogusForceDataize.write (((xunless)) ((((xisinstance)) ((xt)) ((xstr)))))
                        bogusForceDataize.write (((xeq)) ((xt)) ("Hay %s ficheros (context)"))
            (((unsupported)) ((xGettextBaseTest)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xGettextBaseTest).xsetUp)) ((xself)))
                        (((unsupported)) ((((xopen)) ((xMMOFILE)) ("rb"))) ((xfp)))
                          (((unsupported)) 0)
                            (((unsupported)) (((xself).xt)) (((((xgettext).xGNUTranslations)) ((xfp)))))
                            seq
                              bogusForceDataize.write ((((xself).xtearDown)) 0)
                              (((unsupported)) 0)
                xtest_weird_metadata.write
                  [xself]
                    memory > xinfo
                    seq > @
                      seq
                        xinfo.write (((((xself).xt).xinfo)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xinfo)))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xinfo)) ("last-translator"))) ("John Doe <jdoe@example.com>nJane Foobar <jfoobar@example.com>"))
            (((unsupported)) (((xgettext).xGNUTranslations)))
              xfoo.write
                [xself]
                  seq > @
                    (((unsupported)) ("foo"))
            (((unsupported)) ((xGettextBaseTest)))
              xtest_cache.write
                [xself]
                  memory > xt
                  seq > @
                    seq
                      (((unsupported)) (((xself).xlocaledir)) (((xos).xcurdir)))
                      (((unsupported)) (((xself).xmofile)) ((xMOFILE)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xgettext).x_translations)))) (0))
                      xt.write ((((xgettext).xtranslation)) ("gettext") (((xself).xlocaledir)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xgettext).x_translations)))) (1))
                      xt.write (((unsupported)) (((xgettext).xtranslation)) ("gettext") (((xself).xlocaledir)) ((xDummyGNUTranslations)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xgettext).x_translations)))) (2))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xt).x__class__)) ((xDummyGNUTranslations)))
                      xt.write (((unsupported)) (((xgettext).xtranslation)) ("gettext") (((xself).xlocaledir)) ((xDummyGNUTranslations)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xgettext).x_translations)))) (2))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xt).x__class__)) ((xDummyGNUTranslations)))
                      (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("parameter codeset"))))
                        xt.write (((unsupported)) (((xgettext).xtranslation)) ("gettext") (((xself).xlocaledir)) ((xDummyGNUTranslations)) ("utf-16"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((xgettext).x_translations)))) (2))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xt).x__class__)) ((xDummyGNUTranslations)))
                      (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xoutput_charset)) 0)) ("utf-16"))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest__all__.write
                [xself]
                  memory > xblacklist
                  seq > @
                    seq
                      xblacklist.write (((unsupported)) ("c2py") ("ENOENT"))
                      (((unsupported)) (((xsupport).xcheck__all__)) ((xself)) ((xgettext)) ((xblacklist)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)