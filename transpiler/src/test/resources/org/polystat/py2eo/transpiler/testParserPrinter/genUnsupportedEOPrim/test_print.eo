memory > xAttributeError
memory > xRuntimeError
memory > xstr
memory > xcontext
memory > xOverrideRRShift
memory > xmax
memory > xprint
memory > xend
memory > xClassWith__str__
memory > xargs
memory > xSyntaxError
memory > xsep
memory > xobject
memory > xnoflush
memory > xfile
memory > xt
memory > xexec
memory > xfilelike
memory > xsupport
memory > xsys
memory > xStringIO
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_print
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__str__
        memory > xtest_string_with_semicolon
        memory > xcheck
        memory > xtest_string_with_leading_whitespace
        memory > xNotDefined
        memory > xtest_string_in_loop_on_same_line
        memory > xtest_string_with_soft_space
        memory > x__init__
        memory > xtest_print
        memory > xtest_stream_redirection_hint_for_py2_migration
        memory > xdispatch
        memory > xtest_print_flush
        memory > xtest_normal_string
        memory > xtest_string_with_excessive_whitespace
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xNotDefined.write (((xobject)) 0)
            xdispatch.write (((unsupported)) ((((unsupported)) (FALSE) (FALSE) (FALSE))) ((((unsupported)) ((((xprint)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (FALSE) (FALSE) (TRUE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xfile)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (FALSE) (TRUE) (FALSE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xend)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (FALSE) (TRUE) (TRUE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xend)) ((xfile)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (TRUE) (FALSE) (FALSE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xsep)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (TRUE) (FALSE) (TRUE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xsep)) ((xfile)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (TRUE) (TRUE) (FALSE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xsep)) ((xend)) ((((unsupported)) ((xargs)))))))) ((((unsupported)) (TRUE) (TRUE) (TRUE))) ((((unsupported)) ((((unsupported)) ((xprint)) ((xsep)) ((xend)) ((xfile)) ((((unsupported)) ((xargs)))))))))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xx]
                    seq > @
                      (((unsupported)) (((xself).xx)) ((xx)))
                x__str__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xx)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xcheck.write
                  [xself xexpected xargs xsep xend xfile]
                    memory > xfn
                    seq > @
                      (((unsupported)) 0)
                        xfn.write (((unsupported)) ((xdispatch)) ((((unsupported)) ((((unsupported)) ((xsep)) ((xNotDefined)))) ((((unsupported)) ((xend)) ((xNotDefined)))) ((((unsupported)) ((xfile)) ((xNotDefined)))))))
                        (((unsupported)) (((((xsupport).xcaptured_stdout)) 0)) ((xt)))
                          bogusForceDataize.write (((xfn)) ((xargs)) ((xsep)) ((xend)) ((xfile)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xgetvalue)) 0)) ((xexpected)))
                xtest_print.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        xx.write
                          [xexpected xargs xsep xend]
                            memory > xo
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((xself).xcheck)) ((xexpected)) ((xargs)) ((xsep)) ((xend)))
                                xo.write (((xStringIO)) 0)
                                (((unsupported)) (((xself).xcheck)) ("") ((xargs)) ((xsep)) ((xend)) ((xo)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((((xo).xgetvalue)) 0)) ((xexpected)))
                        bogusForceDataize.write (((xx)) ("n") ((((unsupported)) 0)))
                        bogusForceDataize.write (((xx)) ("an") ((((unsupported)) ("a"))))
                        bogusForceDataize.write (((xx)) ("Nonen") ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((xx)) ("1 2n") ((((unsupported)) (1) (2))))
                        bogusForceDataize.write (((xx)) ("1   2n") ((((unsupported)) (1) (" ") (2))))
                        (((unsupported)) ((xx)) ("1*2n") ((((unsupported)) (1) (2))) ("*"))
                        (((unsupported)) ((xx)) ("1 s") ((((unsupported)) (1) ("s"))) (""))
                        (((unsupported)) ((xx)) ("anbn") ((((unsupported)) ("a") ("b"))) ("n"))
                        (((unsupported)) ((xx)) ("1.01") ((((unsupported)) (1.0) (1))) ("") (""))
                        (((unsupported)) ((xx)) ("1*a*1.3+") ((((unsupported)) (1) ("a") (1.3))) ("*") ("+"))
                        (((unsupported)) ((xx)) ("annbn") ((((unsupported)) ("an") ("b"))) ("n"))
                        (((unsupported)) ((xx)) ("0+ +0n") ((((unsupported)) ("0") (" ") ("0"))) ("+"))
                        bogusForceDataize.write (((xx)) ("an bn") ((((unsupported)) ("an") ("b"))))
                        (((unsupported)) ((xx)) ("an bn") ((((unsupported)) ("an") ("b"))) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xx)) ("an bn") ((((unsupported)) ("an") ("b"))) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xx)) ("an bn") ((((unsupported)) ("an") ("b"))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write (((xx)) ("*n") ((((unsupported)) ((((xClassWith__str__)) ("*"))))))
                        bogusForceDataize.write (((xx)) ("abc 1n") ((((unsupported)) ((((xClassWith__str__)) ("abc"))) (1))))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xprint)) ("") (3))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xprint)) ("") (3))
                        (((unsupported)) (((xself).xassertRaises)) ((xAttributeError)) ((xprint)) ("") (""))
                xtest_print_flush.write
                  [xself]
                    memory > xflush
                    memory > x__init__
                    memory > xf
                    memory > xwrite
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xwritten)) (""))
                                    (((unsupported)) (((xself).xflushed)) (0))
                            xwrite.write
                              [xself xstr]
                                seq > @
                                  (((unsupported)) (((xself).xwritten)) ((xstr)))
                            xflush.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xflushed)) (1))
                        xf.write (((xfilelike)) 0)
                        (((unsupported)) ((xprint)) (1) ((xf)) ("") (TRUE))
                        (((unsupported)) ((xprint)) (2) ((xf)) ("") (TRUE))
                        (((unsupported)) ((xprint)) (3) ((xf)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xwritten)) ("123n"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xflushed)) (2))
                        (((unsupported)) 0)
                          seq
                            xwrite.write
                              [xself xstr]
                                seq > @
                            xflush.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xRuntimeError)))
                        (((unsupported)) (((xself).xassertRaises)) ((xRuntimeError)) ((xprint)) (1) ((((xnoflush)) 0)) (TRUE))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xtest_normal_string.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write "print \"Hello World\""
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(\"Hello World\")") ((((xstr)) (((xcontext).xexception)))))
                xtest_string_with_soft_space.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write "print \"Hello World\","
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(\"Hello World\", end=\" \")") ((((xstr)) (((xcontext).xexception)))))
                xtest_string_with_excessive_whitespace.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write "print  \"Hello World\", "
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(\"Hello World\", end=\" \")") ((((xstr)) (((xcontext).xexception)))))
                xtest_string_with_leading_whitespace.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(\"Hello World\")") ((((xstr)) (((xcontext).xexception)))))
                xtest_string_with_semicolon.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write "print p;"
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(p)") ((((xstr)) (((xcontext).xexception)))))
                xtest_string_in_loop_on_same_line.write
                  [xself]
                    memory > xpython2_print_str
                    seq > @
                      seq
                        xpython2_print_str.write "for i in s: print i"
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcontext)))
                          bogusForceDataize.write (((xexec)) ((xpython2_print_str)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("print(i)") ((((xstr)) (((xcontext).xexception)))))
                xtest_stream_redirection_hint_for_py2_migration.write
                  [xself]
                    memory > x__rrshift__
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcontext)))
                          (((unsupported)) ((xprint)) (((xsys).xstderr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("Did you mean \"print(<message>, file=<output_stream>)\"?") ((((xstr)) (((xcontext).xexception)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcontext)))
                          (((unsupported)) ((xprint)) (42))
                        bogusForceDataize.write ((((xself).xassertIn)) ("Did you mean \"print(<message>, file=<output_stream>)\"?") ((((xstr)) (((xcontext).xexception)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcontext)))
                          (((unsupported)) ((xmax)) (((xsys).xstderr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("Did you mean ") ((((xstr)) (((xcontext).xexception)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcontext)))
                          (((unsupported)) ((xprint)) (((xsys).xstderr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("Did you mean") ((((xstr)) (((xcontext).xexception)))))
                        (((unsupported)) 0)
                          x__rrshift__.write
                            [xself xlhs]
                              seq > @
                                (((unsupported)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xprint)) ((((xOverrideRRShift)) 0)))) (42))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)