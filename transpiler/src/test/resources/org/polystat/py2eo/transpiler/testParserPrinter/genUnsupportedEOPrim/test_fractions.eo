memory > xd
memory > xlist
memory > xmath
memory > xZeroDivisionError
memory > xdivmod
memory > xdumps
memory > xe
memory > xcopy
memory > xround
memory > xcomplex
memory > xAttributeError
memory > xnum
memory > xDummyRational
memory > xValueError
memory > xCustomValue
memory > xdeepcopy
memory > xsign
memory > xstr
memory > xnumbers
memory > xwarnings
memory > xAssertionError
memory > xfact
memory > xtype
memory > xDummyFraction
memory > xrepr
memory > xint
memory > xda
memory > xOverflowError
memory > xoperator
memory > xi
memory > xDummyFloat
memory > xs
memory > xsys
memory > xbool
memory > xNotImplemented
memory > xDeprecationWarning
memory > xfloat
memory > xargs
memory > xfractions
memory > xna
memory > xpow
memory > xid
memory > xsetattr
memory > xunittest
memory > xDecimal
memory > xhash
memory > xmap
memory > xn
memory > xobject
memory > xkwargs
memory > xabs
memory > xop
memory > xisinstance
memory > xfunctools
memory > xTypeError
memory > xloads
memory > x__name__
[] > test_fractions
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtestInitFromDecimal
        memory > xassertTypedEquals
        memory > xtestFromString
        memory > xtest_as_integer_ratio
        memory > xtestApproximatePi
        memory > xtestBoolGuarateesBoolReturn
        memory > xtestImmutable
        memory > x__rsub__
        memory > xtestRound
        memory > xtestComparisons
        memory > xtestLargeArithmetic
        memory > xtestMixedEqual
        memory > xtestBigFloatComparisons
        memory > xtestMixedArithmetic
        memory > x__eq__
        memory > xtestMixingWithDecimal
        memory > x__sub__
        memory > xtestConversions
        memory > xtestInit
        memory > xtestArithmetic
        memory > xtest_copy_deepcopy_pickle
        memory > xtestMixedLessEqual
        memory > x__le__
        memory > x__lt__
        memory > xtestApproximateCos1
        memory > x_components
        memory > xtest_slots
        memory > xtestFromFloat
        memory > xassertTypedTupleEquals
        memory > x__gt__
        memory > xtestComparisonsDummyRational
        memory > xF
        memory > xtestHash
        memory > x__init__
        memory > xtestFromDecimal
        memory > xtestMixedLess
        memory > x_richcmp
        memory > xtestMisc
        memory > xtestLimitDenominator
        memory > xassertRaisesMessage
        memory > xtestBigComplexComparisons
        memory > x__float__
        memory > xtestStringification
        memory > xtestComparisonsDummyFloat
        memory > xgcd
        memory > xtestInitFromFloat
        memory > x__ge__
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            xF.write ((xfractions).xFraction)
            xgcd.write ((xfractions).xgcd)
            (((unsupported)) ((xobject)))
              seq
                unsupported
                x__init__.write
                  [xself xvalue]
                    seq > @
                      seq
                        ((((xisinstance)) ((xvalue)) ((xfloat))).not).if
                          (((unsupported)) ((((xTypeError)) ("DummyFloat can only be initialized from float"))))
                        (((unsupported)) (((xself).xvalue)) ((xvalue)))
                x_richcmp.write
                  [xself xother xop]
                    seq > @
                      (((xisinstance)) ((xother)) (((xnumbers).xRational))).if
                        (((unsupported)) ((((xop)) (((((xF).xfrom_float)) (((xself).xvalue)))) ((xother)))))
                        (((xisinstance)) ((xother)) ((xDummyFloat))).if
                          (((unsupported)) ((((xop)) (((xself).xvalue)) (((xother).xvalue)))))
                          (((unsupported)) ((xNotImplemented)))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).x_richcmp)) ((xother)) (((xoperator).xeq)))))
                x__le__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).x_richcmp)) ((xother)) (((xoperator).xle)))))
                x__lt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).x_richcmp)) ((xother)) (((xoperator).xlt)))))
                x__ge__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).x_richcmp)) ((xother)) (((xoperator).xge)))))
                x__gt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).x_richcmp)) ((xother)) (((xoperator).xgt)))))
                x__float__.write
                  [xself]
                    seq > @
                      (((unsupported)) (FALSE) ("__float__ should not be invoked for comparisons"))
                x__sub__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (FALSE) ("__sub__ should not be invoked for comparisons"))
                x__rsub__.write (x__sub__)
            (((unsupported)) ((xobject)))
              seq
                unsupported
                x__init__.write
                  [xself xnum xden]
                    memory > xg
                    seq > @
                      seq
                        xg.write ((((xmath).xgcd)) ((xnum)) ((xden)))
                        (((unsupported)) (((xself).xnum)) ((((unsupported)) ((xnum)) ((xg)))))
                        (((unsupported)) (((xself).xden)) ((((unsupported)) ((xden)) ((xg)))))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((xisinstance)) ((xother)) (((xfractions).xFraction))).if
                        (((unsupported)) (((((xself).xnum).eq ((xother).x_numerator)).and (((xself).xden).eq ((xother).x_denominator)))))
                        (((unsupported)) ((xNotImplemented)))
                x__lt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).xnum).mul ((xother).x_denominator)).less (((xself).xden).mul ((xother).x_numerator)))))
                x__gt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).xnum).mul ((xother).x_denominator)).greater (((xself).xden).mul ((xother).x_numerator)))))
                x__le__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).xnum).mul ((xother).x_denominator)).leq (((xself).xden).mul ((xother).x_numerator)))))
                x__ge__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((((xself).xnum).mul ((xother).x_denominator)).geq (((xself).xden).mul ((xother).x_numerator)))))
                x__float__.write
                  [xself]
                    seq > @
                      (((unsupported)) (FALSE) ("__float__ should not be invoked"))
            (((unsupported)) (((xfractions).xFraction)))
              unsupported
            (((unsupported)) (((xunittest).xTestCase)))
              xtestMisc.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("fractions.gcd"))))
                        bogusForceDataize.write (((xgcd)) (1) (1))
                      (((unsupported)) (((((xwarnings).xcatch_warnings)) 0)))
                        seq
                          bogusForceDataize.write ((((xwarnings).xfilterwarnings)) ("ignore") ("fractions.gcd") ((xDeprecationWarning)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgcd)) (0) (0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgcd)) (1) (0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((1.neg)) ((((xgcd)) ((1.neg)) (0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgcd)) (0) (1))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((1.neg)) ((((xgcd)) (0) ((1.neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgcd)) (7) (1))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((1.neg)) ((((xgcd)) (7) ((1.neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgcd)) ((23.neg)) (15))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (12) ((((xgcd)) (120) (84))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((12.neg)) ((((xgcd)) (84) ((120.neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (120.0) (84))) (12.0))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (120) (84.0))) (12.0))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((((xF)) (120))) ((((xF)) (84))))) ((((xF)) (12))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((((xF)) (120) (77))) ((((xF)) (84) (55))))) ((((xF)) (12) (385))))
            x_components.write
              [xr]
                seq > @
                  (((unsupported)) ((((unsupported)) (((xr).xnumerator)) (((xr).xdenominator)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xassertTypedEquals.write
                  [xself xexpected xactual]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xexpected)))) ((((xtype)) ((xactual)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xexpected)) ((xactual)))
                xassertTypedTupleEquals.write
                  [xself xexpected xactual]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertTupleEqual)) ((xexpected)) ((xactual)))
                        bogusForceDataize.write ((((xself).xassertListEqual)) ((((xlist)) ((((xmap)) ((xtype)) ((xexpected)))))) ((((xlist)) ((((xmap)) ((xtype)) ((xactual)))))))
                xassertRaisesMessage.write
                  [xself xexc_type xmessage xcallable]
                    seq > @
                      (((unsupported)) 0)
                        unsupported
                        (((unsupported)) ((xexc_type)))
                          bogusForceDataize.write (((xcallable)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xmessage)) ((((xstr)) ((xe)))))
                          bogusForceDataize.write ((((xself).xfail)) (("%s not raised".mod ((xexc_type).x__name__))))
                xtestInit.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) ((((xF)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (1))) ((((x_components)) ((((xF)) (7))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (3))) ((((x_components)) ((((xF)) ((((xF)) (7) (3))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((1.neg)) (1))) ((((x_components)) ((((xF)) ((1.neg)) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((1.neg)) (1))) ((((x_components)) ((((xF)) (1) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) (1))) ((((x_components)) ((((xF)) ((2.neg)) ((2.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) (2))) ((((x_components)) ((((xF)) (5) (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (15))) ((((x_components)) ((((xF)) (7) (15))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (10) (23))) (1))) ((((x_components)) ((((xF)) ((((unsupported)) (10) (23))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (3) (77))) ((((x_components)) ((((xF)) ((((xF)) (3) (7))) (11))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((9.neg)) (5))) ((((x_components)) ((((xF)) (2) ((((xF)) ((10.neg)) (9))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (2486) (2485))) ((((x_components)) ((((xF)) ((((xF)) (22) (7))) ((((xF)) (355) (113))))))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xZeroDivisionError)) ("Fraction(12, 0)") ((xF)) (12) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xF)) ((1.5.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xF)) ("3/2") (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xF)) (3) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xF)) (3) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xF)) (1) (2) (3))
                xtestInitFromFloat.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (5) (2))) ((((x_components)) ((((xF)) (2.5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) ((((xF)) ((0.0.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((x_components)) ((((xF)) (0.1))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xF)) ((((xfloat)) ("nan"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xF)) ((((xfloat)) ("inf"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xF)) ((((xfloat)) ("-inf"))))
                xtestInitFromDecimal.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (11) (10))) ((((x_components)) ((((xF)) ((((xDecimal)) ("1.1"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (200))) ((((x_components)) ((((xF)) ((((xDecimal)) ("3.5e-2"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) ((((xF)) ((((xDecimal)) (".000e20"))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xF)) ((((xDecimal)) ("nan"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xF)) ((((xDecimal)) ("snan"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xF)) ((((xDecimal)) ("inf"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xF)) ((((xDecimal)) ("-inf"))))
                xtestFromString.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (5) (1))) ((((x_components)) ((((xF)) ("5"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (3) (2))) ((((x_components)) ((((xF)) ("3/2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (3) (2))) ((((x_components)) ((((xF)) (" n  +3/2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((3.neg)) (2))) ((((x_components)) ((((xF)) ("-3/2  "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (13) (2))) ((((x_components)) ((((xF)) ("    013/02 n  "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (16) (5))) ((((x_components)) ((((xF)) (" 3.2 "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((16.neg)) (5))) ((((x_components)) ((((xF)) (" -3.2 "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((3.neg)) (1))) ((((x_components)) ((((xF)) (" -3. "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (3) (5))) ((((x_components)) ((((xF)) (" .6 "))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1) (3125))) ((((x_components)) ((((xF)) ("32.e-5"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (1000000) (1))) ((((x_components)) ((((xF)) ("1E+06"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((12300.neg)) (1))) ((((x_components)) ((((xF)) ("-1.23e4"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) ((((xF)) (" .0e+0t"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) ((((xF)) ("-0.000e0"))))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xZeroDivisionError)) ("Fraction(3, 0)") ((xF)) ("3/0"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3/'") ((xF)) ("3/"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '/2'") ((xF)) ("/2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3 /2'") ((xF)) ("3 /2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3/+2'") ((xF)) ("3/+2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '+ 3/2'") ((xF)) ("+ 3/2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3a2'") ((xF)) ("3a2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3/7.2'") ((xF)) ("3/7.2"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '3.2/7'") ((xF)) ("3.2/7"))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("Invalid literal for Fraction: '.'") ((xF)) ("."))
                xtestImmutable.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xF)) (7) (3))
                        bogusForceDataize.write ((((xr).x__init__)) (2) (15))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (3))) ((((x_components)) ((xr)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xr)) ("numerator") (12))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xr)) ("denominator") (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (7) (3))) ((((x_components)) ((xr)))))
                        (((unsupported)) (((xr).x_numerator)) (4))
                        (((unsupported)) (((xr).x_denominator)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (4) (2))) ((((x_components)) ((xr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xF)) (4) (2))) ((xr)))
                xtestFromFloat.write
                  [xself]
                    memory > xbigint
                    memory > xinf
                    memory > xnan
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xF).xfrom_float)) ((3.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (10) (1))) ((((x_components)) (((((xF).xfrom_float)) (10))))))
                        xbigint.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xbigint)) (1))) ((((x_components)) (((((xF).xfrom_float)) ((xbigint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (0) (1))) ((((x_components)) (((((xF).xfrom_float)) ((0.0.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (10) (1))) ((((x_components)) (((((xF).xfrom_float)) (10.0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((5.neg)) (2))) ((((x_components)) (((((xF).xfrom_float)) ((2.5.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) 0)) (1))) ((((x_components)) (((((xF).xfrom_float)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfloat)) ((((unsupported)) (10) (23))))) ((((xfloat)) (((((xF).xfrom_float)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((x_components)) (((((xF).xfrom_float)) (3.2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3.2) ((((xfloat)) (((((xF).xfrom_float)) (3.2))))))
                        xinf.write (((unsupported)) 0)
                        xnan.write ((xinf).sub (xinf))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xOverflowError)) ("cannot convert Infinity to integer ratio") (((xF).xfrom_float)) ((xinf)))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xOverflowError)) ("cannot convert Infinity to integer ratio") (((xF).xfrom_float)) (((xinf).neg)))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("cannot convert NaN to integer ratio") (((xF).xfrom_float)) ((xnan)))
                xtestFromDecimal.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xF).xfrom_decimal)) ((3.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (10) (1))) (((((xF).xfrom_decimal)) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (0))) (((((xF).xfrom_decimal)) ((((xDecimal)) ("-0"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (5) (10))) (((((xF).xfrom_decimal)) ((((xDecimal)) ("0.5"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (5) (1000))) (((((xF).xfrom_decimal)) ((((xDecimal)) ("5e-3"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (5000))) (((((xF).xfrom_decimal)) ((((xDecimal)) ("5e3"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((1.sub (((xF)) (1) ((((unsupported)) (10) (30)))))) (((((xF).xfrom_decimal)) ((((xDecimal)) (("0.".add ("9".mul 30))))))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xOverflowError)) ("cannot convert Infinity to integer ratio") (((xF).xfrom_decimal)) ((((xDecimal)) ("inf"))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xOverflowError)) ("cannot convert Infinity to integer ratio") (((xF).xfrom_decimal)) ((((xDecimal)) ("-inf"))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("cannot convert NaN to integer ratio") (((xF).xfrom_decimal)) ((((xDecimal)) ("nan"))))
                        bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("cannot convert NaN to integer ratio") (((xF).xfrom_decimal)) ((((xDecimal)) ("snan"))))
                xtest_as_integer_ratio.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (4) (6)).xas_integer_ratio)) 0)) ((((unsupported)) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) ((4.neg)) (6)).xas_integer_ratio)) 0)) ((((unsupported)) ((2.neg)) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (4) ((6.neg))).xas_integer_ratio)) 0)) ((((unsupported)) ((2.neg)) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (0) (6)).xas_integer_ratio)) 0)) ((((unsupported)) (0) (1))))
                xtestLimitDenominator.write
                  [xself]
                    memory > xrpi
                    seq > @
                      seq
                        xrpi.write (((xF)) ("3.1415926535897932"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xrpi).xlimit_denominator)) (10000))) ((((xF)) (355) (113))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xrpi).xlimit_denominator)) (10000)).neg)) ((((xF)) ((355.neg)) (113))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xrpi).xlimit_denominator)) (113))) ((((xF)) (355) (113))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xrpi).xlimit_denominator)) (112))) ((((xF)) (333) (106))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (201) (200)).xlimit_denominator)) (100))) ((((xF)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (201) (200)).xlimit_denominator)) (101))) ((((xF)) (102) (101))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xF)) (0)).xlimit_denominator)) (10000))) ((((xF)) (0))))
                        (((unsupported)) ((xi)) ((((unsupported)) (0) ((1.neg)))))
                          bogusForceDataize.write ((((xself).xassertRaisesMessage)) ((xValueError)) ("max_denominator should be at least 1") (((((xF)) (1)).xlimit_denominator)) ((xi)))
                xtestConversions.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.neg)) (((((xmath).xtrunc)) ((((xF)) ((11.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (1) (((((xmath).xtrunc)) ((((xF)) (11) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((2.neg)) (((((xmath).xfloor)) ((((xF)) ((11.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.neg)) (((((xmath).xceil)) ((((xF)) ((11.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.neg)) (((((xmath).xceil)) ((((xF)) ((10.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.neg)) ((((xint)) ((((xF)) ((11.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0) ((((xround)) ((((xF)) ((1.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0) ((((xround)) ((((xF)) ((5.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((2.neg)) ((((xround)) ((((xF)) ((15.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.neg)) ((((xround)) ((((xF)) ((7.neg)) (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (FALSE) ((((xbool)) ((((xF)) (0) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) ((((xbool)) ((((xF)) (3) (2))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) ((((xfloat)) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xfloat)) ((((xint)) ((("2".mul 400).add "7")))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)) ((2.0.div 3)) ((((xfloat)) ((((xF)) ((((xint)) ((("2".mul 400).add "7")))) ((((xint)) ((("3".mul 400).add "1")))))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.add (((unsupported)) 0))) ((((xcomplex)) ((((xF)) (1) (10))))))
                xtestBoolGuarateesBoolReturn.write
                  [xself]
                    memory > x__eq__
                    memory > xr
                    memory > x__init__
                    memory > xnumerator
                    memory > x__bool__
                    memory > xdenominator
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            xdenominator.write 1
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__bool__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xbool)) (((xself).xvalue)))))
                            xnumerator.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xself)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xAssertionError)) ("Avoid comparisons in Fraction.__bool__"))))
                            x__lt__.write (x__eq__)
                        bogusForceDataize.write (((((xnumbers).xRational).xregister)) ((xCustomValue)))
                        xnumerator.write (((xCustomValue)) (1))
                        xr.write (((xF)) ((xnumerator)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xr).xnumerator)) ((xnumerator)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xbool)) ((xr)))) (TRUE))
                        xnumerator.write (((xCustomValue)) (0))
                        xr.write (((xF)) ((xnumerator)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xbool)) ((xr)))) (FALSE))
                xtestRound.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((200.neg)))) ((((xround)) ((((xF)) ((150.neg)))) ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((200.neg)))) ((((xround)) ((((xF)) ((250.neg)))) ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (30))) ((((xround)) ((((xF)) (26))) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((2.neg)) (10))) ((((xround)) ((((xF)) ((15.neg)) (100))) (1))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((2.neg)) (10))) ((((xround)) ((((xF)) ((25.neg)) (100))) (1))))
                xtestArithmetic.write
                  [xself]
                    memory > xp
                    memory > xz
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (1) (2))) (((((xF)) (1) (10)).add (((xF)) (2) (5)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) ((3.neg)) (10))) (((((xF)) (1) (10)).sub (((xF)) (2) (5)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (1) (25))) (((((xF)) (1) (10)).mul (((xF)) (2) (5)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (1) (4))) (((((xF)) (1) (10)).div (((xF)) (2) (5)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (2) ((((unsupported)) ((((xF)) (9) (10))) ((((xF)) (2) (5))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((unsupported)) (10) (23))) ((((unsupported)) ((((xF)) ((((unsupported)) (10) (23))) (1))) ((((xF)) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (5) (6))) (((((xF)) (7) (3)).mod (((xF)) (3) (2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (2) (3))) (((((xF)) ((7.neg)) (3)).mod (((xF)) (3) (2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xF)) (1))) ((((xF)) (5) (6))))) ((((xdivmod)) ((((xF)) (7) (3))) ((((xF)) (3) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xF)) ((2.neg)))) ((((xF)) (2) (3))))) ((((xdivmod)) ((((xF)) ((7.neg)) (3))) ((((xF)) (3) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (8) (27))) ((((unsupported)) ((((xF)) (2) (3))) ((((xF)) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (27) (8))) ((((unsupported)) ((((xF)) (2) (3))) ((((xF)) ((3.neg)))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (2.0) ((((unsupported)) ((((xF)) (4))) ((((xF)) (1) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xF)) (1) (1))) (((((xF)) (1) (1)))))
                        xz.write (((xpow)) ((((xF)) ((1.neg)))) ((((xF)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)) (((xz).xreal)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xz).ximag)) (1))
                        xp.write (((unsupported)) ((((xF)) ((1.neg)) (2))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((xF)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xnumerator)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xdenominator)) (1))
                        xp.write (((unsupported)) ((((xF)) ((1.neg)) (2))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((xF)) ((2.neg)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xnumerator)) ((2.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xdenominator)) (1))
                        xp.write (((unsupported)) ((((xF)) ((1.neg)) (2))) ((2.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((xF)) (4) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xnumerator)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xdenominator)) (1))
                xtestLargeArithmetic.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((((unsupported)) 0)) ((((unsupported)) 0)))) (((((xF)) (((((unsupported)) (10) (35)).add 1)) (((((unsupported)) (10) (27)).add 1))).mod (((xF)) (((((unsupported)) (10) (27)).add 1)) (((((unsupported)) (10) (35)).sub 1))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (7) ((((unsupported)) 0)))) (((((xF)) (((((unsupported)) (2) (100)).neg)) (3)).mod (((xF)) (5) ((((unsupported)) (2) (100)))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((unsupported)) ((((unsupported)) 0)) ((((xF)) ((((unsupported)) 0)) ((((unsupported)) 0)))))) ((((xdivmod)) ((((xF)) (((((unsupported)) (10) (35)).add 1)) (((((unsupported)) (10) (27)).add 1)))) ((((xF)) (((((unsupported)) (10) (27)).add 1)) (((((unsupported)) (10) (35)).sub 1)))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((unsupported)) (((((unsupported)) (2) (200)).neg)) (15))) ((((unsupported)) ((((xF)) (((((unsupported)) (2) (100)).neg)) (3))) ((((xF)) (5) ((((unsupported)) (2) (100))))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (1) ((((unsupported)) ((((xF)) (5) ((((unsupported)) (2) (100))))) ((((xF)) (3) ((((unsupported)) (2) (100))))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((unsupported)) (1) ((((xF)) (2) ((((unsupported)) (2) (100))))))) ((((xdivmod)) ((((xF)) (5) ((((unsupported)) (2) (100))))) ((((xF)) (3) ((((unsupported)) (2) (100))))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((unsupported)) ((((unsupported)) (((((unsupported)) (2) (200)).neg)) (15))) ((((xF)) (7) ((((unsupported)) 0)))))) ((((xdivmod)) ((((xF)) (((((unsupported)) (2) (100)).neg)) (3))) ((((xF)) (5) ((((unsupported)) (2) (100))))))))
                xtestMixedArithmetic.write
                  [xself]
                    memory > xz
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (11) (10))) (((((xF)) (1) (10)).add 1)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (1.1) (((((xF)) (1) (10)).add 1.0)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.1.add (((unsupported)) 0))) (((((xF)) (1) (10)).add (1.0.add (((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (11) (10))) ((1.add (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (1.1) ((1.0.add (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.1.add (((unsupported)) 0))) (((1.0.add (((unsupported)) 0)).add (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) ((9.neg)) (10))) (((((xF)) (1) (10)).sub 1)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.9.neg)) (((((xF)) (1) (10)).sub 1.0)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (((0.9.neg).add (((unsupported)) 0))) (((((xF)) (1) (10)).sub (1.0.add (((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (9) (10))) ((1.sub (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.9) ((1.0.sub (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.9.add (((unsupported)) 0))) (((1.0.add (((unsupported)) 0)).sub (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (1) (10))) (((((xF)) (1) (10)).mul 1)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) (((((xF)) (1) (10)).mul 1.0)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.add (((unsupported)) 0))) (((((xF)) (1) (10)).mul (1.0.add (((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (1) (10))) ((1.mul (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) ((1.0.mul (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.add (((unsupported)) 0))) (((1.0.add (((unsupported)) 0)).mul (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (1) (10))) (((((xF)) (1) (10)).div 1)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) (((((xF)) (1) (10)).div 1.0)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.add (((unsupported)) 0))) (((((xF)) (1) (10)).div (1.0.add (((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (10) (1))) ((1.div (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (10.0) ((1.0.div (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((10.0.add (((unsupported)) 0))) (((1.0.add (((unsupported)) 0)).div (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0) ((((unsupported)) ((((xF)) (1) (10))) (1))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.0) ((((unsupported)) ((((xF)) (1) (10))) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (10) ((((unsupported)) (1) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((unsupported)) (10) (23))) ((((unsupported)) ((((unsupported)) (10) (22))) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((unsupported)) (1.0) (0.1))) ((((unsupported)) (1.0) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (1) (10))) (((((xF)) (1) (10)).mod 1)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) (((((xF)) (1) (10)).mod 1.0)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (0) (1))) ((1.mod (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.0.mod 0.1)) ((1.0.mod (((xF)) (1) (10)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) (((((xF)) (1) (10)).mod (((xfloat)) ("inf")))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xfloat)) ("-inf"))) (((((xF)) (1) (10)).mod (((xfloat)) ("-inf")))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xfloat)) ("inf"))) (((((xF)) ((1.neg)) (10)).mod (((xfloat)) ("inf")))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.neg)) (((((xF)) ((1.neg)) (10)).mod (((xfloat)) ("-inf")))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((unsupported)) (0) ((((xF)) (1) (10))))) ((((xdivmod)) ((((xF)) (1) (10))) (1))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) (0.1) (1.0))) ((((xdivmod)) ((((xF)) (1) (10))) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((unsupported)) (10) ((((xF)) (0))))) ((((xdivmod)) (1) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) (1.0) (0.1))) ((((xdivmod)) (1.0) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) (0.1) ((((xfloat)) ("inf"))))) ((((xdivmod)) ((((xF)) (1) (10))) ((((xfloat)) ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) (0.1) ((((xfloat)) ("-inf"))))) ((((xdivmod)) ((((xF)) (1) (10))) ((((xfloat)) ("-inf"))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) ((0.1.neg)) ((((xfloat)) ("inf"))))) ((((xdivmod)) ((((xF)) ((1.neg)) (10))) ((((xfloat)) ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertTypedTupleEquals)) ((((xdivmod)) ((0.1.neg)) ((((xfloat)) ("-inf"))))) ((((xdivmod)) ((((xF)) ((1.neg)) (10))) ((((xfloat)) ("-inf"))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (100) (1))) ((((unsupported)) ((((xF)) (1) (10))) ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (100) (1))) ((((unsupported)) ((((xF)) (10) (1))) (2))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.1) ((((unsupported)) ((((xF)) (1) (10))) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((0.1.add (((unsupported)) 0))) ((((unsupported)) ((((xF)) (1) (10))) ((1.0.add (((unsupported)) 0))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (4) ((((unsupported)) (2) ((((xF)) (2) (1))))))
                        xz.write (((xpow)) ((1.neg)) ((((xF)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)) (0) (((xz).xreal)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1) (((xz).ximag)))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((((xF)) (1) (4))) ((((unsupported)) (2) ((((xF)) ((2.neg)) (1))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (2.0) ((((unsupported)) (4) ((((xF)) (1) (2))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) (0.25) ((((unsupported)) (2.0) ((((xF)) ((2.neg)) (1))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((1.0.add (((unsupported)) 0))) ((((unsupported)) ((1.0.add (((unsupported)) 0))) ((((xF)) (1) (10))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xoperator).xpow)) ((((xF)) (0) (1))) ((2.neg)))
                xtestMixingWithDecimal.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xadd)) ((((xF)) (3) (11))) ((((xDecimal)) ("3.1415926"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xadd)) ((((xDecimal)) ("3.1415926"))) ((((xF)) (3) (11))))
                xtestComparisons.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).less (((xF)) (2) (3)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).less (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq (((xF)) (2) (3)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (2) (3)).leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).eq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).eq (((xF)) (1) (3)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).neq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).neq (((xF)) (1) (3)))))
                xtestComparisonsDummyRational.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).eq (((xDummyRational)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).eq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).eq (((xDummyRational)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (3) (4)).eq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).less (((xDummyRational)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).less (((xDummyRational)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).less (((xDummyRational)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).greater (((xDummyRational)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).greater (((xDummyRational)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).greater (((xDummyRational)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq (((xDummyRational)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq (((xDummyRational)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).leq (((xDummyRational)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).geq (((xDummyRational)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).geq (((xDummyRational)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).geq (((xDummyRational)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).less (((xF)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).less (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).less (((xF)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).greater (((xF)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).greater (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).greater (((xF)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).leq (((xF)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).leq (((xF)) (1) (7)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xDummyRational)) (1) (2)).geq (((xF)) (3) (4)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).geq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xDummyRational)) (1) (2)).geq (((xF)) (1) (7)))))
                xtestComparisonsDummyFloat.write
                  [xself]
                    memory > xx
                    memory > xy
                    seq > @
                      seq
                        xx.write (((xDummyFloat)) (((((unsupported)) 0).div (((unsupported)) 0))))
                        xy.write (((xF)) (1) (3))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xx).neq (xy))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xx).less (xy)).or ((xx).greater (xy)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xx).eq (xy))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xx).leq (xy)).and ((xx).geq (xy)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xy).neq (xx))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xy).less (xx)).or ((xy).greater (xx)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xy).eq (xx))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xy).leq (xx)).and ((xy).geq (xx)))))
                xtestMixedLess.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((2.less (((xF)) (5) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((2.less (((xF)) (4) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (5) (2)).less 3)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (4) (2)).less 2)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).less 0.6)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).less 0.4)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((0.4.less (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((0.5.less (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("inf")).less (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xfloat)) ("-inf")).less (((xF)) (0) (10)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("nan")).less (((xF)) ((3.neg)) (7)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).less (((xfloat)) ("inf")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (17) (12)).less (((xfloat)) ("-inf")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (144) ((89.neg))).less (((xfloat)) ("nan")))))
                xtestMixedLessEqual.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((0.5.leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((0.6.leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq 0.5)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).leq 0.4)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((2.leq (((xF)) (4) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((2.leq (((xF)) (3) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (4) (2)).leq 2)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (5) (2)).leq 2)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("inf")).leq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xfloat)) ("-inf")).leq (((xF)) (0) (10)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("nan")).leq (((xF)) ((3.neg)) (7)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).leq (((xfloat)) ("inf")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (17) (12)).leq (((xfloat)) ("-inf")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (144) ((89.neg))).leq (((xfloat)) ("nan")))))
                xtestBigFloatComparisons.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) ((((unsupported)) (10) (23)))).eq (((xfloat)) ((((unsupported)) (10) (23)))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((unsupported)) 0).less (((xfloat)) ((((xF)) ((((((xmath).xtrunc)) ((((unsupported)) 0))).add 1))))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) 0).less (((xF)) ((((((xmath).xtrunc)) ((((unsupported)) 0))).add 1))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((unsupported)) 0).leq (((xF)) ((((((xmath).xtrunc)) ((((unsupported)) 0))).sub 1))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) 0).greater (((xF)) ((((((xmath).xtrunc)) ((((unsupported)) 0))).sub 1))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((unsupported)) 0).geq (((xF)) ((((((xmath).xtrunc)) ((((unsupported)) 0))).add 1))))))
                xtestBigComplexComparisons.write
                  [xself]
                    memory > xx
                    memory > xw
                    memory > xz
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) ((((unsupported)) (10) (23)))).eq (((xcomplex)) ((((unsupported)) (10) (23)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xgt)) ((((xF)) ((((unsupported)) (10) (23))))) ((((xcomplex)) ((((unsupported)) (10) (23))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xle)) ((((xF)) ((((unsupported)) (10) (23))))) ((((xcomplex)) ((((unsupported)) (10) (23))))))
                        xx.write (((xF)) (3) (8))
                        xz.write (((xcomplex)) (0.375) (0.0))
                        xw.write (((xcomplex)) (0.375) (0.2))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xx).eq (xz))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xx).neq (xz))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xx).eq (xw))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xx).neq (xw))))
                        (((unsupported)) ((xop)) ((((unsupported)) (((xoperator).xlt)) (((xoperator).xle)) (((xoperator).xgt)) (((xoperator).xge)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xop)) ((xx)) ((xz)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xop)) ((xz)) ((xx)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xop)) ((xx)) ((xw)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xop)) ((xw)) ((xx)))
                xtestMixedEqual.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((0.5.eq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((0.6.eq (((xF)) (1) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (1) (2)).eq 0.5)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (1) (2)).eq 0.4)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((2.eq (((xF)) (4) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((2.eq (((xF)) (3) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xF)) (4) (2)).eq 2)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (5) (2)).eq 2)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (5) (2)).eq (((xfloat)) ("nan")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("nan")).eq (((xF)) (3) (7)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xF)) (5) (2)).eq (((xfloat)) ("inf")))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xfloat)) ("-inf")).eq (((xF)) (2) (5)))))
                xtestStringification.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ("Fraction(7, 3)") ((((xrepr)) ((((xF)) (7) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("Fraction(6283185307, 2000000000)") ((((xrepr)) ((((xF)) ("3.1415926535"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("Fraction(-1, 100000000000000000000)") ((((xrepr)) ((((xF)) (1) (((((unsupported)) (10) (20)).neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("7/3") ((((xstr)) ((((xF)) (7) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("7") ((((xstr)) ((((xF)) (7) (1))))))
                xtestHash.write
                  [xself]
                    memory > xhinf
                    memory > xhmod
                    seq > @
                      seq
                        xhmod.write (((xsys).xhash_info).xmodulus)
                        xhinf.write (((xsys).xhash_info).xinf)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) (2.5))) ((((xhash)) ((((xF)) (5) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((((unsupported)) (10) (50))))) ((((xhash)) ((((xF)) ((((unsupported)) (10) (50))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xhash)) ((((xfloat)) ((((unsupported)) (10) (23))))))) ((((xhash)) ((((xF)) ((((unsupported)) (10) (23))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhinf)) ((((xhash)) ((((xF)) (1) ((xhmod)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((((xF)) ((1.neg)))))) (((((((xF)) ((1.neg))).x__hash__)) 0)))
                xtestApproximatePi.write
                  [xself]
                    memory > xt
                    memory > xlasts
                    memory > xthree
                    seq > @
                      seq
                        xthree.write (((xF)) (3))
                        (((unsupported)) ((((unsupported)) ((xlasts)) ((xt)) ((xs)) ((xn)) ((xna)) ((xd)) ((xda)))) ((((unsupported)) (0) ((xthree)) (3) (1) (0) (0) (24))))
                        while.
                          ((((xabs)) (((xs).sub (xlasts)))).greater (((xF)) (1) ((((unsupported)) (10) (9)))))
                          [unused]
                            seq > @
                              seq
                                xlasts.write (xs)
                                (((unsupported)) ((((unsupported)) ((xn)) ((xna)))) ((((unsupported)) (((xn).add (xna))) (((xna).add 8)))))
                                (((unsupported)) ((((unsupported)) ((xd)) ((xda)))) ((((unsupported)) (((xd).add (xda))) (((xda).add 32)))))
                                xt.write (((xt).mul (xn)).div (xd))
                                (((unsupported)) ((xs)) ((xt)))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)) (((xmath).xpi)) ((xs)))
                xtestApproximateCos1.write
                  [xself]
                    memory > xx
                    memory > xlasts
                    seq > @
                      seq
                        xx.write (((xF)) (1))
                        (((unsupported)) ((((unsupported)) ((xi)) ((xlasts)) ((xs)) ((xfact)) ((xnum)) ((xsign)))) ((((unsupported)) (0) (0) ((((xF)) (1))) (1) (1) (1))))
                        while.
                          ((((xabs)) (((xs).sub (xlasts)))).greater (((xF)) (1) ((((unsupported)) (10) (9)))))
                          [unused]
                            seq > @
                              seq
                                xlasts.write (xs)
                                (((unsupported)) ((xi)) (2))
                                (((unsupported)) ((xfact)) (((xi).mul ((xi).sub 1))))
                                (((unsupported)) ((xnum)) (((xx).mul (xx))))
                                (((unsupported)) ((xsign)) ((1.neg)))
                                (((unsupported)) ((xs)) ((((xnum).div (xfact)).mul (xsign))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)) (((((xmath).xcos)) (1))) ((xs)))
                xtest_copy_deepcopy_pickle.write
                  [xself]
                    memory > xr
                    memory > xdr
                    seq > @
                      seq
                        xr.write (((xF)) (13) (7))
                        xdr.write (((xDummyFraction)) (13) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xr)) ((((xloads)) ((((xdumps)) ((xr)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xid)) ((xr)))) ((((xid)) ((((xcopy)) ((xr)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xid)) ((xr)))) ((((xid)) ((((xdeepcopy)) ((xr)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xdr)))) ((((xid)) ((((xcopy)) ((xdr)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xdr)))) ((((xid)) ((((xdeepcopy)) ((xdr)))))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((xdr)) ((((xcopy)) ((xdr)))))
                        bogusForceDataize.write ((((xself).xassertTypedEquals)) ((xdr)) ((((xdeepcopy)) ((xdr)))))
                xtest_slots.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xF)) (13) (7))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xr)) ("a") (10))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)