memory > xBadClass
memory > xNT
memory > xk
memory > xNode
memory > xGeneric
memory > xtypes
memory > xD
memory > xEmployee
memory > xC
memory > xcopy
memory > xType
memory > xACM
memory > xImportError
memory > xTest
memory > xAttributeError
memory > xMyOrdDict
memory > xCSub
memory > xBadPG
memory > xClassVar
memory > xPSub
memory > x__call__
memory > xKT
memory > xNoTpCheck
memory > xmod_generics_cache
memory > xget_type_hints
memory > xMyList
memory > xpickle
memory > xCoolEmployee
memory > xlist
memory > xPNonCall
memory > xall
memory > xBPoint
memory > xcontextlib
memory > xRuntimeError
memory > xMyCall
memory > xel
memory > xForRefExample
memory > xparent
memory > xMySet
memory > xCG
memory > xKeyboardInterrupt
memory > xNoReturn
memory > xlocals
memory > xPG
memory > xMyDeque
memory > xVisitor
memory > xNonPR
memory > xProtocol
memory > xsome_xrepr
memory > xOther1
memory > xMyTup
memory > xMM2
memory > xT2
memory > xz
memory > xTuple
memory > xValueError
memory > xdeepcopy
memory > xabc
memory > xfrozenset
memory > xFinalException
memory > xZ
memory > xLiteral
memory > xlabel
memory > xstr
memory > xOptions
memory > xMM
memory > xHasCallProtocol
memory > xYAxis
memory > xMyTuple
memory > xtyping
memory > xMySimpleMapping
memory > xMyChain
memory > xBase
memory > xD1
memory > xCP
memory > xCoolEmployeeWithDefault
memory > xTestCase
memory > xProto
memory > xt
memory > xAPoint
memory > xB
memory > xexec
memory > xIO
memory > xMatch
memory > xrange
memory > xManager
memory > xNoneAndForward
memory > xfinal
memory > xS
memory > xPosition
memory > xb
memory > xG
memory > xSkipTest
memory > xIntListVisitor
memory > xT
memory > xCustom
memory > xDerived
memory > xBadP
memory > xBasicUser
memory > xcollections
memory > xNotImplementedError
memory > xBar
memory > xbytearray
memory > xMyCounter
memory > xStopIteration
memory > xKeyError
memory > xNotACM
memory > xMutableMapping
memory > xproto
memory > xbase
memory > xP
memory > xTypedDict
memory > xBinaryIO
memory > xAsyncIteratorWrapper
memory > xother_a
memory > xmain
memory > xTypeVar
memory > xFoo
memory > xPM
memory > xcallable
memory > xCM
memory > xW
memory > xOther
memory > xtype
memory > xMyFrozenSet
memory > xget_origin
memory > xf
memory > xP1
memory > xPR
memory > xset
memory > xXAxis
memory > xint
memory > xrepr
memory > xTextIO
memory > xget_args
memory > xOther2
memory > xre
memory > xcool
memory > xException
memory > xthing
memory > xhasattr
memory > xXMeth
memory > xMyDefDict
memory > xElement
memory > xX
memory > xann_module
memory > xTP
memory > xAnyStr
memory > xx
memory > xNamedTuple
memory > xMyPoint
memory > xF
memory > xclazz
memory > xI
memory > xXRepr
memory > xNewType
memory > xsuper
memory > xs
memory > xsys
memory > xFounder
memory > xMMC
memory > xbool
memory > xPattern
memory > xList
memory > xlog_level
memory > xM
memory > xbytes
memory > xtuple
memory > xBaseException
memory > xissubclass
memory > xglobals
memory > xRecursionError
memory > xDeprecationWarning
memory > x__all__
memory > xP2
memory > xcls
memory > xruntime_checkable
memory > xLoop
memory > xMeta
memory > xfloat
memory > xD2
memory > xargs
memory > xobj
memory > xPoint
memory > xann_module3
memory > xBP
memory > xC1
memory > xdir
memory > xSimpleMapping
memory > xAny
memory > xweakref
memory > xT1
memory > xgetattr
memory > xv
memory > xSyntaxError
memory > xvars
memory > xmeaning
memory > xann_module2
memory > xlst
memory > xe
memory > xABase
memory > xLabelPoint2D
memory > xiter
memory > xlog_path
memory > xPoint2D
memory > xE
memory > xname
memory > xattr
memory > xCoordinate
memory > xCC
memory > xCallable
memory > xex
memory > xEmpty
memory > xVT
memory > xNonP
memory > xy
memory > xMyMapping
memory > xConcrete
memory > xhash
memory > xMyDict
memory > xY
memory > xobject
memory > xA
memory > xMyDef
memory > xBaseTestCase
memory > xMMB
memory > xMyChainMap
memory > xkwargs
memory > xFinal
memory > xC2
memory > xBad
memory > xisinstance
memory > xNameError
memory > xOptional
memory > xfoo
memory > xMMA
memory > xdict
memory > xcast
memory > xUser
memory > xlen
memory > xEllipsis
memory > xUnion
memory > xHasForeignBaseClass
memory > xTypeError
memory > xOKClass
memory > x__name__
memory > xno_type_check
[] > test_typing
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_mutablesequence
        memory > xXK
        memory > xtest_noreturn_subclass_type_error
        memory > xtest_typeddict_create_errors
        memory > xtest_collections_protocols_allowed
        memory > xtest_forwardref_subclass_type_error
        memory > x__str__
        memory > xtest_subclassing_subclasshook
        memory > xtest_abstractset
        memory > xtest_union_constrained
        memory > xtest_subclassing_register
        memory > xtest_counter_subclass_instantiation
        memory > xtest_coroutine
        memory > xtest_type_typevar
        memory > xtest_ellipsis_in_generic
        memory > xASYNCIO
        memory > xtest_chain_repr
        memory > xtest_frozenset
        memory > xtest_orig_bases
        memory > xtest_typeddict_special_keyword_names
        memory > xtest_cannot_subclass
        memory > xtest_forward_equality_namespace
        memory > xtest_base_class_kept
        memory > xtest_collections_as_base
        memory > xtest_eq_hash
        memory > xtest_no_isinstance
        memory > xtest_typevar_subclass_type_error
        memory > xtest_pickle
        memory > xtest_namedtuple_special_keyword_names
        memory > xget
        memory > xtest_literals_inside_other_types
        memory > xtest_cannot_instantiate_vars
        memory > xtest_protocols_support_register
        memory > xdouble
        memory > xtest_type_erasure_special
        memory > xtest_parameterized_slots_dict
        memory > xtest_false_subclasses
        memory > xtest_no_bivariant
        memory > xtest_issubclass_fails_correctly
        memory > xtest_py36_class_syntax_usage
        memory > xtest_multiple_inheritance
        memory > xtest_basic_plain
        memory > xtest_subclassing
        memory > xtest_cannot_instantiate_abstract
        memory > xtest_union_object
        memory > xmeth
        memory > xtest_no_instantiation
        memory > xtest_defaultdict_subclass
        memory > xtest_hashable
        memory > xtest_protocols_isinstance_py36
        memory > xtest_io_submodule
        memory > xtest_deque
        memory > xtest_type_optional
        memory > xg_with
        memory > xtest_function_repr_union
        memory > xtest_cannot_init
        memory > xtest_type_basic
        memory > xtest_weakref_all
        memory > xtest_noreturn_instance_type_error
        memory > xtest_ordereddict_instantiation
        memory > xtest_union_generalization
        memory > xtest_callable_instance_works
        memory > xtest_typevar_instance_type_error
        memory > xtest_no_generator_instantiation
        memory > xtest_tuple_subclass
        memory > xtest_any_instance_type_error
        memory > xtest_protocols_isinstance
        memory > xtest_forwardref_instance_type_error
        memory > xtest_chainmap_subclass
        memory > xtest_protocols_pickleable
        memory > xtest_frozenset_subclass_instantiation
        memory > xtest_all
        memory > xtest_callable_wrong_forms
        memory > xtest_multi_subscr_base
        memory > xtest_new_repr
        memory > xtest_protocol_checks_after_subscript
        memory > xtest_get_type_hints_from_various_objects
        memory > xtest_missing__name__
        memory > xtest_extended_generic_rules_repr
        memory > xtest_forward_equality_hash
        memory > xassertNotIsSubclass
        memory > xtest_all_exported_names
        memory > xtest_immutability_by_copy_and_pickle
        memory > xtest_generator
        memory > xtest_generic_protocols_repr
        memory > xtest_optional
        memory > xtest_namedtuple_keyword_usage
        memory > xtest_awaitable
        memory > xtest_multiple_inheritance_special
        memory > xtest_supports_index
        memory > xtest_generic_errors
        memory > xfunc
        memory > xtest_copy_generic_instances
        memory > xtest_no_async_generator_instantiation
        memory > xtest_init_called
        memory > xtest_counter
        memory > xtest_union_union
        memory > xtest_none_on_callable_blocks_implementation
        memory > xtest_generic_protocols_special_from_generic
        memory > xtest_repr
        memory > xtest_mutablemapping
        memory > xtest_subprotocols_extending
        memory > xtest_default_globals
        memory > xtest_fail_with_bare_generic
        memory > xtest_illegal_parameters_do_not_raise_runtime_errors
        memory > xtest_union_compare_other
        memory > xtest_cannot_instantiate
        memory > x__getitem__
        memory > xtest_deque_instantiation
        memory > xtest_union_forward_recursion
        memory > xtest_init
        memory > xtest_forward_repr
        memory > xtest_naive_runtime_checks
        memory > xtest_unordered
        memory > xtest_parameterized_slots
        memory > xtest_collection
        memory > xtest_textio
        memory > xtest_basics_functional_syntax
        memory > xtest_ordereddict_subclass
        memory > xtest_bytestring
        memory > xtest_delayed_syntax_error
        memory > xtest_init_subclass_super_called
        memory > xtest_repr_2
        memory > xtest_new_with_args2
        memory > xtest_builtin_protocol_whitelist
        memory > xtest_union_unique
        memory > xtest_annotation_usage_with_default
        memory > xtest_non_protocol_subclasses
        memory > xtest_new_no_args
        memory > xtest_union_any
        memory > xtest_set_subclass_instantiation
        memory > xtest_get_type_hints_wrapped_decoratored_func
        memory > xtest_new_repr_bare
        memory > xtest_constrained_error
        memory > xtest_subscript_meta
        memory > xtest_async_contextmanager
        memory > xtest_forward_recursion_actually
        memory > xtest_no_tuple_instantiation
        memory > xtest_new_repr_complex
        memory > xclear_caches
        memory > xtest_get_args
        memory > xtest_any_subclass_type_error
        memory > xtest_syntax_error
        memory > xtest_type_erasure
        memory > xtest_extended_generic_rules_subclassing
        memory > xtest_defining_generic_protocols
        memory > xtest_namedtuple_pyversion
        memory > xLabel
        memory > xASYNCIO_TESTS
        memory > xtest_async_generator
        memory > xtest_protocols_issubclass
        memory > xtest_no_set_instantiation
        memory > xtest_single_class_disappears
        memory > xtest_basic_protocol
        memory > xtest_supports_float
        memory > xtest_any_works_with_alias
        memory > xtest_none_on_non_callable_doesnt_block_implementation
        memory > xtest_container
        memory > xtest_subprotocols_merging
        memory > xtest_eq_2
        memory > xtest_abc_registry_kept
        memory > xtest_overload_fails
        memory > xtest_callable_instance_type_error
        memory > xtest_none_treated_correctly
        memory > xtest_union_str_pattern
        memory > xtest_multiple_bases
        memory > xtest_nested_classvar_fails_forward_ref_check
        memory > xtest_namedtuple_errors
        memory > xtest_subclass_error
        memory > xtest_basic
        memory > xtest_bundled_protocol_instance_works
        memory > xtest_not_generic
        memory > xtest_generic_hashes
        memory > xtest_get_type_hints_ClassVar
        memory > xtest_annotation_usage_with_methods
        memory > xtest_no_type_check_forward_ref_as_string
        memory > xtest_get_type_hints_modules_forwardref
        memory > xtest_forward_equality_gth
        memory > xtest_cannot_subclass_var_itself
        memory > xtest_supports_abs
        memory > xtest_async_iterator
        memory > xgth
        memory > xtest_mutableset
        memory > xtest_typeddict_errors
        memory > xtest_generic_protocols_special_from_protocol
        memory > xtest_list_subclass
        memory > xtest_nested
        memory > xtest_get_type_hints_for_builtins
        memory > xtest_dict_subclass
        memory > xtest_extended_generic_rules_eq
        memory > xtest_no_type_check
        memory > x__setitem__
        memory > xtest_no_isinstance_or_issubclass
        memory > xtest_get_type_hints_modules
        memory > xtest_respect_no_type_check
        memory > xtest_mapping
        memory > xtest_annotation_usage
        memory > xtest_total
        memory > xtest_iterator
        memory > xassertIsSubclass
        memory > xtest_new_with_args
        memory > xtest_no_dict_instantiation
        memory > xtest_get_origin
        memory > xtest_no_multiple_subscripts
        memory > xtest_implicit_any
        memory > xtest_protocols_in_unions
        memory > xtest_everything_implements_empty_protocol
        memory > xtest_supports_bytes
        memory > xtest_no_list_instantiation
        memory > xtest_no_runtime_deco_on_nominal
        memory > xtest_defining_generic_protocols_old_style
        memory > xtest_basics_keywords_syntax
        memory > xtest_final_unmodified
        memory > xtest_errors
        memory > xtest_dict
        memory > xtest_counter_instantiation
        memory > x__add__
        memory > xtest_basics
        memory > xtest_function_implements_protocol
        memory > xtest_io
        memory > x__init__
        memory > xtest_cannot_subclass_vars
        memory > xtest_bound_errors
        memory > xtest_no_type_check_no_bases
        memory > xtest_generic_forward_ref
        memory > xtest_iterable
        memory > xtest_subscripted_generics_as_proxies
        memory > xtest_reversible
        memory > xtest_all_repr_eq_any
        memory > xtest_sized
        memory > xtest_union_forward
        memory > xtest_abc_bases
        memory > xtest_tuple_instance_type_error
        memory > xtest_name_error
        memory > xtest_contextmanager
        memory > xtest_defaultdict_instantiation
        memory > xtest_supports_round
        memory > xtest_async_iterable
        memory > xtest_previous_behavior
        memory > xtest_no_subclassing
        memory > xtest_etree
        memory > xtest_no_redefinition
        memory > xtest_callable_forward
        memory > xtest_supports_complex
        memory > xtest_protocols_isinstance_init
        memory > xtest_get_type_hints_classes
        memory > xtest_custom_subclasshook
        memory > xtest_union_instance_type_error
        memory > xtest_sequence
        memory > xtest_supports_int
        memory > xtest_protocols_bad_subscripts
        memory > xtest_chainmap_instantiation
        memory > xtest_fail_with_bare_union
        memory > xXV
        memory > xtest_no_frozenset_instantiation
        memory > xtest_no_type_check_class
        memory > xtest_empty
        memory > xtest_re_submodule
        memory > xtest_get_type_hints_for_object_with_annotations
        memory > xtest_no_eval_union
        memory > xtest_callable_with_ellipsis_forward
        memory > xtest_self_subclass
        memory > xtest_type_error
        memory > xtest_binaryio
        memory > xtest_copy_and_pickle
        memory > xtest_callable_with_ellipsis
        memory > xtest_no_inheritance_from_nominal
        memory > xtest_protocols_issubclass_non_callable
        memory > xtest_meta_no_type_check
        memory > xtest_final_forward_ref
        memory > xtest_eq_1
        memory > xtest_equality
        memory > xtest_init_subclass
        memory > xtest_alias_equality
        memory > xtest_overload_succeeds
        memory > xnested
        memory > xtest_forward_equality
        memory > xtest_set
        memory > xtest_tuple_forward
        memory > xtest_copy_and_deepcopy
        memory > xtest_list
        memory > xtest_generic_protocols_eq
        memory > xtest_subclassing_async_generator
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) ((xTestCase)))
              seq
                xassertIsSubclass.write
                  [xself xcls xclass_or_tuple xmsg]
                    memory > xmessage
                    seq > @
                      (((unsupported)) 0)
                        ((((xissubclass)) ((xcls)) ((xclass_or_tuple))).not).if
                          seq
                            xmessage.write ("%r is not a subclass of %r".mod (((unsupported)) ((xcls)) ((xclass_or_tuple))))
                            (((unsupported)) ((xmsg)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)) ((xmessage)) ((" : %s".mod (xmsg))))
                            (((unsupported)) (((((xself).xfailureException)) ((xmessage)))))
                xassertNotIsSubclass.write
                  [xself xcls xclass_or_tuple xmsg]
                    memory > xmessage
                    seq > @
                      (((unsupported)) 0)
                        (((xissubclass)) ((xcls)) ((xclass_or_tuple))).if
                          seq
                            xmessage.write ("%r is a subclass of %r".mod (((unsupported)) ((xcls)) ((xclass_or_tuple))))
                            (((unsupported)) ((xmsg)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)) ((xmessage)) ((" : %s".mod (xmsg))))
                            (((unsupported)) (((((xself).xfailureException)) ((xmessage)))))
                xclear_caches.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) (((xtyping).x_cleanups)))
                        bogusForceDataize.write (((xf)) 0)
            (((unsupported)) 0)
            (((unsupported)) ((xEmployee)))
            (((unsupported)) ((xEmployee)))
            (((unsupported)) ((xManager)) ((xFounder)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_any_instance_type_error.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        bogusForceDataize.write (((xisinstance)) (42) ((xAny)))
                xtest_any_subclass_type_error.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xEmployee)) ((xAny)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xAny)) ((xEmployee)))
                xtest_repr.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xAny)))) ("typing.Any"))
                xtest_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) (42) ((xAny)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xAny)) ((xint)))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xAny)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((xAny)))))
                xtest_cannot_instantiate.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xAny)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xAny)))) 0)
                xtest_any_works_with_alias.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xtyping).xMatch)) ((xAny)))
                        (((unsupported)) (((xtyping).xPattern)) ((xAny)))
                        (((unsupported)) (((xtyping).xIO)) ((xAny)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_noreturn_instance_type_error.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        bogusForceDataize.write (((xisinstance)) (42) ((xNoReturn)))
                xtest_noreturn_subclass_type_error.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xEmployee)) ((xNoReturn)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xNoReturn)) ((xEmployee)))
                xtest_repr.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xNoReturn)))) ("typing.NoReturn"))
                xtest_not_generic.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        (((unsupported)) ((xNoReturn)) ((xint)))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xNoReturn)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((xNoReturn)))))
                xtest_cannot_instantiate.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xNoReturn)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xNoReturn)))) 0)
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basic_plain.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xT)) ((xT)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xT)) ((xTypeVar)))
                xtest_typevar_instance_type_error.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (42) ((xT)))
                xtest_typevar_subclass_type_error.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((xT)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xT)) ((xint)))
                xtest_constrained_error.write
                  [xself]
                    memory > xX
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        seq
                          xX.write (((xTypeVar)) ("X") ((xint)))
                          unsupported
                xtest_union_unique.write
                  [xself]
                    memory > xY
                    memory > xX
                    seq > @
                      seq
                        xX.write (((xTypeVar)) ("X"))
                        xY.write (((xTypeVar)) ("Y"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xX)) ((xY)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xUnion)) ((xX)))) ((xX)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((xX)))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xY)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xX)))))) ((xX)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xint)))))) ((((unsupported)) ((xUnion)) ((xX)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xint)))))) ((((unsupported)) ((xUnion)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xint))))).x__args__)) ((((unsupported)) ((xX)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xint))))).x__parameters__)) ((((unsupported)) ((xX)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xX)) ((xint))))).x__origin__)) ((xUnion)))
                xtest_union_constrained.write
                  [xself]
                    memory > xA
                    seq > @
                      seq
                        xA.write (((xTypeVar)) ("A") ((xstr)) ((xbytes)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xA)) ((xstr)))))) ((((unsupported)) ((xUnion)) ((xA)))))
                xtest_repr.write
                  [xself]
                    memory > xT_co
                    memory > xT_contra
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xT)))) ("~T"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xKT)))) ("~KT"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xVT)))) ("~VT"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xAnyStr)))) ("~AnyStr"))
                        xT_co.write (((unsupported)) ((xTypeVar)) ("T_co") (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xT_co)))) ("+T_co"))
                        xT_contra.write (((unsupported)) ((xTypeVar)) ("T_contra") (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xT_contra)))) ("-T_contra"))
                xtest_no_redefinition.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xTypeVar)) ("T"))) ((((xTypeVar)) ("T"))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xTypeVar)) ("T") ((xint)) ((xstr)))) ((((xTypeVar)) ("T") ((xint)) ((xstr)))))
                xtest_cannot_subclass_vars.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        (((unsupported)) ((((xTypeVar)) ("T"))))
                xtest_cannot_subclass_var_itself.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        (((unsupported)) ((xTypeVar)))
                xtest_cannot_instantiate_vars.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        bogusForceDataize.write (((((xTypeVar)) ("A"))) 0)
                xtest_bound_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypeVar)) ("X") (42))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypeVar)) ("X") ((xstr)) ((xfloat)) ((xEmployee)))
                xtest_missing__name__.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write "import typingnT = typing.TypeVar('T')n"
                        bogusForceDataize.write (((xexec)) ((xcode)) ((((unsupported)) 0)))
                xtest_no_bivariant.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                        (((unsupported)) ((xTypeVar)) ("T") (TRUE) (TRUE))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xfloat)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu)) ((xUnion)))
                xtest_subclass_error.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((xUnion)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xUnion)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))) ((xint)))
                xtest_union_any.write
                  [xself]
                    memory > xu2
                    memory > xu3
                    memory > xu1
                    memory > xu
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((xAny)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu)) ((xAny)))
                        xu1.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xAny)))))
                        xu2.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xAny)) ((xint)))))
                        xu3.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xAny)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu1)) ((xu2)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu1)) ((xAny)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu2)) ((xAny)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu3)) ((xAny)))
                xtest_union_object.write
                  [xself]
                    memory > xu2
                    memory > xu1
                    memory > xu
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu)) ((xobject)))
                        xu1.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xobject)))))
                        xu2.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xobject)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu1)) ((xu2)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu1)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu2)) ((xobject)))
                xtest_unordered.write
                  [xself]
                    memory > xu2
                    memory > xu1
                    seq > @
                      seq
                        xu1.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xfloat)))))
                        xu2.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xfloat)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu1)) ((xu2)))
                xtest_single_class_disappears.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        xt.write (((unsupported)) ((xUnion)) ((xEmployee)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xt)) ((xEmployee)))
                xtest_base_class_kept.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xEmployee)) ((xManager)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xu)) ((xEmployee)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xEmployee)) (((xu).x__args__)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xManager)) (((xu).x__args__)))
                xtest_union_union.write
                  [xself]
                    memory > xv
                    memory > xu
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xfloat)))))
                        xv.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xu)) ((xEmployee)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xv)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xfloat)) ((xEmployee)))))))
                xtest_repr.write
                  [xself]
                    memory > xu
                    memory > xT
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xUnion)))) ("typing.Union"))
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xEmployee)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xu)))) (("typing.Union[%s.Employee, int]".mod (x__name__))))
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xEmployee)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xu)))) (("typing.Union[int, %s.Employee]".mod (x__name__))))
                        xT.write (((xTypeVar)) ("T"))
                        xu.write (((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xu)))) ((((xrepr)) ((xint)))))
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((((unsupported)) ((xList)) ((xint)))) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xu)))) ("typing.Union[typing.List[int], int]"))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xUnion)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((xUnion)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))
                xtest_cannot_instantiate.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xUnion)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xUnion)))) 0)
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xfloat)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xu)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xu)))) 0)
                xtest_union_generalization.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) (((xtyping).xIterable)) ((xint))))))).eq (xstr))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) (((xtyping).xIterable)) ((xint))))))).eq (((unsupported)) (((xtyping).xIterable)) ((xint))))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xstr)) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) (((xtyping).xIterable)) ((xint))))))).x__args__)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((unsupported)) (((xtyping).xIterable)) ((xint)))) (((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) (((xtyping).xIterable)) ((xint))))))).x__args__)))
                xtest_union_compare_other.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xUnion)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xUnion)) ((xAny)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xClassVar)) ((xUnion)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xOptional)) ((xUnion)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ("None: is there a None literal in the EO language?"))) ((xOptional)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xOptional)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xOptional)) (((xtyping).xMutableMapping)))) ((xUnion)))
                xtest_optional.write
                  [xself]
                    memory > xo
                    memory > xu
                    seq > @
                      seq
                        xo.write (((unsupported)) ((xOptional)) ((xint)))
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xo)) ((xu)))
                xtest_empty.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        (((unsupported)) ((xUnion)) ((((unsupported)) 0)))
                xtest_union_instance_type_error.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        bogusForceDataize.write (((xisinstance)) (42) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))
                xtest_no_eval_union.write
                  [xself]
                    memory > xu
                    memory > xf
                    seq > @
                      seq
                        xu.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((xget_type_hints)) ((xf)))) ("x"))) ((xu)))
                xtest_function_repr_union.write
                  [xself]
                    memory > xfun
                    seq > @
                      seq
                        xfun.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xfun)) ((xint)))))))) ("typing.Union[fun, int]"))
                xtest_union_str_pattern.write
                  [xself]
                    memory > xA
                    seq > @
                      seq
                        xA.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((xPattern)))))
                        unsupported
                xtest_etree.write
                  [xself]
                    memory > xElem
                    seq > @
                      seq
                        (((unsupported)) ((xImportError)))
                          (((unsupported)) 0)
                          (((unsupported)) ((((xSkipTest)) ("cElementTree not found"))))
                        (((unsupported)) ((xUnion)) ((((unsupported)) ((xElement)) ((xstr)))))
                        xElem.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xElement)) ((((unsupported)) ((xargs)))))))
                        (((unsupported)) ((xUnion)) ((((unsupported)) ((xElem)) ((xstr)))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xTuple)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xstr)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xtuple)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xstr)))))))
                        (((unsupported)) ((xtuple)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xtuple)) ((xTuple)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xTP)) ((xTuple)))))
                xtest_equality.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xTuple)) ((xint)))) ((((unsupported)) ((xTuple)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xTuple)) ((xint)))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xTuple)) ((xint)))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))))
                xtest_tuple_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xMyTuple)) ((xTuple)))))
                xtest_tuple_instance_type_error.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((unsupported)) (0) (0))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) (0) (0))) ((xTuple)))
                xtest_repr.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xTuple)))) ("typing.Tuple"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) 0)))))) ("typing.Tuple[()]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xfloat)))))))) ("typing.Tuple[int, float]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))))) ("typing.Tuple[int, ...]"))
                xtest_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) (42) ((xTuple)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) (42) ((((unsupported)) ((xTuple)) ((xint)))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_self_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((((unsupported)) ((xx)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((((unsupported)) ((xx)))))) ((xCallable)))))
                xtest_eq_hash.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))))))) (1))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xstr)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xstr)))) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)) ((xint)))) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((xCallable)))
                xtest_cannot_instantiate.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xCallable)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xCallable)))) 0)
                        xc.write (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xstr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xc)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xc)))) 0)
                xtest_callable_wrong_forms.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)))) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)))) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)) (1))) (2))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xCallable)) ((xint)))
                xtest_callable_instance_works.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xf)) ((xCallable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ("None: is there a None literal in the EO language?") ((xCallable)))
                xtest_callable_instance_type_error.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((xf)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((xf)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xAny)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xself).xassertNotIsInstance)) ("None: is there a None literal in the EO language?") ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xself).xassertNotIsInstance)) ("None: is there a None literal in the EO language?") ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xAny)))))))
                xtest_repr.write
                  [xself]
                    memory > xct2
                    memory > xctv
                    memory > xct0
                    seq > @
                      seq
                        xct0.write (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xbool)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xct0)))) ("typing.Callable[[], bool]"))
                        xct2.write (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xstr)) ((xfloat)))) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xct2)))) ("typing.Callable[[str, float], int]"))
                        xctv.write (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xctv)))) ("typing.Callable[..., str]"))
                xtest_callable_with_ellipsis.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))))))
                xtest_ellipsis_in_generic.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xtyping).xList)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xstr)))))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xLiteral)) (1))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) ("x") ("y") ("z"))))
                        (((unsupported)) ((xLiteral)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xLiteral)) (TRUE))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) (1) ("2") (FALSE))))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) ((((unsupported)) ((xLiteral)) ((((unsupported)) (1) (2))))) ((((unsupported)) ((xLiteral)) ((((unsupported)) (4) (5))))))))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) ("foo") ("bar"))))
                xtest_illegal_parameters_do_not_raise_runtime_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xLiteral)) ((xint)))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) (((((unsupported)) 0).add 2)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xLiteral)) ((((unsupported)) ("foo") (3) ("bar") (4))))
                        (((unsupported)) ((xLiteral)) ((xT)))
                xtest_literals_inside_other_types.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xList)) ((((unsupported)) ((xLiteral)) ((((unsupported)) (1) (2) (3))))))
                        (((unsupported)) ((xList)) ((((unsupported)) ((xLiteral)) ((((unsupported)) ("foo") ("bar") ("baz"))))))
                xtest_repr.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xLiteral)) (1))))) ("typing.Literal[1]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xLiteral)) ((((unsupported)) (1) (TRUE) ("foo"))))))) ("typing.Literal[1, True, 'foo']"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xLiteral)) ((xint)))))) ("typing.Literal[int]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xLiteral)))) ("typing.Literal"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xLiteral)) ("None: is there a None literal in the EO language?"))))) ("typing.Literal[None]"))
                xtest_cannot_init.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xLiteral)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xLiteral)) (1))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xLiteral)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((((unsupported)) ((xLiteral)) (1))))) 0)
                xtest_no_isinstance_or_issubclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (1) ((((unsupported)) ((xLiteral)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((xint)) ((((unsupported)) ((xLiteral)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) (1) ((((unsupported)) ((xLiteral)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((((unsupported)) ((xLiteral)) (1))))
                xtest_no_subclassing.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xLiteral)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xLiteral)))
                xtest_no_multiple_subscripts.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        (((unsupported)) ((((unsupported)) ((xLiteral)) (1))) (1))
            xXK.write (((xTypeVar)) ("XK") ((xstr)) ((xbytes)))
            xXV.write (((xTypeVar)) ("XV"))
            (((unsupported)) ((((unsupported)) ((xGeneric)) ((((unsupported)) ((xXK)) ((xXV)))))))
              seq
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                x__setitem__.write
                  [xself xkey xvalue]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                xget.write
                  [xself xkey xdefault]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
            (((unsupported)) ((((unsupported)) ((xSimpleMapping)) ((((unsupported)) ((xXK)) ((xXV)))))))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xstore)) ((((unsupported)) 0)))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) (((xself).xstore)) ((xkey)))))
                x__setitem__.write
                  [xself xkey xvalue]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) (((xself).xstore)) ((xkey)))) ((xvalue)))
                xget.write
                  [xself xkey xdefault]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xKeyError)))
                          (((unsupported)) ((((unsupported)) (((xself).xstore)) ((xkey)))))
                          (((unsupported)) ((xdefault)))
            (((unsupported)) ((xProtocol)))
              seq
                (((unsupported)) ((xx)) ((xint)))
                (((unsupported)) ((xy)) ((xint)))
            (((unsupported)) ((xCoordinate)) ((xProtocol)) ((xruntime_checkable)))
              (((unsupported)) ((xlabel)) ((xstr)))
            (((unsupported)) 0)
              seq
                (((unsupported)) ((xx)) ((xint)))
                (((unsupported)) ((xy)) ((xint)))
                (((unsupported)) ((xlabel)) ((xstr)))
            (((unsupported)) ((xProtocol)))
              (((unsupported)) ((xx)) ((xint)))
            (((unsupported)) ((xProtocol)))
              (((unsupported)) ((xy)) ((xint)))
            (((unsupported)) ((xXAxis)) ((xYAxis)) ((xProtocol)) ((xruntime_checkable)))
            (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
              seq
                (((unsupported)) ((xattr)) ((xint)))
                xmeth.write
                  [xself xarg]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
            (((unsupported)) ((xProto)))
            (((unsupported)) 0)
              seq
                (((unsupported)) ((xattr)) ((xint)) (1))
                xmeth.write
                  [xself xarg]
                    seq > @
                      (((unsupported)) 0)
                        ((xarg).eq "this").if
                          (((unsupported)) (1))
                        (((unsupported)) (0))
            (((unsupported)) ((xNamedTuple)))
              seq
                (((unsupported)) ((xx)) ((xint)))
                (((unsupported)) ((xy)) ((xint)))
            (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
              (((unsupported)) ((x__call__)) (((xtyping).xCallable)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basic_protocol.write
                  [xself]
                    memory > xmeth
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          xmeth.write
                            [xself]
                              seq > @
                        xf.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xD)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xD)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) (((xtypes).xFunctionType)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xf)) ((xP)))
                xtest_everything_implements_empty_protocol.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                        (((unsupported)) 0)
                        xf.write
                          []
                            seq > @
                        (((unsupported)) ((xthing)) ((((unsupported)) ((xobject)) ((xtype)) ((xtuple)) ((xC)) (((xtypes).xFunctionType)))))
                          bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xthing)) ((xEmpty)))
                        (((unsupported)) ((xthing)) ((((unsupported)) ((((xobject)) 0)) (1) ((((unsupported)) 0)) ((xtyping)) ((xf)))))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((xthing)) ((xEmpty)))
                xtest_function_implements_protocol.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xf)) ((xHasCallProtocol)))
                xtest_no_inheritance_from_nominal.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xProtocol)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xC)) ((xProtocol)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xProtocol)) ((xC)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xBP)) ((xC)) ((xProtocol)))
                        (((unsupported)) ((xBP)) ((xC)))
                        (((unsupported)) ((xC)) ((xBP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xD)) 0)) ((xE)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xE)) 0)) ((xD)))
                xtest_no_instantiation.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xP)) 0)
                        (((unsupported)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xC)))
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xPG)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xPG)) ((xint)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xPG)) ((xT)))) 0)
                        (((unsupported)) ((((unsupported)) ((xPG)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((((unsupported)) ((xCG)) ((xint)))) 0)) ((xCG)))
                xtest_cannot_instantiate_abstract.write
                  [xself]
                    memory > xameth
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xameth.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xNotImplementedError)))
                        (((unsupported)) ((xP)))
                        (((unsupported)) ((xB)))
                          xameth.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (26))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xB)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                xtest_subprotocols_extending.write
                  [xself]
                    memory > xmeth1
                    memory > xmeth2
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                          xmeth1.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xP1)) ((xProtocol)) ((xruntime_checkable)))
                          xmeth2.write
                            [xself]
                              seq > @
                        (((unsupported)) 0)
                          seq
                            xmeth1.write
                              [xself]
                                seq > @
                            xmeth2.write
                              [xself]
                                seq > @
                        (((unsupported)) 0)
                          xmeth1.write
                            [xself]
                              seq > @
                        (((unsupported)) 0)
                          xmeth2.write
                            [xself]
                              seq > @
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC1)) 0)) ((xP2)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC2)) 0)) ((xP2)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC1)) ((xP2)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC2)) ((xP2)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP2)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xP2)))
                xtest_subprotocols_merging.write
                  [xself]
                    memory > xmeth1
                    memory > xmeth2
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                          xmeth1.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xProtocol)))
                          xmeth2.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xP1)) ((xP2)) ((xProtocol)) ((xruntime_checkable)))
                        (((unsupported)) 0)
                          seq
                            xmeth1.write
                              [xself]
                                seq > @
                            xmeth2.write
                              [xself]
                                seq > @
                        (((unsupported)) 0)
                          xmeth1.write
                            [xself]
                              seq > @
                        (((unsupported)) 0)
                          xmeth2.write
                            [xself]
                              seq > @
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC1)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC2)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC1)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC2)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xP)))
                xtest_protocols_issubclass.write
                  [xself]
                    memory > xx
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))) ((xruntime_checkable)))
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((xProtocol)))
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) 0)
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xPG)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xBadP)) ((xPG)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((((unsupported)) ((xPG)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((((unsupported)) ((xPG)) ((xC)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((xBadP)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((xBadPG)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xP)) ((((unsupported)) ((xPG)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xPG)) ((((unsupported)) ((xPG)) ((xint)))))
                xtest_protocols_issubclass_non_callable.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        (((unsupported)) 0)
                          xx.write 1
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((xPNonCall)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xPNonCall)))
                        bogusForceDataize.write ((((xPNonCall).xregister)) ((xC)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xC)) ((xPNonCall)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xPNonCall)))
                        (((unsupported)) ((xPNonCall)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC)) 0)) ((xD)))
                        bogusForceDataize.write ((((xD).xregister)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xD)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xD)) ((xPNonCall)))
                xtest_protocols_isinstance.write
                  [xself]
                    memory > xmeth
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))) ((xruntime_checkable)))
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((xProtocol)))
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) 0)
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xPG)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((xC)) 0)) ((((unsupported)) ((xPG)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((xC)) 0)) ((((unsupported)) ((xPG)) ((xC)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((xC)) 0)) ((xBadP)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((xC)) 0)) ((xBadPG)))
                xtest_protocols_isinstance_py36.write
                  [xself]
                    memory > xmeth
                    memory > xlabel
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init__.write
                            [xself xx xy xlabel]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xx)) ((xx)))
                                  (((unsupported)) (((xself).xy)) ((xy)))
                                  (((unsupported)) (((xself).xlabel)) ((xlabel)))
                        (((unsupported)) 0)
                          seq
                            xlabel.write "B"
                            x__init__.write
                              [xself xx xy]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xx)) ((xx)))
                                    (((unsupported)) (((xself).xy)) ((xy)))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xattr]
                                seq > @
                                  (((unsupported)) (((xself).xattr)) ((xattr)))
                            xmeth.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) (0))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xAPoint)) (1) (2) ("A"))) ((xPoint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xBPoint)) (1) (2))) ((xPoint)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xMyPoint)) 0)) ((xPoint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xBPoint)) (1) (2))) ((xPosition)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xOther)) 0)) ((xProto)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xConcrete)) 0)) ((xProto)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) (42))) ((xProto)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xBad)) 0)) ((xProto)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xBad)) 0)) ((xPoint)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xBad)) 0)) ((xPosition)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xBad)) 0)) ((xConcrete)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xOther)) 0)) ((xConcrete)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xNT)) (1) (2))) ((xPosition)))
                xtest_protocols_isinstance_init.write
                  [xself]
                    memory > xx
                    memory > x__init__
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) 0)
                          x__init__.write
                            [xself xx]
                              seq > @
                                (((unsupported)) (((xself).xx)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) (1))) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) (1))) ((xPG)))
                xtest_protocol_checks_after_subscript.write
                  [xself]
                    memory > xCI
                    memory > xCA
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                        (((unsupported)) ((((unsupported)) ((xP)) ((xT)))))
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                        xCA.write (((unsupported)) ((xC)) ((xAny)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xOther1)) 0)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xOther2)) ((xC)))
                        (((unsupported)) ((((unsupported)) ((xC)) ((xAny)))))
                        (((unsupported)) ((((unsupported)) ((xC)) ((xAny)))))
                        xCI.write (((unsupported)) ((xC)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xD1)) 0)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xD2)) ((xC)))
                xtest_protocols_support_register.write
                  [xself]
                    memory > xx
                    memory > xmeth
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) ((xProtocol)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xPM)))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xD).xregister)) ((xC)))
                        bogusForceDataize.write ((((xP).xregister)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xD)))
                xtest_none_on_non_callable_doesnt_block_implementation.write
                  [xself]
                    memory > xx
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) 0)
                          xx.write 1
                        (((unsupported)) ((xA)))
                          xx.write "None: is there a None literal in the EO language?"
                        (((unsupported)) 0)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xB)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                xtest_none_on_callable_blocks_implementation.write
                  [xself]
                    memory > xx
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) 0)
                          xx.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((xA)))
                          xx.write "None: is there a None literal in the EO language?"
                        (((unsupported)) 0)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xB)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC)) 0)) ((xP)))
                xtest_non_protocol_subclasses.write
                  [xself]
                    memory > xx
                    memory > xmeth
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                          xx.write 1
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) ((xP)))
                          xx.write 1
                        (((unsupported)) ((xPR)))
                        (((unsupported)) 0)
                          xx.write 1
                        (((unsupported)) 0)
                          xmeth.write
                            [xself]
                              seq > @
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC)) 0)) ((xNonP)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xD)) 0)) ((xNonPR)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC)) ((xNonP)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xD)) ((xNonPR)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xNonPR)) 0)) ((xPR)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xNonPR)) ((xPR)))
                xtest_custom_subclasshook.write
                  [xself]
                    memory > xx
                    memory > x__subclasshook__
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                          xx.write 1
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          xx.write 1
                        (((unsupported)) ((xP)))
                          x__subclasshook__.write
                            [xcls xother]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((((((xother).x__name__).xstartswith)) ("OK"))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xOKClass)) 0)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xBadClass)) 0)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xOKClass)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xBadClass)) ((xC)))
                xtest_issubclass_fails_correctly.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((xC)) 0)) ((xP)))
                xtest_defining_generic_protocols.write
                  [xself]
                    memory > xS
                    memory > xmeth
                    memory > xy
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((((unsupported)) ((xT)) ((xS)))))) ((xruntime_checkable)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) ((((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xT)))))) ((((unsupported)) ((xProtocol)) ((xT)))))
                          xy.write 1
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xP)) ((((unsupported)) ((xint)) ((xstr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((((unsupported)) ((xint)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xClassVar)))))
                        (((unsupported)) ((((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((((unsupported)) ((xC)) ((xstr)))) 0)) ((xC)))
                xtest_defining_generic_protocols_old_style.write
                  [xself]
                    memory > xmeth
                    memory > xT
                    memory > xx
                    memory > xy
                    memory > xbar
                    memory > xS
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((xProtocol)) ((((unsupported)) ((xGeneric)) ((((unsupported)) ((xT)) ((xS)))))) ((xruntime_checkable)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)) ((((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xstr)))))) ((xProtocol)))
                          xy.write 1
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xstr)))))) ((xPR)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xP)) ((xPR)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((((unsupported)) ((xint)) (1))))
                        (((unsupported)) ((xProtocol)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          xbar.write
                            [xself xx]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((xProtocol)))
                          xbar.write
                            [xself xx]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xP1)) ((xstr)))) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) 0)
                          seq
                            xx.write 1
                            xbar.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xTest)) 0)) ((xPSub)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPR)) ((((unsupported)) ((xint)) ((xClassVar)))))
                xtest_init_called.write
                  [xself]
                    memory > x__init__
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                        (((unsupported)) ((((unsupported)) ((xP)) ((xT)))))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xtest)) ("OK"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((unsupported)) ((xC)) ((xint)))) 0).xtest)) ("OK"))
                xtest_protocols_bad_subscripts.write
                  [xself]
                    memory > xS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xProtocol)) ((((unsupported)) ((xT)) ((xT)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xProtocol)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))) ((((unsupported)) ((xProtocol)) ((xS)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) (((xtyping).xMapping)) ((((unsupported)) ((xT)) ((xS)))))) ((((unsupported)) ((xProtocol)) ((xT)))))
                xtest_generic_protocols_repr.write
                  [xself]
                    memory > xS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((((unsupported)) ((xT)) ((xS)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xP)) ((((unsupported)) ((xT)) ((xS))))))).xendswith)) ("P[~T, ~S]"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xP)) ((((unsupported)) ((xint)) ((xstr))))))).xendswith)) ("P[int, str]"))))
                xtest_generic_protocols_eq.write
                  [xself]
                    memory > xS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((((unsupported)) ((xT)) ((xS)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xP)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xP)) ((((unsupported)) ((xint)) ((xT)))))) ((((unsupported)) ((xP)) ((((unsupported)) ((xint)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xP)) ((((unsupported)) ((xT)) ((xT)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xS)))))))) ((((unsupported)) ((xint)) ((xstr)))))) ((((unsupported)) ((xP)) ((((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xstr)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xstr)))))))))))
                xtest_generic_protocols_special_from_generic.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xP).x__parameters__)) ((((unsupported)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xP)) ((xint))).x__parameters__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xP)) ((xint))).x__args__)) ((((unsupported)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xP)) ((xint))).x__origin__)) ((xP)))
                xtest_generic_protocols_special_from_protocol.write
                  [xself]
                    memory > xx
                    memory > xmeth
                    memory > xT
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) ((xProtocol)))
                          xmeth.write
                            [xself]
                              seq > @
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))))
                          seq
                            xx.write 1
                            xmeth.write
                              [xself]
                                seq > @
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xP).x_is_protocol)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xPR).x_is_protocol)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xPG).x_is_protocol)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xP).x_is_runtime_protocol)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xPR).x_is_runtime_protocol)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xPG)) ((xint))).x_is_protocol)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xtyping).x_get_protocol_attrs)) ((xP)))) ((((unsupported)) ("meth"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xtyping).x_get_protocol_attrs)) ((xPR)))) ((((unsupported)) ("x"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfrozenset)) (((((xtyping).x_get_protocol_attrs)) ((xPG)))))) ((((xfrozenset)) ((((unsupported)) ("x") ("meth"))))))
                xtest_no_runtime_deco_on_nominal.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xruntime_checkable)))
                        (((unsupported)) ((xProtocol)))
                          xx.write 1
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xProto)) ((xruntime_checkable)))
                xtest_none_treated_correctly.write
                  [xself]
                    memory > xx
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)) ((xruntime_checkable)))
                          xx.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xB)) 0)) ((xP)))
                        (((unsupported)) 0)
                          xx.write 1
                        (((unsupported)) 0)
                          xx.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xD)) 0)) ((xP)))
                        (((unsupported)) 0)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xx)) (1))
                        (((unsupported)) 0)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((xself).xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xD)) 0)) ((xP)))
                xtest_protocols_in_unions.write
                  [xself]
                    memory > xx
                    memory > xAlias2
                    memory > xAlias
                    seq > @
                      seq
                        (((unsupported)) ((xProtocol)))
                          xx.write "None: is there a None literal in the EO language?"
                        xAlias.write (((unsupported)) (((xtyping).xUnion)) ((((unsupported)) (((xtyping).xIterable)) ((xP)))))
                        xAlias2.write (((unsupported)) (((xtyping).xUnion)) ((((unsupported)) ((xP)) (((xtyping).xIterable)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xAlias)) ((xAlias2)))
                xtest_protocols_pickleable.write
                  [xself]
                    memory > xD
                    memory > xc
                    memory > xz
                    memory > xT
                    memory > xx
                    memory > xs
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xProtocol)) ((xT)))) ((xruntime_checkable)))
                          xx.write 1
                        (((unsupported)) ((((unsupported)) ((xP)) ((xint)))))
                        xc.write (((xCP)) 0)
                        (((unsupported)) (((xc).xfoo)) (42))
                        (((unsupported)) (((xc).xbar)) ("abc"))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xz.write ((((xpickle).xdumps)) ((xc)) ((xproto)))
                            xx.write ((((xpickle).xloads)) ((xz)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xfoo)) (42))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xbar)) ("abc"))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xx)) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).x__dict__)) ((((unsupported)) ("foo") (42) ("bar") ("abc"))))
                            xs.write ((((xpickle).xdumps)) ((xP)))
                            xD.write ((((xpickle).xloads)) ((xs)))
                            (((unsupported)) 0)
                              xx.write 1
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xE)) 0)) ((xD)))
                xtest_supports_int.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xint)) (((xtyping).xSupportsInt)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsInt)))
                xtest_supports_float.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xfloat)) (((xtyping).xSupportsFloat)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsFloat)))
                xtest_supports_complex.write
                  [xself]
                    memory > x__complex__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__complex__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) (((xtyping).xSupportsComplex)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsComplex)))
                xtest_supports_bytes.write
                  [xself]
                    memory > x__bytes__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__bytes__.write
                            [xself]
                              seq > @
                                (((unsupported)) (""))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xB)) (((xtyping).xSupportsBytes)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsBytes)))
                xtest_supports_abs.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xfloat)) (((xtyping).xSupportsAbs)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xint)) (((xtyping).xSupportsAbs)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsAbs)))
                xtest_supports_round.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xissubclass)) ((xfloat)) (((xtyping).xSupportsRound)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xfloat)) (((xtyping).xSupportsRound)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xint)) (((xtyping).xSupportsRound)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsRound)))
                xtest_reversible.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xlist)) (((xtyping).xReversible)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xint)) (((xtyping).xReversible)))
                xtest_supports_index.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xint)) (((xtyping).xSupportsIndex)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xstr)) (((xtyping).xSupportsIndex)))
                xtest_bundled_protocol_instance_works.write
                  [xself]
                    memory > xc
                    memory > x__int__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (0) (((xtyping).xSupportsAbs)))
                        (((unsupported)) (((xtyping).xSupportsInt)))
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (42))
                        (((unsupported)) ((xC1)))
                        xc.write (((xC2)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xC1)))
                xtest_collections_protocols_allowed.write
                  [xself]
                    memory > xclose
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) ((((xcollections).xabc).xIterable)) ((xProtocol)) ((xruntime_checkable)))
                          xclose.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((unsupported)) 0)))
                            xclose.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xB)) ((xCustom)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xA)) ((xCustom)))
                xtest_builtin_protocol_whitelist.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTestCase)) ((xProtocol)))
                        (((unsupported)) (((xtyping).xContextManager)) ((xProtocol)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xY
                    memory > xX
                    memory > xSM1
                    seq > @
                      seq
                        xX.write (((unsupported)) ((xSimpleMapping)) ((((unsupported)) ((xstr)) ((xAny)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).x__parameters__)) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xX)) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xX)) ((((unsupported)) ((xstr)) ((xstr)))))
                        xY.write (((unsupported)) ((xSimpleMapping)) ((((unsupported)) ((xXK)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).x__parameters__)) ((((unsupported)) ((xXK)))))
                        (((unsupported)) ((xY)) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xY)) ((((unsupported)) ((xstr)) ((xstr)))))
                        xSM1.write (((unsupported)) ((xSimpleMapping)) ((((unsupported)) ((xstr)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xSM1)) ((xSimpleMapping)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xSM1)) 0)) ((xSimpleMapping)))
                xtest_generic_errors.write
                  [xself]
                    memory > xS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xGeneric)) ((xT)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((xT)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((xS)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((((unsupported)) ((xGeneric)) ((xT)))))
                            (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((unsupported)) 0)) ((((unsupported)) ((xList)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xlist)) ((((unsupported)) ((xList)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xGeneric)))
                            (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((((unsupported)) ((xGeneric)) ((xS)))))
                            (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xList)) ((xT)))) ((((unsupported)) ((xGeneric)) ((xS)))))
                            (((unsupported)) 0)
                xtest_init.write
                  [xself]
                    memory > xS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xGeneric)) ((((unsupported)) ((xT)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xGeneric)) ((((unsupported)) ((xT)) ((xS)) ((xT)))))
                xtest_init_subclass.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xGeneric)) ((xT)))))
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xcls).xattr)) (42))
                        (((unsupported)) ((xX)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).xattr)) (42))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          unsupported
                        (((unsupported)) (((xX).xattr)) (1))
                        (((unsupported)) (((xY).xattr)) (2))
                        (((unsupported)) ((xY)))
                        (((unsupported)) ((((unsupported)) ((xX)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).xattr)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xZ).xattr)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xW).xattr)) (42))
                xtest_repr.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xSimpleMapping)))) ("<class '{__name__}.SimpleMapping'>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xMySimpleMapping)))) ("<class '{__name__}.MySimpleMapping'>"))
                xtest_chain_repr.write
                  [xself]
                    memory > xZ
                    memory > xS
                    memory > xT
                    memory > xX
                    memory > xY
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        xX.write (((unsupported)) ((xC)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xS)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xX)) ((((unsupported)) ((xC)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xS)) ((xT)))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xX)) ((((unsupported)) ((xC)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xS)))))))))
                        xY.write (((unsupported)) ((xX)) ((((unsupported)) ((xT)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xY)) ((((unsupported)) ((xX)) ((((unsupported)) ((xT)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xY)) ((((unsupported)) ((xX)) ((((unsupported)) ((xS)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xY)) ((((unsupported)) ((xX)) ((((unsupported)) ((xT)) ((xstr)))))))
                        xZ.write (((unsupported)) ((xY)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xZ)) ((((unsupported)) ((xY)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xZ)) ((((unsupported)) ((xY)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xZ)) ((((unsupported)) ((xY)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) ((xZ))).xendswith)) (".C[typing.Tuple[str, int]]"))))
                xtest_new_repr.write
                  [xself]
                    memory > xS
                    memory > xT
                    memory > xU
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xU.write (((unsupported)) ((xTypeVar)) ("U") (TRUE))
                        xS.write (((xTypeVar)) ("S"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xList)))) ("typing.List"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xList)) ((xT)))))) ("typing.List[~T]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xList)) ((xU)))))) ("typing.List[+U]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xList)) ((xS)))) ((xT)))) ((xint)))))) ("typing.List[int]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xList)) ((xint)))))) ("typing.List[int]"))
                xtest_new_repr_complex.write
                  [xself]
                    memory > xTS
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xTS.write (((xTypeVar)) ("TS"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((unsupported)) (((xtyping).xMapping)) ((((unsupported)) ((xT)) ((xTS)))))) ((((unsupported)) ((xTS)) ((xT)))))))) ("typing.Mapping[~TS, ~T]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((unsupported)) ((xList)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xTS)))))))) ((((unsupported)) ((xint)) ((xT)))))))) ("typing.List[typing.Tuple[int, ~T]]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((unsupported)) ((xList)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))) ((((unsupported)) ((xList)) ((xint)))))))) ("typing.List[typing.Tuple[typing.List[int], typing.List[int]]]"))
                xtest_new_repr_bare.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xGeneric)) ((xT)))))) ("typing.Generic[~T]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) (((xtyping).xProtocol)) ((xT)))))) ("typing.Protocol[~T]"))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xAny)) ((xAny)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write (((xrepr)) (((xC).x__mro__)))
                xtest_dict.write
                  [xself]
                    memory > xc
                    memory > xb
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        xb.write (((xB)) 0)
                        (((unsupported)) (((xb).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x__dict__)) ((((unsupported)) ("foo") (42))))
                        (((unsupported)) ((((unsupported)) ((xB)) ((xint)))))
                        xc.write (((xC)) 0)
                        (((unsupported)) (((xc).xbar)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).x__dict__)) ((((unsupported)) ("bar") ("abc"))))
                xtest_subscripted_generics_as_proxies.write
                  [xself]
                    memory > xx
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          xx.write "def"
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((xint))).xx)) ("def"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((((unsupported)) ((xC)) ((xint))))).xx)) ("def"))
                        (((unsupported)) (((((unsupported)) ((xC)) ((((unsupported)) ((xC)) ((xint))))).xx)) ("changed"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xx)) ("changed"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((xstr))).xx)) ("changed"))
                        (((unsupported)) (((((unsupported)) ((xC)) ((((unsupported)) ((xList)) ((xstr))))).xz)) ("new"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xz)) ("new"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((((unsupported)) ((xTuple)) ((xint))))).xz)) ("new"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xC)) 0).xx)) ("changed"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((unsupported)) ((xC)) ((((unsupported)) ((xTuple)) ((xstr)))))) 0).xz)) ("new"))
                        (((unsupported)) ((((unsupported)) ((xC)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xD)) ((xint))).xx)) ("changed"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).xz)) ("new"))
                        (((unsupported)) (((xD).xz)) ("from derived z"))
                        (((unsupported)) (((((unsupported)) ((xD)) ((xint))).xx)) ("from derived x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xx)) ("changed"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((xint))).xz)) ("new"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).xx)) ("from derived x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xD)) ((xstr))).xz)) ("from derived z"))
                xtest_abc_registry_kept.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((xcollections).xabc).xMapping)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xC).xregister)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (1) ((xC)))
                        (((unsupported)) ((xC)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (1) ((xC)))
                        bogusForceDataize.write ((((xC).x_abc_registry_clear)) 0)
                        bogusForceDataize.write ((((xC).x_abc_caches_clear)) 0)
                xtest_false_subclasses.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xMutableMapping)) ((((unsupported)) ((xstr)) ((xstr)))))))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((unsupported)) 0)) ((xMyMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xdict)) ((xMyMapping)))
                xtest_abc_bases.write
                  [xself]
                    memory > x__iter__
                    memory > x__getitem__
                    memory > x__delitem__
                    memory > x__setitem__
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xMutableMapping)) ((((unsupported)) ((xstr)) ((xstr)))))))
                          seq
                            x__getitem__.write
                              [xself xk]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            x__setitem__.write
                              [xself xk xv]
                                seq > @
                            x__delitem__.write
                              [xself xk]
                                seq > @
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                        bogusForceDataize.write ((((((xMM)) 0).xupdate)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xMM)) 0)) ((((xcollections).xabc).xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xMM)) 0)) ((xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xMM)) 0)) ((xList)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((unsupported)) 0)) ((xMM)))
                xtest_multiple_bases.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xMutableMapping)) ((((unsupported)) ((xstr)) ((xstr)))))) ((((xcollections).xabc).xMutableMapping)))
                        (((unsupported)) ((((xcollections).xabc).xMutableMapping)) ((((unsupported)) ((xMutableMapping)) ((((unsupported)) ((xstr)) ((xstr)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xMM2).x__bases__)) ((((unsupported)) ((((xcollections).xabc).xMutableMapping)) ((xGeneric)))))
                xtest_orig_bases.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xT)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__orig_bases__)) ((((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xT)))))))))
                xtest_naive_runtime_checks.write
                  [xself]
                    memory > xnaive_list_base_check
                    memory > xnaive_dict_check
                    memory > xnaive_generic_check
                    seq > @
                      seq
                        xnaive_dict_check.write
                          [xobj xtp]
                            seq > @
                              seq
                                ((((xlen)) (((xtp).x__parameters__))).greater 0).if
                                  (((unsupported)) ((xNotImplementedError)))
                                ((xtp).x__args__).if
                                  seq
                                    (((unsupported)) ((((unsupported)) ((xKT)) ((xVT)))) (((xtp).x__args__)))
                                    (((unsupported)) ((((xall)) ((((unsupported)) (((((xisinstance)) ((xk)) ((xKT))).and (((xisinstance)) ((xv)) ((xVT))))) ((((unsupported)) ((xk)) ((xv)))) (((((xobj).xitems)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xnaive_dict_check)) ((((unsupported)) ("x") (1))) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xint)))))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xnaive_dict_check)) ((((unsupported)) (1) ("x"))) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xint)))))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xNotImplementedError)))))
                          bogusForceDataize.write (((xnaive_dict_check)) ((((unsupported)) (1) ("x"))) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xT)))))))
                        xnaive_generic_check.write
                          [xobj xtp]
                            seq > @
                              seq
                                ((((xhasattr)) ((xobj)) ("__orig_class__")).not).if
                                  (((unsupported)) ((xNotImplementedError)))
                                (((unsupported)) ((((xobj).x__orig_class__).eq (xtp))))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xnaive_generic_check)) ((((((unsupported)) ((xNode)) ((xint)))) 0)) ((((unsupported)) ((xNode)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xnaive_generic_check)) ((((((unsupported)) ((xNode)) ((xstr)))) 0)) ((((unsupported)) ((xNode)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xnaive_generic_check)) ((((((unsupported)) ((xNode)) ((xstr)))) 0)) ((xList)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xNotImplementedError)))))
                          bogusForceDataize.write (((xnaive_generic_check)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) ((xNode)) ((xint)))))
                        xnaive_list_base_check.write
                          [xobj xtp]
                            seq > @
                              (((unsupported)) ((((xall)) ((((unsupported)) ((((xisinstance)) ((xx)) ((((unsupported)) (((((unsupported)) (((xtp).x__orig_bases__)) (0)).x__args__)) (0))))) ((xx)) ((xobj)))))))
                        (((unsupported)) ((((unsupported)) ((xList)) ((xint)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xnaive_list_base_check)) ((((unsupported)) (1) (2) (3))) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xnaive_list_base_check)) ((((unsupported)) ("a") ("b"))) ((xC)))))
                xtest_multi_subscr_base.write
                  [xself]
                    memory > xV
                    memory > xT
                    memory > xU
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xU.write (((xTypeVar)) ("U"))
                        xV.write (((xTypeVar)) ("V"))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xList)) ((xT)))) ((xU)))) ((xV)))))
                          (((unsupported)) 0)
                        (((unsupported)) ((xC)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xList)) ((xT)))) ((xU)))) ((xV)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__parameters__)) ((((unsupported)) ((xV)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__parameters__)) ((((unsupported)) ((xV)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((xint))).x__parameters__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xD)) ((xint))).x__parameters__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xC)) ((xint))).x__args__)) ((((unsupported)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xD)) ((xint))).x__args__)) ((((unsupported)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__bases__)) ((((unsupported)) ((xlist)) ((xGeneric)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__bases__)) ((((unsupported)) ((xC)) ((xlist)) ((xGeneric)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__orig_bases__)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xList)) ((xT)))) ((xU)))) ((xV)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__orig_bases__)) ((((unsupported)) ((xC)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xList)) ((xT)))) ((xU)))) ((xV)))))))
                xtest_subscript_meta.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((xtype)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xType)) ((xMeta)))) ((((unsupported)) ((xType)) ((xMeta)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) ((xMeta)))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xMeta)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xMeta))))).x__args__)) ((((unsupported)) ((xEllipsis)) ((xMeta)))))
                xtest_generic_hashes.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                            (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xA)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr)))) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB).xA)) (((xB).xA)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((((unsupported)) (((xB).xA)) ((xstr)))))) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((((unsupported)) (((xB).xA)) ((xstr)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xA)) (((xB).xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xA)) (((xmod_generics_cache).xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xA)) ((((xmod_generics_cache).xB).xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xB).xA)) (((xmod_generics_cache).xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xB).xA)) ((((xmod_generics_cache).xB).xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xA)) ((xstr)))) ((((unsupported)) (((xB).xA)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xA)) ((((unsupported)) ((xList)) ((xAny)))))) ((((unsupported)) (((xB).xA)) ((((unsupported)) ((xList)) ((xAny)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xA)) ((xstr)))) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xA)) ((xstr)))) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) (((xB).xA)) ((xint)))) ((((unsupported)) (((xmod_generics_cache).xA)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) (((xB).xA)) ((((unsupported)) ((xList)) ((xAny)))))) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((((unsupported)) ((xList)) ((xAny)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xA)) ((xstr)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) (((xB).xA)) ((xstr)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xA)) ((((unsupported)) ((xList)) ((xAny)))))))) ((((unsupported)) ((xTuple)) ((((unsupported)) (((xB).xA)) ((((unsupported)) ((xList)) ((xAny)))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xA)) ((xstr)))))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr)))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((((unsupported)) ((xA)) ((xstr)))) ((((unsupported)) ((xA)) ((xstr)))))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((((unsupported)) ((xA)) ((xstr)))) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr)))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) (((xtyping).xFrozenSet)) ((((unsupported)) ((xA)) ((xstr)))))) ((((unsupported)) (((xtyping).xFrozenSet)) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((xstr)))))))
                        ((((unsupported)) (((xsys).xversion_info)) ((((unsupported)) (2)))).greater (((unsupported)) (3) (2))).if
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xA)) ((xstr))))))).xendswith)) ("<locals>.A[str]]"))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) (((xB).xA)) ((xstr))))))).xendswith)) ("<locals>.B.A[str]]"))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) (((xmod_generics_cache).xA)) ((xstr))))))).xendswith)) ("mod_generics_cache.A[str]]"))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((((xrepr)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((((xmod_generics_cache).xB).xA)) ((xstr))))))).xendswith)) ("mod_generics_cache.B.A[str]]"))))
                xtest_extended_generic_rules_eq.write
                  [xself]
                    memory > xT
                    memory > xU
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xU.write (((xTypeVar)) ("U"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))) ((xint)))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) (((xtyping).xIterable)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))) ((xT)))) ((((unsupported)) (((xtyping).xIterable)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xint)))))) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xU)))))) ((((unsupported)) ((xT)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) ((xint)))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xU)))))) ((((unsupported)) ((xint)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        (((unsupported)) ((xBase)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xBase)))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xBase)) ((xDerived)))))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xBase)) ((xDerived)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xT)))) ((xT)))))) ((xKT)))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xKT)))) ((xKT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xList)) ((xT)))))))) ((xint)))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xList)) ((xint)))))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xT)))) ((xU)))))) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xT)))) ((xU)))))) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))
                xtest_extended_generic_rules_repr.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrepr)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xTuple)) ((xCallable))))))).xreplace)) ("typing.") (""))) ("Union[Tuple, Callable]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrepr)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xTuple)) ((xint))))))))).xreplace)) ("typing.") (""))) ("Union[Tuple, Tuple[int]]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrepr)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xOptional)) ((xT)))))))) ((xint))))).xreplace)) ("typing.") (""))) ("Callable[..., Union[int, NoneType]]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrepr)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xList)) ((xT)))))))) ((xint))))).xreplace)) ("typing.") (""))) ("Callable[[], List[int]]"))
                xtest_generic_forward_ref.write
                  [xself]
                    memory > xbarfoo2
                    memory > xCT
                    memory > xT
                    memory > xbarfoo
                    memory > xfoobar
                    memory > xAT
                    seq > @
                      seq
                        xfoobar.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoobar)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("x") ((((unsupported)) ((xList)) ((((unsupported)) ((xList)) ((xCC)))))))))
                        xT.write (((xTypeVar)) ("T"))
                        xAT.write (((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((((unsupported)) 0)))))
                        xbarfoo.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((xget_type_hints)) ((xbarfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ("x"))) ((xAT)))
                        xCT.write (((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xList)) ((xT)))))))
                        xbarfoo2.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((xget_type_hints)) ((xbarfoo2)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ("x"))) ((xCT)))
                xtest_extended_generic_rules_subclassing.write
                  [xself]
                    memory > x__call__
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xKT)))))))
                          (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((((unsupported)) 0)))))))
                          (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xT)))) ((xT)))))))
                          (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))))
                          x__call__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xT1).x__parameters__)) ((((unsupported)) ((xT)) ((xKT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xT1)) ((((unsupported)) ((xint)) ((xstr))))).x__args__)) ((((unsupported)) ((xint)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xT1)) ((((unsupported)) ((xint)) ((xT))))).x__origin__)) ((xT1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xT2).x__parameters__)) ((((unsupported)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xT1)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xT2)) ((((unsupported)) ((xint)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((((xrepr)) ((((unsupported)) ((xC1)) ((xint))))).xsplit)) ("."))) ((1.neg)))) ("C1[int]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC2).x__parameters__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC2)) 0)) ((((xcollections).xabc).xCallable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC2)) ((((xcollections).xabc).xCallable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC1)) ((((xcollections).xabc).xCallable)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xT1)) 0)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xT2)) ((xtuple)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))) (((xtyping).xSequence)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))) (((xtyping).xIterable)))
                xtest_fail_with_bare_union.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xList)) ((xUnion)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTuple)) ((xOptional)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xClassVar)) ((xClassVar)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xList)) ((((unsupported)) ((xClassVar)) ((xint)))))
                xtest_fail_with_bare_generic.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xList)) ((xGeneric)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTuple)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xList)) (((xtyping).xProtocol)))
                xtest_type_erasure_special.write
                  [xself]
                    memory > x__call__
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        bogusForceDataize.write ((((xself).xclear_caches)) 0)
                        (((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyTup)) ((xint)))) 0).x__class__)) ((xMyTup)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyTup)) ((xint)))) 0).x__orig_class__)) ((((unsupported)) ((xMyTup)) ((xint)))))
                        (((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))))
                          x__call__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyCall)) ((xT)))) 0).x__class__)) ((xMyCall)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyCall)) ((xT)))) 0).x__orig_class__)) ((((unsupported)) ((xMyCall)) ((xT)))))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xT)) ((xT)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyDict)) ((xint)))) 0).x__class__)) ((xMyDict)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyDict)) ((xint)))) 0).x__orig_class__)) ((((unsupported)) ((xMyDict)) ((xint)))))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDefaultDict)) ((((unsupported)) ((xstr)) ((xT)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyDef)) ((xint)))) 0).x__class__)) ((xMyDef)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyDef)) ((xint)))) 0).x__orig_class__)) ((((unsupported)) ((xMyDef)) ((xint)))))
                        (((xsys).xversion_info).geq (((unsupported)) (3) (3))).if
                          seq
                            (((unsupported)) ((((unsupported)) (((xtyping).xChainMap)) ((((unsupported)) ((xstr)) ((xT)))))))
                              (((unsupported)) 0)
                            bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyChain)) ((xint)))) 0).x__class__)) ((xMyChain)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((((unsupported)) ((xMyChain)) ((xint)))) 0).x__orig_class__)) ((((unsupported)) ((xMyChain)) ((xint)))))
                xtest_all_repr_eq_any.write
                  [xself]
                    memory > xobjs
                    seq > @
                      seq
                        xobjs.write (((unsupported)) ((((xgetattr)) ((xtyping)) ((xel)))) ((xel)) (((xtyping).x__all__)))
                        (((unsupported)) ((xobj)) ((xobjs)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xrepr)) ((xobj)))) (""))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xobj)) ((xobj)))
                            ((((xgetattr)) ((xobj)) ("__parameters__") ("None: is there a None literal in the EO language?")).and ((((xlen)) (((xobj).x__parameters__))).eq 1)).if
                              bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xobj)) ((xAny))).x__args__)) ((((unsupported)) ((xAny)))))
                            (((xisinstance)) ((xobj)) ((xtype))).if
                              (((unsupported)) ((xbase)) (((xobj).x__mro__)))
                                seq
                                  bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xrepr)) ((xbase)))) (""))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((xbase)) ((xbase)))
                xtest_pickle.write
                  [xself]
                    memory > xsamples
                    memory > xc
                    memory > xz
                    memory > xT
                    memory > xmore_samples
                    memory > xx
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) ((((unsupported)) ((xB)) ((xint)))))
                        xc.write (((xC)) 0)
                        (((unsupported)) (((xc).xfoo)) (42))
                        (((unsupported)) (((xc).xbar)) ("abc"))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xz.write ((((xpickle).xdumps)) ((xc)) ((xproto)))
                            xx.write ((((xpickle).xloads)) ((xz)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xfoo)) (42))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).xbar)) ("abc"))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xx).x__dict__)) ((((unsupported)) ("foo") (42) ("bar") ("abc"))))
                        xsamples.write (((unsupported)) ((xAny)) ((xUnion)) ((xTuple)) ((xCallable)) ((xClassVar)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))) ((((unsupported)) ((xClassVar)) ((xList)))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xstr)))) ((xbytes)))))) (((xtyping).xDefaultDict)) ((((unsupported)) (((xtyping).xFrozenSet)) ((xint)))))
                        (((unsupported)) ((xs)) ((xsamples)))
                          (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            seq
                              xz.write ((((xpickle).xdumps)) ((xs)) ((xproto)))
                              xx.write ((((xpickle).xloads)) ((xz)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xx)))
                        xmore_samples.write (((unsupported)) ((xList)) (((xtyping).xIterable)) (((xtyping).xType)) ((((unsupported)) ((xList)) ((xint)))) ((((unsupported)) (((xtyping).xType)) (((xtyping).xMapping)))) ((((unsupported)) (((xtyping).xAbstractSet)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xstr)))))))))
                        (((unsupported)) ((xs)) ((xmore_samples)))
                          (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            seq
                              xz.write ((((xpickle).xdumps)) ((xs)) ((xproto)))
                              xx.write ((((xpickle).xloads)) ((xz)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xx)))
                xtest_copy_and_deepcopy.write
                  [xself]
                    memory > xthings
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          (((unsupported)) 0)
                        xthings.write (((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xint)))) ((xint)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xAny)) ((xAny)))))) ((((unsupported)) ((xNode)) ((xT)))) ((((unsupported)) ((xNode)) ((xint)))) ((((unsupported)) ((xNode)) ((xAny)))) ((((unsupported)) (((xtyping).xIterable)) ((xT)))) ((((unsupported)) (((xtyping).xIterable)) ((xAny)))) ((((unsupported)) (((xtyping).xIterable)) ((xint)))) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xint)) ((xstr)))))) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xT)) ((xAny)))))) ((((unsupported)) ((xClassVar)) ((xint)))) ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xList)) ((xT)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ("T") ("T"))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ("T") ((xint)))))) ((((unsupported)) ((xList)) ("T"))) ((((unsupported)) (((xtyping).xMapping)) ((((unsupported)) ("T") ((xint)))))))
                        (((unsupported)) ((xt)) (((xthings).add (((unsupported)) ((xAny))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((((xcopy)) ((xt)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((((xdeepcopy)) ((xt)))))
                xtest_immutability_by_copy_and_pickle.write
                  [xself]
                    memory > xTLB
                    memory > xTL
                    memory > xTLV
                    memory > xTPB
                    memory > xTP
                    memory > xTPV
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xTP.write (((xTypeVar)) ("TP"))
                        xTPB.write (((unsupported)) ((xTypeVar)) ("TPB") ((xint)))
                        xTPV.write (((xTypeVar)) ("TPV") ((xbytes)) ((xstr)))
                        (((unsupported)) ((xX)) ((((unsupported)) ((xTP)) ((xTPB)) ((xTPV)) ((xList)) (((xtyping).xMapping)) ((xClassVar)) (((xtyping).xIterable)) ((xUnion)) ((xAny)) ((xTuple)) ((xCallable)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xcopy)) ((xX)))) ((xX)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xdeepcopy)) ((xX)))) ((xX)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((xpickle).xloads)) (((((xpickle).xdumps)) ((xX)))))) ((xX)))
                        xTL.write (((xTypeVar)) ("TL"))
                        xTLB.write (((unsupported)) ((xTypeVar)) ("TLB") ((xint)))
                        xTLV.write (((xTypeVar)) ("TLV") ((xbytes)) ((xstr)))
                        (((unsupported)) ((xX)) ((((unsupported)) ((xTL)) ((xTLB)) ((xTLV)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xcopy)) ((xX)))) ((xX)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xdeepcopy)) ((xX)))) ((xX)))
                xtest_copy_generic_instances.write
                  [xself]
                    memory > xc
                    memory > x__init__
                    memory > xci
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          x__init__.write
                            [xself xattr]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xself).xattr)) ((xattr)))
                        xc.write (((xC)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcopy)) ((xc))).xattr)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xdeepcopy)) ((xc))).xattr)) (42))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((xcopy)) ((xc)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((xdeepcopy)) ((xc)))) ((xc)))
                        (((unsupported)) (((xc).xattr)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcopy)) ((xc))).xattr)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xdeepcopy)) ((xc))).xattr)) (1))
                        xci.write (((((unsupported)) ((xC)) ((xint)))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcopy)) ((xci))).xattr)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xdeepcopy)) ((xci))).xattr)) (42))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((xcopy)) ((xci)))) ((xci)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((xdeepcopy)) ((xci)))) ((xci)))
                        (((unsupported)) (((xci).xattr)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcopy)) ((xci))).xattr)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xdeepcopy)) ((xci))).xattr)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xci).x__orig_class__)) ((((unsupported)) ((xC)) ((xint)))))
                xtest_weakref_all.write
                  [xself]
                    memory > xthings
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        xthings.write (((unsupported)) ((xAny)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xT)) ((xint)))))) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xAny)) ((xAny)))))) ((((unsupported)) ((xOptional)) ((((unsupported)) ((xList)) ((xint)))))) ((((unsupported)) (((xtyping).xMapping)) ((((unsupported)) ((xint)) ((xstr)))))) ((((unsupported)) ((((xtyping).xre).xMatch)) ((xbytes)))) ((((unsupported)) (((xtyping).xIterable)) ("whatever"))))
                        (((unsupported)) ((xt)) ((xthings)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((((xweakref).xref)) ((xt)))) 0)) ((xt)))
                xtest_parameterized_slots.write
                  [xself]
                    memory > xc
                    memory > xT
                    memory > xc_int
                    memory > x__slots__
                    memory > xfoo
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          x__slots__.write (((unsupported)) ("potato"))
                        xc.write (((xC)) 0)
                        xc_int.write (((((unsupported)) ((xC)) ((xint)))) 0)
                        (((unsupported)) (((xc).xpotato)) (0))
                        (((unsupported)) (((xc_int).xpotato)) (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xc).xtomato)) (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xc_int).xtomato)) (0))
                        xfoo.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ("x"))) ((((unsupported)) ((xC)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcopy)) ((((unsupported)) ((xC)) ((xint)))))) ((((xdeepcopy)) ((((unsupported)) ((xC)) ((xint)))))))
                xtest_parameterized_slots_dict.write
                  [xself]
                    memory > xd
                    memory > xd_int
                    memory > x__slots__
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          x__slots__.write (((unsupported)) ("banana") (42))
                        xd.write (((xD)) 0)
                        xd_int.write (((((unsupported)) ((xD)) ((xint)))) 0)
                        (((unsupported)) (((xd).xbanana)) ("yes"))
                        (((unsupported)) (((xd_int).xbanana)) ("yes"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xd).xfoobar)) ("no"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xd_int).xfoobar)) ("no"))
                xtest_errors.write
                  [xself]
                    memory > xB
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        seq
                          xB.write (((unsupported)) ((xSimpleMapping)) ((((unsupported)) ((xXK)) ((xAny)))))
                          (((unsupported)) ((((unsupported)) ((xGeneric)) ((xB)))))
                xtest_repr_2.write
                  [xself]
                    memory > xX
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__qualname__)) ("GenericTests.test_repr_2.<locals>.C"))
                        xX.write (((unsupported)) ((xC)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((((xrepr)) ((xX))).xsplit)) ("."))) ((1.neg)))) ("C[int]"))
                        (((unsupported)) ((((unsupported)) ((xC)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xY).x__qualname__)) ("GenericTests.test_repr_2.<locals>.Y"))
                xtest_eq_1.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xGeneric)) ((xGeneric)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xGeneric)) ((xT)))) ((((unsupported)) ((xGeneric)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xGeneric)) ((xKT)))) ((((unsupported)) ((xGeneric)) ((xVT)))))
                xtest_eq_2.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xA)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xA)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xA)) ((xT)))) ((((unsupported)) ((xA)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xA)) ((xT)))) ((((unsupported)) ((xB)) ((xT)))))
                xtest_multiple_inheritance.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((((unsupported)) ((xT)) ((xVT)))))))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((((unsupported)) ((xKT)) ((xT)))))))
                        (((unsupported)) ((((unsupported)) ((xA)) ((((unsupported)) ((xT)) ((xVT)))))) ((((unsupported)) ((xGeneric)) ((((unsupported)) ((xVT)) ((xT)) ((xKT)))))) ((((unsupported)) ((xB)) ((((unsupported)) ((xKT)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__parameters__)) ((((unsupported)) ((xVT)) ((xT)) ((xKT)))))
                xtest_multiple_inheritance_special.write
                  [xself]
                    memory > xS
                    seq > @
                      seq
                        xS.write (((xTypeVar)) ("S"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xS)))))
                          (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xList)) ((xint)))) ((xB)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).x__mro__)) ((((unsupported)) ((xC)) ((xlist)) ((xB)) ((xGeneric)) ((xobject)))))
                xtest_init_subclass_super_called.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) ((xException)))
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xbase)) (((xcls).x__bases__)))
                                    ((((unsupported)) ((xbase)) ((xFinal))).and (((xissubclass)) ((xbase)) ((xFinal)))).if
                                      (((unsupported)) ((((xFinalException)) ((xbase)))))
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((xFinal)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xFinalException)))))
                          (((unsupported)) ((xTest)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xFinalException)))))
                          (((unsupported)) ((((unsupported)) ((xTest)) ((xint)))))
                xtest_nested.write
                  [xself]
                    memory > xget
                    memory > xG
                    memory > xappend
                    memory > xset
                    memory > xvisit
                    memory > xV
                    memory > xa
                    seq > @
                      seq
                        xG.write (xGeneric)
                        (((unsupported)) ((((unsupported)) ((xG)) ((xT)))))
                          seq
                            xa.write "None: is there a None literal in the EO language?"
                            xset.write
                              [xself xa]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xa)) ((xa)))
                            xget.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xa)))
                            xvisit.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xa)))
                        xV.write (((unsupported)) ((xVisitor)) ((((unsupported)) (((xtyping).xList)) ((xint)))))
                        (((unsupported)) ((xV)))
                          xappend.write
                            [xself xx]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write (((((xself).xa).xappend)) ((xx)))
                        xa.write (((xIntListVisitor)) 0)
                        bogusForceDataize.write ((((xa).xset)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xa).xappend)) (1))
                        bogusForceDataize.write ((((xa).xappend)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xget)) 0)) ((((unsupported)) (1) (42))))
                xtest_type_erasure.write
                  [xself]
                    memory > x__init__
                    memory > xfoo
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          x__init__.write
                            [xself xlabel xleft xright]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xself).xlabel)) ((xlabel)))
                                  (((unsupported)) (((xself).xleft)) ((xleft)))
                                  (((unsupported)) (((xself).xright)) ((xright)))
                        xfoo.write
                          [xx]
                            memory > xc
                            memory > xb
                            memory > xa
                            seq > @
                              (((unsupported)) 0)
                                xa.write (((xNode)) ((xx)))
                                xb.write (((((unsupported)) ((xNode)) ((xT)))) ((xx)))
                                xc.write (((((unsupported)) ((xNode)) ((xAny)))) ((xx)))
                                bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xa)))) ((xNode)))
                                bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) ((xNode)))
                                bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xc)))) ((xNode)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xlabel)) ((xx)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xlabel)) ((xx)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xlabel)) ((xx)))
                        bogusForceDataize.write (((xfoo)) (42))
                xtest_implicit_any.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__parameters__)) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xException)))))
                          (((unsupported)) ((xD)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xException)))))
                          (((unsupported)) ((xD)) ((xAny)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xException)))))
                          (((unsupported)) ((xD)) ((xT)))
                xtest_new_with_args.write
                  [xself]
                    memory > x__new__
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) 0)
                          x__new__.write
                            [xcls xarg]
                              memory > xobj
                              seq > @
                                seq
                                  xobj.write ((((((xsuper)) 0).x__new__)) ((xcls)))
                                  (((unsupported)) (((xobj).xarg)) ((xarg)))
                                  (((unsupported)) ((xobj)))
                        (((unsupported)) ((xA)) ((xB)))
                        xc.write (((xC)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xarg)) ("foo"))
                xtest_new_with_args2.write
                  [xself]
                    memory > xc
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init__.write
                            [xself xarg]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xfrom_a)) ((xarg)))
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init__)) 0)
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))) ((xA)))
                          x__init__.write
                            [xself xarg]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xfrom_c)) ((xarg)))
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init__)) ((xarg)))
                        xc.write (((xC)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xfrom_a)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xfrom_c)) ("foo"))
                xtest_new_no_args.write
                  [xself]
                    memory > x__new__
                    memory > xc
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xA)) ("foo"))
                        (((unsupported)) 0)
                          x__new__.write
                            [xcls]
                              memory > xobj
                              seq > @
                                seq
                                  xobj.write ((((((xsuper)) 0).x__new__)) ((xcls)))
                                  (((unsupported)) (((xobj).xfrom_b)) ("b"))
                                  (((unsupported)) ((xobj)))
                        (((unsupported)) ((xA)) ((xB)))
                          seq
                            x__init__.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) (((xself).xarg)) ((xarg)))
                            x__new__.write
                              [xcls xarg]
                                memory > xobj
                                seq > @
                                  seq
                                    xobj.write ((((((xsuper)) 0).x__new__)) ((xcls)))
                                    (((unsupported)) (((xobj).xfrom_c)) ("c"))
                                    (((unsupported)) ((xobj)))
                        xc.write (((xC)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xarg)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xfrom_b)) ("b"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xfrom_c)) ("c"))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xClassVar)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xClassVar)) ((((unsupported)) ((xint)) ((xstr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xClassVar)) ((xint)))) ((xstr)))
                xtest_repr.write
                  [xself]
                    memory > xcv
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xClassVar)))) ("typing.ClassVar"))
                        xcv.write (((unsupported)) ((xClassVar)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xcv)))) ("typing.ClassVar[int]"))
                        xcv.write (((unsupported)) ((xClassVar)) ((xEmployee)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xcv)))) (("typing.ClassVar[%s.Employee]".mod (x__name__))))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((xClassVar)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((((unsupported)) ((xClassVar)) ((xint)))))))
                xtest_cannot_init.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xClassVar)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xClassVar)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xOptional)) ((xint)))))))) 0)
                xtest_no_isinstance.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (1) ((((unsupported)) ((xClassVar)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((xClassVar)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xFinal)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xFinal)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xFinal)) ((((unsupported)) ((xint)) ((xstr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xFinal)) ((xint)))) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xOptional)) ((((unsupported)) ((xFinal)) ((xint)))))
                xtest_repr.write
                  [xself]
                    memory > xcv
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xFinal)))) ("typing.Final"))
                        xcv.write (((unsupported)) ((xFinal)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xcv)))) ("typing.Final[int]"))
                        xcv.write (((unsupported)) ((xFinal)) ((xEmployee)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xcv)))) (("typing.Final[%s.Employee]".mod (x__name__))))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((xFinal)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xtype)) ((((unsupported)) ((xFinal)) ((xint)))))))
                xtest_cannot_init.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xFinal)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((xFinal)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((xtype)) ((((unsupported)) ((xFinal)) ((((unsupported)) ((xOptional)) ((xint)))))))) 0)
                xtest_no_isinstance.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (1) ((((unsupported)) ((xFinal)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((xFinal)))
                xtest_final_unmodified.write
                  [xself]
                    memory > xfunc
                    seq > @
                      seq
                        xfunc.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((xfunc)) ((((xfinal)) ((xfunc)))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((xint)) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((xfloat)) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xcast)) ((xfloat)) (42))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((xAny)) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((xlist)) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((xfloat)))))) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ((xAnyStr)) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcast)) ("None: is there a None literal in the EO language?") (42))) (42))
                xtest_errors.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xcast)) (42) (42))
                        bogusForceDataize.write (((xcast)) ("hello") (42))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xt
                    memory > xadd_both
                    memory > xboth_hints
                    memory > xleft_hints
                    memory > xadd_left
                    memory > x__init__
                    memory > xright_hints
                    memory > xadd_right
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          seq
                            x__init__.write
                              [xself xlabel]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xlabel)) ((xlabel)))
                                    (((unsupported)) (((xself).xleft)) (((xself).xright)) ("None: is there a None literal in the EO language?"))
                            xadd_both.write
                              [xself xleft xright xstuff xblah]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xleft)) ((xleft)))
                                    (((unsupported)) (((xself).xright)) ((xright)))
                            xadd_left.write
                              [xself xnode]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xself).xadd_both)) ((xnode)) ("None: is there a None literal in the EO language?"))
                            xadd_right.write
                              [xself xnode]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xself).xadd_both)) ("None: is there a None literal in the EO language?") ((xnode)))
                        xt.write (((unsupported)) ((xNode)) ((xint)))
                        xboth_hints.write (((xget_type_hints)) (((xt).xadd_both)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xboth_hints)) ("left"))) ((((unsupported)) ((xOptional)) ((((unsupported)) ((xNode)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xboth_hints)) ("right"))) ((((unsupported)) ((xOptional)) ((((unsupported)) ((xNode)) ((xT)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xboth_hints)) ("left"))) ((((unsupported)) ((xboth_hints)) ("right"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xboth_hints)) ("stuff"))) ((((unsupported)) ((xOptional)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("blah") ((xboth_hints)))
                        xleft_hints.write (((xget_type_hints)) (((xt).xadd_left)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xleft_hints)) ("node"))) ((((unsupported)) ((xOptional)) ((((unsupported)) ((xNode)) ((xT)))))))
                        xright_hints.write (((xget_type_hints)) (((xt).xadd_right)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xright_hints)) ("node"))) ((((unsupported)) ((xOptional)) ((((unsupported)) ((xNode)) ((xT)))))))
                xtest_forwardref_instance_type_error.write
                  [xself]
                    memory > xfr
                    seq > @
                      seq
                        xfr.write ((((xtyping).xForwardRef)) ("int"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (42) ((xfr)))
                xtest_forwardref_subclass_type_error.write
                  [xself]
                    memory > xfr
                    seq > @
                      seq
                        xfr.write ((((xtyping).xForwardRef)) ("int"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xint)) ((xfr)))
                xtest_forward_equality.write
                  [xself]
                    memory > xfr
                    seq > @
                      seq
                        xfr.write ((((xtyping).xForwardRef)) ("int"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xfr)) (((((xtyping).xForwardRef)) ("int"))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xList)) ("int"))) ((((unsupported)) ((xList)) ((xint)))))
                xtest_forward_equality_gth.write
                  [xself]
                    memory > xc2
                    memory > xc2_gth
                    memory > xc1_gth
                    memory > xfoo
                    memory > xc1
                    seq > @
                      seq
                        xc1.write ((((xtyping).xForwardRef)) ("C"))
                        xc1_gth.write ((((xtyping).xForwardRef)) ("C"))
                        xc2.write ((((xtyping).xForwardRef)) ("C"))
                        xc2_gth.write ((((xtyping).xForwardRef)) ("C"))
                        (((unsupported)) 0)
                        xfoo.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((xC)) ("b") ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc1)) ((xc2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc1)) ((xc1_gth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc1_gth)) ((xc2_gth)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xList)) ((xc1)))) ((((unsupported)) ((xList)) ((xc1_gth)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xList)) ((xc1)))) ((((unsupported)) ((xList)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xList)) ((xc1_gth)))) ((((unsupported)) ((xList)) ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xc1)) ((xc1_gth)))))) ((((unsupported)) ((xUnion)) ((xc1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xc1)) ((xc1_gth)) ((xint)))))) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xc1)) ((xint)))))))
                xtest_forward_equality_hash.write
                  [xself]
                    memory > xc2
                    memory > xc2_gth
                    memory > xc1_gth
                    memory > xfoo
                    memory > xc1
                    seq > @
                      seq
                        xc1.write ((((xtyping).xForwardRef)) ("int"))
                        xc1_gth.write ((((xtyping).xForwardRef)) ("int"))
                        xc2.write ((((xtyping).xForwardRef)) ("int"))
                        xc2_gth.write ((((xtyping).xForwardRef)) ("int"))
                        xfoo.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write (((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xc1)))) ((((xhash)) ((xc2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xc1_gth)))) ((((xhash)) ((xc2_gth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xc1)))) ((((xhash)) ((xc1_gth)))))
                xtest_forward_equality_namespace.write
                  [xself]
                    memory > xnamespace1
                    memory > xnamespace2
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xnamespace1.write
                          []
                            memory > xfun
                            memory > xa
                            seq > @
                              seq
                                xa.write ((((xtyping).xForwardRef)) ("A"))
                                xfun.write
                                  [xx]
                                    seq > @
                                      (((unsupported)) 0)
                                bogusForceDataize.write (((xget_type_hints)) ((xfun)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                                (((unsupported)) ((xa)))
                        xnamespace2.write
                          []
                            memory > xfun
                            memory > xa
                            seq > @
                              seq
                                xa.write ((((xtyping).xForwardRef)) ("A"))
                                (((unsupported)) 0)
                                xfun.write
                                  [xx]
                                    seq > @
                                      (((unsupported)) 0)
                                bogusForceDataize.write (((xget_type_hints)) ((xfun)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                                (((unsupported)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xnamespace1)) 0)) ((((xnamespace1)) 0)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xnamespace1)) 0)) ((((xnamespace2)) 0)))
                xtest_forward_repr.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xList)) ("int"))))) ("typing.List[ForwardRef('int')]"))
                xtest_union_forward.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((((unsupported)) ((xUnion)) ((xT)))))))
                xtest_tuple_forward.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((((unsupported)) ((xTuple)) ((xT)))))))
                xtest_forward_recursion_actually.write
                  [xself]
                    memory > xr1
                    memory > xr2
                    memory > xnamespace2
                    memory > xcmp
                    memory > xnamespace1
                    seq > @
                      seq
                        xnamespace1.write
                          []
                            memory > xret
                            memory > xfun
                            memory > xA
                            memory > xa
                            seq > @
                              seq
                                xa.write ((((xtyping).xForwardRef)) ("A"))
                                xA.write (xa)
                                xfun.write
                                  [xx]
                                    seq > @
                                      (((unsupported)) 0)
                                xret.write (((xget_type_hints)) ((xfun)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                                (((unsupported)) ((xa)))
                        xnamespace2.write
                          []
                            memory > xret
                            memory > xfun
                            memory > xA
                            memory > xa
                            seq > @
                              seq
                                xa.write ((((xtyping).xForwardRef)) ("A"))
                                xA.write (xa)
                                xfun.write
                                  [xx]
                                    seq > @
                                      (((unsupported)) 0)
                                xret.write (((xget_type_hints)) ((xfun)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                                (((unsupported)) ((xa)))
                        xcmp.write
                          [xo1 xo2]
                            seq > @
                              (((unsupported)) (((xo1).eq (xo2))))
                        xr1.write (((xnamespace1)) 0)
                        xr2.write (((xnamespace2)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xr1)) ((xr2)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRecursionError)) ((xcmp)) ((xr1)) ((xr2)))
                xtest_union_forward_recursion.write
                  [xself]
                    memory > xValue
                    memory > xValueList
                    seq > @
                      seq
                        xValueList.write (((unsupported)) ((xList)) ("Value"))
                        xValue.write (((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((xValueList)))))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xList)) ((xValue)))))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xValue)) ((xValueList)))))))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((((unsupported)) ((xList)) ((xValue)))) ((xValueList)))))))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xValue)) ((((unsupported)) ((xList)) ((xValue)))) ((xValueList)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xC)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((xget_type_hints)) ((xC)) ((((xglobals)) 0)) ((((xlocals)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xC)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("foo") ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xD)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("foo") ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xE)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("foo") ((((unsupported)) ((xUnion)) ((((unsupported)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))))))))) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xF)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("foo") ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((((unsupported)) ((xList)) ("Value"))))))))))))))))))))))
                xtest_callable_forward.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((xT)))) ((xT)))))))))
                xtest_callable_with_ellipsis_forward.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xfoo)) ((((xglobals)) 0)) ((((xlocals)) 0)))) ((((unsupported)) ("a") ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))))))
                xtest_syntax_error.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))))
                        (((unsupported)) ((xGeneric)) ("/T"))
                xtest_delayed_syntax_error.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))))
                          bogusForceDataize.write (((xget_type_hints)) ((xfoo)))
                xtest_type_error.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xget_type_hints)) ((xfoo)))
                xtest_name_error.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xNameError)))))
                          bogusForceDataize.write (((xget_type_hints)) ((xfoo)) ((((xlocals)) 0)))
                xtest_no_type_check.write
                  [xself]
                    memory > xfoo
                    memory > xth
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        xth.write (((xget_type_hints)) ((xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xth)) ((((unsupported)) 0)))
                xtest_no_type_check_class.write
                  [xself]
                    memory > xith
                    memory > xcth
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)) ((xno_type_check)))
                          xfoo.write
                            [xa]
                              seq > @
                                (((unsupported)) 0)
                        xcth.write (((xget_type_hints)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcth)) ((((unsupported)) 0)))
                        xith.write (((xget_type_hints)) (((((xC)) 0).xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xith)) ((((unsupported)) 0)))
                xtest_no_type_check_no_bases.write
                  [xself]
                    memory > xmeth
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) 0)
                          xmeth.write
                            [xself xx]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                        (((unsupported)) ((xC)) ((xno_type_check)))
                          xc.write (xC)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) (((xC).xmeth)))) ((((unsupported)) ("x") ((xint)))))
                xtest_no_type_check_forward_ref_as_string.write
                  [xself]
                    memory > xexpected_result
                    seq > @
                      seq
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) (((xtyping).xClassVar)) ((xint)))) (7))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xClassVar)) ((xint)))) (7))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ("typing.ClassVar[int]") (7))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ("ClassVar[int]") (7))
                        xexpected_result.write (((unsupported)) ("foo") ((((unsupported)) (((xtyping).xClassVar)) ((xint)))))
                        (((unsupported)) ((xclazz)) ((((unsupported)) ((xC)) ((xD)) ((xE)) ((xF)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_type_hints)) ((xclazz)))) ((xexpected_result)))
                xtest_nested_classvar_fails_forward_ref_check.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ("typing.ClassVar[typing.ClassVar[int]]") (7))
                        (((unsupported)) 0)
                          (((unsupported)) ((xfoo)) ((((unsupported)) ((xClassVar)) ("ClassVar[int]"))) (7))
                        (((unsupported)) ((xclazz)) ((((unsupported)) ((xE)) ((xF)))))
                          (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                            bogusForceDataize.write (((xget_type_hints)) ((xclazz)))
                xtest_meta_no_type_check.write
                  [xself]
                    memory > xmagic_decorator
                    memory > xth
                    memory > xith
                    memory > xfoo
                    memory > xcth
                    seq > @
                      seq
                        xmagic_decorator.write
                          [xfunc]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xfunc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xmagic_decorator).x__name__)) ("magic_decorator"))
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) ((xmagic_decorator)))
                          xfoo.write
                            [xa]
                              seq > @
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xfoo).x__name__)) ("foo"))
                        xth.write (((xget_type_hints)) ((xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xth)) ((((unsupported)) 0)))
                        xcth.write (((xget_type_hints)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcth)) ((((unsupported)) 0)))
                        xith.write (((xget_type_hints)) (((((xC)) 0).xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xith)) ((((unsupported)) 0)))
                xtest_default_globals.write
                  [xself]
                    memory > xns
                    memory > xcode
                    memory > xhints
                    seq > @
                      seq
                        xcode.write "class C:n    def foo(self, a: 'C') -> 'D': passnclass D:n    def bar(self, b: 'D') -> C: passn"
                        xns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ((xcode)) ((xns)))
                        xhints.write (((xget_type_hints)) (((((unsupported)) ((xns)) ("C")).xfoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhints)) ((((unsupported)) ("a") ((((unsupported)) ((xns)) ("C"))) ("return") ((((unsupported)) ((xns)) ("D"))))))
                xtest_final_forward_ref.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xgth)) ((xLoop)) ((((xglobals)) 0)))) ("attr"))) ((((unsupported)) ((xFinal)) ((xLoop)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((((xgth)) ((xLoop)) ((((xglobals)) 0)))) ("attr"))) ((((unsupported)) ((xFinal)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((((xgth)) ((xLoop)) ((((xglobals)) 0)))) ("attr"))) ((xFinal)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_overload_fails.write
                  [xself]
                    memory > xblah
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          seq
                            xblah.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                            bogusForceDataize.write (((xblah)) 0)
                xtest_overload_succeeds.write
                  [xself]
                    memory > xblah
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xblah.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        xblah.write
                          []
                            seq > @
                        bogusForceDataize.write (((xblah)) 0)
            xASYNCIO_TESTS.write (((unsupported)) 0)
            (((unsupported)) ((xImportError)))
              bogusForceDataize.write (((xexec)) ((xASYNCIO_TESTS)))
              xASYNCIO.write FALSE
              xASYNCIO.write TRUE
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
              (((unsupported)) ((xy)) ((xfloat)))
            (((unsupported)) ((xA)))
              seq
                (((unsupported)) ((xx)) ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xOptional)) ("B"))))) ("None: is there a None literal in the EO language?"))
                (((unsupported)) ((xy)) ((xint)))
                (((unsupported)) ((xb)) ((xint)))
            (((unsupported)) ((xB)))
              (((unsupported)) ((xz)) ((((unsupported)) ((xClassVar)) ("CSub"))) ((((xB)) 0)))
            (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
              (((unsupported)) ((xlst)) ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xList)) ((xT)))))) ((((unsupported)) 0)))
            (((unsupported)) 0)
              (((unsupported)) ((xattr)) ((((unsupported)) ((xFinal)) ("Loop"))))
            (((unsupported)) 0)
              seq
                (((unsupported)) ((xparent)) ("NoneAndForward"))
                (((unsupported)) ((xmeaning)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) ((xNamedTuple)))
              seq
                (((unsupported)) ((xname)) ((xstr)))
                (((unsupported)) ((xcool)) ((xint)))
            (((unsupported)) ((xNamedTuple)))
              seq
                (((unsupported)) ((xname)) ((xstr)))
                (((unsupported)) ((xcool)) ((xint)) (0))
            (((unsupported)) ((xNamedTuple)))
              seq
                (((unsupported)) ((xx)) ((xint)))
                xdouble.write
                  [xself]
                    seq > @
                      (((unsupported)) ((2.mul ((xself).xx))))
            (((unsupported)) ((xNamedTuple)))
              seq
                (((unsupported)) ((xx)) ((xint)))
                (((unsupported)) ((xy)) ((xint)) (1))
                x__str__.write
                  [xself]
                    seq > @
                      (((unsupported)) ("{self.x} -> {self.y}"))
                x__add__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (0))
            xLabel.write (((xTypedDict)) ("Label") ((((unsupported)) ((((unsupported)) ("label") ((xstr)))))))
            (((unsupported)) ((xTypedDict)))
              seq
                (((unsupported)) ((xx)) ((xint)))
                (((unsupported)) ((xy)) ((xint)))
            (((unsupported)) ((xPoint2D)) ((xLabel)))
              (((unsupported)) 0)
            (((unsupported)) ((xTypedDict)) (FALSE))
              seq
                (((unsupported)) ((xlog_level)) ((xint)))
                (((unsupported)) ((xlog_path)) ((xstr)))
            (((unsupported)) (((xmod_generics_cache).xA)))
              seq
                (((unsupported)) ((xsome_xrepr)) ("XRepr"))
                (((unsupported)) ((xother_a)) ("mod_generics_cache.A"))
            xg_with.write
              [xam]
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) ((xx)) ((xint)))
                    (((unsupported)) ((xam)) ((xx)))
                      (((unsupported)) ((xx)))
            (((unsupported)) ((xStopIteration)))
              bogusForceDataize.write ((((((xg_with)) ((((xACM)) 0))).xsend)) ("None: is there a None literal in the EO language?"))
              (((unsupported)) (((((unsupported)) (((xe).xargs)) (0)).eq 42)))
            xgth.write (xget_type_hints)
            (((unsupported)) 0)
              seq
                xfunc.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                xnested.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_get_type_hints_from_various_objects.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xgth)) (123))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xgth)) ("abc"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xgth)) ("None: is there a None literal in the EO language?"))
                xtest_get_type_hints_modules.write
                  [xself]
                    memory > xann_module_type_hints
                    seq > @
                      seq
                        xann_module_type_hints.write (((unsupported)) (1) (2) ("f") ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((xint)))))) ("x") ((xint)) ("y") ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xann_module)))) ((xann_module_type_hints)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xann_module2)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xann_module3)))) ((((unsupported)) 0)))
                xtest_get_type_hints_modules_forwardref.write
                  [xself]
                    memory > xmgc_hints
                    seq > @
                      (((unsupported)) 0)
                        xmgc_hints.write (((unsupported)) ("default_a") ((((unsupported)) ((xOptional)) (((xmod_generics_cache).xA)))) ("default_b") ((((unsupported)) ((xOptional)) (((xmod_generics_cache).xB)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xmod_generics_cache)))) ((xmgc_hints)))
                xtest_get_type_hints_classes.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xC)))) ((((unsupported)) ("y") ((((unsupported)) ((xOptional)) (((xann_module).xC)))))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xgth)) (((xann_module).xj_class)))) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xM)))) ((((unsupported)) ("123") (123) ("o") ((xtype)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xD)))) ((((unsupported)) ("j") ((xstr)) ("k") ((xstr)) ("y") ((((unsupported)) ((xOptional)) (((xann_module).xC)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xY)))) ((((unsupported)) ("z") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xh_class)))) ((((unsupported)) ("y") ((((unsupported)) ((xOptional)) (((xann_module).xC)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xS)))) ((((unsupported)) ("x") ((xstr)) ("y") ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module).xfoo)))) ((((unsupported)) ("x") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xNoneAndForward)))) ((((unsupported)) ("parent") ((xNoneAndForward)) ("meaning") ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xHasForeignBaseClass)))) ((((unsupported)) ("some_xrepr") ((xXRepr)) ("other_a") (((xmod_generics_cache).xA)) ("some_b") (((xmod_generics_cache).xB)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xXRepr).x__new__)))) ((((unsupported)) ("x") ((xint)) ("y") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xmod_generics_cache).xB)))) ((((unsupported)) ("my_inner_a1") ((((xmod_generics_cache).xB).xA)) ("my_inner_a2") ((((xmod_generics_cache).xB).xA)) ("my_outer_a") (((xmod_generics_cache).xA)))))
                xtest_respect_no_type_check.write
                  [xself]
                    memory > xmeth
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xno_type_check)))
                          (((unsupported)) 0)
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xNoTpCheck).x__no_type_check__)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xNoTpCheck).xInn).x__init__).x__no_type_check__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((((xann_module2).xNTC).xmeth)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                          xmeth.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                        (((unsupported)) ((xABase)) ((xno_type_check)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xABase).xmeth)))) ((((unsupported)) ("x") ((xint)))))
                xtest_get_type_hints_for_builtins.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xint)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xtype)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xdir)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xlen)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xobject).x__str__)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((((xobject)) 0).x__str__)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xstr).xjoin)))) ((((unsupported)) 0)))
                xtest_previous_behavior.write
                  [xself]
                    memory > xtestg
                    memory > xtestf
                    seq > @
                      seq
                        xtestf.write
                          [xx xy]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) (((xtestf).x__annotations__)) ("x"))) ("int"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xtestf)))) ((((unsupported)) ("x") ((xint)))))
                        xtestg.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xtestg)))) ((((unsupported)) ("x") ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                xtest_get_type_hints_for_object_with_annotations.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        xb.write (((xB)) 0)
                        (((unsupported)) (((xb).x__annotations__)) ((((unsupported)) ("x") ("A"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xb)) ((((xlocals)) 0)))) ((((unsupported)) ("x") ((xA)))))
                xtest_get_type_hints_ClassVar.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xann_module2).xCV)) (((xann_module2).x__dict__)))) ((((unsupported)) ("var") ((((unsupported)) (((xtyping).xClassVar)) (((xann_module2).xCV)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xB)) ((((xglobals)) 0)))) ((((unsupported)) ("y") ((xint)) ("x") ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xOptional)) ((xB)))))) ("b") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xCSub)) ((((xglobals)) 0)))) ((((unsupported)) ("z") ((((unsupported)) ((xClassVar)) ((xCSub)))) ("y") ((xint)) ("b") ((xint)) ("x") ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xOptional)) ((xB)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) ((xG)))) ((((unsupported)) ("lst") ((((unsupported)) ((xClassVar)) ((((unsupported)) ((xList)) ((xT)))))))))
                xtest_get_type_hints_wrapped_decoratored_func.write
                  [xself]
                    memory > xexpects
                    seq > @
                      seq
                        xexpects.write (((unsupported)) ("self") ((xForRefExample)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xForRefExample).xfunc)))) ((xexpects)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgth)) (((xForRefExample).xnested)))) ((xexpects)))
            (((unsupported)) ((xTestCase)))
              seq
                xtest_get_origin.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xC)) ((xint)))))) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xC)) ((xT)))))) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((xint)))) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xClassVar)) ((xint)))))) ((xClassVar)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))) ((xUnion)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xLiteral)) ((((unsupported)) (42) (43))))))) ((xLiteral)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xFinal)) ((((unsupported)) ((xList)) ((xint)))))))) ((xFinal)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((xGeneric)))) ((xGeneric)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((xGeneric)) ((xT)))))) ((xGeneric)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((((unsupported)) ((((unsupported)) ((xList)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))) ((xint)))))) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((xList)))) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((xTuple)))) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xget_origin)) ((xCallable)))) ((((xcollections).xabc).xCallable)))
                xtest_get_args.write
                  [xself]
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xTypeVar)) ("T"))
                        (((unsupported)) ((((unsupported)) ((xGeneric)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xC)) ((xint)))))) ((((unsupported)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xC)) ((xT)))))) ((((unsupported)) ((xT)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((xint)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xClassVar)) ((xint)))))) ((((unsupported)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((xstr)))))))) ((((unsupported)) ((xint)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xLiteral)) ((((unsupported)) (42) (43))))))) ((((unsupported)) (42) (43))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xFinal)) ((((unsupported)) ((xList)) ((xint)))))))) ((((unsupported)) ((((unsupported)) ((xList)) ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xint)))))))))) ((xstr)))))) ((((unsupported)) ((xint)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xstr)) ((xint)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xint)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((xT)))))))))) ((((unsupported)) ((xOptional)) ((xint)))))))) ((((unsupported)) ((xint)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((((unsupported)) ((xOptional)) ((xint)))) ((((unsupported)) ((xOptional)) ((xint)))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xT)))))) ((xint)))))) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))))) ((((unsupported)) ((((unsupported)) 0)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xint)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((((unsupported)) 0)))))))) ((xstr)))))))))))) ((((unsupported)) ((xint)) ((((unsupported)) ((xCallable)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xT)) ((((unsupported)) 0)))))))) ((xstr)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xTuple)) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))))) ((((unsupported)) ((xint)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((((unsupported)) ((xTuple)) ((((unsupported)) 0)))))) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((xList)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((xTuple)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xget_args)) ((xCallable)))) ((((unsupported)) 0)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_hashable.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (42) (((xtyping).xHashable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((unsupported)) 0)) (((xtyping).xHashable)))
                xtest_iterable.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xlist)) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xlist)) (((xtyping).xIterable)))
                xtest_iterator.write
                  [xself]
                    memory > xit
                    seq > @
                      seq
                        xit.write (((xiter)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xit)) (((xtyping).xIterator)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xIterator)))
                xtest_awaitable.write
                  [xself]
                    memory > xns
                    memory > xg
                    memory > xfoo
                    seq > @
                      (((unsupported)) 0)
                        xns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ("async def foo() -> typing.Awaitable[int]:n    return await AwaitableWrapper(42)n") ((((xglobals)) 0)) ((xns)))
                        xfoo.write (((unsupported)) ((xns)) ("foo"))
                        xg.write (((xfoo)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xg)) (((xtyping).xAwaitable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xfoo)) (((xtyping).xAwaitable)))
                        bogusForceDataize.write ((((xg).xsend)) ("None: is there a None literal in the EO language?"))
                xtest_coroutine.write
                  [xself]
                    memory > xns
                    memory > xg
                    memory > xfoo
                    seq > @
                      (((unsupported)) 0)
                        xns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ("async def foo():n    returnn") ((((xglobals)) 0)) ((xns)))
                        xfoo.write (((unsupported)) ((xns)) ("foo"))
                        xg.write (((xfoo)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xg)) (((xtyping).xCoroutine)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((xg)) ((((unsupported)) (((xtyping).xCoroutine)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xfoo)) (((xtyping).xCoroutine)))
                        (((unsupported)) ((xStopIteration)))
                          bogusForceDataize.write ((((xg).xsend)) ("None: is there a None literal in the EO language?"))
                xtest_async_iterable.write
                  [xself]
                    memory > xbase_it
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xbase_it.write (((xrange)) (10))
                        xit.write (((xAsyncIteratorWrapper)) ((xbase_it)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xit)) (((xtyping).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xit)) (((xtyping).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xAsyncIterable)))
                xtest_async_iterator.write
                  [xself]
                    memory > xbase_it
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xbase_it.write (((xrange)) (10))
                        xit.write (((xAsyncIteratorWrapper)) ((xbase_it)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xit)) (((xtyping).xAsyncIterator)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xAsyncIterator)))
                xtest_sized.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xSized)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xSized)))
                xtest_container.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xContainer)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xContainer)))
                xtest_collection.write
                  [xself]
                    seq > @
                      (((xhasattr)) ((xtyping)) ("Collection")).if
                        seq
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xtuple)) 0)) (((xtyping).xCollection)))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xfrozenset)) 0)) (((xtyping).xCollection)))
                          bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xdict)) (((xtyping).xCollection)))
                          bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xCollection)))
                xtest_abstractset.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xset)) 0)) (((xtyping).xAbstractSet)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xAbstractSet)))
                xtest_mutableset.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xset)) 0)) (((xtyping).xMutableSet)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xfrozenset)) 0)) (((xtyping).xMutableSet)))
                xtest_mapping.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xMapping)))
                xtest_mutablemapping.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xMutableMapping)))
                xtest_sequence.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xSequence)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xSequence)))
                xtest_mutablesequence.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((unsupported)) 0)) (((xtyping).xMutableSequence)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((unsupported)) 0)) (((xtyping).xMutableSequence)))
                xtest_bytestring.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ("") (((xtyping).xByteString)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xbytearray)) (""))) (((xtyping).xByteString)))
                xtest_list.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xlist)) (((xtyping).xList)))
                xtest_deque.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) (((xcollections).xdeque)) (((xtyping).xDeque)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDeque)) ((xint)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xMyDeque)) 0)) (((xcollections).xdeque)))
                xtest_counter.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsSubclass)) (((xcollections).xCounter)) (((xtyping).xCounter)))
                xtest_set.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xset)) (((xtyping).xSet)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xfrozenset)) (((xtyping).xSet)))
                xtest_frozenset.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xfrozenset)) (((xtyping).xFrozenSet)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xset)) (((xtyping).xFrozenSet)))
                xtest_dict.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xdict)) (((xtyping).xDict)))
                xtest_no_list_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xList)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xList)) ((xT)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xList)) ((xint)))) 0)
                xtest_list_subclass.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xList)) ((xint)))))
                        xa.write (((xMyList)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) ((xMyList)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xa)) (((xtyping).xSequence)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMyList)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xlist)) ((xMyList)))
                xtest_no_dict_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xDict)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xint)))))) 0)
                xtest_dict_subclass.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xDict)) ((((unsupported)) ((xstr)) ((xint)))))))
                        xd.write (((xMyDict)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xMyDict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) (((xtyping).xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMyDict)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xdict)) ((xMyDict)))
                xtest_defaultdict_instantiation.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((xtyping).xDefaultDict)) 0)))) (((xcollections).xdefaultdict)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xDefaultDict)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)))) (((xcollections).xdefaultdict)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xDefaultDict)) ((((unsupported)) ((xstr)) ((xint)))))) 0)))) (((xcollections).xdefaultdict)))
                xtest_defaultdict_subclass.write
                  [xself]
                    memory > xdd
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xDefaultDict)) ((((unsupported)) ((xstr)) ((xint)))))))
                        xdd.write (((xMyDefDict)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xdd)) ((xMyDefDict)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMyDefDict)) (((xcollections).xdefaultdict)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) (((xcollections).xdefaultdict)) ((xMyDefDict)))
                xtest_ordereddict_instantiation.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((xtyping).xOrderedDict)) 0)))) (((xcollections).xOrderedDict)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xOrderedDict)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)))) (((xcollections).xOrderedDict)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xOrderedDict)) ((((unsupported)) ((xstr)) ((xint)))))) 0)))) (((xcollections).xOrderedDict)))
                xtest_ordereddict_subclass.write
                  [xself]
                    memory > xod
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xOrderedDict)) ((((unsupported)) ((xstr)) ((xint)))))))
                        xod.write (((xMyOrdDict)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xod)) ((xMyOrdDict)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMyOrdDict)) (((xcollections).xOrderedDict)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) (((xcollections).xOrderedDict)) ((xMyOrdDict)))
                xtest_chainmap_instantiation.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((xtyping).xChainMap)) 0)))) (((xcollections).xChainMap)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xChainMap)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)))) (((xcollections).xChainMap)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xChainMap)) ((((unsupported)) ((xstr)) ((xint)))))) 0)))) (((xcollections).xChainMap)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xChainMap)) ((((unsupported)) ((xKT)) ((xVT)))))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) ((xCM)) ((((unsupported)) ((xint)) ((xstr)))))) 0)))) ((xCM)))
                xtest_chainmap_subclass.write
                  [xself]
                    memory > xcm
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) (((xtyping).xChainMap)) ((((unsupported)) ((xstr)) ((xint)))))))
                        xcm.write (((xMyChainMap)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xcm)) ((xMyChainMap)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMyChainMap)) (((xcollections).xChainMap)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) (((xcollections).xChainMap)) ((xMyChainMap)))
                xtest_deque_instantiation.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((xtyping).xDeque)) 0)))) (((xcollections).xdeque)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xDeque)) ((xT)))) 0)))) (((xcollections).xdeque)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xDeque)) ((xint)))) 0)))) (((xcollections).xdeque)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xDeque)) ((xT)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) ((xD)) ((xint)))) 0)))) ((xD)))
                xtest_counter_instantiation.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((xtyping).xCounter)) 0)))) (((xcollections).xCounter)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xCounter)) ((xT)))) 0)))) (((xcollections).xCounter)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) (((xtyping).xCounter)) ((xint)))) 0)))) (((xcollections).xCounter)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xCounter)) ((xT)))))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((((unsupported)) ((xC)) ((xint)))) 0)))) ((xC)))
                xtest_counter_subclass_instantiation.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xCounter)) ((xint)))))
                        xd.write (((xMyCounter)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xMyCounter)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) (((xtyping).xCounter)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) (((xcollections).xCounter)))
                xtest_no_set_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xSet)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xSet)) ((xT)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xSet)) ((xint)))) 0)
                xtest_set_subclass_instantiation.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xSet)) ((xint)))))
                        xd.write (((xMySet)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xMySet)))
                xtest_no_frozenset_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xFrozenSet)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xFrozenSet)) ((xT)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xFrozenSet)) ((xint)))) 0)
                xtest_frozenset_subclass_instantiation.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xFrozenSet)) ((xint)))))
                        xd.write (((xMyFrozenSet)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xd)) ((xMyFrozenSet)))
                xtest_no_tuple_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xTuple)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xTuple)) ((xT)))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) ((xTuple)) ((xint)))) 0)
                xtest_generator.write
                  [xself]
                    memory > xg
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)) (42))
                        xg.write (((xfoo)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((((xtype)) ((xg)))) (((xtyping).xGenerator)))
                xtest_no_generator_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xGenerator)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xGenerator)) ((((unsupported)) ((xT)) ((xT)) ((xT)))))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xGenerator)) ((((unsupported)) ((xint)) ((xint)) ((xint)))))) 0)
                xtest_async_generator.write
                  [xself]
                    memory > xns
                    memory > xg
                    seq > @
                      seq
                        xns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ("async def f():n    yield 42n") ((((xglobals)) 0)) ((xns)))
                        xg.write (((((unsupported)) ((xns)) ("f"))) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((((xtype)) ((xg)))) (((xtyping).xAsyncGenerator)))
                xtest_no_async_generator_instantiation.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtyping).xAsyncGenerator)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xAsyncGenerator)) ((((unsupported)) ((xT)) ((xT)))))) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((((unsupported)) (((xtyping).xAsyncGenerator)) ((((unsupported)) ((xint)) ((xint)))))) 0)
                xtest_subclassing.write
                  [xself]
                    memory > x__getitem__
                    memory > x__delitem__
                    memory > x__setitem__
                    memory > x__len__
                    memory > xg
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) (((xtyping).xMutableMapping)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xMMA)) 0)
                        (((unsupported)) ((xMMA)))
                          seq
                            x__getitem__.write
                              [xself xk]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            x__setitem__.write
                              [xself xk xv]
                                seq > @
                            x__delitem__.write
                              [xself xk]
                                seq > @
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xMMC)) 0)))) (0))
                        (((unsupported)) ((((xcallable)) (((xMMC).xupdate)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xMMC)) 0)) (((xtyping).xMapping)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xMutableMapping)) ((((unsupported)) ((xKT)) ((xVT)))))))
                          seq
                            x__getitem__.write
                              [xself xk]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            x__setitem__.write
                              [xself xk xv]
                                seq > @
                            x__delitem__.write
                              [xself xk]
                                seq > @
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xMMB)) 0)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((((unsupported)) ((xMMB)) ((((unsupported)) ((xstr)) ((xstr)))))) 0)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((((unsupported)) ((xMMB)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)))) (0))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xdict)) ((xMMA)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xdict)) ((xMMB)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMA)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMB)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMC)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((((unsupported)) ((xMMB)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((((unsupported)) ((xMMB)) ((((unsupported)) ((xKT)) ((xVT)))))) 0)) ((((xcollections).xabc).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMA)) ((((xcollections).xabc).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMB)) ((((xcollections).xabc).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMC)) ((((xcollections).xabc).xMapping)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xMMB)) ((((unsupported)) ((xstr)) ((xstr)))))) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xMMC)) ((xMMA)))
                        (((unsupported)) (((xtyping).xIterable)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xlist)) ((xI)))
                        (((unsupported)) ((((unsupported)) (((xtyping).xGenerator)) ((((unsupported)) ((xint)) ((xint)) ((xint)))))))
                          (((unsupported)) 0)
                        xg.write
                          []
                            seq > @
                              (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) (((xtyping).xGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) (((xtyping).xIterable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) ((((xcollections).xabc).xGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) ((((xcollections).xabc).xIterable)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((((xtype)) ((xg)))) ((xG)))
                xtest_subclassing_async_generator.write
                  [xself]
                    memory > xg
                    memory > xathrow
                    memory > xinstance
                    memory > xns
                    memory > xasend
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xtyping).xAsyncGenerator)) ((((unsupported)) ((xint)) ((xint)))))))
                          seq
                            xasend.write
                              [xself xvalue]
                                seq > @
                            xathrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        xns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ("async def g(): yield 0") ((((xglobals)) 0)) ((xns)))
                        xg.write (((unsupported)) ((xns)) ("g"))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) (((xtyping).xAsyncGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) (((xtyping).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) ((((xcollections).xabc).xAsyncGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xG)) ((((xcollections).xabc).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((((xtype)) ((xg)))) ((xG)))
                        xinstance.write (((xG)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinstance)) (((xtyping).xAsyncGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinstance)) (((xtyping).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinstance)) ((((xcollections).xabc).xAsyncGenerator)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinstance)) ((((xcollections).xabc).xAsyncIterable)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xtype)) ((xg)))) ((xG)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xg)) ((xG)))
                xtest_subclassing_subclasshook.write
                  [xself]
                    memory > x__subclasshook__
                    seq > @
                      seq
                        (((unsupported)) (((xtyping).xIterable)))
                          x__subclasshook__.write
                            [xcls xother]
                              seq > @
                                (((unsupported)) 0)
                                  (((xother).x__name__).eq "Foo").if
                                    (((unsupported)) (TRUE))
                                    (((unsupported)) (FALSE))
                        (((unsupported)) ((xBase)))
                          (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xFoo)) ((xBase)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xFoo)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xBar)) ((xC)))
                xtest_subclassing_register.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xtyping).xContainer)))
                          (((unsupported)) 0)
                        (((unsupported)) ((xA)))
                          (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xA).xregister)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xC)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xC)) ((xB)))
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xB).xregister)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xD)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xD)) ((xB)))
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((((xcollections).xabc).xMutableMapping).xregister)) ((xM)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xM)) (((xtyping).xMapping)))
                xtest_collections_as_base.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xcollections).xabc).xMapping)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xM)) (((xtyping).xMapping)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xM)) (((xtyping).xIterable)))
                        (((unsupported)) ((((xcollections).xabc).xMutableSequence)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xS)) (((xtyping).xMutableSequence)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xS)) (((xtyping).xIterable)))
                        (((unsupported)) ((((xcollections).xabc).xIterable)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xI)) (((xtyping).xIterable)))
                        (((unsupported)) ((((xcollections).xabc).xMapping)) (((xabc).xABCMeta)))
                          (((unsupported)) 0)
                        (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xA).xregister)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xB)) (((xtyping).xMapping)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_contextmanager.write
                  [xself]
                    memory > xmanager
                    memory > xcm
                    seq > @
                      seq
                        xmanager.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (42))
                        xcm.write (((xmanager)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xcm)) (((xtyping).xContextManager)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) (42) (((xtyping).xContextManager)))
                xtest_async_contextmanager.write
                  [xself]
                    memory > xmanager
                    memory > xcm
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xACM)) 0)) (((xtyping).xAsyncContextManager)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xNotACM)) 0)) (((xtyping).xAsyncContextManager)))
                        xmanager.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (42))
                        xcm.write (((xmanager)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xcm)) (((xtyping).xAsyncContextManager)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) (((xtyping).xAsyncContextManager)) ((xint))).x__args__)) ((((unsupported)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (42) ((((unsupported)) (((xtyping).xAsyncContextManager)) ((xint)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) (((xtyping).xAsyncContextManager)) ((((unsupported)) ((xint)) ((xstr)))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_type_basic.write
                  [xself]
                    memory > xnew_user
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xUser)))
                        (((unsupported)) ((xUser)))
                        xnew_user.write
                          [xuser_class]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xuser_class)) 0)))
                        bogusForceDataize.write (((xnew_user)) ((xBasicUser)))
                xtest_type_typevar.write
                  [xself]
                    memory > xnew_user
                    memory > xU
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) ((xUser)))
                        (((unsupported)) ((xUser)))
                        xU.write (((unsupported)) ((xTypeVar)) ("U") ((xUser)))
                        xnew_user.write
                          [xuser_class]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xuser_class)) 0)))
                        bogusForceDataize.write (((xnew_user)) ((xBasicUser)))
                xtest_type_optional.write
                  [xself]
                    memory > xfoo
                    memory > xA
                    seq > @
                      seq
                        xA.write (((unsupported)) ((xOptional)) ((((unsupported)) ((xType)) ((xBaseException)))))
                        xfoo.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xa)) ("None: is there a None literal in the EO language?")).if
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                                  (((unsupported)) ((((xa)) 0)))
                        (((unsupported)) ((((xisinstance)) ((((xfoo)) ((xKeyboardInterrupt)))) ((xKeyboardInterrupt)))))
                        (((unsupported)) ((((unsupported)) ((((xfoo)) ("None: is there a None literal in the EO language?"))) ("None: is there a None literal in the EO language?"))))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basic.write
                  [xself]
                    memory > xUserName
                    memory > xUserId
                    seq > @
                      seq
                        xUserId.write (((xNewType)) ("UserId") ((xint)))
                        xUserName.write (((xNewType)) ("UserName") ((xstr)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xUserId)) (5))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xUserName)) ("Joe"))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xUserId)) (5)).add 1)) (6))
                xtest_errors.write
                  [xself]
                    memory > xUserName
                    memory > xUserId
                    seq > @
                      seq
                        xUserId.write (((xNewType)) ("UserId") ((xint)))
                        xUserName.write (((xNewType)) ("UserName") ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xUserId)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xUserName)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                (((unsupported)) ((xNamedTuple)))
                  seq
                    (((unsupported)) ((xname)) ((xstr)))
                    (((unsupported)) ((xcool)) ((xint)))
                xtest_basics.write
                  [xself]
                    memory > xjoe
                    memory > xEmp
                    memory > xjim
                    seq > @
                      seq
                        xEmp.write (((xNamedTuple)) ("Emp") ((((unsupported)) ((((unsupported)) ("name") ((xstr)))) ((((unsupported)) ("id") ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xEmp)) ((xtuple)))
                        xjoe.write (((xEmp)) ("Joe") (42))
                        xjim.write (((unsupported)) ((xEmp)) ("Jim") (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjoe)) ((xEmp)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjoe)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjoe).xname)) ("Joe"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjoe).xid)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjim).xname)) ("Jim"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjim).xid)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__name__)) ("Emp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x_fields)) ((((unsupported)) ("name") ("id"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__annotations__)) (((((xcollections).xOrderedDict)) ((((unsupported)) ((((unsupported)) ("name") ((xstr)))) ((((unsupported)) ("id") ((xint)))))))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xEmp).x_field_types)) (((xEmp).x__annotations__)))
                xtest_namedtuple_pyversion.write
                  [xself]
                    memory > xwhatever
                    seq > @
                      ((((unsupported)) (((xsys).xversion_info)) ((((unsupported)) (2)))).less (((unsupported)) (3) (6))).if
                        seq
                          (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                            (((unsupported)) ((xNamedTuple)) ("Name") ((xint)) ((xstr)))
                          (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                            (((unsupported)) ((xNamedTuple)))
                              xwhatever.write 0
                xtest_annotation_usage.write
                  [xself]
                    memory > xtim
                    seq > @
                      seq
                        xtim.write (((xCoolEmployee)) ("Tim") (9000))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xtim)) ((xCoolEmployee)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xtim)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtim).xname)) ("Tim"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtim).xcool)) (9000))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployee).x__name__)) ("CoolEmployee"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployee).x_fields)) ((((unsupported)) ("name") ("cool"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployee).x__annotations__)) ((((unsupported)) (((xcollections).xOrderedDict)) ((xstr)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xCoolEmployee).x_field_types)) (((xCoolEmployee).x__annotations__)))
                xtest_annotation_usage_with_default.write
                  [xself]
                    memory > xcooler_employee
                    memory > xjelle
                    seq > @
                      seq
                        xjelle.write (((xCoolEmployeeWithDefault)) ("Jelle"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjelle)) ((xCoolEmployeeWithDefault)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjelle)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjelle).xname)) ("Jelle"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xjelle).xcool)) (0))
                        xcooler_employee.write (((xCoolEmployeeWithDefault)) ("Sjoerd") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcooler_employee).xcool)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployeeWithDefault).x__name__)) ("CoolEmployeeWithDefault"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployeeWithDefault).x_fields)) ((((unsupported)) ("name") ("cool"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployeeWithDefault).x_field_types)) ((((unsupported)) ((xdict)) ((xstr)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xCoolEmployeeWithDefault).x_field_defaults)) ((((unsupported)) ((xdict)) (0))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xexec)) ((((unsupported)) 0)))
                xtest_annotation_usage_with_methods.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xXMeth)) (1)).xdouble)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xXMeth)) (42)).xx)) ((((unsupported)) ((((xXMeth)) (42))) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xXRepr)) (42))))) ("42 -> 1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xXRepr)) (1) (2)).add (((xXRepr)) (3)))) (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          bogusForceDataize.write (((xexec)) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          bogusForceDataize.write (((xexec)) ((((unsupported)) 0)))
                xtest_namedtuple_keyword_usage.write
                  [xself]
                    memory > xLocalEmployee
                    memory > xnick
                    seq > @
                      seq
                        xLocalEmployee.write (((unsupported)) ((xNamedTuple)) ("LocalEmployee") ((xstr)) ((xint)))
                        xnick.write (((xLocalEmployee)) ("Nick") (25))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xnick)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xnick).xname)) ("Nick"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLocalEmployee).x__name__)) ("LocalEmployee"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLocalEmployee).x_fields)) ((((unsupported)) ("name") ("age"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLocalEmployee).x__annotations__)) ((((unsupported)) ((xdict)) ((xstr)) ((xint)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xLocalEmployee).x_field_types)) (((xLocalEmployee).x__annotations__)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xNamedTuple)) ("Name") ((((unsupported)) ((((unsupported)) ("x") ((xint)))))) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xNamedTuple)) ("Name") (1) ("a"))
                xtest_namedtuple_special_keyword_names.write
                  [xself]
                    memory > xNT
                    memory > xa
                    seq > @
                      seq
                        xNT.write (((unsupported)) ((xNamedTuple)) ("NT") ((xtype)) ((xobject)) ((xstr)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xNT).x__name__)) ("NT"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xNT).x_fields)) ((((unsupported)) ("cls") ("self") ("typename") ("fields"))))
                        xa.write (((unsupported)) ((xNT)) ((xstr)) (42) ("foo") ((((unsupported)) ((((unsupported)) ("bar") ((xtuple)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xcls)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xself)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xtypename)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xfields)) ((((unsupported)) ((((unsupported)) ("bar") ((xtuple)))))))
                xtest_namedtuple_errors.write
                  [xself]
                    memory > xEmp
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xNamedTuple).x__new__)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xNamedTuple)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xNamedTuple)) ("Emp") ((((unsupported)) ((((unsupported)) ("name") ((xstr)))))) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write (((xNamedTuple)) ("Emp") ((((unsupported)) ((((unsupported)) ("_name") ((xstr)))))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          xEmp.write (((unsupported)) ((xNamedTuple)) ("Emp") ((xstr)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__name__)) ("Emp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x_fields)) ((((unsupported)) ("name") ("id"))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          xEmp.write (((unsupported)) ((xNamedTuple)) ("Emp") ((((unsupported)) ((((unsupported)) ("name") ((xstr)))) ((((unsupported)) ("id") ((xint)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__name__)) ("Emp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x_fields)) ((((unsupported)) ("name") ("id"))))
                xtest_copy_and_pickle.write
                  [xself]
                    memory > xjane
                    memory > xEmp
                    memory > xjane2
                    memory > xz
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xEmp.write (((xNamedTuple)) ("Emp") ((((unsupported)) ((((unsupported)) ("name") ((xstr)))) ((((unsupported)) ("cool") ((xint)))))))
                        (((unsupported)) ((xcls)) ((((unsupported)) ((xEmp)) ((xCoolEmployee)) (((xself).xNestedEmployee)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xcls)))))
                            seq
                              xjane.write (((xcls)) ("jane") (37))
                              (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                                seq
                                  xz.write ((((xpickle).xdumps)) ((xjane)) ((xproto)))
                                  xjane2.write ((((xpickle).xloads)) ((xz)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((xjane2)) ((xjane)))
                                  bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjane2)) ((xcls)))
                              xjane2.write (((xcopy)) ((xjane)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xjane2)) ((xjane)))
                              bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjane2)) ((xcls)))
                              xjane2.write (((xdeepcopy)) ((xjane)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xjane2)) ((xjane)))
                              bogusForceDataize.write ((((xself).xassertIsInstance)) ((xjane2)) ((xcls)))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics_functional_syntax.write
                  [xself]
                    memory > xEmp
                    memory > xjim
                    seq > @
                      seq
                        xEmp.write (((xTypedDict)) ("Emp") ((((unsupported)) ("name") ((xstr)) ("id") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xEmp)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xEmp)) (((xtyping).xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xEmp)) ((((xcollections).xabc).xSequence)))
                        xjim.write (((unsupported)) ((xEmp)) ("Jim") (1))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xjim)))) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xjim)) ("name"))) ("Jim"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xjim)) ("id"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__name__)) ("Emp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__bases__)) ((((unsupported)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__annotations__)) ((((unsupported)) ("name") ((xstr)) ("id") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__total__)) (TRUE))
                xtest_basics_keywords_syntax.write
                  [xself]
                    memory > xEmp
                    memory > xjim
                    seq > @
                      seq
                        xEmp.write (((unsupported)) ((xTypedDict)) ("Emp") ((xstr)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xEmp)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((xEmp)) (((xtyping).xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xEmp)) ((((xcollections).xabc).xSequence)))
                        xjim.write (((unsupported)) ((xEmp)) ("Jim") (1))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xjim)))) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xjim)) ("name"))) ("Jim"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xjim)) ("id"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__name__)) ("Emp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__bases__)) ((((unsupported)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__annotations__)) ((((unsupported)) ("name") ((xstr)) ("id") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xEmp).x__total__)) (TRUE))
                xtest_typeddict_special_keyword_names.write
                  [xself]
                    memory > xTD
                    memory > xa
                    seq > @
                      seq
                        xTD.write (((unsupported)) ((xTypedDict)) ("TD") ((xtype)) ((xobject)) ((xstr)) ((xint)) ((xlist)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xTD).x__name__)) ("TD"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xTD).x__annotations__)) ((((unsupported)) ("cls") ((xtype)) ("self") ((xobject)) ("typename") ((xstr)) ("_typename") ((xint)) ("fields") ((xlist)) ("_fields") ((xdict)))))
                        xa.write (((unsupported)) ((xTD)) ((xstr)) (42) ("foo") (53) ((((unsupported)) ((((unsupported)) ("bar") ((xtuple)))))) ((((unsupported)) ("baz") ((xset)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("cls"))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("self"))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("typename"))) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("_typename"))) (53))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("fields"))) ((((unsupported)) ((((unsupported)) ("bar") ((xtuple)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ("_fields"))) ((((unsupported)) ("baz") ((xset)))))
                xtest_typeddict_create_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xTypedDict).x__new__)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xTypedDict)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xTypedDict)) ("Emp") ((((unsupported)) ((((unsupported)) ("name") ((xstr)))))) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypedDict)) ("Emp") ((xstr)) ((xint)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypedDict)) ("Emp") ((((unsupported)) ("name") ((xstr)) ("id") ((xint)))))
                xtest_typeddict_errors.write
                  [xself]
                    memory > xEmp
                    memory > xjim
                    seq > @
                      seq
                        xEmp.write (((xTypedDict)) ("Emp") ((((unsupported)) ("name") ((xstr)) ("id") ((xint)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xTypedDict).x__module__)) ("typing"))
                        xjim.write (((unsupported)) ((xEmp)) ("Jim") (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((((unsupported)) 0)) ((xEmp)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) ((xjim)) ((xEmp)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((xdict)) ((xEmp)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypedDict)) ("Hi") (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xTypedDict)) ("Hi") ((((unsupported)) ((((unsupported)) ("x") ((xint)))) ((((unsupported)) ("y") (1))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xTypedDict)) ("Hi") ((((unsupported)) ((((unsupported)) ("x") ((xint)))))) ((xint)))
                xtest_py36_class_syntax_usage.write
                  [xself]
                    memory > xother
                    memory > xnot_origin
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLabelPoint2D).x__name__)) ("LabelPoint2D"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLabelPoint2D).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLabelPoint2D).x__annotations__)) ((((unsupported)) ("x") ((xint)) ("y") ((xint)) ("label") ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLabelPoint2D).x__bases__)) ((((unsupported)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLabelPoint2D).x__total__)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertNotIsSubclass)) ((xLabelPoint2D)) (((xtyping).xSequence)))
                        xnot_origin.write (((unsupported)) ((xPoint2D)) (0) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xnot_origin)) ("x"))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xnot_origin)) ("y"))) (1))
                        xother.write (((unsupported)) ((xLabelPoint2D)) (0) (1) ("hi"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xother)) ("label"))) ("hi"))
                xtest_pickle.write
                  [xself]
                    memory > xjane
                    memory > xz
                    memory > xjane2
                    memory > xZZ
                    memory > xEmpD
                    memory > xEmpDnew
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xEmpD.write (((unsupported)) ((xTypedDict)) ("EmpD") ((xstr)) ((xint)))
                        xjane.write (((xEmpD)) ((((unsupported)) ("name") ("jane") ("id") (37))))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xz.write ((((xpickle).xdumps)) ((xjane)) ((xproto)))
                            xjane2.write ((((xpickle).xloads)) ((xz)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xjane2)) ((xjane)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xjane2)) ((((unsupported)) ("name") ("jane") ("id") (37))))
                            xZZ.write ((((xpickle).xdumps)) ((xEmpD)) ((xproto)))
                            xEmpDnew.write ((((xpickle).xloads)) ((xZZ)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xEmpDnew)) ((((unsupported)) ("name") ("jane") ("id") (37))))) ((xjane)))
                xtest_optional.write
                  [xself]
                    memory > xEmpD
                    seq > @
                      seq
                        xEmpD.write (((unsupported)) ((xTypedDict)) ("EmpD") ((xstr)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtyping).xOptional)) ((xEmpD)))) ((((unsupported)) (((xtyping).xUnion)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((xEmpD)))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) (((xtyping).xList)) ((xEmpD)))) ((((unsupported)) (((xtyping).xTuple)) ((xEmpD)))))
                xtest_total.write
                  [xself]
                    memory > xD
                    seq > @
                      seq
                        xD.write (((unsupported)) ((xTypedDict)) ("D") ((((unsupported)) ("x") ((xint)))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xD)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xD)) (1))) ((((unsupported)) ("x") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xD).x__total__)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xOptions)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xOptions)) (2))) ((((unsupported)) ("log_level") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xOptions).x__total__)) (FALSE))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_io.write
                  [xself]
                    memory > xstuff
                    memory > xa
                    seq > @
                      seq
                        xstuff.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((((xa).xreadline)) 0)))
                        xa.write (((unsupported)) (((xstuff).x__annotations__)) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__parameters__)) ((((unsupported)) ((xAnyStr)))))
                xtest_textio.write
                  [xself]
                    memory > xstuff
                    memory > xa
                    seq > @
                      seq
                        xstuff.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((((xa).xreadline)) 0)))
                        xa.write (((unsupported)) (((xstuff).x__annotations__)) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__parameters__)) ((((unsupported)) 0)))
                xtest_binaryio.write
                  [xself]
                    memory > xstuff
                    memory > xa
                    seq > @
                      seq
                        xstuff.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((((xa).xreadline)) 0)))
                        xa.write (((unsupported)) (((xstuff).x__annotations__)) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__parameters__)) ((((unsupported)) 0)))
                xtest_io_submodule.write
                  [xself]
                    seq > @
                      seq
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((xIO)) (((xtyping).xIO)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xTextIO)) (((xtyping).xTextIO)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xBinaryIO)) (((xtyping).xBinaryIO)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((x__all__)))) ((((xset)) ((((unsupported)) ("IO") ("TextIO") ("BinaryIO"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((x__name__)) ("typing.io"))
            (((unsupported)) ((xBaseTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xmat
                    memory > xpat
                    seq > @
                      seq
                        xpat.write ((((xre).xcompile)) ("[a-z]+") (((xre).xI)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) (((xpat).x__class__)) ((xPattern)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((((xtype)) ((xpat)))) ((xPattern)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xpat)) ((xPattern)))
                        xmat.write ((((xpat).xsearch)) ("12345abcde....."))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) (((xmat).x__class__)) ((xMatch)))
                        bogusForceDataize.write ((((xself).xassertIsSubclass)) ((((xtype)) ((xmat)))) ((xMatch)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xmat)) ((xMatch)))
                        (((unsupported)) ((xPattern)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((xbytes)))))))
                        (((unsupported)) ((xMatch)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xbytes)) ((xstr)))))))
                xtest_alias_equality.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xPattern)) ((xstr)))) ((((unsupported)) ((xPattern)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xPattern)) ((xstr)))) ((((unsupported)) ((xPattern)) ((xbytes)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xPattern)) ((xstr)))) ((((unsupported)) ((xMatch)) ((xstr)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((unsupported)) ((xPattern)) ((xstr)))) ((xstr)))
                xtest_errors.write
                  [xself]
                    memory > xm
                    seq > @
                      seq
                        xm.write (((unsupported)) ((xMatch)) ((((unsupported)) ((xUnion)) ((((unsupported)) ((xstr)) ((xbytes)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xm)) ((xstr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xisinstance)) (42) ((((unsupported)) ((xPattern)) ((xstr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xissubclass)) ((((unsupported)) ((xPattern)) ((xbytes)))) ((((unsupported)) ((xPattern)) ((xstr)))))
                xtest_repr.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xPattern)))) ("typing.Pattern"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xPattern)) ((xstr)))))) ("typing.Pattern[str]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xPattern)) ((xbytes)))))) ("typing.Pattern[bytes]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xMatch)))) ("typing.Match"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xMatch)) ((xstr)))))) ("typing.Match[str]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((xMatch)) ((xbytes)))))) ("typing.Match[bytes]"))
                xtest_re_submodule.write
                  [xself]
                    seq > @
                      seq
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((xMatch)) (((xtyping).xMatch)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xPattern)) (((xtyping).xPattern)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((x__all__)))) ((((xset)) ((((unsupported)) ("Match") ("Pattern"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((x__name__)) ("typing.re"))
                xtest_cannot_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xex)))
                          (((unsupported)) (((xtyping).xMatch)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (((xex).xexception)))) ("type 're.Match' is not an acceptable base type"))
            (((unsupported)) ((xBaseTestCase)))
              seq
                unsupported
                xtest_all.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ("AbstractSet") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("ValuesView") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("cast") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("overload") ((xa)))
                        (((xhasattr)) ((xcontextlib)) ("AbstractContextManager")).if
                          bogusForceDataize.write ((((xself).xassertIn)) ("ContextManager") ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("io") ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("re") ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("os") ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("sys") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("Text") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("SupportsBytes") ((xa)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("SupportsComplex") ((xa)))
                xtest_all_exported_names.write
                  [xself]
                    memory > xactual_all
                    memory > xcomputed_all
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xactual_all.write (((xset)) (((xtyping).x__all__)))
                        xcomputed_all.write (((unsupported)) ((xk)) ((((unsupported)) ((xk)) ((xv)))) (((((((xvars)) ((xtyping))).xitems)) 0)) (((((unsupported)) ((xk)) ((xactual_all))).or (((((((((((xk).xstartswith)) ("_")).not).and (((unsupported)) ((xk)) ((((xtyping).xio).x__all__)))).and (((unsupported)) ((xk)) ((((xtyping).xre).x__all__)))).and (((unsupported)) ((xk)) ((((unsupported)) ("io") ("re"))))).and (((((xk).xendswith)) ((((unsupported)) ("Meta") ("_contra") ("_co")))).not)).and ((((((xk).xupper)) 0).eq (xk)).not)).and ((((xgetattr)) ((xv)) ("__module__") ("None: is there a None literal in the EO language?")).eq ((xtyping).x__name__))))))
                        bogusForceDataize.write ((((xself).xassertSetEqual)) ((xcomputed_all)) ((xactual_all)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xmain)) 0)