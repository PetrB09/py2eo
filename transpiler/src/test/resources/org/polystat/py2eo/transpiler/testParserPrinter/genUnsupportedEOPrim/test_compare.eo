memory > xC
memory > xLeft
memory > xRight
memory > xBase
memory > x_
memory > xi
memory > xid
memory > xEmpty
memory > xobject
memory > xlen
memory > xfunc
memory > xrange
memory > xother
memory > xb
memory > xDerived
memory > xCmp
memory > xNotImplemented
memory > xsetattr
memory > xname
memory > xunittest
memory > xTypeError
memory > x__name__
memory > xAnything
memory > xa
[] > test_compare
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_id_comparisons
        memory > xset1
        memory > xset2
        memory > xtest_comparisons
        memory > xtest_other_delegation
        memory > x__ne__
        memory > xtest_ne_defaults_to_not_eq
        memory > xtest_ne_high_priority
        memory > xcandidates
        memory > x__init__
        memory > xtest_ne_low_priority
        memory > xtest_issue_1393
        memory > x__eq__
        memory > x__repr__
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)) ("<Empty>"))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xarg]
                    seq > @
                      (((unsupported)) (((xself).xarg)) ((xarg)))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)) (("<Cmp %s>".mod ((xself).xarg))))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xarg).eq (xother))))
            (((unsupported)) 0)
              seq
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (TRUE))
                x__ne__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (FALSE))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xset1.write (((unsupported)) (2) (2.0) (2) ((2.add (((unsupported)) 0))) ((((xCmp)) (2.0))))
                xset2.write (((unsupported)) ((((unsupported)) (1))) ((((unsupported)) (3))) ("None: is there a None literal in the EO language?") ((((xEmpty)) 0)))
                xcandidates.write ((xset1).add (xset2))
                xtest_comparisons.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xa)) (((xself).xcandidates)))
                        (((unsupported)) ((xb)) (((xself).xcandidates)))
                          (((((unsupported)) ((xa)) (((xself).xset1))).and (((unsupported)) ((xb)) (((xself).xset1)))).or (((unsupported)) ((xa)) ((xb)))).if
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertNotEqual)) ((xa)) ((xb)))
                xtest_id_comparisons.write
                  [xself]
                    memory > xL
                    seq > @
                      seq
                        xL.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          bogusForceDataize.write ((((xL).xinsert)) ((((unsupported)) ((((xlen)) ((xL)))) (2))) ((((xEmpty)) 0)))
                        (((unsupported)) ((xa)) ((xL)))
                          (((unsupported)) ((xb)) ((xL)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).eq (xb))) (((((xid)) ((xa))).eq (((xid)) ((xb))))) (("a=%r, b=%r".mod (((unsupported)) ((xa)) ((xb))))))
                xtest_ne_defaults_to_not_eq.write
                  [xself]
                    memory > xc
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xCmp)) (1))
                        xb.write (((xCmp)) (1))
                        xc.write (((xCmp)) (2))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xa).eq (xb))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xa).neq (xb))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xa).neq (xc))) (TRUE))
                xtest_ne_high_priority.write
                  [xself]
                    memory > x__eq__
                    memory > x__ne__
                    memory > xcalls
                    seq > @
                      seq
                        unsupported
                        xcalls.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__eq__.write
                            []
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((xcalls).xappend)) ("Left.__eq__"))
                                  (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) 0)
                          seq
                            x__eq__.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xcalls).xappend)) ("Right.__eq__"))
                                    (((unsupported)) ((xNotImplemented)))
                            x__ne__.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xcalls).xappend)) ("Right.__ne__"))
                                    (((unsupported)) ((xNotImplemented)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertSequenceEqual)) ((xcalls)) ((((unsupported)) ("Left.__eq__") ("Right.__ne__"))))
                xtest_ne_low_priority.write
                  [xself]
                    memory > x__eq__
                    memory > x__ne__
                    memory > xcalls
                    seq > @
                      seq
                        unsupported
                        xcalls.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__eq__.write
                            []
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((xcalls).xappend)) ("Base.__eq__"))
                                  (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) ((xBase)))
                          seq
                            x__eq__.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xcalls).xappend)) ("Derived.__eq__"))
                                    (((unsupported)) ((xNotImplemented)))
                            x__ne__.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xcalls).xappend)) ("Derived.__ne__"))
                                    (((unsupported)) ((xNotImplemented)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertSequenceEqual)) ((xcalls)) ((((unsupported)) ("Derived.__ne__") ("Base.__eq__"))))
                xtest_other_delegation.write
                  [xself]
                    memory > xops
                    memory > x__ne__
                    memory > xunexpected
                    seq > @
                      seq
                        unsupported
                        xops.write (((unsupported)) ((((unsupported)) ("__eq__") ((((unsupported)) (((xa).eq (xb))))))) ((((unsupported)) ("__lt__") ((((unsupported)) (((xa).less (xb))))))) ((((unsupported)) ("__le__") ((((unsupported)) (((xa).leq (xb))))))) ((((unsupported)) ("__gt__") ((((unsupported)) (((xa).greater (xb))))))) ((((unsupported)) ("__ge__") ((((unsupported)) (((xa).geq (xb))))))))
                        (((unsupported)) ((((unsupported)) ((xname)) ((xfunc)))) ((xops)))
                          (((unsupported)) (((((xself).xsubTest)) ((xname)))))
                            seq
                              xunexpected.write
                                []
                                  seq > @
                                    (((unsupported)) 0)
                                      bogusForceDataize.write ((((xself).xfail)) ("Unexpected operator method called"))
                              (((unsupported)) 0)
                                x__ne__.write (xunexpected)
                              (((unsupported)) ((((unsupported)) ((xother)) ((x_)))) ((xops)))
                                ((xother).neq (xname)).if
                                  bogusForceDataize.write (((xsetattr)) ((xC)) ((xother)) ((xunexpected)))
                              ((xname).eq "__eq__").if
                                bogusForceDataize.write ((((xself).xassertIs)) ((((xfunc)) ((((xC)) 0)) ((((xobject)) 0)))) (FALSE))
                                bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xfunc)) ((((xC)) 0)) ((((xobject)) 0)))
                xtest_issue_1393.write
                  [xself]
                    memory > xx
                    memory > xy
                    seq > @
                      seq
                        xx.write (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ((((xAnything)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xAnything)) 0)) ((xx)))
                        xy.write (((xobject)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xy)) ((((xAnything)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xAnything)) 0)) ((xy)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)