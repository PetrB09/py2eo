memory > xcm
memory > xzipapp
memory > xz
memory > xstat
memory > xtempfile
memory > xmain
memory > xpathlib
memory > xlen
memory > xstr
memory > xio
memory > xf
memory > xset
memory > xSystemExit
memory > xname
memory > xunittest
memory > xzipfile
memory > x__name__
[] > test_zipapp
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xmake_archive
        memory > xtest_create_archive_with_compression
        memory > xtest_custom_interpreter
        memory > xtest_remove_shebang
        memory > xtest_main_and_main_py
        memory > xtest_create_archive_with_pathlib
        memory > xtest_read_from_pathobj
        memory > xtest_default_no_shebang
        memory > xtest_info_command
        memory > xtest_create_archive_with_subdirs
        memory > xtest_content_of_copied_archive
        memory > xtest_read_shebang
        memory > xtest_main_written
        memory > xtest_modify_shebang
        memory > xtest_main_only_written_once
        memory > xtest_shebang_is_executable
        memory > xtest_cmdline_copy_inplace
        memory > xtest_pack_to_fileobj
        memory > xtest_create_archive_filter_exclude_dir
        memory > xtest_no_main
        memory > xsetUp
        memory > xtest_read_missing_shebang
        memory > xtest_write_shebang_to_fileobj
        memory > xtest_read_from_fileobj
        memory > xtest_main_validation
        memory > xtest_info_error
        memory > xtest_create_archive_with_filter
        memory > xtest_create_archive_default_target
        memory > xtest_cmdline_create
        memory > xtest_no_shebang_is_not_executable
        memory > xtest_create_archive
        memory > xtest_cmdline_copy
        memory > xtest_cmdline_copy_change_main
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xsetUp.write
                  [xself]
                    memory > xtmpdir
                    seq > @
                      seq
                        xtmpdir.write ((((xtempfile).xTemporaryDirectory)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xtmpdir).xcleanup)))
                        (((unsupported)) (((xself).xtmpdir)) (((((xpathlib).xPath)) (((xtmpdir).xname)))))
                xtest_create_archive.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xtarget).xis_file)) 0)))
                xtest_create_archive_with_pathlib.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((xsource)) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xtarget).xis_file)) 0)))
                xtest_create_archive_with_subdirs.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "foo").xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "bar").xmkdir)) 0)
                        bogusForceDataize.write ((((((xsource).div "foo").div "__init__.py").xtouch)) 0)
                        xtarget.write ((((xio).xBytesIO)) 0)
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((xtarget)))
                        bogusForceDataize.write ((((xtarget).xseek)) (0))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((xtarget)) ("r"))) ((xz)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ("foo/") (((((xz).xnamelist)) 0)))
                            bogusForceDataize.write ((((xself).xassertIn)) ("bar/") (((((xz).xnamelist)) 0)))
                xtest_create_archive_with_filter.write
                  [xself]
                    memory > xtarget
                    memory > xskip_pyc_files
                    memory > xsource
                    seq > @
                      seq
                        xskip_pyc_files.write
                          [xpath]
                            seq > @
                              (((unsupported)) ((((xpath).xsuffix).neq ".pyc")))
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "test.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "test.pyc").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xsource)) ((xtarget)) ((xskip_pyc_files)))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((xtarget)) ("r"))) ((xz)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ("__main__.py") (((((xz).xnamelist)) 0)))
                            bogusForceDataize.write ((((xself).xassertIn)) ("test.py") (((((xz).xnamelist)) 0)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ("test.pyc") (((((xz).xnamelist)) 0)))
                xtest_create_archive_filter_exclude_dir.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    memory > xskip_dummy_dir
                    seq > @
                      seq
                        xskip_dummy_dir.write
                          [xpath]
                            seq > @
                              (((unsupported)) (((((unsupported)) (((xpath).xparts)) (0)).neq "dummy")))
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "test.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "dummy").xmkdir)) 0)
                        bogusForceDataize.write ((((((xsource).div "dummy").div "test2.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xsource)) ((xtarget)) ((xskip_dummy_dir)))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((xtarget)) ("r"))) ((xz)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((((xz).xnamelist)) 0)))) (2))
                            bogusForceDataize.write ((((xself).xassertIn)) ("__main__.py") (((((xz).xnamelist)) 0)))
                            bogusForceDataize.write ((((xself).xassertIn)) ("test.py") (((((xz).xnamelist)) 0)))
                xtest_create_archive_default_target.write
                  [xself]
                    memory > xexpected_target
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))))
                        xexpected_target.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xexpected_target).xis_file)) 0)))
                xtest_create_archive_with_compression.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      (((unsupported)) 0)
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "test.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xsource)) ((xtarget)) (TRUE))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((xtarget)) ("r"))) ((xz)))
                          (((unsupported)) ((xname)) ((((unsupported)) ("__main__.py") ("test.py"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((xz).xgetinfo)) ((xname))).xcompress_type)) (((xzipfile).xZIP_DEFLATED)))
                xtest_no_main.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "foo.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((((xself).xassertRaises)) (((xzipapp).xZipAppError)))))
                          bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))))
                xtest_main_and_main_py.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((((xself).xassertRaises)) (((xzipapp).xZipAppError)))))
                          (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("pkg.mod:fn"))
                xtest_main_written.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "foo.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("pkg.mod:fn"))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((((xstr)) ((xtarget)))) ("r"))) ((xz)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ("__main__.py") (((((xz).xnamelist)) 0)))
                            bogusForceDataize.write ((((xself).xassertIn)) ("pkg.mod.fn()") (((((xz).xread)) ("__main__.py"))))
                xtest_main_only_written_once.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "foo.py").xtouch)) 0)
                        bogusForceDataize.write (((((xsource).div "bar.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("pkg.mod:fn"))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((((xstr)) ((xtarget)))) ("r"))) ((xz)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((((((xz).xnamelist)) 0).xcount)) ("__main__.py"))))
                xtest_main_validation.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    memory > xproblems
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        xproblems.write (((unsupported)) ("") ("foo") ("foo:") (":bar") ("12:bar") ("a.b.c.:d") (".a:b") ("a:b.") ("a:.b") ("a:silly name"))
                        (((unsupported)) ((xmain)) ((xproblems)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xmain)))))
                            (((unsupported)) (((((xself).xassertRaises)) (((xzipapp).xZipAppError)))))
                              (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ((xmain)))
                xtest_default_no_shebang.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))))
                        (((unsupported)) (((((xtarget).xopen)) ("rb"))) ((xf)))
                          bogusForceDataize.write ((((xself).xassertNotEqual)) (((((xf).xread)) (2))) ("#!"))
                xtest_custom_interpreter.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        (((unsupported)) (((((xtarget).xopen)) ("rb"))) ((xf)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xread)) (2))) ("#!"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ("pythonn") (((((xf).xreadline)) 0)))
                xtest_pack_to_fileobj.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write ((((xio).xBytesIO)) 0)
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((xtarget)) ("python"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((((xtarget).xgetvalue)) 0).xstartswith)) ("#!pythonn"))))
                xtest_read_shebang.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xzipapp).xget_interpreter)) ((((xstr)) ((xtarget)))))) ("python"))
                xtest_read_missing_shebang.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xzipapp).xget_interpreter)) ((((xstr)) ((xtarget)))))) ("None: is there a None literal in the EO language?"))
                xtest_modify_shebang.write
                  [xself]
                    memory > xtarget
                    memory > xnew_target
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        xnew_target.write (((xself).xtmpdir).div "changed.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xtarget)))) ((((xstr)) ((xnew_target)))) ("python2.7"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xzipapp).xget_interpreter)) ((((xstr)) ((xnew_target)))))) ("python2.7"))
                xtest_write_shebang_to_fileobj.write
                  [xself]
                    memory > xtarget
                    memory > xnew_target
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        xnew_target.write ((((xio).xBytesIO)) 0)
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xtarget)))) ((xnew_target)) ("python2.7"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((((xnew_target).xgetvalue)) 0).xstartswith)) ("#!python2.7n"))))
                xtest_read_from_pathobj.write
                  [xself]
                    memory > xtarget2
                    memory > xtarget1
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget1.write (((xself).xtmpdir).div "target1.pyz")
                        xtarget2.write (((xself).xtmpdir).div "target2.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xsource)) ((xtarget1)) ("python"))
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xtarget1)) ((xtarget2)) ("python2.7"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xzipapp).xget_interpreter)) ((xtarget2)))) ("python2.7"))
                xtest_read_from_fileobj.write
                  [xself]
                    memory > xtarget
                    memory > xnew_target
                    memory > xsource
                    memory > xtemp_archive
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        xtemp_archive.write ((((xio).xBytesIO)) 0)
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((xtemp_archive)) ("python"))
                        xnew_target.write ((((xio).xBytesIO)) 0)
                        bogusForceDataize.write ((((xtemp_archive).xseek)) (0))
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xtemp_archive)) ((xnew_target)) ("python2.7"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((((xnew_target).xgetvalue)) 0).xstartswith)) ("#!python2.7n"))))
                xtest_remove_shebang.write
                  [xself]
                    memory > xtarget
                    memory > xnew_target
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        xnew_target.write (((xself).xtmpdir).div "changed.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xtarget)))) ((((xstr)) ((xnew_target)))) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xzipapp).xget_interpreter)) ((((xstr)) ((xnew_target)))))) ("None: is there a None literal in the EO language?"))
                xtest_content_of_copied_archive.write
                  [xself]
                    memory > xtarget
                    memory > xnew_target
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write ((((xio).xBytesIO)) 0)
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((xtarget)) ("python"))
                        xnew_target.write ((((xio).xBytesIO)) 0)
                        bogusForceDataize.write ((((xtarget).xseek)) (0))
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((xtarget)) ((xnew_target)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xnew_target).xseek)) (0))
                        (((unsupported)) (((((xzipfile).xZipFile)) ((xnew_target)) ("r"))) ((xz)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) (((((xz).xnamelist)) 0)))) ((((unsupported)) ("__main__.py"))))
                xtest_shebang_is_executable.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      (((unsupported)) 0)
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("python"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xtarget).xstat)) 0).xst_mode).and ((xstat).xS_IEXEC))))
                xtest_no_shebang_is_not_executable.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      (((unsupported)) 0)
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        (((unsupported)) (((xzipapp).xcreate_archive)) ((((xstr)) ((xsource)))) ((((xstr)) ((xtarget)))) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((((xtarget).xstat)) 0).xst_mode).and ((xstat).xS_IEXEC))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xsetUp.write
                  [xself]
                    memory > xtmpdir
                    seq > @
                      seq
                        xtmpdir.write ((((xtempfile).xTemporaryDirectory)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xtmpdir).xcleanup)))
                        (((unsupported)) (((xself).xtmpdir)) (((((xpathlib).xPath)) (((xtmpdir).xname)))))
                xmake_archive.write
                  [xself]
                    memory > xtarget
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xtarget.write (((xself).xtmpdir).div "source.pyz")
                        bogusForceDataize.write ((((xzipapp).xcreate_archive)) ((xsource)) ((xtarget)))
                        (((unsupported)) ((xtarget)))
                xtest_cmdline_create.write
                  [xself]
                    memory > xtarget
                    memory > xargs
                    memory > xsource
                    seq > @
                      seq
                        xsource.write (((xself).xtmpdir).div "source")
                        bogusForceDataize.write ((((xsource).xmkdir)) 0)
                        bogusForceDataize.write (((((xsource).div "__main__.py").xtouch)) 0)
                        xargs.write (((unsupported)) ((((xstr)) ((xsource)))))
                        bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        xtarget.write ((((xsource).xwith_suffix)) (".pyz"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xtarget).xis_file)) 0)))
                xtest_cmdline_copy.write
                  [xself]
                    memory > xtarget
                    memory > xargs
                    memory > xoriginal
                    seq > @
                      seq
                        xoriginal.write ((((xself).xmake_archive)) 0)
                        xtarget.write (((xself).xtmpdir).div "target.pyz")
                        xargs.write (((unsupported)) ((((xstr)) ((xoriginal)))) ("-o") ((((xstr)) ((xtarget)))))
                        bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xtarget).xis_file)) 0)))
                xtest_cmdline_copy_inplace.write
                  [xself]
                    memory > xtarget
                    memory > xargs
                    memory > xoriginal
                    seq > @
                      seq
                        xoriginal.write ((((xself).xmake_archive)) 0)
                        xtarget.write (((xself).xtmpdir).div "target.pyz")
                        xargs.write (((unsupported)) ((((xstr)) ((xoriginal)))) ("-o") ((((xstr)) ((xoriginal)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSystemExit)))) ((xcm)))
                          bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcm).xexception).xcode)))
                xtest_cmdline_copy_change_main.write
                  [xself]
                    memory > xtarget
                    memory > xargs
                    memory > xoriginal
                    seq > @
                      seq
                        xoriginal.write ((((xself).xmake_archive)) 0)
                        xtarget.write (((xself).xtmpdir).div "target.pyz")
                        xargs.write (((unsupported)) ((((xstr)) ((xoriginal)))) ("-o") ((((xstr)) ((xtarget)))) ("-m") ("foo:bar"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSystemExit)))) ((xcm)))
                          bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcm).xexception).xcode)))
                xtest_info_command.write
                  [xself xmock_stdout]
                    memory > xtarget
                    memory > xargs
                    seq > @
                      (((unsupported)) 0)
                        xtarget.write ((((xself).xmake_archive)) 0)
                        xargs.write (((unsupported)) ((((xstr)) ((xtarget)))) ("--info"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSystemExit)))) ((xcm)))
                          bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcm).xexception).xcode)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmock_stdout).xgetvalue)) 0)) ("Interpreter: <none>n"))
                xtest_info_error.write
                  [xself]
                    memory > xtarget
                    memory > xargs
                    seq > @
                      seq
                        xtarget.write (((xself).xtmpdir).div "dummy.pyz")
                        xargs.write (((unsupported)) ((((xstr)) ((xtarget)))) ("--info"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSystemExit)))) ((xcm)))
                          bogusForceDataize.write ((((xzipapp).xmain)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcm).xexception).xcode)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)