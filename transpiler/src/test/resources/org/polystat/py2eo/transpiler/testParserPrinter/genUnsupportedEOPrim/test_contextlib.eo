memory > xio
memory > xDefaultEnter
memory > xrange
memory > xtempfile
memory > xopen
memory > xint
memory > xException
memory > xDeprecationWarning
memory > xredirect_stderr
memory > xk
memory > xthreading
memory > xC
memory > xAbstractContextManager
memory > xenter_result
memory > xTest
memory > xAttributeError
memory > xstack
memory > xRuntimeError
memory > xTestBaseExitStack
memory > xredirect_stdout
memory > xNoEnter
memory > xValueError
memory > xexc_details
memory > xMissingExit
memory > xes_ctx
memory > xerr_ctx
memory > xexec
memory > xZeroDivisionError
memory > xExitCM
memory > xIndexError
memory > xStopIteration
memory > xKeyError
memory > xUniqueException
memory > xreversed
memory > xkw
memory > xmycontext
memory > xprint
memory > xtype
memory > xx
memory > xi
memory > xsuper
memory > xclosing
memory > xsupport
memory > xContextDecorator
memory > xsys
memory > xkwds
memory > xissubclass
memory > xargs
memory > xLookupError
memory > xweakref
memory > xpow
memory > xv
memory > xExitStack
memory > xgetattr
memory > xsuppress
memory > xUniqueRuntimeError
memory > xSuppressExc
memory > xe
memory > xtarget
memory > xsetattr
memory > xunittest
memory > xc_in
memory > xex
memory > xresult
memory > xRaiseExc
memory > xRaiseExcWithContext
memory > xExample
memory > xy
memory > xwrapper
memory > xobject
memory > xA
memory > xTestCM
memory > xTestRedirectStream
memory > xsomecontext
memory > xNameError
memory > xNoExit
memory > xnullcontext
memory > xdict
memory > xManagerFromScratch
memory > xlen
memory > xTypeError
memory > x__name__
[] > test_contextlib
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x_create_contextmanager_attribs
        memory > xexit_stack
        memory > xtest_contextmanager_attribs
        memory > xtest_exit_exception_with_existing_context
        memory > xtest_recursive
        memory > xtest_pop_all
        memory > xtest_contextmanager_except_pep479
        memory > xtest_contextmanager_as_decorator
        memory > xredirect_stream
        memory > xtest_exit_is_abstract
        memory > xtest_exception_hierarchy
        memory > xtest_contextmanager_except_stopiter
        memory > xtestWithLock
        memory > xtest_enter_result_is_target
        memory > xstarted
        memory > xtest_no_args
        memory > xtest_nullcontext
        memory > xtest_dont_reraise_RuntimeError
        memory > xtest_exit_suppress
        memory > xtest_param_errors
        memory > xtestWithCondition
        memory > xtest_exit_raise
        memory > xtest_exit_exception_non_suppressing
        memory > xtest_close
        memory > xboilerPlate
        memory > xtest_decorating_method
        memory > xtest_contextmanager_do_not_unchain_non_stopiteration_exceptions
        memory > xtest_no_result_from_enter
        memory > xtest_keywords
        memory > xtest_contextmanager_no_reraise
        memory > xtest_structural_subclassing
        memory > xtest_contextdecorator_as_mixin
        memory > xtest_excessive_nesting
        memory > xtestWithBoundedSemaphore
        memory > xtest_contextdecorator_with_exception
        memory > xtest_exact_exception
        memory > xtest_contextmanager_except
        memory > xtest_contextmanager_doc_attrib
        memory > xtest_callback
        memory > xcatch
        memory > xtest_typo_exit
        memory > xtest_contextdecorator
        memory > xtest_enter
        memory > xtestWithSemaphore
        memory > x__exit__
        memory > xtest_decorator
        memory > xtest_contextmanager_trap_yield_after_throw
        memory > x__enter__
        memory > xtest_exit_exception_chaining_suppress
        memory > xtest_body_exception_suppress
        memory > xtest_multiple_exception_args
        memory > xtest_closing_error
        memory > xtest_no_exception
        memory > xtest_other_exception
        memory > xtest_push
        memory > xtest_contextmanager_finally
        memory > xtest_closing
        memory > xtestWithRLock
        memory > xtest_no_redirect_in_init
        memory > xtest_cm_is_reusable
        memory > xtest_exit_exception_with_correct_context
        memory > xtest_redirect_to_string_io
        memory > xtest_contextmanager_plain
        memory > xtest_exit_exception_chaining
        memory > xtestWithOpen
        memory > xexc
        memory > xtest_typo_enter
        memory > xtest_nokeepref
        memory > xtest_cm_is_reentrant
        memory > xtest_no_resources
        memory > xtest_instance_bypass
        memory > xtest_enter_context
        memory > xtest_instance_docs
        memory > xorig_stream
        memory > xtest_exit_exception_chaining_reference
        memory > xtest_instance_docstring_given_cm_docstring
        memory > xtest_decorator_with_exception
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_enter.write
                  [xself]
                    memory > xmanager
                    memory > x__exit__
                    seq > @
                      seq
                        (((unsupported)) ((xAbstractContextManager)))
                          x__exit__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__exit__)) ((((unsupported)) ((xargs)))))
                        xmanager.write (((xDefaultEnter)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xmanager).x__enter__)) 0)) ((xmanager)))
                xtest_exit_is_abstract.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xAbstractContextManager)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xMissingExit)) 0)
                xtest_structural_subclassing.write
                  [xself]
                    memory > x__enter__
                    memory > x__exit__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__enter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__exit__.write
                              [xself xexc_type xexc_value xtraceback]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xManagerFromScratch)) ((xAbstractContextManager)))))
                        (((unsupported)) ((xAbstractContextManager)))
                          x__exit__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__exit__)) ((((unsupported)) ((xargs)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xDefaultEnter)) ((xAbstractContextManager)))))
                        (((unsupported)) ((xManagerFromScratch)))
                          x__enter__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xNoEnter)) ((xAbstractContextManager)))))
                        (((unsupported)) ((xManagerFromScratch)))
                          x__exit__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xNoExit)) ((xAbstractContextManager)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_contextmanager_plain.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      seq
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) (42))
                                bogusForceDataize.write ((((xstate).xappend)) (999))
                        (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                            bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_finally.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      seq
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) 0)
                                  (((unsupported)) (42))
                                  bogusForceDataize.write ((((xstate).xappend)) (999))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                            seq
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                              bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                              (((unsupported)) ((((xZeroDivisionError)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_no_reraise.write
                  [xself]
                    memory > xwhee
                    memory > xctx
                    seq > @
                      seq
                        xwhee.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        xctx.write (((xwhee)) 0)
                        bogusForceDataize.write ((((xctx).x__enter__)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xctx).x__exit__)) ((xTypeError)) ((((xTypeError)) ("foo"))) ("None: is there a None literal in the EO language?"))))
                xtest_contextmanager_trap_yield_after_throw.write
                  [xself]
                    memory > xwhoo
                    memory > xctx
                    seq > @
                      seq
                        xwhoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                                  (((unsupported)) 0)
                        xctx.write (((xwhoo)) 0)
                        bogusForceDataize.write ((((xctx).x__enter__)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((xctx).x__exit__)) ((xTypeError)) ((((xTypeError)) ("foo"))) ("None: is there a None literal in the EO language?"))
                xtest_contextmanager_except.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      seq
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) ((xZeroDivisionError)))
                                  (((unsupported)) (42))
                                  seq
                                    bogusForceDataize.write ((((xstate).xappend)) ((((unsupported)) (((xe).xargs)) (0))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                        (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                            bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                            (((unsupported)) ((((xZeroDivisionError)) (999))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_except_stopiter.write
                  [xself]
                    memory > xstop_exc
                    memory > xwoohoo
                    seq > @
                      seq
                        xstop_exc.write (((xStopIteration)) ("spam"))
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        (((unsupported)) ((xException)))
                          (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("StopIteration"))))
                            (((unsupported)) ((((xwoohoo)) 0)))
                              (((unsupported)) ((xstop_exc)))
                          bogusForceDataize.write ((((xself).xassertIs)) ((xex)) ((xstop_exc)))
                          bogusForceDataize.write ((((xself).xfail)) ("StopIteration was suppressed"))
                xtest_contextmanager_except_pep479.write
                  [xself]
                    memory > xcode
                    memory > xlocals
                    memory > xstop_exc
                    memory > xwoohoo
                    seq > @
                      seq
                        xcode.write (((unsupported)) 0)
                        xlocals.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ((xcode)) ((xlocals)) ((xlocals)))
                        xwoohoo.write (((unsupported)) ((xlocals)) ("woohoo"))
                        xstop_exc.write (((xStopIteration)) ("spam"))
                        (((unsupported)) ((xException)))
                          (((unsupported)) ((((xwoohoo)) 0)))
                            (((unsupported)) ((xstop_exc)))
                          bogusForceDataize.write ((((xself).xassertIs)) ((xex)) ((xstop_exc)))
                          bogusForceDataize.write ((((xself).xfail)) ("StopIteration was suppressed"))
                xtest_contextmanager_do_not_unchain_non_stopiteration_exceptions.write
                  [xself]
                    memory > xtest_issue29692
                    seq > @
                      seq
                        xtest_issue29692.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xException)))
                                  (((unsupported)) 0)
                                  (((unsupported)) ((((xRuntimeError)) ("issue29692:Chained"))) ((xexc)))
                        (((unsupported)) ((xException)))
                          (((unsupported)) ((((xtest_issue29692)) 0)))
                            (((unsupported)) ((xZeroDivisionError)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xex)))) ((xRuntimeError)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xex).xargs)) (0))) ("issue29692:Chained"))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) (((xex).x__cause__)) ((xZeroDivisionError)))
                        (((unsupported)) ((xException)))
                          (((unsupported)) ((((xtest_issue29692)) 0)))
                            (((unsupported)) ((((xStopIteration)) ("issue29692:Unchained"))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xex)))) ((xStopIteration)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xex).xargs)) (0))) ("issue29692:Unchained"))
                            bogusForceDataize.write ((((xself).xassertIsNone)) (((xex).x__cause__)))
                x_create_contextmanager_attribs.write
                  [xself]
                    memory > xbaz
                    memory > xattribs
                    seq > @
                      seq
                        xattribs.write
                          []
                            memory > xdecorate
                            seq > @
                              (((unsupported)) 0)
                                xdecorate.write
                                  [xfunc]
                                    seq > @
                                      seq
                                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xkw).xitems)) 0)))
                                          bogusForceDataize.write (((xsetattr)) ((xfunc)) ((xk)) ((xv)))
                                        (((unsupported)) ((xfunc)))
                                (((unsupported)) ((xdecorate)))
                        xbaz.write
                          [xspam]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                        (((unsupported)) ((xbaz)))
                xtest_contextmanager_attribs.write
                  [xself]
                    memory > xbaz
                    seq > @
                      seq
                        xbaz.write ((((xself).x_create_contextmanager_attribs)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__name__)) ("baz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).xfoo)) ("bar"))
                xtest_contextmanager_doc_attrib.write
                  [xself]
                    memory > xbaz
                    seq > @
                      (((unsupported)) 0)
                        xbaz.write ((((xself).x_create_contextmanager_attribs)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__doc__)) ("Whee!"))
                xtest_instance_docstring_given_cm_docstring.write
                  [xself]
                    memory > xbaz
                    seq > @
                      (((unsupported)) 0)
                        xbaz.write ((((((xself).x_create_contextmanager_attribs)) 0)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__doc__)) ("Whee!"))
                xtest_keywords.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      seq
                        xwoohoo.write
                          [xself xfunc xargs xkwds]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((unsupported)) ((xself)) ((xfunc)) ((xargs)) ((xkwds)))))
                        (((unsupported)) ((((unsupported)) ((xwoohoo)) (11) (22) (33) (44))) ((xtarget)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xtarget)) ((((unsupported)) (11) (22) (33) (44))))
                xtest_nokeepref.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xwoohoo.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                                xa.write ((((xweakref).xref)) ((xa)))
                                xb.write ((((xweakref).xref)) ((xb)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((((xa)) 0)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((((xb)) 0)))
                                (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xwoohoo)) ((((xA)) 0)) ((((xA)) 0)))))
                xtest_param_errors.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      seq
                        xwoohoo.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xwoohoo)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xwoohoo)) (3) (5))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xwoohoo)) (3))
                xtest_recursive.write
                  [xself]
                    memory > xrecursive
                    memory > xdepth
                    memory > xwoohoo
                    seq > @
                      seq
                        xdepth.write 0
                        xwoohoo.write
                          []
                            memory > xbefore
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                xbefore.write (xdepth)
                                (((unsupported)) ((xdepth)) (1))
                                (((unsupported)) 0)
                                (((unsupported)) ((xdepth)) (1))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xdepth)) ((xbefore)))
                        xrecursive.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                ((xdepth).less 10).if
                                  bogusForceDataize.write (((xrecursive)) 0)
                        bogusForceDataize.write (((xrecursive)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdepth)) (0))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_instance_docs.write
                  [xself]
                    memory > xcm_docstring
                    memory > xobj
                    seq > @
                      (((unsupported)) 0)
                        xcm_docstring.write ((xclosing).x__doc__)
                        xobj.write (((xclosing)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).x__doc__)) ((xcm_docstring)))
                xtest_closing.write
                  [xself]
                    memory > xclose
                    memory > xx
                    memory > xstate
                    seq > @
                      seq
                        xstate.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          xclose.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                        xx.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) 0)))
                        (((unsupported)) ((((xclosing)) ((xx)))) ((xy)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ((xy)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                xtest_closing_error.write
                  [xself]
                    memory > xclose
                    memory > xx
                    memory > xstate
                    seq > @
                      seq
                        xstate.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          xclose.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                        xx.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          (((unsupported)) ((((xclosing)) ((xx)))) ((xy)))
                            seq
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ((xy)))
                              unsupported
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_nullcontext.write
                [xself]
                  memory > xc
                  seq > @
                    seq
                      (((unsupported)) 0)
                      xc.write (((xC)) 0)
                      (((unsupported)) ((((xnullcontext)) ((xc)))) ((xc_in)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xc_in)) ((xc)))
            (((unsupported)) (((xunittest).xTestCase)))
              xtestWithOpen.write
                [xself]
                  memory > xtfn
                  memory > xf
                  seq > @
                    seq
                      xtfn.write ((((xtempfile).xmktemp)) 0)
                      (((unsupported)) 0)
                        seq
                          xf.write "None: is there a None literal in the EO language?"
                          (((unsupported)) ((((xopen)) ((xtfn)) ("w"))) ((xf)))
                            seq
                              bogusForceDataize.write ((((xself).xassertFalse)) (((xf).xclosed)))
                              bogusForceDataize.write ((((xf).xwrite)) ("Boohn"))
                          bogusForceDataize.write ((((xself).xassertTrue)) (((xf).xclosed)))
                          xf.write "None: is there a None literal in the EO language?"
                          (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                            (((unsupported)) ((((xopen)) ((xtfn)) ("r"))) ((xf)))
                              seq
                                bogusForceDataize.write ((((xself).xassertFalse)) (((xf).xclosed)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xread)) 0)) ("Boohn"))
                                unsupported
                          bogusForceDataize.write ((((xself).xassertTrue)) (((xf).xclosed)))
                        bogusForceDataize.write ((((xsupport).xunlink)) ((xtfn)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xboilerPlate.write
                  [xself xlock xlocked]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlocked)) 0)))
                        (((unsupported)) ((xlock)))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xlocked)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlocked)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          (((unsupported)) ((xlock)))
                            seq
                              bogusForceDataize.write ((((xself).xassertTrue)) ((((xlocked)) 0)))
                              unsupported
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xlocked)) 0)))
                xtestWithLock.write
                  [xself]
                    memory > xlock
                    seq > @
                      seq
                        xlock.write ((((xthreading).xLock)) 0)
                        bogusForceDataize.write ((((xself).xboilerPlate)) ((xlock)) (((xlock).xlocked)))
                xtestWithRLock.write
                  [xself]
                    memory > xlock
                    seq > @
                      seq
                        xlock.write ((((xthreading).xRLock)) 0)
                        bogusForceDataize.write ((((xself).xboilerPlate)) ((xlock)) (((xlock).x_is_owned)))
                xtestWithCondition.write
                  [xself]
                    memory > xlock
                    memory > xlocked
                    seq > @
                      seq
                        xlock.write ((((xthreading).xCondition)) 0)
                        xlocked.write
                          []
                            seq > @
                              (((unsupported)) (((((xlock).x_is_owned)) 0)))
                        bogusForceDataize.write ((((xself).xboilerPlate)) ((xlock)) ((xlocked)))
                xtestWithSemaphore.write
                  [xself]
                    memory > xlock
                    memory > xlocked
                    seq > @
                      seq
                        xlock.write ((((xthreading).xSemaphore)) 0)
                        xlocked.write
                          []
                            seq > @
                              ((((xlock).xacquire)) (FALSE)).if
                                seq
                                  bogusForceDataize.write ((((xlock).xrelease)) 0)
                                  (((unsupported)) (FALSE))
                                (((unsupported)) (TRUE))
                        bogusForceDataize.write ((((xself).xboilerPlate)) ((xlock)) ((xlocked)))
                xtestWithBoundedSemaphore.write
                  [xself]
                    memory > xlock
                    memory > xlocked
                    seq > @
                      seq
                        xlock.write ((((xthreading).xBoundedSemaphore)) 0)
                        xlocked.write
                          []
                            seq > @
                              ((((xlock).xacquire)) (FALSE)).if
                                seq
                                  bogusForceDataize.write ((((xlock).xrelease)) 0)
                                  (((unsupported)) (FALSE))
                                (((unsupported)) (TRUE))
                        bogusForceDataize.write ((((xself).xboilerPlate)) ((xlock)) ((xlocked)))
            (((unsupported)) ((xContextDecorator)))
              seq
                unsupported
                xstarted.write FALSE
                xexc.write "None: is there a None literal in the EO language?"
                xcatch.write FALSE
                x__enter__.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xstarted)) (TRUE))
                        (((unsupported)) ((xself)))
                x__exit__.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xexc)) ((xexc)))
                        (((unsupported)) (((xself).xcatch)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_instance_docs.write
                  [xself]
                    memory > xcm_docstring
                    memory > xobj
                    seq > @
                      (((unsupported)) 0)
                        xcm_docstring.write ((xmycontext).x__doc__)
                        xobj.write (((xmycontext)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).x__doc__)) ((xcm_docstring)))
                xtest_contextdecorator.write
                  [xself]
                    memory > xcontext
                    seq > @
                      seq
                        xcontext.write (((xmycontext)) 0)
                        (((unsupported)) ((xcontext)) ((xresult)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((xresult)) ((xcontext)))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((xcontext).xstarted)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcontext).xexc)) ((((unsupported)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_contextdecorator_with_exception.write
                  [xself]
                    memory > xcontext
                    seq > @
                      seq
                        xcontext.write (((xmycontext)) 0)
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xNameError)) ("foo"))))
                          (((unsupported)) ((xcontext)))
                            (((unsupported)) ((((xNameError)) ("foo"))))
                        bogusForceDataize.write ((((xself).xassertIsNotNone)) (((xcontext).xexc)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((xcontext).xexc)) (0))) ((xNameError)))
                        xcontext.write (((xmycontext)) 0)
                        (((unsupported)) (((xcontext).xcatch)) (TRUE))
                        (((unsupported)) ((xcontext)))
                          (((unsupported)) ((((xNameError)) ("foo"))))
                        bogusForceDataize.write ((((xself).xassertIsNotNone)) (((xcontext).xexc)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((xcontext).xexc)) (0))) ((xNameError)))
                xtest_decorator.write
                  [xself]
                    memory > xtest
                    memory > xcontext
                    seq > @
                      seq
                        xcontext.write (((xmycontext)) 0)
                        xtest.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIsNone)) (((xcontext).xexc)))
                                bogusForceDataize.write ((((xself).xassertTrue)) (((xcontext).xstarted)))
                        bogusForceDataize.write (((xtest)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcontext).xexc)) ((((unsupported)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_decorator_with_exception.write
                  [xself]
                    memory > xtest
                    memory > xcontext
                    seq > @
                      seq
                        xcontext.write (((xmycontext)) 0)
                        xtest.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIsNone)) (((xcontext).xexc)))
                                bogusForceDataize.write ((((xself).xassertTrue)) (((xcontext).xstarted)))
                                (((unsupported)) ((((xNameError)) ("foo"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xNameError)) ("foo"))))
                          bogusForceDataize.write (((xtest)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNotNone)) (((xcontext).xexc)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((xcontext).xexc)) (0))) ((xNameError)))
                xtest_decorating_method.write
                  [xself]
                    memory > xtest
                    memory > xcontext
                    memory > xmethod
                    seq > @
                      seq
                        xcontext.write (((xmycontext)) 0)
                        (((unsupported)) ((xobject)))
                          xmethod.write
                            [xself xa xb xc]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xself).xa)) ((xa)))
                                  (((unsupported)) (((xself).xb)) ((xb)))
                                  (((unsupported)) (((xself).xc)) ((xc)))
                        xtest.write (((xTest)) 0)
                        bogusForceDataize.write ((((xtest).xmethod)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xb)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xc)) ("None: is there a None literal in the EO language?"))
                        xtest.write (((xTest)) 0)
                        bogusForceDataize.write ((((xtest).xmethod)) ("a") ("b") ("c"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xa)) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xb)) ("b"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xc)) ("c"))
                        xtest.write (((xTest)) 0)
                        (((unsupported)) (((xtest).xmethod)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xtest).xb)) (2))
                xtest_typo_enter.write
                  [xself]
                    memory > x__unter__
                    memory > x__exit__
                    seq > @
                      seq
                        (((unsupported)) ((xContextDecorator)))
                          seq
                            x__unter__.write
                              [xself]
                                seq > @
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((xmycontext)) 0)))
                xtest_typo_exit.write
                  [xself]
                    memory > x__uxit__
                    memory > x__enter__
                    seq > @
                      seq
                        (((unsupported)) ((xContextDecorator)))
                          seq
                            x__enter__.write
                              [xself]
                                seq > @
                            x__uxit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((xmycontext)) 0)))
                xtest_contextdecorator_as_mixin.write
                  [xself]
                    memory > xstarted
                    memory > xcontext
                    memory > xtest
                    memory > x__exit__
                    memory > x__enter__
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            xstarted.write FALSE
                            xexc.write "None: is there a None literal in the EO language?"
                            x__enter__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xstarted)) (TRUE))
                                    (((unsupported)) ((xself)))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xexc)) ((xexc)))
                        (((unsupported)) ((xsomecontext)) ((xContextDecorator)))
                        xcontext.write (((xmycontext)) 0)
                        xtest.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIsNone)) (((xcontext).xexc)))
                                bogusForceDataize.write ((((xself).xassertTrue)) (((xcontext).xstarted)))
                        bogusForceDataize.write (((xtest)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcontext).xexc)) ((((unsupported)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_contextmanager_as_decorator.write
                  [xself]
                    memory > xtest
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      seq
                        xwoohoo.write
                          [xy]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) ((xy)))
                                (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (999))
                        xstate.write (((unsupported)) 0)
                        xtest.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                                bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                        bogusForceDataize.write (((xtest)) ("something"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) ("something") (999))))
                        xstate.write (((unsupported)) 0)
                        bogusForceDataize.write (((xtest)) ("something else"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) ("something else") (999))))
            (((unsupported)) 0)
              seq
                xexit_stack.write "None: is there a None literal in the EO language?"
                xtest_instance_docs.write
                  [xself]
                    memory > xcm_docstring
                    memory > xobj
                    seq > @
                      (((unsupported)) 0)
                        xcm_docstring.write (((xself).xexit_stack).x__doc__)
                        xobj.write ((((xself).xexit_stack)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).x__doc__)) ((xcm_docstring)))
                xtest_no_resources.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xexit_stack)) 0)))
                xtest_callback.write
                  [xself]
                    memory > xexpected
                    memory > xresult
                    memory > x_exit
                    memory > xf
                    seq > @
                      seq
                        xexpected.write (((unsupported)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xdict)) (1))))) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (1))))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ((xdict)) (1))))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ((xdict)) (3) (4))))))
                        xresult.write (((unsupported)) 0)
                        x_exit.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                bogusForceDataize.write ((((xresult).xappend)) ((((unsupported)) ((xargs)) ((xkwds)))))
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xargs)) ((xkwds)))) ((((xreversed)) ((xexpected)))))
                              seq
                                ((xargs).and (xkwds)).if
                                  xf.write ((((xstack).xcallback)) ((x_exit)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwds)))))
                                  (xargs).if
                                    xf.write ((((xstack).xcallback)) ((x_exit)) ((((unsupported)) ((xargs)))))
                                    (xkwds).if
                                      xf.write ((((xstack).xcallback)) ((x_exit)) ((((unsupported)) ((xkwds)))))
                                      xf.write ((((xstack).xcallback)) ((x_exit)))
                                bogusForceDataize.write ((((xself).xassertIs)) ((xf)) ((x_exit)))
                            (((unsupported)) ((xwrapper)) (((xstack).x_exit_callbacks)))
                              seq
                                bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xwrapper)) (1)).x__wrapped__)) ((x_exit)))
                                bogusForceDataize.write ((((xself).xassertNotEqual)) (((((unsupported)) ((xwrapper)) (1)).x__name__)) (((x_exit).x__name__)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) (((((unsupported)) ((xwrapper)) (1)).x__doc__)) (((x_exit).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((xexpected)))
                        xresult.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              (((unsupported)) (((xstack).xcallback)) (1))
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              (((unsupported)) ((((xself).xexit_stack).xcallback)) (2))
                            (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                              (((unsupported)) (((xstack).xcallback)) ((x_exit)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("arg") (3))))))))
                xtest_push.write
                  [xself]
                    memory > xcm
                    memory > x_expect_ok
                    memory > xexc_raised
                    memory > x__exit__
                    memory > x__enter__
                    memory > x_expect_exc
                    memory > x__init__
                    memory > x_suppress_exc
                    seq > @
                      seq
                        xexc_raised.write (xZeroDivisionError)
                        x_expect_exc.write
                          [xexc_type xexc xexc_tb]
                            seq > @
                              bogusForceDataize.write ((((xself).xassertIs)) ((xexc_type)) ((xexc_raised)))
                        x_suppress_exc.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (TRUE))
                        x_expect_ok.write
                          [xexc_type xexc xexc_tb]
                            seq > @
                              seq
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc_type)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc_tb)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xcheck_exc]
                                seq > @
                                  (((unsupported)) (((xself).xcheck_exc)) ((xcheck_exc)))
                            x__enter__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write ((((xself).xfail)) ("Should not be called!"))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xself).xcheck_exc)) ((((unsupported)) ((xexc_details)))))
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            bogusForceDataize.write ((((xstack).xpush)) ((x_expect_ok)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_ok)))
                            xcm.write (((xExitCM)) ((x_expect_ok)))
                            bogusForceDataize.write ((((xstack).xpush)) ((xcm)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xstack).xpush)) ((x_suppress_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_suppress_exc)))
                            xcm.write (((xExitCM)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xstack).xpush)) ((xcm)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xstack).xpush)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_exc)))
                            bogusForceDataize.write ((((xstack).xpush)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_exc)))
                            unsupported
                xtest_enter_context.write
                  [xself]
                    memory > xcm
                    memory > x_exit
                    memory > x__exit__
                    memory > x__enter__
                    memory > xresult
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__enter__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write ((((xresult).xappend)) (1))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (3))
                        xresult.write (((unsupported)) 0)
                        xcm.write (((xTestCM)) 0)
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            x_exit.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (4))
                            bogusForceDataize.write ((((xself).xassertIsNotNone)) ((x_exit)))
                            bogusForceDataize.write ((((xstack).xenter_context)) ((xcm)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xresult).xappend)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) (1) (2) (3) (4))))
                xtest_close.write
                  [xself]
                    memory > xresult
                    memory > x_exit
                    seq > @
                      seq
                        xresult.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            x_exit.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (1))
                            bogusForceDataize.write ((((xself).xassertIsNotNone)) ((x_exit)))
                            bogusForceDataize.write ((((xstack).xclose)) 0)
                            bogusForceDataize.write ((((xresult).xappend)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) (1) (2))))
                xtest_pop_all.write
                  [xself]
                    memory > x_exit
                    memory > xnew_stack
                    memory > xresult
                    seq > @
                      seq
                        xresult.write (((unsupported)) 0)
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            x_exit.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (3))
                            bogusForceDataize.write ((((xself).xassertIsNotNone)) ((x_exit)))
                            xnew_stack.write ((((xstack).xpop_all)) 0)
                            bogusForceDataize.write ((((xresult).xappend)) (1))
                        bogusForceDataize.write ((((xresult).xappend)) (2))
                        bogusForceDataize.write ((((xnew_stack).xclose)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) (1) (2) (3))))
                xtest_exit_raise.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            bogusForceDataize.write ((((xstack).xpush)) ((((unsupported)) (FALSE))))
                            unsupported
                xtest_exit_suppress.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                        seq
                          bogusForceDataize.write ((((xstack).xpush)) ((((unsupported)) (TRUE))))
                          unsupported
                xtest_exit_exception_chaining_reference.write
                  [xself]
                    memory > xinner_exc
                    memory > x__exit__
                    memory > x__enter__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xexc]
                                seq > @
                                  (((unsupported)) (((xself).xexc)) ((xexc)))
                            x__enter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xexc)))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xouter xinner]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xouter)) ((xouter)))
                                    (((unsupported)) (((xself).xinner)) ((xinner)))
                            x__enter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) 0)
                                      (((unsupported)) (((xself).xinner)))
                                      (((unsupported)) (((xself).xouter)))
                        (((unsupported)) 0)
                          seq
                            x__enter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__exit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((((xtype)) ((xself))).xsaved_details)) ((xexc_details)))
                                    (((unsupported)) (TRUE))
                        (((unsupported)) ((xIndexError)))
                          (((unsupported)) ((((xRaiseExc)) ((xIndexError)))))
                            (((unsupported)) ((((xRaiseExcWithContext)) ((xKeyError)) ((xAttributeError)))))
                              (((unsupported)) ((((xSuppressExc)) 0)))
                                (((unsupported)) ((((xRaiseExc)) ((xValueError)))))
                                  unsupported
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__context__)) ((xKeyError)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xexc).x__context__).x__context__)) ((xAttributeError)))
                            bogusForceDataize.write ((((xself).xassertIsNone)) (((((xexc).x__context__).x__context__).x__context__)))
                          bogusForceDataize.write ((((xself).xfail)) ("Expected IndexError, but no exception was raised"))
                        xinner_exc.write (((unsupported)) (((xSuppressExc).xsaved_details)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinner_exc)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xinner_exc).x__context__)) ((xZeroDivisionError)))
                xtest_exit_exception_chaining.write
                  [xself]
                    memory > xinner_exc
                    memory > xsaved_details
                    memory > xsuppress_exc
                    memory > xraise_exc
                    seq > @
                      seq
                        xraise_exc.write
                          [xexc]
                            seq > @
                              (((unsupported)) ((xexc)))
                        xsaved_details.write "None: is there a None literal in the EO language?"
                        xsuppress_exc.write
                          []
                            memory > xsaved_details
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                xsaved_details.write (xexc_details)
                                (((unsupported)) (TRUE))
                        (((unsupported)) ((xIndexError)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xIndexError)))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xKeyError)))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xAttributeError)))
                              bogusForceDataize.write ((((xstack).xpush)) ((xsuppress_exc)))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xValueError)))
                              unsupported
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__context__)) ((xKeyError)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xexc).x__context__).x__context__)) ((xAttributeError)))
                            bogusForceDataize.write ((((xself).xassertIsNone)) (((((xexc).x__context__).x__context__).x__context__)))
                          bogusForceDataize.write ((((xself).xfail)) ("Expected IndexError, but no exception was raised"))
                        xinner_exc.write (((unsupported)) ((xsaved_details)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinner_exc)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xinner_exc).x__context__)) ((xZeroDivisionError)))
                xtest_exit_exception_non_suppressing.write
                  [xself]
                    memory > xsuppress_exc
                    memory > xraise_exc
                    seq > @
                      seq
                        xraise_exc.write
                          [xexc]
                            seq > @
                              (((unsupported)) ((xexc)))
                        xsuppress_exc.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (TRUE))
                        (((unsupported)) ((xException)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xcallback)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xIndexError)))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((xexc)) ((xIndexError)))
                          bogusForceDataize.write ((((xself).xfail)) ("Expected IndexError, but no exception was raised"))
                        (((unsupported)) ((xException)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xKeyError)))
                              bogusForceDataize.write ((((xstack).xpush)) ((xsuppress_exc)))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_exc)) ((xIndexError)))
                          bogusForceDataize.write ((((xself).xassertIsInstance)) ((xexc)) ((xKeyError)))
                          bogusForceDataize.write ((((xself).xfail)) ("Expected KeyError, but no exception was raised"))
                xtest_exit_exception_with_correct_context.write
                  [xself]
                    memory > xgets_the_context_right
                    memory > xexc3
                    memory > xexc1
                    memory > xexc4
                    memory > xexc2
                    seq > @
                      seq
                        xgets_the_context_right.write
                          [xexc]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                                  (((unsupported)) ((xexc)))
                        xexc1.write (((xException)) (1))
                        xexc2.write (((xException)) (2))
                        xexc3.write (((xException)) (3))
                        xexc4.write (((xException)) (4))
                        (((unsupported)) ((xException)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xenter_context)) ((((xgets_the_context_right)) ((xexc4)))))
                              bogusForceDataize.write ((((xstack).xenter_context)) ((((xgets_the_context_right)) ((xexc3)))))
                              bogusForceDataize.write ((((xstack).xenter_context)) ((((xgets_the_context_right)) ((xexc2)))))
                              (((unsupported)) ((xexc1)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((xexc)) ((xexc4)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((xexc).x__context__)) ((xexc3)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xexc).x__context__).x__context__)) ((xexc2)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((xexc).x__context__).x__context__).x__context__)) ((xexc1)))
                            bogusForceDataize.write ((((xself).xassertIsNone)) ((((((xexc).x__context__).x__context__).x__context__).x__context__)))
                xtest_exit_exception_with_existing_context.write
                  [xself]
                    memory > xraise_nested
                    memory > xexc3
                    memory > xexc1
                    memory > xexc5
                    memory > xexc4
                    memory > xexc2
                    seq > @
                      seq
                        xraise_nested.write
                          [xinner_exc xouter_exc]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xinner_exc)))
                                (((unsupported)) ((xouter_exc)))
                        xexc1.write (((xException)) (1))
                        xexc2.write (((xException)) (2))
                        xexc3.write (((xException)) (3))
                        xexc4.write (((xException)) (4))
                        xexc5.write (((xException)) (5))
                        (((unsupported)) ((xException)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_nested)) ((xexc4)) ((xexc5)))
                              bogusForceDataize.write ((((xstack).xcallback)) ((xraise_nested)) ((xexc2)) ((xexc3)))
                              (((unsupported)) ((xexc1)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((xexc)) ((xexc5)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((xexc).x__context__)) ((xexc4)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xexc).x__context__).x__context__)) ((xexc3)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((xexc).x__context__).x__context__).x__context__)) ((xexc2)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((((xexc).x__context__).x__context__).x__context__).x__context__)) ((xexc1)))
                            bogusForceDataize.write ((((xself).xassertIsNone)) (((((((xexc).x__context__).x__context__).x__context__).x__context__).x__context__)))
                xtest_body_exception_suppress.write
                  [xself]
                    memory > xsuppress_exc
                    seq > @
                      seq
                        xsuppress_exc.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (TRUE))
                        (((unsupported)) ((xIndexError)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xpush)) ((xsuppress_exc)))
                              unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("Expected no exception, got IndexError"))
                xtest_exit_exception_chaining_suppress.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                        seq
                          bogusForceDataize.write ((((xstack).xpush)) ((((unsupported)) (TRUE))))
                          bogusForceDataize.write ((((xstack).xpush)) ((((unsupported)) ((1.div 0)))))
                          bogusForceDataize.write ((((xstack).xpush)) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)) (1))))))
                xtest_excessive_nesting.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                        (((unsupported)) ((xi)) ((((xrange)) (10000))))
                          bogusForceDataize.write ((((xstack).xcallback)) ((xint)))
                xtest_instance_bypass.write
                  [xself]
                    memory > xcm
                    memory > xstack
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        xcm.write (((xExample)) 0)
                        (((unsupported)) (((xcm).x__exit__)) ((((xobject)) 0)))
                        xstack.write ((((xself).xexit_stack)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) (((xstack).xenter_context)) ((xcm)))
                        bogusForceDataize.write ((((xstack).xpush)) ((xcm)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((xcm)))
                xtest_dont_reraise_RuntimeError.write
                  [xself]
                    memory > xfirst
                    memory > xexc
                    memory > xsecond
                    seq > @
                      seq
                        (((unsupported)) ((xException)))
                        (((unsupported)) ((xRuntimeError)))
                        xsecond.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xException)))
                                  (((unsupported)) (1))
                                  (((unsupported)) ((((xUniqueException)) ("new exception"))) ((xexc)))
                        xfirst.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xException)))
                                  (((unsupported)) (1))
                                  (((unsupported)) ((xexc)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xUniqueException)))) ((xerr_ctx)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xes_ctx)))
                            seq
                              bogusForceDataize.write ((((xes_ctx).xenter_context)) ((((xsecond)) 0)))
                              bogusForceDataize.write ((((xes_ctx).xenter_context)) ((((xfirst)) 0)))
                              (((unsupported)) ((((xUniqueRuntimeError)) ("please no infinite loop."))))
                        xexc.write ((xerr_ctx).xexception)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xexc)) ((xUniqueException)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__context__)) ((xUniqueRuntimeError)))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xexc).x__context__).x__context__)))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xexc).x__context__).x__cause__)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xexc).x__cause__)) (((xexc).x__context__)))
            (((unsupported)) ((xTestBaseExitStack)) (((xunittest).xTestCase)))
              xexit_stack.write (xExitStack)
            (((unsupported)) 0)
              seq
                xredirect_stream.write "None: is there a None literal in the EO language?"
                xorig_stream.write "None: is there a None literal in the EO language?"
                xtest_instance_docs.write
                  [xself]
                    memory > xcm_docstring
                    memory > xobj
                    seq > @
                      (((unsupported)) 0)
                        xcm_docstring.write (((xself).xredirect_stream).x__doc__)
                        xobj.write ((((xself).xredirect_stream)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).x__doc__)) ((xcm_docstring)))
                xtest_no_redirect_in_init.write
                  [xself]
                    memory > xorig_stdout
                    seq > @
                      seq
                        xorig_stdout.write (((xgetattr)) ((xsys)) (((xself).xorig_stream)))
                        bogusForceDataize.write ((((xself).xredirect_stream)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))) ((xorig_stdout)))
                xtest_redirect_to_string_io.write
                  [xself]
                    memory > xs
                    memory > xmsg
                    memory > xorig_stdout
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xio).xStringIO)) 0)
                        xmsg.write "Consider an API like help(), which prints directly to stdout"
                        xorig_stdout.write (((xgetattr)) ((xsys)) (((xself).xorig_stream)))
                        (((unsupported)) (((((xself).xredirect_stream)) ((xf)))))
                          (((unsupported)) ((xprint)) ((xmsg)) ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))) ((xorig_stdout)))
                        xs.write (((((((xf).xgetvalue)) 0).xstrip)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xmsg)))
                xtest_enter_result_is_target.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xio).xStringIO)) 0)
                        (((unsupported)) (((((xself).xredirect_stream)) ((xf)))) ((xenter_result)))
                          bogusForceDataize.write ((((xself).xassertIs)) ((xenter_result)) ((xf)))
                xtest_cm_is_reusable.write
                  [xself]
                    memory > xs
                    memory > xwrite_to_f
                    memory > xorig_stdout
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xio).xStringIO)) 0)
                        xwrite_to_f.write ((((xself).xredirect_stream)) ((xf)))
                        xorig_stdout.write (((xgetattr)) ((xsys)) (((xself).xorig_stream)))
                        (((unsupported)) ((xwrite_to_f)))
                          (((unsupported)) ((xprint)) ("Hello") (" ") ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))))
                        (((unsupported)) ((xwrite_to_f)))
                          (((unsupported)) ((xprint)) ("World!") ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))) ((xorig_stdout)))
                        xs.write ((((xf).xgetvalue)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ("Hello World!n"))
                xtest_cm_is_reentrant.write
                  [xself]
                    memory > xs
                    memory > xwrite_to_f
                    memory > xorig_stdout
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xio).xStringIO)) 0)
                        xwrite_to_f.write ((((xself).xredirect_stream)) ((xf)))
                        xorig_stdout.write (((xgetattr)) ((xsys)) (((xself).xorig_stream)))
                        (((unsupported)) ((xwrite_to_f)))
                          seq
                            (((unsupported)) ((xprint)) ("Hello") (" ") ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))))
                            (((unsupported)) ((xwrite_to_f)))
                              (((unsupported)) ((xprint)) ("World!") ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetattr)) ((xsys)) (((xself).xorig_stream)))) ((xorig_stdout)))
                        xs.write ((((xf).xgetvalue)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ("Hello World!n"))
            (((unsupported)) ((xTestRedirectStream)) (((xunittest).xTestCase)))
              seq
                xredirect_stream.write (xredirect_stdout)
                xorig_stream.write "stdout"
            (((unsupported)) ((xTestRedirectStream)) (((xunittest).xTestCase)))
              seq
                xredirect_stream.write (xredirect_stderr)
                xorig_stream.write "stderr"
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_instance_docs.write
                  [xself]
                    memory > xcm_docstring
                    memory > xobj
                    seq > @
                      (((unsupported)) 0)
                        xcm_docstring.write ((xsuppress).x__doc__)
                        xobj.write (((xsuppress)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).x__doc__)) ((xcm_docstring)))
                xtest_no_result_from_enter.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xsuppress)) ((xValueError)))) ((xenter_result)))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((xenter_result)))
                xtest_no_exception.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xsuppress)) ((xValueError)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) (2) (5))) (32))
                xtest_exact_exception.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xsuppress)) ((xTypeError)))))
                        bogusForceDataize.write (((xlen)) (5))
                xtest_exception_hierarchy.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xsuppress)) ((xLookupError)))))
                        (((unsupported)) ("Hello") (50))
                xtest_other_exception.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                        (((unsupported)) ((((xsuppress)) ((xTypeError)))))
                          unsupported
                xtest_no_args.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                        (((unsupported)) ((((xsuppress)) 0)))
                          unsupported
                xtest_multiple_exception_args.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xsuppress)) ((xZeroDivisionError)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) ((((xsuppress)) ((xZeroDivisionError)) ((xTypeError)))))
                          bogusForceDataize.write (((xlen)) (5))
                xtest_cm_is_reentrant.write
                  [xself]
                    memory > xouter_continued
                    memory > xignore_exceptions
                    seq > @
                      seq
                        xignore_exceptions.write (((xsuppress)) ((xException)))
                        (((unsupported)) ((xignore_exceptions)))
                        (((unsupported)) ((xignore_exceptions)))
                          bogusForceDataize.write (((xlen)) (5))
                        (((unsupported)) ((xignore_exceptions)))
                          seq
                            (((unsupported)) ((xignore_exceptions)))
                              bogusForceDataize.write (((xlen)) (5))
                            xouter_continued.write TRUE
                            unsupported
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xouter_continued)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)