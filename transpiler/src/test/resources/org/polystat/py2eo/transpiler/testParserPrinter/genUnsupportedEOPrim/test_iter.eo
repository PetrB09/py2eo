memory > xk
memory > xseq
memory > xValueError
memory > xAssertionError
memory > xrange
memory > xit
memory > xsys
memory > xiter
memory > xfilter
memory > xletter
memory > xC
memory > xrun_unittest
memory > xIterator
memory > xmin
memory > xc
memory > xcount
memory > xBadIterator
memory > xpickle
memory > xSeqIter
memory > xlist
memory > xRuntimeError
memory > xBasicIterClass
memory > xenumerate
memory > xcheck_free_after_iterating
memory > xstr
memory > xOhPhooey
memory > xTestCase
memory > xcountOf
memory > xIteratingSequenceClass
memory > xb
memory > xZeroDivisionError
memory > xcollections
memory > xIndexError
memory > xStopIteration
memory > xNoIterClass
memory > xproto
memory > xSequenceClass
memory > xsc5
memory > xBadIterableClass
memory > xmax
memory > xWhatever
memory > xopen
memory > xBoolean
memory > xMySequenceClass
memory > xtype
memory > xIntsFrom
memory > xSeq
memory > xOverflowError
memory > xx
memory > xi
memory > xtuple
memory > xIterClass
memory > xGuess3Len5
memory > xindexOf
memory > xNoGuessLen5
memory > xunlink
memory > xargs
memory > xOSError
memory > xTESTFN
memory > xval
memory > xUnlimitedSequenceClass
memory > xv
memory > xDefaultIterClass
memory > xzip
memory > xunittest
memory > xy
memory > xnext
memory > xmap
memory > xobject
memory > xchunk
memory > xtyp
memory > xline
memory > xlen
memory > xGuess30Len5
memory > xj
memory > xisinstance
memory > xTypeError
memory > x__name__
memory > xa
[] > test_iter
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_iter_range
        memory > x__iter__
        memory > xtest_iter_for_loop
        memory > xtest_free_after_iterating
        memory > xtest_builtin_max_min
        memory > xtest_iter_function_stop
        memory > xtest_sinkstate_sequence
        memory > xtest_iter_string
        memory > xtest_writelines
        memory > xtest_builtin_map
        memory > xtest_ref_counting_behavior
        memory > xtest_builtin_list
        memory > xtest_iter_class_iter
        memory > xtest_unicode_join_endcase
        memory > xcheck_iterator
        memory > xtest_nested_comprehensions_for
        memory > xtest_iter_basic
        memory > xtest_nested_comprehensions_iter
        memory > xtest_iter_file
        memory > xtest_mutating_seq_class_iter_pickle
        memory > xtest_main
        memory > xtest_iter_class_for
        memory > xtest_unpack_iter
        memory > x__getitem__
        memory > xtest_sinkstate_callable
        memory > xtest_sinkstate_range
        memory > xtest_iter_overflow
        memory > xtest_extending_list_with_iterator_does_not_segfault
        memory > xtest_sinkstate_yield
        memory > xcheck_pickle
        memory > xtest_sinkstate_string
        memory > xtest_sinkstate_enumerate
        memory > xtest_builtin_filter
        memory > xtest_iter_independence
        memory > xtest_iter_empty
        memory > xtest_new_style_iter_class
        memory > xtest_iter_tuple
        memory > xtest_error_iter
        memory > xtest_mutating_seq_class_exhausted_iter
        memory > xcheck_for_loop
        memory > x__next__
        memory > xtest_exception_sequence
        memory > xtest_sinkstate_tuple
        memory > xtest_iter_neg_setstate
        memory > xtest_seq_class_iter
        memory > xtest_iter_big_range
        memory > xtest_seq_class_for
        memory > xTRIPLETS
        memory > xtest_builtin_tuple
        memory > xtest_iter_function
        memory > xtest_exception_function
        memory > xtest_countOf
        memory > xtest_indexOf
        memory > xtest_sinkstate_list
        memory > xtest_iter_dict
        memory > xtest_iter_callable
        memory > x__init__
        memory > xtest_3720
        memory > xtest_builtin_zip
        memory > xtest_sinkstate_dict
        memory > xtest_stop_sequence
        memory > xtest_in_and_not_in
        memory > xtest_iter_idempotency
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xTRIPLETS.write (((unsupported)) ((((unsupported)) (0) (0) (0))) ((((unsupported)) (0) (0) (1))) ((((unsupported)) (0) (0) (2))) ((((unsupported)) (0) (1) (0))) ((((unsupported)) (0) (1) (1))) ((((unsupported)) (0) (1) (2))) ((((unsupported)) (0) (2) (0))) ((((unsupported)) (0) (2) (1))) ((((unsupported)) (0) (2) (2))) ((((unsupported)) (1) (0) (0))) ((((unsupported)) (1) (0) (1))) ((((unsupported)) (1) (0) (2))) ((((unsupported)) (1) (1) (0))) ((((unsupported)) (1) (1) (1))) ((((unsupported)) (1) (1) (2))) ((((unsupported)) (1) (2) (0))) ((((unsupported)) (1) (2) (1))) ((((unsupported)) (1) (2) (2))) ((((unsupported)) (2) (0) (0))) ((((unsupported)) (2) (0) (1))) ((((unsupported)) (2) (0) (2))) ((((unsupported)) (2) (1) (0))) ((((unsupported)) (2) (1) (1))) ((((unsupported)) (2) (1) (2))) ((((unsupported)) (2) (2) (0))) ((((unsupported)) (2) (2) (1))) ((((unsupported)) (2) (2) (2))))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xn)) ((xn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__next__.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write ((xself).xi)
                        ((xres).geq ((xself).xn)).if
                          (((unsupported)) ((xStopIteration)))
                        (((unsupported)) (((xself).xi)) (((xres).add 1)))
                        (((unsupported)) ((xres)))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xself)))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xn]
                    seq > @
                      (((unsupported)) (((xself).xn)) ((xn)))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xBasicIterClass)) (((xself).xn)))))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xn]
                    seq > @
                      (((unsupported)) (((xself).xn)) ((xn)))
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)) (0) ((xi)) (((xself).xn))).if
                        (((unsupported)) ((xi)))
                        (((unsupported)) ((xIndexError)))
            (((unsupported)) 0)
              x__getitem__.write
                [xself xi]
                  seq > @
                    (((unsupported)) ((xi)))
            (((unsupported)) 0)
            (((unsupported)) 0)
              seq
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)) ((xi)))
                x__iter__.write "None: is there a None literal in the EO language?"
            (((unsupported)) 0)
              x__iter__.write
                [xself]
                  seq > @
                    (((unsupported)) ((xZeroDivisionError)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xcheck_iterator.write
                  [xself xit xseq xpickle]
                    memory > xval
                    memory > xres
                    seq > @
                      (((unsupported)) 0)
                        (xpickle).if
                          bogusForceDataize.write ((((xself).xcheck_pickle)) ((xit)) ((xseq)))
                        xres.write (((unsupported)) 0)
                        while.
                          1
                          [unused]
                            seq > @
                              seq
                                (((unsupported)) ((xStopIteration)))
                                  xval.write (((xnext)) ((xit)))
                                  (((unsupported)) 0)
                                bogusForceDataize.write ((((xres).xappend)) ((xval)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((xseq)))
                xcheck_for_loop.write
                  [xself xexpr xseq xpickle]
                    memory > xres
                    seq > @
                      (((unsupported)) 0)
                        (xpickle).if
                          bogusForceDataize.write ((((xself).xcheck_pickle)) ((((xiter)) ((xexpr)))) ((xseq)))
                        xres.write (((unsupported)) 0)
                        (((unsupported)) ((xval)) ((xexpr)))
                          bogusForceDataize.write ((((xres).xappend)) ((xval)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((xseq)))
                xcheck_pickle.write
                  [xself xitorg xseq]
                    memory > xd
                    memory > xit
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        seq
                          xd.write ((((xpickle).xdumps)) ((xitorg)) ((xproto)))
                          xit.write ((((xpickle).xloads)) ((xd)))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((xit)) ((((xcollections).xabc).xIterator)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((xseq)))
                          xit.write ((((xpickle).xloads)) ((xd)))
                          (((unsupported)) ((xStopIteration)))
                            bogusForceDataize.write (((xnext)) ((xit)))
                            (((unsupported)) 0)
                          xd.write ((((xpickle).xdumps)) ((xit)) ((xproto)))
                          xit.write ((((xpickle).xloads)) ((xd)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) ((xseq)) ((((unsupported)) (1))))))
                xtest_iter_basic.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_iterator)) ((((xiter)) ((((xrange)) (10))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_iter_idempotency.write
                  [xself]
                    memory > xit2
                    memory > xseq
                    memory > xit
                    seq > @
                      seq
                        xseq.write (((xlist)) ((((xrange)) (10))))
                        xit.write (((xiter)) ((xseq)))
                        xit2.write (((xiter)) ((xit)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) ((xit)) ((xit2)))))
                xtest_iter_for_loop.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ((((xrange)) (10))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_iter_independence.write
                  [xself]
                    memory > xseq
                    memory > xres
                    seq > @
                      seq
                        xseq.write (((xrange)) (3))
                        xres.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xiter)) ((xseq)))))
                          (((unsupported)) ((xj)) ((((xiter)) ((xseq)))))
                            (((unsupported)) ((xk)) ((((xiter)) ((xseq)))))
                              bogusForceDataize.write ((((xres).xappend)) ((((unsupported)) ((xi)) ((xj)) ((xk)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((xTRIPLETS)))
                xtest_nested_comprehensions_iter.write
                  [xself]
                    memory > xseq
                    memory > xres
                    seq > @
                      seq
                        xseq.write (((xrange)) (3))
                        xres.write (((unsupported)) ((((unsupported)) ((xi)) ((xj)) ((xk)))) ((xi)) ((((xiter)) ((xseq)))) ((xj)) ((((xiter)) ((xseq)))) ((xk)) ((((xiter)) ((xseq)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((xTRIPLETS)))
                xtest_nested_comprehensions_for.write
                  [xself]
                    memory > xseq
                    memory > xres
                    seq > @
                      seq
                        xseq.write (((xrange)) (3))
                        xres.write (((unsupported)) ((((unsupported)) ((xi)) ((xj)) ((xk)))) ((xi)) ((xseq)) ((xj)) ((xseq)) ((xk)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((xTRIPLETS)))
                xtest_iter_class_for.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xIteratingSequenceClass)) (10))) ((((xlist)) ((((xrange)) (10))))))
                xtest_iter_class_iter.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_iterator)) ((((xiter)) ((((xIteratingSequenceClass)) (10))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_seq_class_for.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xSequenceClass)) (10))) ((((xlist)) ((((xrange)) (10))))))
                xtest_seq_class_iter.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_iterator)) ((((xiter)) ((((xSequenceClass)) (10))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_mutating_seq_class_iter_pickle.write
                  [xself]
                    memory > xitorig
                    memory > xd
                    memory > xorig
                    seq > @
                      seq
                        xorig.write (((xSequenceClass)) (5))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xitorig.write (((xiter)) ((xorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xseq)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) (((xseq).xn)) (7))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((xlist)) ((((xrange)) (7))))))
                            bogusForceDataize.write (((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xseq)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) (((xseq).xn)) (7))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((xlist)) ((((xrange)) (1) (7))))))
                            (((unsupported)) ((xi)) ((((xrange)) (1) (5))))
                              bogusForceDataize.write (((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xseq)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) (((xseq).xn)) (7))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((xlist)) ((((xrange)) (5) (7))))))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xStopIteration)) ((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xseq)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) (((xseq).xn)) (7))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((xit)) ((((xcollections).xabc).xIterator)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) 0)))
                xtest_mutating_seq_class_exhausted_iter.write
                  [xself]
                    memory > xexhit
                    memory > xempit
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xSequenceClass)) (5))
                        xexhit.write (((xiter)) ((xa)))
                        xempit.write (((xiter)) ((xa)))
                        (((unsupported)) ((xx)) ((xexhit)))
                          bogusForceDataize.write (((xnext)) ((xempit)))
                        (((unsupported)) (((xa).xn)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xexhit)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xempit)))) ((((unsupported)) (5) (6))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xa)))) ((((unsupported)) (0) (1) (2) (3) (4) (5) (6))))
                xtest_new_style_iter_class.write
                  [xself]
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          x__iter__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xself)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xiter)) ((((xIterClass)) 0)))
                xtest_iter_callable.write
                  [xself]
                    memory > x__init__
                    memory > x__call__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xi)) (0))
                            x__call__.write
                              [xself]
                                memory > xi
                                seq > @
                                  seq
                                    xi.write ((xself).xi)
                                    (((unsupported)) (((xself).xi)) (((xi).add 1)))
                                    ((xi).greater 100).if
                                      (((unsupported)) ((xIndexError)))
                                    (((unsupported)) ((xi)))
                        (((unsupported)) (((xself).xcheck_iterator)) ((((xiter)) ((((xC)) 0)) (10))) ((((xlist)) ((((xrange)) (10))))) (FALSE))
                xtest_iter_function.write
                  [xself]
                    memory > xspam
                    seq > @
                      seq
                        xspam.write
                          [xstate]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((unsupported)) ((xstate)) (0))
                                (((unsupported)) ((((unsupported)) ((xstate)) (0))) (((xi).add 1)))
                                (((unsupported)) ((xi)))
                        (((unsupported)) (((xself).xcheck_iterator)) ((((xiter)) ((xspam)) (10))) ((((xlist)) ((((xrange)) (10))))) (FALSE))
                xtest_iter_function_stop.write
                  [xself]
                    memory > xspam
                    seq > @
                      seq
                        xspam.write
                          [xstate]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((unsupported)) ((xstate)) (0))
                                ((xi).eq 10).if
                                  (((unsupported)) ((xStopIteration)))
                                (((unsupported)) ((((unsupported)) ((xstate)) (0))) (((xi).add 1)))
                                (((unsupported)) ((xi)))
                        (((unsupported)) (((xself).xcheck_iterator)) ((((xiter)) ((xspam)) (20))) ((((xlist)) ((((xrange)) (10))))) (FALSE))
                xtest_exception_function.write
                  [xself]
                    memory > xspam
                    memory > xres
                    seq > @
                      seq
                        xspam.write
                          [xstate]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((unsupported)) ((xstate)) (0))
                                (((unsupported)) ((((unsupported)) ((xstate)) (0))) (((xi).add 1)))
                                ((xi).eq 10).if
                                  (((unsupported)) ((xRuntimeError)))
                                (((unsupported)) ((xi)))
                        xres.write (((unsupported)) 0)
                        (((unsupported)) ((xRuntimeError)))
                          (((unsupported)) ((xx)) ((((xiter)) ((xspam)) (20))))
                            bogusForceDataize.write ((((xres).xappend)) ((xx)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((xlist)) ((((xrange)) (10))))))
                          bogusForceDataize.write ((((xself).xfail)) ("should have raised RuntimeError"))
                xtest_exception_sequence.write
                  [xself]
                    memory > x__getitem__
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)) ((xSequenceClass)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  ((xi).eq 10).if
                                    (((unsupported)) ((xRuntimeError)))
                                  (((unsupported)) (((((xSequenceClass).x__getitem__)) ((xself)) ((xi)))))
                        xres.write (((unsupported)) 0)
                        (((unsupported)) ((xRuntimeError)))
                          (((unsupported)) ((xx)) ((((xMySequenceClass)) (20))))
                            bogusForceDataize.write ((((xres).xappend)) ((xx)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((xlist)) ((((xrange)) (10))))))
                          bogusForceDataize.write ((((xself).xfail)) ("should have raised RuntimeError"))
                xtest_stop_sequence.write
                  [xself]
                    memory > x__getitem__
                    seq > @
                      seq
                        (((unsupported)) ((xSequenceClass)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  ((xi).eq 10).if
                                    (((unsupported)) ((xStopIteration)))
                                  (((unsupported)) (((((xSequenceClass).x__getitem__)) ((xself)) ((xi)))))
                        (((unsupported)) (((xself).xcheck_for_loop)) ((((xMySequenceClass)) (20))) ((((xlist)) ((((xrange)) (10))))) (FALSE))
                xtest_iter_big_range.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ((((xrange)) (10000))))) ((((xlist)) ((((xrange)) (10000))))))
                xtest_iter_empty.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                xtest_iter_tuple.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ((((unsupported)) (0) (1) (2) (3) (4) (5) (6) (7) (8) (9))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_iter_range.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ((((xrange)) (10))))) ((((xlist)) ((((xrange)) (10))))))
                xtest_iter_string.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_for_loop)) ((((xiter)) ("abcde"))) ((((unsupported)) ("a") ("b") ("c") ("d") ("e"))))
                xtest_iter_dict.write
                  [xself]
                    memory > xdict
                    seq > @
                      seq
                        xdict.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          (((unsupported)) ((((unsupported)) ((xdict)) ((xi)))) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xcheck_for_loop)) ((xdict)) ((((xlist)) (((((xdict).xkeys)) 0)))))
                xtest_iter_file.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xi)) ((((xrange)) (5))))
                            bogusForceDataize.write ((((xf).xwrite)) (("%dn".mod (xi))))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) (((xself).xcheck_for_loop)) ((xf)) ((((unsupported)) ("0n") ("1n") ("2n") ("3n") ("4n"))) (FALSE))
                            (((unsupported)) (((xself).xcheck_for_loop)) ((xf)) ((((unsupported)) 0)) (FALSE))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_builtin_list.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xSequenceClass)) (5))))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xSequenceClass)) (0))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xd)))) ((((xlist)) (((((xd).xkeys)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xlist)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xlist)) (42))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xi)) ((((xrange)) (5))))
                            bogusForceDataize.write ((((xf).xwrite)) (("%dn".mod (xi))))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xf)))) ((((unsupported)) ("0n") ("1n") ("2n") ("3n") ("4n"))))
                            bogusForceDataize.write ((((xf).xseek)) (0) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xf)))) ((((unsupported)) ("0n") ("1n") ("2n") ("3n") ("4n"))))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_builtin_tuple.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((((xSequenceClass)) (5))))) ((((unsupported)) (0) (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((((xSequenceClass)) (0))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ("abc"))) ((((unsupported)) ("a") ("b") ("c"))))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xd)))) ((((xtuple)) (((((xd).xkeys)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xtuple)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xtuple)) (42))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xi)) ((((xrange)) (5))))
                            bogusForceDataize.write ((((xf).xwrite)) (("%dn".mod (xi))))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xf)))) ((((unsupported)) ("0n") ("1n") ("2n") ("3n") ("4n"))))
                            bogusForceDataize.write ((((xf).xseek)) (0) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xf)))) ((((unsupported)) ("0n") ("1n") ("2n") ("3n") ("4n"))))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_builtin_filter.write
                  [xself]
                    memory > xd
                    memory > xseq
                    memory > x__iter__
                    memory > xbTrue
                    memory > x__init__
                    memory > x__bool__
                    memory > xbFalse
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ("None: is there a None literal in the EO language?") ((((xSequenceClass)) (5))))))) ((((xlist)) ((((xrange)) (1) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ("None: is there a None literal in the EO language?") ((((xSequenceClass)) (0))))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ("None: is there a None literal in the EO language?") ((((unsupported)) 0)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ("None: is there a None literal in the EO language?") ("abc"))))) ((((unsupported)) ("a") ("b") ("c"))))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ("None: is there a None literal in the EO language?") ((xd)))))) ((((xlist)) (((((xd).xkeys)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xfilter)) ("None: is there a None literal in the EO language?") ((xlist)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xfilter)) ("None: is there a None literal in the EO language?") (42))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xtruth]
                                seq > @
                                  (((unsupported)) (((xself).xtruth)) ((xtruth)))
                            x__bool__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xtruth)))
                        xbTrue.write (((xBoolean)) (TRUE))
                        xbFalse.write (((xBoolean)) (FALSE))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xvals)) ((xargs)))
                            x__iter__.write
                              [xself]
                                memory > x__next__
                                memory > x__init__
                                memory > x__iter__
                                seq > @
                                  seq
                                    (((unsupported)) 0)
                                      seq
                                        x__init__.write
                                          [xself xvals]
                                            seq > @
                                              seq
                                                (((unsupported)) (((xself).xvals)) ((xvals)))
                                                (((unsupported)) (((xself).xi)) (0))
                                        x__iter__.write
                                          [xself]
                                            seq > @
                                              (((unsupported)) ((xself)))
                                        x__next__.write
                                          [xself]
                                            memory > xi
                                            seq > @
                                              seq
                                                xi.write ((xself).xi)
                                                (((unsupported)) (((xself).xi)) (((xi).add 1)))
                                                ((xi).less (((xlen)) (((xself).xvals)))).if
                                                  (((unsupported)) ((((unsupported)) (((xself).xvals)) ((xi)))))
                                                  (((unsupported)) ((xStopIteration)))
                                    (((unsupported)) ((((xSeqIter)) (((xself).xvals)))))
                        xseq.write (((xSeq)) ((((unsupported)) (((((unsupported)) ((xbTrue)) ((xbFalse))).mul 25)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ((((unsupported)) (((xx).not)))) ((xseq)))))) (((((unsupported)) ((xbFalse))).mul 25)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xfilter)) ((((unsupported)) (((xx).not)))) ((((xiter)) ((xseq)))))))) (((((unsupported)) ((xbFalse))).mul 25)))
                xtest_builtin_max_min.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) ((((xSequenceClass)) (5))))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmin)) ((((xSequenceClass)) (5))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) (8) ((1.neg)))) (8))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmin)) (8) ((1.neg)))) ((1.neg)))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) ((xd)))) ("two"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmin)) ((xd)))) ("one"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) (((((xd).xvalues)) 0)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmin)) ((((xiter)) (((((xd).xvalues)) 0)))))) (1))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xf).xwrite)) ("medium linen"))
                            bogusForceDataize.write ((((xf).xwrite)) ("xtra large linen"))
                            bogusForceDataize.write ((((xf).xwrite)) ("itty-bitty linen"))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xmin)) ((xf)))) ("itty-bitty linen"))
                            bogusForceDataize.write ((((xf).xseek)) (0) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) ((xf)))) ("xtra large linen"))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_builtin_map.write
                  [xself]
                    memory > xd
                    memory > xexpected
                    memory > xdkeys
                    memory > xf
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xmap)) ((((unsupported)) (((xx).add 1)))) ((((xSequenceClass)) (5))))))) ((((xlist)) ((((xrange)) (1) (6))))))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xmap)) ((((unsupported)) ((((unsupported)) ((xk)) ((((unsupported)) ((xd)) ((xk)))))))) ((xd)))))) ((((xlist)) (((((xd).xitems)) 0)))))
                        xdkeys.write (((xlist)) (((((xd).xkeys)) 0)))
                        xexpected.write (((unsupported)) ((((unsupported)) (((((xi).less (((xlen)) ((xd)))).and (((unsupported)) ((xdkeys)) ((xi)))).or "None: is there a None literal in the EO language?")) ((xi)) (((((xi).less (((xlen)) ((xd)))).and (((unsupported)) ((xdkeys)) ((xi)))).or "None: is there a None literal in the EO language?")))) ((xi)) ((((xrange)) (3))))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xi)) ((((xrange)) (10))))
                            bogusForceDataize.write ((((xf).xwrite)) ((("xy".mul (xi)).add "n")))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xmap)) ((xlen)) ((xf)))))) ((((xlist)) ((((xrange)) (1) (21) (2))))))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_builtin_zip.write
                  [xself]
                    memory > xd
                    memory > xlzip
                    memory > xexpected
                    memory > x__iter__
                    memory > x__getitem__
                    memory > xf
                    memory > x__next__
                    memory > x__init__
                    memory > x__len__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((unsupported)) ((((unsupported)) 0)))))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((unsupported)) ((((unsupported)) ((((unsupported)) (1) (2))) ("ab"))))))))) ((((unsupported)) ((((unsupported)) (1) ("a"))) ((((unsupported)) (2) ("b"))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xzip)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xzip)) ((((xrange)) (10))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xzip)) ((((xrange)) (10))) ((xzip)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((xIteratingSequenceClass)) (3))))))) ((((unsupported)) ((((unsupported)) (0))) ((((unsupported)) (1))) ((((unsupported)) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((xSequenceClass)) (3))))))) ((((unsupported)) ((((unsupported)) (0))) ((((unsupported)) (1))) ((((unsupported)) (2))))))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((xlist)) ((((xzip)) ((xd)) (((((xd).xvalues)) 0)))))))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xstart]
                                seq > @
                                  (((unsupported)) (((xself).xi)) ((xstart)))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                memory > xi
                                seq > @
                                  seq
                                    xi.write ((xself).xi)
                                    (((unsupported)) (((xself).xi)) (((xi).add 1)))
                                    (((unsupported)) ((xi)))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xf).xwrite)) ("anbbbnccn"))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((xIntsFrom)) (0))) ((xf)) ((((xIntsFrom)) ((100.neg)))))))) ((((unsupported)) ((((unsupported)) (0) ("an") ((100.neg)))) ((((unsupported)) (1) ("bbbn") ((99.neg)))) ((((unsupported)) (2) ("ccn") ((98.neg)))))))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xzip)) ((((xrange)) (5))))))) ((((unsupported)) ((((unsupported)) ((xi)))) ((xi)) ((((xrange)) (5))))))
                        (((unsupported)) 0)
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  ((xi).geq 5).if
                                    (((unsupported)) ((xIndexError)))
                                  (((unsupported)) ((xi)))
                        (((unsupported)) ((xNoGuessLen5)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (3))
                        (((unsupported)) ((xNoGuessLen5)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (30))
                        xlzip.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xlist)) ((((xzip)) ((((unsupported)) ((xargs)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xGuess3Len5)) 0)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xGuess30Len5)) 0)))) (30))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlzip)) ((((xNoGuessLen5)) 0)))) ((((xlzip)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlzip)) ((((xGuess3Len5)) 0)))) ((((xlzip)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlzip)) ((((xGuess30Len5)) 0)))) ((((xlzip)) ((((xrange)) (5))))))
                        xexpected.write (((unsupported)) ((((unsupported)) ((xi)) ((xi)))) ((xi)) ((((xrange)) (5))))
                        (((unsupported)) ((xx)) ((((unsupported)) ((((xNoGuessLen5)) 0)) ((((xGuess3Len5)) 0)) ((((xGuess30Len5)) 0)))))
                          (((unsupported)) ((xy)) ((((unsupported)) ((((xNoGuessLen5)) 0)) ((((xGuess3Len5)) 0)) ((((xGuess30Len5)) 0)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlzip)) ((xx)) ((xy)))) ((xexpected)))
                xtest_unicode_join_endcase.write
                  [xself]
                    memory > xgot
                    memory > x__iter__
                    memory > xf
                    memory > x__next__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xseq]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xit)) ((((xiter)) ((xseq)))))
                                    (((unsupported)) (((xself).xi)) (0))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                memory > xi
                                seq > @
                                  seq
                                    xi.write ((xself).xi)
                                    (((unsupported)) (((xself).xi)) (((xi).add 1)))
                                    ((xi).eq 2).if
                                      (((unsupported)) ("fooled you!"))
                                    (((unsupported)) ((((xnext)) (((xself).xit)))))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xf).xwrite)) ((("an".add "bn").add "cn")))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            xgot.write (((" - ".xjoin)) ((((xOhPhooey)) ((xf)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xgot)) ("an - bn - fooled you! - cn"))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_in_and_not_in.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((xsc5)) ((((unsupported)) ((((xIteratingSequenceClass)) (5))) ((((xSequenceClass)) (5))))))
                          seq
                            (((unsupported)) ((xi)) ((((xrange)) (5))))
                              bogusForceDataize.write ((((xself).xassertIn)) ((xi)) ((xsc5)))
                            (((unsupported)) ((xi)) ((((unsupported)) ("abc") ((1.neg)) (5) (42.42) ((((unsupported)) (3) (4))) ((((unsupported)) 0)) ((((unsupported)) (1) (1))) ((3.sub (((unsupported)) 0))) ((xsc5)))))
                              bogusForceDataize.write ((((xself).xassertNotIn)) ((xi)) ((xsc5)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((((unsupported)) (3) (12))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((((unsupported)) (3) ((xmap)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((((unsupported)) ((((unsupported)) (3) ((((xBadIterableClass)) 0)))))))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        (((unsupported)) ((xk)) ((xd)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ((xk)) ((xd)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((xk)) (((((xd).xvalues)) 0)))
                        (((unsupported)) ((xv)) (((((xd).xvalues)) 0)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ((xv)) (((((xd).xvalues)) 0)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((xv)) ((xd)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xd).xitems)) 0)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ((((unsupported)) ((xk)) ((xv)))) (((((xd).xitems)) 0)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((((unsupported)) ((xv)) ((xk)))) (((((xd).xitems)) 0)))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xf).xwrite)) ("anbncn"))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xchunk)) ("abc"))
                            seq
                              bogusForceDataize.write ((((xf).xseek)) (0) (0))
                              bogusForceDataize.write ((((xself).xassertNotIn)) ((xchunk)) ((xf)))
                              bogusForceDataize.write ((((xf).xseek)) (0) (0))
                              bogusForceDataize.write ((((xself).xassertIn)) (((xchunk).add "n")) ((xf)))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_countOf.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (2))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (2))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ("122325") ("2"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ("122325") ("6"))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcountOf)) (42) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcountOf)) ((xcountOf)) ((xcountOf)))
                        xd.write (((unsupported)) ("one") (3) ("two") (3) ("three") (3) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        (((unsupported)) ((xk)) ((xd)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ((xd)) ((xk)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) (((((xd).xvalues)) 0)) (3))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) (((((xd).xvalues)) 0)) ((((unsupported)) 0)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) (((((xd).xvalues)) 0)) ((((unsupported)) 0)))) (0))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xf).xwrite)) ("anbncnbn"))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          (((unsupported)) ((((unsupported)) ((xletter)) ((xcount)))) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (1))) ((((unsupported)) ("d") (0))))))
                            seq
                              bogusForceDataize.write ((((xf).xseek)) (0) (0))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xcountOf)) ((xf)) (((xletter).add "n")))) ((xcount)))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_indexOf.write
                  [xself]
                    memory > xfiter
                    memory > xiclass
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (1))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (2))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (3))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (5))) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xindexOf)) ((((unsupported)) (1) (2) (2) (3) (2) (5))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ("122325") ("2"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ("122325") ("5"))) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xindexOf)) ("122325") ("6"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xindexOf)) (42) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xindexOf)) ((xindexOf)) ((xindexOf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xindexOf)) ((((xBadIterableClass)) 0)) (1))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xf).xwrite)) ("anbncndnen"))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            xfiter.write (((xiter)) ((xf)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((xfiter)) ("bn"))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((xfiter)) ("dn"))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((xfiter)) ("en"))) (0))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xindexOf)) ((xfiter)) ("an"))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                        xiclass.write (((xIteratingSequenceClass)) (3))
                        (((unsupported)) ((xi)) ((((xrange)) (3))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xindexOf)) ((xiclass)) ((xi)))) ((xi)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xindexOf)) ((xiclass)) ((1.neg)))
                xtest_writelines.write
                  [xself]
                    memory > xexpected
                    memory > x__iter__
                    memory > xf
                    memory > x__next__
                    memory > x__init__
                    seq > @
                      seq
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).xwritelines)) ("None: is there a None literal in the EO language?"))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).xwritelines)) (42))
                            bogusForceDataize.write ((((xf).xwritelines)) ((((unsupported)) ("1n") ("2n"))))
                            bogusForceDataize.write ((((xf).xwritelines)) ((((unsupported)) ("3n") ("4n"))))
                            bogusForceDataize.write ((((xf).xwritelines)) ((((unsupported)) ("5n") ("None: is there a None literal in the EO language?"))))
                            bogusForceDataize.write ((((xf).xwritelines)) ((((unsupported)) 0)))
                            (((unsupported)) 0)
                              seq
                                x__init__.write
                                  [xself xstart xfinish]
                                    seq > @
                                      seq
                                        (((unsupported)) (((xself).xstart)) ((xstart)))
                                        (((unsupported)) (((xself).xfinish)) ((xfinish)))
                                        (((unsupported)) (((xself).xi)) (((xself).xstart)))
                                x__next__.write
                                  [xself]
                                    memory > xresult
                                    seq > @
                                      seq
                                        (((xself).xi).geq ((xself).xfinish)).if
                                          (((unsupported)) ((xStopIteration)))
                                        xresult.write ((((xstr)) (((xself).xi))).add "n")
                                        (((unsupported)) (((xself).xi)) (1))
                                        (((unsupported)) ((xresult)))
                                x__iter__.write
                                  [xself]
                                    seq > @
                                      (((unsupported)) ((xself)))
                            (((unsupported)) 0)
                              seq
                                x__init__.write
                                  [xself xstart xfinish]
                                    seq > @
                                      seq
                                        (((unsupported)) (((xself).xstart)) ((xstart)))
                                        (((unsupported)) (((xself).xfinish)) ((xfinish)))
                                x__iter__.write
                                  [xself]
                                    seq > @
                                      (((unsupported)) ((((xIterator)) (((xself).xstart)) (((xself).xfinish)))))
                            bogusForceDataize.write ((((xf).xwritelines)) ((((xWhatever)) (6) ((6.add 2000)))))
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            xf.write (((xopen)) ((xTESTFN)))
                            xexpected.write (((unsupported)) (((((xstr)) ((xi))).add "n")) ((xi)) ((((xrange)) (1) (2006))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xf)))) ((xexpected)))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xtest_unpack_iter.write
                  [xself]
                    memory > xlines
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) (1) (2))))
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((((xIteratingSequenceClass)) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((((unsupported)) (0) (1) (2))))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((xIteratingSequenceClass)) (3))))
                          bogusForceDataize.write ((((xself).xfail)) ("should have raised ValueError"))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((((xIteratingSequenceClass)) (2))))
                          bogusForceDataize.write ((((xself).xfail)) ("should have raised ValueError"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((xlen)))
                          bogusForceDataize.write ((((xself).xfail)) ("should have raised TypeError"))
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) (((((((unsupported)) (1) (42) (2) (42) (3) (42)).xvalues)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((((unsupported)) (42) (42) (42))))
                        xf.write (((xopen)) ((xTESTFN)) ("w"))
                        xlines.write (((unsupported)) ("an") ("bbn") ("cccn"))
                        (((unsupported)) 0)
                          (((unsupported)) ((xline)) ((xlines)))
                            bogusForceDataize.write ((((xf).xwrite)) ((xline)))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        xf.write (((xopen)) ((xTESTFN)) ("r"))
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((xf)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((xlines)))
                          seq
                            bogusForceDataize.write ((((xf).xclose)) 0)
                            (((unsupported)) ((xOSError)))
                              bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) ((xc)))))) ((((unsupported)) ((((xIteratingSequenceClass)) (2))) ((((unsupported)) (42) (24))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) ((((unsupported)) (0) (1) (42))))
                xtest_ref_counting_behavior.write
                  [xself]
                    memory > xcount
                    memory > xl
                    memory > xx
                    memory > x__del__
                    memory > x__new__
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          seq
                            xcount.write 0
                            x__new__.write
                              [xcls]
                                seq > @
                                  seq
                                    (((unsupported)) (((xcls).xcount)) (1))
                                    (((unsupported)) (((((xobject).x__new__)) ((xcls)))))
                            x__del__.write
                              [xself]
                                memory > xcls
                                seq > @
                                  seq
                                    xcls.write ((xself).x__class__)
                                    (((unsupported)) ((((xcls).xcount).greater 0)))
                                    (((unsupported)) (((xcls).xcount)) (1))
                        xx.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xcount)) (1))
                        (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xcount)) (0))
                        xl.write (((unsupported)) ((((xC)) 0)) ((((xC)) 0)) ((((xC)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xcount)) (3))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((xiter)) ((xl)))))
                        (((unsupported)) ((((unsupported)) ((xl)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xC).xcount)) (0))
                xtest_sinkstate_list.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xlist)) ((((xrange)) (5))))
                        xb.write (((xiter)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xa).xextend)) ((((xrange)) (5) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_tuple.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((unsupported)) (0) (1) (2) (3) (4))
                        xb.write (((xiter)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_string.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write "abcde"
                        xb.write (((xiter)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) ("a") ("b") ("c") ("d") ("e"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_sequence.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xSequenceClass)) (5))
                        xb.write (((xiter)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        (((unsupported)) (((xa).xn)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_callable.write
                  [xself]
                    memory > xspam
                    memory > xb
                    seq > @
                      seq
                        xspam.write
                          [xstate]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((unsupported)) ((xstate)) (0))
                                (((unsupported)) ((((unsupported)) ((xstate)) (0))) (((xi).add 1)))
                                ((xi).eq 10).if
                                  (((unsupported)) ((((xAssertionError)) ("shouldn't have gotten this far"))))
                                (((unsupported)) ((xi)))
                        xb.write (((xiter)) ((xspam)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_dict.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((unsupported)) (1) (1) (2) (2) (0) (0) (4) (4) (3) (3))
                        (((unsupported)) ((xb)) ((((unsupported)) ((((xiter)) ((xa)))) (((((xa).xkeys)) 0)) (((((xa).xitems)) 0)) (((((xa).xvalues)) 0)))))
                          seq
                            xb.write (((xiter)) ((xa)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xlist)) ((xb)))))) (5))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_yield.write
                  [xself]
                    memory > xgen
                    memory > xb
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) ((xi)) ((((xrange)) (5))))
                                (((unsupported)) ((xi)))
                        xb.write (((xgen)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_range.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xrange)) (5))
                        xb.write (((xiter)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_sinkstate_enumerate.write
                  [xself]
                    memory > xe
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xrange)) (5))
                        xe.write (((xenumerate)) ((xa)))
                        xb.write (((xiter)) ((xe)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xzip)) ((((xrange)) (5))) ((((xrange)) (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) 0)))
                xtest_3720.write
                  [xself]
                    memory > x__next__
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) ((((unsupported)) (((xBadIterator).x__next__)))))
                                    (((unsupported)) (1))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xi)) ((((xBadIterator)) 0)))
                xtest_extending_list_with_iterator_does_not_segfault.write
                  [xself]
                    memory > xgen
                    memory > xlst
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) ((xi)) ((((xrange)) (500))))
                                (((unsupported)) ((xi)))
                        xlst.write ((((unsupported)) (0)).mul 500)
                        (((unsupported)) ((xi)) ((((xrange)) (240))))
                          bogusForceDataize.write ((((xlst).xpop)) (0))
                        bogusForceDataize.write ((((xlst).xextend)) ((((xgen)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xlst)))) (760))
                xtest_iter_overflow.write
                  [xself]
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xit.write (((xiter)) ((((xUnlimitedSequenceClass)) 0)))
                        bogusForceDataize.write ((((xit).x__setstate__)) ((((xsys).xmaxsize).sub 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) ((((xsys).xmaxsize).sub 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) ((((xsys).xmaxsize).sub 1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xOverflowError)))))
                          bogusForceDataize.write (((xnext)) ((xit)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xOverflowError)))))
                          bogusForceDataize.write (((xnext)) ((xit)))
                xtest_iter_neg_setstate.write
                  [xself]
                    memory > xit
                    seq > @
                      seq
                        xit.write (((xiter)) ((((xUnlimitedSequenceClass)) 0)))
                        bogusForceDataize.write ((((xit).x__setstate__)) ((42.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) (1))
                xtest_free_after_iterating.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xcheck_free_after_iterating)) ((xself)) ((xiter)) ((xSequenceClass)) ((((unsupported)) (0))))
                xtest_error_iter.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xtyp)) ((((unsupported)) ((xDefaultIterClass)) ((xNoIterClass)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xiter)) ((((xtyp)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xiter)) ((((xBadIterableClass)) 0)))
            xtest_main.write
              []
                seq > @
                  bogusForceDataize.write (((xrun_unittest)) ((xTestCase)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)) 0)