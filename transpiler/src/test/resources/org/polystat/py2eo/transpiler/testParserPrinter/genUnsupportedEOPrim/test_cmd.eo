memory > xsamplecmdclass
memory > xValueError
memory > xio
memory > xint
memory > xsimplecmd
memory > xi
memory > xunittest
memory > x__name__
memory > xcmd
memory > xprint
memory > xtest_cmd
memory > xsupport
memory > xsys
memory > xlen
memory > xTestAlternateInput
[] > test_cmd
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xhelp_add
        memory > xcompletedefault
        memory > xtest_main
        memory > xtest_coverage
        memory > xdo_exit
        memory > xdo_add
        memory > xpreloop
        memory > xdo_EOF
        memory > xdo_print
        memory > xpostloop
        memory > xtest_file_with_missing_final_nl
        memory > xdo_shell
        memory > xcomplete_command
        memory > xtest_input_reset_at_EOF
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xcmd).xCmd)))
              seq
                (((unsupported)) 0)
                xpreloop.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xprint)) ("Hello from preloop"))
                xpostloop.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xprint)) ("Hello from postloop"))
                xcompletedefault.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write (((xprint)) ("This is the completedefault method"))
                xcomplete_command.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xprint)) ("complete command"))
                xdo_shell.write
                  [xself xs]
                    seq > @
                xdo_add.write
                  [xself xs]
                    memory > xl
                    seq > @
                      seq
                        xl.write ((((xs).xsplit)) 0)
                        ((((xlen)) ((xl))).neq 2).if
                          seq
                            bogusForceDataize.write (((xprint)) ("*** invalid number of arguments"))
                            (((unsupported)) 0)
                        (((unsupported)) ((xValueError)))
                          xl.write (((unsupported)) ((((xint)) ((xi)))) ((xi)) ((xl)))
                          seq
                            bogusForceDataize.write (((xprint)) ("*** arguments should be numbers"))
                            (((unsupported)) 0)
                        bogusForceDataize.write (((xprint)) (((((unsupported)) ((xl)) (0)).add (((unsupported)) ((xl)) (1)))))
                xhelp_add.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xprint)) ("help text for add"))
                        (((unsupported)) 0)
                xdo_exit.write
                  [xself xarg]
                    seq > @
                      (((unsupported)) (TRUE))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) (((xcmd).xCmd)))
                  seq
                    xdo_print.write
                      [xself xargs]
                        seq > @
                          (((unsupported)) ((xprint)) ((xargs)) (((xself).xstdout)))
                    xdo_EOF.write
                      [xself xargs]
                        seq > @
                          (((unsupported)) (TRUE))
                (((unsupported)) ((xsimplecmd)))
                  xdo_EOF.write
                    [xself xargs]
                      seq > @
                        seq
                          (((unsupported)) ((xprint)) ("*** Unknown syntax: EOF") (((xself).xstdout)))
                          (((unsupported)) (TRUE))
                xtest_file_with_missing_final_nl.write
                  [xself]
                    memory > xinput
                    memory > xcmd
                    memory > xoutput
                    seq > @
                      seq
                        xinput.write ((((xio).xStringIO)) ("print testnprint test2"))
                        xoutput.write ((((xio).xStringIO)) 0)
                        xcmd.write (((unsupported)) (((xself).xsimplecmd)) ((xinput)) ((xoutput)))
                        (((unsupported)) (((xcmd).xuse_rawinput)) (FALSE))
                        bogusForceDataize.write ((((xcmd).xcmdloop)) 0)
                        bogusForceDataize.write ((((xself).xassertMultiLineEqual)) (((((xoutput).xgetvalue)) 0)) ("(Cmd) testn(Cmd) test2n(Cmd) "))
                xtest_input_reset_at_EOF.write
                  [xself]
                    memory > xinput
                    memory > xcmd
                    memory > xoutput
                    seq > @
                      seq
                        xinput.write ((((xio).xStringIO)) ("print testnprint test2"))
                        xoutput.write ((((xio).xStringIO)) 0)
                        xcmd.write (((unsupported)) (((xself).xsimplecmd2)) ((xinput)) ((xoutput)))
                        (((unsupported)) (((xcmd).xuse_rawinput)) (FALSE))
                        bogusForceDataize.write ((((xcmd).xcmdloop)) 0)
                        bogusForceDataize.write ((((xself).xassertMultiLineEqual)) (((((xoutput).xgetvalue)) 0)) ("(Cmd) testn(Cmd) test2n(Cmd) *** Unknown syntax: EOFn"))
                        xinput.write ((((xio).xStringIO)) ("print nn"))
                        xoutput.write ((((xio).xStringIO)) 0)
                        (((unsupported)) (((xcmd).xstdin)) ((xinput)))
                        (((unsupported)) (((xcmd).xstdout)) ((xoutput)))
                        bogusForceDataize.write ((((xcmd).xcmdloop)) 0)
                        bogusForceDataize.write ((((xself).xassertMultiLineEqual)) (((((xoutput).xgetvalue)) 0)) ("(Cmd) n(Cmd) n(Cmd) *** Unknown syntax: EOFn"))
            xtest_main.write
              [xverbose]
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) 0)
                    bogusForceDataize.write ((((xsupport).xrun_doctest)) ((xtest_cmd)) ((xverbose)))
                    bogusForceDataize.write ((((xsupport).xrun_unittest)) ((xTestAlternateInput)))
            xtest_coverage.write
              [xcoverdir]
                memory > xtrace
                memory > xr
                memory > xtracer
                seq > @
                  seq
                    xtrace.write ((((xsupport).ximport_module)) ("trace"))
                    xtracer.write (((unsupported)) (((xtrace).xTrace)) ((((unsupported)) (((xsys).xbase_prefix)) (((xsys).xbase_exec_prefix)))) (0) (1))
                    bogusForceDataize.write ((((xtracer).xrun)) ("import importlib; importlib.reload(cmd); test_main()"))
                    xr.write ((((xtracer).xresults)) 0)
                    bogusForceDataize.write (((xprint)) ("Writing coverage results..."))
                    (((unsupported)) (((xr).xwrite_results)) (TRUE) (TRUE) ((xcoverdir)))
            ((x__name__).eq "__main__").if
              (((unsupported)) ("-c") (((xsys).xargv))).if
                bogusForceDataize.write (((xtest_coverage)) ("/tmp/cmd.cover"))
                (((unsupported)) ("-i") (((xsys).xargv))).if
                  bogusForceDataize.write ((((((xsamplecmdclass)) 0).xcmdloop)) 0)
                  bogusForceDataize.write (((xtest_main)) 0)