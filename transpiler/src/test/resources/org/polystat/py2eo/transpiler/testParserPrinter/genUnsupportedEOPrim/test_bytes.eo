memory > xfill_type
memory > xstr
memory > xtempfile
memory > xcm
memory > xOtherBytesSubclass
memory > xarray
memory > xC
memory > xcopy
memory > xAttributeError
memory > xUnicodeDecodeError
memory > xstep
memory > xc
memory > xSubclassTest
memory > xmethname
memory > xdata
memory > xpickle
memory > xlist
memory > xc_long
memory > xindex
memory > xpythonapi
memory > xValueError
memory > xFixedStringTest
memory > xpy_formatter
memory > xBytesWarning
memory > xB
memory > xpy_object
memory > xBadInt
memory > xpos
memory > xS
memory > xrange
memory > xexpr
memory > xb
memory > xstop
memory > xvalue
memory > xBufferBlocked
memory > xtest
memory > xZeroDivisionError
memory > xeval
memory > xformatstr
memory > xStopIteration
memory > xIndexError
memory > xbytearray
memory > xMemoryError
memory > xstart
memory > xproto
memory > xIterationBlocked
memory > xopen
memory > xreversed
memory > xkw
memory > xtype
memory > xf
memory > xrepr
memory > xint
memory > xre
memory > xgetbuffer_with_null_view
memory > xit
memory > xBadIterable
memory > xX
memory > xc_int
memory > xOverflowError
memory > xx
memory > xBaseBytesTest
memory > xi
memory > xba
memory > xMAX_Py_ssize_t
memory > xIndexable
memory > x_b
memory > xsuper
memory > xs
memory > xc_char_p
memory > xsys
memory > xissubclass
memory > xbytes
memory > xtuple
memory > xB1
memory > xNotImplemented
memory > xByteArraySubclass
memory > xfloat
memory > xchr
memory > xBytesSubclassBlocked
memory > xargs
memory > xOSError
memory > xsubclass
memory > xos
memory > xc_size_t
memory > xc_ulong
memory > xbb
memory > xgetattr
memory > xid
memory > xSyntaxError
memory > xUnicodeEncodeError
memory > xiter
memory > xformat
memory > x__file__
memory > xord
memory > xunittest
memory > xelem
memory > xc_uint
memory > xc_ssize_t
memory > xenc
memory > xhash
memory > xY
memory > xnext
memory > xmap
memory > xIntBlocked
memory > xobject
memory > xmemoryview
memory > xA
memory > xctypes_type
memory > xB2
memory > x_a
memory > xkwargs
memory > xisinstance
memory > xBytesSubclass
memory > xlen
memory > xBufferError
memory > xmethod
memory > x__name__
memory > xa
memory > xTypeError
memory > xcopy_method
[] > test_bytes
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_endswith
        memory > xtest_setitem_error
        memory > xtest_center
        memory > xtest_format
        memory > xtest_rmod
        memory > xtest_partition_string_error
        memory > xtest_insert
        memory > xtest_del_expand
        memory > xtest_constructor_overflow
        memory > xtest_from_iterable
        memory > xcontains_bytes
        memory > xtest_from_buffer
        memory > xtest_rjust
        memory > xtest_getslice
        memory > xtest_init_override
        memory > xtest_pickle
        memory > xtest_decode
        memory > xtest_append
        memory > xtest_resize_forbidden
        memory > x__index__
        memory > xtest_constructor_type_errors
        memory > xtest_rsplit_unicodewhitespace
        memory > xtest_constructor_value_errors
        memory > xtest_find_etc_raise_correct_error_messages
        memory > xtest_split_string_error
        memory > xtest_obsolete_write_lock
        memory > xtest_from_mutating_list
        memory > xtest_hex_separator_five_bytes
        memory > xtest_from_ssize
        memory > xtest_integer_arguments_out_of_byte_range
        memory > xtest_imod
        memory > xtest_irepeat_1char
        memory > xtest_from_tuple
        memory > xtest_bytes_blocking
        memory > xtest_from_bytearray
        memory > xtest_nohash
        memory > xtest_bytearray_api
        memory > xtest_split_int_error
        memory > xtest_doc
        memory > xtest_split_unicodewhitespace
        memory > xtest_fifo_overrun
        memory > xtest_nosort
        memory > xtest_from_int
        memory > xtest_rfind
        memory > xtest_rindex
        memory > xtest_return_self
        memory > xtest_from_index
        memory > xtest_iterator_length_hint
        memory > xtest_partition_bytearray_doesnt_share_nullstring
        memory > xtest_index
        memory > xtest_from_format
        memory > xtest_rpartition
        memory > xtest_pop
        memory > xtest_compare_to_str
        memory > xtest_maketrans
        memory > xtest_to_str
        memory > xtest_empty_sequence
        memory > xtest_extend
        memory > xtest_remove
        memory > xtest_buffer_is_readonly
        memory > xtest_pickling
        memory > xtest_irepeat
        memory > xcheck_bytes_warnings
        memory > xtest_ljust
        memory > xtest_count
        memory > xtest_init_alloc
        memory > xfixtype
        memory > xtest_setslice_trap
        memory > xtest_repeat
        memory > xtest_repeat_after_setslice
        memory > xtest_setslice
        memory > xtest_extended_set_del_slice
        memory > xtest_regexps
        memory > xtest_replace
        memory > xtest_hex_separator_six_bytes
        memory > xtest_translate
        memory > xtest_literal
        memory > xtest_basic
        memory > xtest_join
        memory > xtest_copy
        memory > xtest_none_arguments
        memory > xtest_exhausted_iterator
        memory > xtest_hex
        memory > xtest_split_bytearray
        memory > xtest_extended_getslice
        memory > xtest_contains
        memory > xtest_partition
        memory > xbasetype
        memory > xtest_iconcat
        memory > xtest_setslice_extend
        memory > xtest_repr_str
        memory > xtest_mod
        memory > xtest_encoding
        memory > xtest_basics
        memory > xtest_compare
        memory > xtest_strip_int_error
        memory > xtest_concat
        memory > xtest_ord
        memory > xtest_strip_string_error
        memory > x__init__
        memory > xtest_iterator_pickling2
        memory > xtest_find
        memory > xtest_clear
        memory > xtest_rsplit_bytearray
        memory > xtest_getitem_error
        memory > xtest_setitem
        memory > xtest_fromhex
        memory > xtest_replace_int_error
        memory > xtest_xjust_int_error
        memory > xtest_free_after_iterating
        memory > xtest_reverse
        memory > xtest_iterator_pickling
        memory > xtest_reversed
        memory > xtest_startswith
        memory > xtest_alloc
        memory > xtest_hex_separator_basics
        memory > xtest_from_list
        memory > xtest_partition_int_error
        memory > xtest_custom
        memory > xtest_copied
        memory > xtest_compare_bytes_to_bytearray
        memory > xtype2test
        memory > xtest_returns_new_copy
        memory > xtest_delitem
        memory > xtest_constructor_exceptions
        memory > xmarshal
        memory > xtest_repeat_1char
        memory > xtest_strip_bytearray
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((xsys).xflags).xbytes_warning).if
              xcheck_bytes_warnings.write
                [xfunc]
                  memory > xwrapper
                  seq > @
                    seq
                      xwrapper.write
                        []
                          seq > @
                            (((unsupported)) 0)
                              (((unsupported)) ((((((xtest).xsupport).xcheck_warnings)) ((((unsupported)) ("") ((xBytesWarning)))))))
                                (((unsupported)) ((((xfunc)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkw)))))))
                      (((unsupported)) ((xwrapper)))
              xcheck_bytes_warnings.write
                [xfunc]
                  seq > @
                    (((unsupported)) ((xfunc)))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xvalue]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xvalue)) ((xvalue)))
                x__index__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xvalue)))
            (((unsupported)) 0)
              seq
                xtest_basics.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xb)))) (((xself).xtype2test)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x__class__)) (((xself).xtype2test)))
                xtest_copy.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write ((((xself).xtype2test)) ("abcd"))
                        (((unsupported)) ((xcopy_method)) ((((unsupported)) (((xcopy).xcopy)) (((xcopy).xdeepcopy)))))
                          seq
                            xb.write (((xcopy_method)) ((xa)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xa)))) ((((xtype)) ((xb)))))
                xtest_empty_sequence.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (0))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (1))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (((xsys).xmaxsize)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) ((((xsys).xmaxsize).add 1)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (10) (100))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) ((2.neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) ((((xsys).xmaxsize).neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (((((xsys).xmaxsize).neg).sub 1)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (((((xsys).xmaxsize).neg).sub 2)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) ((((unsupported)) ((xb)) (((((unsupported)) (10) (100)).neg)))))))
                xtest_from_iterable.write
                  [xself]
                    memory > x__getitem__
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ((((xrange)) (256))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (256))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (256))))))
                        xb.write ((((xself).xtype2test)) ((((unsupported)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("*"))
                        xb.write ((((xself).xtype2test)) ((((unsupported)) (43) (45))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xtuple)) ((xb)))) ((((unsupported)) ((((unsupported)) (43) (45))) ((((unsupported)) (45) (43))))))
                        xb.write ((((xself).xtype2test)) ((((xiter)) ((((xrange)) (256))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (256))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (256))))))
                        xb.write ((((xself).xtype2test)) ((((unsupported)) ((xi)) ((xi)) ((((xrange)) (256))) (((xi).mod 2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (128))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) ((((xlist)) ((((xrange)) (256))))) ((((unsupported)) (1) (2))))))
                        (((unsupported)) 0)
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                (((unsupported)) ((((unsupported)) ((((unsupported)) (1) (2) (3))) ((xi)))))
                        xb.write ((((xself).xtype2test)) ((((xS)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x01x02x03"))
                xtest_from_tuple.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ((((xtuple)) ((((xrange)) (256))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (256))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (256))))))
                        xb.write ((((xself).xtype2test)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x01x02x03"))
                xtest_from_list.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ((((xlist)) ((((xrange)) (256))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (256))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (256))))))
                        xb.write ((((xself).xtype2test)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x01x02x03"))
                xtest_from_mutating_list.write
                  [xself]
                    memory > x__index__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__index__.write
                            [xself]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xa).xclear)) 0)
                                  (((unsupported)) (42))
                        xa.write (((unsupported)) ((((xX)) 0)) ((((xX)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((xa)))) ("*"))
                        (((unsupported)) 0)
                          x__index__.write
                            [xself]
                              seq > @
                                seq
                                  ((((xlen)) ((xa))).less 1000).if
                                    bogusForceDataize.write ((((xa).xappend)) ((xself)))
                                  (((unsupported)) (42))
                        xa.write (((unsupported)) ((((xY)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((xa)))) (("*".mul 1000)))
                xtest_from_index.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ((((unsupported)) ((((xIndexable)) 0)) ((((xIndexable)) (1))) ((((xIndexable)) (254))) ((((xIndexable)) (255))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((unsupported)) (0) (1) (254) (255))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((((xIndexable)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((((xIndexable)) (256))))))
                xtest_from_buffer.write
                  [xself]
                    memory > x__index__
                    memory > xa
                    seq > @
                      seq
                        xa.write ((((xself).xtype2test)) (((((xarray).xarray)) ("B") ((((unsupported)) (1) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ("x01x02x03"))
                        xa.write ((((xself).xtype2test)) ("x01x02x03"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ("x01x02x03"))
                        (((unsupported)) ((xbytes)))
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xTypeError)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) ((((xB)) ("foobar"))))) ("foobar"))
                xtest_from_ssize.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) (0))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) (1))) ("x00"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) (5))) ("x00x00x00x00x00"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) ("0") ("ascii"))) ("0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xtype2test)) ("0"))) ("0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xself).xtype2test)) ((((xsys).xmaxsize).add 1)))
                xtest_constructor_type_errors.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) (0.0))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ((((unsupported)) ("0"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ((((unsupported)) (0.0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ((((unsupported)) ((((xC)) 0)))))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("ascii"))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("ignore"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) (0) ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("") ("ascii"))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) (0) ("ignore"))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("") ("ignore"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) (""))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("") ("ignore"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xtype2test)) ("") ("ascii") ("ignore"))
                xtest_constructor_value_errors.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((((xsys).xmaxsize).neg)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (((((xsys).xmaxsize).neg).sub 1)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (((((xsys).xmaxsize).neg).sub 2)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (((((unsupported)) (10) (100)).neg)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (256))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (257))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) (((xsys).xmaxsize)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((((xsys).xmaxsize).add 1)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xtype2test)) ((((unsupported)) ((((unsupported)) (10) (100))))))
                xtest_constructor_overflow.write
                  [xself]
                    memory > xsize
                    seq > @
                      (((unsupported)) 0)
                        xsize.write (xMAX_Py_ssize_t)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xOverflowError)) ((xMemoryError)))) (((xself).xtype2test)) ((xsize)))
                        (((unsupported)) ((((unsupported)) ((xOverflowError)) ((xMemoryError)))))
                          bogusForceDataize.write (((xbytearray)) (((xsize).sub 4)))
                xtest_constructor_exceptions.write
                  [xself]
                    memory > x__index__
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__index__.write
                            [xself]
                              seq > @
                                unsupported
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xself).xtype2test)) ((((xBadInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xself).xtype2test)) ((((unsupported)) ((((xBadInt)) 0)))))
                        (((unsupported)) 0)
                          x__iter__.write
                            [xself]
                              seq > @
                                unsupported
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xself).xtype2test)) ((((xBadIterable)) 0)))
                xtest_compare.write
                  [xself]
                    memory > xb3
                    memory > xb1
                    memory > xb2
                    seq > @
                      seq
                        xb1.write ((((xself).xtype2test)) ((((unsupported)) (1) (2) (3))))
                        xb2.write ((((xself).xtype2test)) ((((unsupported)) (1) (2) (3))))
                        xb3.write ((((xself).xtype2test)) ((((unsupported)) (1) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb1)) ((xb2)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb2).neq (xb3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb1).leq (xb2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb1).leq (xb3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb1).less (xb3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb1).geq (xb2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb3).geq (xb2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xb3).greater (xb2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb1).neq (xb2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb2).eq (xb3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb1).greater (xb2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb1).greater (xb3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb1).geq (xb3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb1).less (xb2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb3).less (xb2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xb3).leq (xb2))))
                xtest_compare_to_str.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) ("0a0b0c")).eq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) ("000a000b000c")).eq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) ("a0b0c0")).eq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) ("a000b000c000")).eq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) 0).eq (((xstr)) 0))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) 0).neq (((xstr)) 0))) (TRUE))
                xtest_reversed.write
                  [xself]
                    memory > xinput
                    memory > xb
                    memory > xoutput
                    seq > @
                      seq
                        xinput.write (((xlist)) ((((xmap)) ((xord)) ("Hello"))))
                        xb.write ((((xself).xtype2test)) ((xinput)))
                        xoutput.write (((xlist)) ((((xreversed)) ((xb)))))
                        bogusForceDataize.write ((((xinput).xreverse)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xoutput)) ((xinput)))
                xtest_getslice.write
                  [xself]
                    memory > xby
                    memory > xb
                    seq > @
                      seq
                        xby.write
                          [xs]
                            seq > @
                              (((unsupported)) (((((xself).xtype2test)) ((((xmap)) ((xord)) ((xs)))))))
                        xb.write (((xby)) ("Hello, world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (5))))) ((((xby)) ("Hello"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (1) (5))))) ((((xby)) ("ello"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (5) (7))))) ((((xby)) (", "))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (7))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (7) (12))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) (7) (100))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((7.neg)))))) ((((xby)) ("Hello"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((11.neg)) ((7.neg)))))) ((((xby)) ("ello"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((7.neg)) ((5.neg)))))) ((((xby)) (", "))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((5.neg)))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((5.neg)) (12))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((5.neg)) (100))))) ((((xby)) ("world"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((100.neg)) (5))))) ((((xby)) ("Hello"))))
                xtest_extended_getslice.write
                  [xself]
                    memory > xL
                    memory > xindices
                    memory > xb
                    seq > @
                      seq
                        xL.write (((xlist)) ((((xrange)) (255))))
                        xb.write ((((xself).xtype2test)) ((xL)))
                        xindices.write (((unsupported)) (0) ("None: is there a None literal in the EO language?") (1) (3) (19) (100) (((xsys).xmaxsize)) ((1.neg)) ((2.neg)) ((31.neg)) ((100.neg)))
                        (((unsupported)) ((xstart)) ((xindices)))
                          (((unsupported)) ((xstop)) ((xindices)))
                            (((unsupported)) ((xstep)) ((((unsupported)) ((xindices)) ((((unsupported)) (1))))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xb)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))) (((((xself).xtype2test)) ((((unsupported)) ((xL)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))))))
                xtest_encoding.write
                  [xself]
                    memory > xsample
                    memory > xb
                    seq > @
                      seq
                        xsample.write "Hello worldnu1234u5678u9abc"
                        (((unsupported)) ((xenc)) ((((unsupported)) ("utf-8") ("utf-16"))))
                          seq
                            xb.write ((((xself).xtype2test)) ((xsample)) ((xenc)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (((((xself).xtype2test)) (((((xsample).xencode)) ((xenc)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeEncodeError)) (((xself).xtype2test)) ((xsample)) ("latin-1"))
                        xb.write ((((xself).xtype2test)) ((xsample)) ("latin-1") ("ignore"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (((((xself).xtype2test)) ((((unsupported)) ((xsample)) ((((unsupported)) ((3.neg)))))) ("utf-8"))))
                xtest_decode.write
                  [xself]
                    memory > xsample
                    memory > xb
                    seq > @
                      seq
                        xsample.write "Hello worldnu1234u5678u9abc"
                        (((unsupported)) ((xenc)) ((((unsupported)) ("utf-8") ("utf-16"))))
                          seq
                            xb.write ((((xself).xtype2test)) ((xsample)) ((xenc)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xdecode)) ((xenc)))) ((xsample)))
                        xsample.write "Hello worldnx80x81xfexff"
                        xb.write ((((xself).xtype2test)) ((xsample)) ("latin-1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeDecodeError)) (((xb).xdecode)) ("utf-8"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xdecode)) ("utf-8") ("ignore"))) ("Hello worldn"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xb).xdecode)) ("ignore") ("utf-8"))) ("Hello worldn"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("xe2x98x83")).xdecode)) 0)) ("u2603"))
                xtest_from_int.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (((((xself).xtype2test)) 0)))
                        xb.write ((((xself).xtype2test)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (((((xself).xtype2test)) (((((unsupported)) (0)).mul 10)))))
                        xb.write ((((xself).xtype2test)) (10000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (((((xself).xtype2test)) (((((unsupported)) (0)).mul 10000)))))
                xtest_concat.write
                  [xself]
                    memory > xb1
                    memory > xb2
                    seq > @
                      seq
                        xb1.write ((((xself).xtype2test)) ("abc"))
                        xb2.write ((((xself).xtype2test)) ("def"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb1).add (xb2))) ("abcdef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb1).add (((xbytes)) ("def")))) ("abcdef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("def")).add (xb1))) ("defabc"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((xb1).add "def")))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (("abc".add (xb2))))))
                xtest_repeat.write
                  [xself]
                    memory > xc
                    seq > @
                      (((unsupported)) ((xb)) ((((unsupported)) ("abc") (((((xself).xtype2test)) ("abc"))))))
                        seq
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xb).mul 3)) ("abcabcabc"))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xb).mul 0)) (""))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xb).mul (1.neg))) (""))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((xb).mul 3.14)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((3.14.mul (xb))))))
                          (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xOverflowError)) ((xMemoryError)))))))
                            xc.write ((xb).mul ((xsys).xmaxsize))
                          (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xOverflowError)) ((xMemoryError)))))))
                            (((unsupported)) ((xb)) (((xsys).xmaxsize)))
                xtest_repeat_1char.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test)) ("x")).mul 100)) (((((xself).xtype2test)) (((((unsupported)) ((((xord)) ("x")))).mul 100)))))
                xtest_contains.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xord)) ("a"))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xint)) ((((xord)) ("a"))))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (200) ((xb)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((unsupported)) ((((unsupported)) (300) ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((unsupported)) ((((unsupported)) ((1.neg)) ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((unsupported)) ((((unsupported)) ((((xsys).xmaxsize).add 1)) ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((((unsupported)) ((((xfloat)) ((((xord)) ("a"))))) ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) ((((unsupported)) ("a") ((xb)))))))
                        (((unsupported)) ((xf)) ((((unsupported)) ((xbytes)) ((xbytearray)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) (""))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("a"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("b"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("c"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("ab"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("bc"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((((xf)) ("abc"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((((xf)) ("ac"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((((xf)) ("d"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((((xf)) ("dab"))) ((xb)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((((xf)) ("abd"))) ((xb)))
                xtest_fromhex.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xfromhex)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xfromhex)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) (""))) (((((xself).xtype2test)) 0)))
                        xb.write (((xbytearray)) ((((unsupported)) (26) (43) (48))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) ("1a2B30"))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) ("  1A 2B  30   "))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) (" 1An2Bt30v"))) ((xb)))
                        (((unsupported)) ((xc)) ("x09x0Ax0Bx0Cx0Dx20"))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) ((xc)))) (((((xself).xtype2test)) 0)))
                        (((unsupported)) ((xc)) ("x1Cx1Dx1Ex1Fx85xa0u2000u2002u2028"))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xfromhex)) ("0000"))) ("00"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xfromhex)) ("1B"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ("a"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ("rt"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ("1a b cd"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ("x00"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xfromhex)) ("12   x00   34"))
                        (((unsupported)) ((((unsupported)) ((xdata)) ((xpos)))) ((((unsupported)) ((((unsupported)) ("12 x4 56") (3))) ((((unsupported)) ("12 3x 56") (4))) ((((unsupported)) ("12 xy 56") (3))) ((((unsupported)) ("12 3xff 56") (4))))))
                          seq
                            (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))) ((xcm)))
                              bogusForceDataize.write (((((xself).xtype2test).xfromhex)) ((xdata)))
                            bogusForceDataize.write ((((xself).xassertIn)) (("at position %s".mod (xpos))) ((((xstr)) (((xcm).xexception)))))
                xtest_hex.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xhex)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xhex)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xhex)) 0)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xbytearray)) ((((unsupported)) (26) (43) (48)))).xhex)) 0)) ("1a2b30"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("x1ax2bx30")).xhex)) 0)) ("1a2b30"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xmemoryview)) ("x1ax2bx30")).xhex)) 0)) ("1a2b30"))
                xtest_hex_separator_basics.write
                  [xself]
                    memory > xvalue
                    memory > xthree_bytes
                    seq > @
                      seq
                        xthree_bytes.write ((((xself).xtype2test)) ("xb9x01xef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) 0)) ("b901ef"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) (""))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ("xx"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (0))) ("b901ef"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ("None: is there a None literal in the EO language?") (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ("xff"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ("xff"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ("x80"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xthree_bytes).xhex)) ((((xchr)) (256))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (0))) ("b901ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("x00"))) ("b9x0001x00ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("x00"))) ("b9x0001x00ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("x7f"))) ("b9x7f01x7fef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("x7f"))) ("b9x7f01x7fef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (3))) ("b901ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (4))) ("b901ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") ((4.neg)))) ("b901ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":"))) ("b9:01:ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("$"))) ("b9$01$ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (1))) ("b9:01:ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") ((1.neg)))) ("b9:01:ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (2))) ("b9:01ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) (":") (1))) ("b9:01:ef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xthree_bytes).xhex)) ("*") ((2.neg)))) ("b901*ef"))
                        xvalue.write "{s005000000000worldi002000000000s005000000000helloi0010000000000"
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xvalue).xhex)) (".") (8))) ("7b7305000000776f.726c646902000000.730500000068656c.6c6f690100000030"))
                xtest_hex_separator_five_bytes.write
                  [xself]
                    memory > xfive_bytes
                    seq > @
                      seq
                        xfive_bytes.write ((((xself).xtype2test)) ((((xrange)) (90) (95))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfive_bytes).xhex)) 0)) ("5a5b5c5d5e"))
                xtest_hex_separator_six_bytes.write
                  [xself]
                    memory > xsix_bytes
                    seq > @
                      seq
                        xsix_bytes.write ((((xself).xtype2test)) ((((unsupported)) (((xx).mul 3)) ((xx)) ((((xrange)) (1) (7))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) 0)) ("0306090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (".") (1))) ("03.06.09.0c.0f.12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (" ") (2))) ("0306 090c 0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) ("-") (3))) ("030609-0c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") (4))) ("0306:090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") (5))) ("03:06090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") (6))) ("0306090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") (95))) ("0306090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) ("_") ((3.neg)))) ("030609_0c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") ((4.neg)))) ("0306090c:0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) ("@") ((5.neg)))) ("0306090c0f@12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (":") ((6.neg)))) ("0306090c0f12"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xsix_bytes).xhex)) (" ") ((95.neg)))) ("0306090c0f12"))
                xtest_join.write
                  [xself]
                    memory > xdot_join
                    memory > xexpected
                    memory > xseq
                    memory > xlst
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xjoin)) ((((unsupported)) 0)))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xjoin)) ((((unsupported)) (""))))) (""))
                        (((unsupported)) ((xlst)) ((((unsupported)) ((((unsupported)) ("abc"))) ((((unsupported)) ("a") ("bc"))) ((((unsupported)) ("ab") ("c"))) ((((unsupported)) ("a") ("b") ("c"))))))
                          seq
                            xlst.write (((xlist)) ((((xmap)) (((xself).xtype2test)) ((xlst)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xjoin)) ((xlst)))) ("abc"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xjoin)) ((((xtuple)) ((xlst)))))) ("abc"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("")).xjoin)) ((((xiter)) ((xlst)))))) ("abc"))
                        xdot_join.write (((((xself).xtype2test)) (".:")).xjoin)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((((unsupported)) ("ab") ("cd"))))) ("ab.:cd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((((unsupported)) ((((xmemoryview)) ("ab"))) ("cd"))))) ("ab.:cd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((((unsupported)) ("ab") ((((xmemoryview)) ("cd"))))))) ("ab.:cd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((((unsupported)) ((((xbytearray)) ("ab"))) ("cd"))))) ("ab.:cd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((((unsupported)) ("ab") ((((xbytearray)) ("cd"))))))) ("ab.:cd"))
                        xseq.write ((((unsupported)) ("abc")).mul 1000)
                        xexpected.write ("abc".add (".:abc".mul 999))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdot_join)) ((xseq)))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) (" ")).xjoin)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdot_join)) ((((unsupported)) ((((xbytearray)) ("ab"))) ("cd") ("ef"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdot_join)) ((((unsupported)) ((((xmemoryview)) ("ab"))) ("cd") ("ef"))))
                xtest_count.write
                  [xself]
                    memory > xw
                    memory > xp
                    memory > xb
                    memory > xi
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        xi.write 105
                        xp.write 112
                        xw.write 119
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("i"))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("ss"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("w"))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xi)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xw)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("i") (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("p") (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("i") (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ("p") (7) (9))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xi)) (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xp)) (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xi)) (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcount)) ((xp)) (7) (9))) (1))
                xtest_startswith.write
                  [xself]
                    memory > xb
                    memory > xexc
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((((((xself).xtype2test)) 0).xstartswith)) ("anything"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xstartswith)) ("hello"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xstartswith)) ("hel"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xstartswith)) ("h"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xb).xstartswith)) ("hellow"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xb).xstartswith)) ("ha"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xb).xstartswith)) ((((unsupported)) ("h"))))
                        xexc.write (((xstr)) (((xcm).xexception)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("bytes") ((xexc)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("tuple") ((xexc)))
                xtest_endswith.write
                  [xself]
                    memory > xb
                    memory > xexc
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((((xbytearray)) 0).xendswith)) ("anything"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xendswith)) ("hello"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xendswith)) ("llo"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xb).xendswith)) ("o"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xb).xendswith)) ("whello"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xb).xendswith)) ("no"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xb).xendswith)) ((((unsupported)) ("o"))))
                        xexc.write (((xstr)) (((xcm).xexception)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("bytes") ((xexc)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("tuple") ((xexc)))
                xtest_find.write
                  [xself]
                    memory > xw
                    memory > xb
                    memory > xi
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        xi.write 105
                        xw.write 119
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("ss"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("w"))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("mississippian"))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ((xi)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ((xw)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("ss") (3))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("ss") (1) (7))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ("ss") (1) (3))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ((xi)) (6))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ((xi)) (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xfind)) ((xw)) (1) (3))) ((1.neg)))
                        (((unsupported)) ((xindex)) ((((unsupported)) ((1.neg)) (256) ((((xsys).xmaxsize).add 1)))))
                          bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xValueError)) ("byte must be in range(0, 256)") (((xb).xfind)) ((xindex)))
                xtest_rfind.write
                  [xself]
                    memory > xw
                    memory > xb
                    memory > xi
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        xi.write 105
                        xw.write 119
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ("ss"))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ("w"))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ("mississippian"))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ((xi)))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ((xw)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ("ss") (3))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ("ss") (0) (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ((xi)) (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ((xi)) (3) (9))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrfind)) ((xw)) (1) (3))) ((1.neg)))
                xtest_index.write
                  [xself]
                    memory > xw
                    memory > xb
                    memory > xi
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        xi.write 105
                        xw.write 119
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ("ss"))) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xindex)) ("w"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xindex)) ("mississippian"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ((xi)))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xindex)) ((xw)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ("ss") (3))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ("ss") (1) (7))) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xindex)) ("ss") (1) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ((xi)) (6))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xindex)) ((xi)) (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xindex)) ((xw)) (1) (3))
                xtest_rindex.write
                  [xself]
                    memory > xw
                    memory > xb
                    memory > xi
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        xi.write 105
                        xw.write 119
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ("ss"))) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xrindex)) ("w"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xrindex)) ("mississippian"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ((xi)))) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xrindex)) ((xw)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ("ss") (3))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ("ss") (0) (6))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ((xi)) (1) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrindex)) ((xi)) (3) (9))) (7))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xrindex)) ((xw)) (1) (3))
                xtest_mod.write
                  [xself]
                    memory > xorig
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello, %b!"))
                        xorig.write (xb)
                        xb.write ((xb).mod "world")
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello, world!"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xorig)) ("hello, %b!"))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((unsupported)) ((xb)) ((xorig)))))
                        xb.write ((((xself).xtype2test)) ("%s / 100 = %d%%"))
                        xa.write ((xb).mod (((unsupported)) ("seventy-nine") (79)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ("seventy-nine / 100 = 79%"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xa)))) (((xself).xtype2test)))
                        xb.write ((((xself).xtype2test)) ("hello,x00%b!"))
                        xb.write ((xb).mod "world")
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello,x00world!"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) (((xself).xtype2test)))
                xtest_imod.write
                  [xself]
                    memory > xorig
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello, %b!"))
                        xorig.write (xb)
                        (((unsupported)) ((xb)) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello, world!"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xorig)) ("hello, %b!"))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((unsupported)) ((xb)) ((xorig)))))
                        xb.write ((((xself).xtype2test)) ("%s / 100 = %d%%"))
                        (((unsupported)) ((xb)) ((((unsupported)) ("seventy-nine") (79))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("seventy-nine / 100 = 79%"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) (((xself).xtype2test)))
                        xb.write ((((xself).xtype2test)) ("hello,x00%b!"))
                        (((unsupported)) ((xb)) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello,x00world!"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) (((xself).xtype2test)))
                xtest_rmod.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        bogusForceDataize.write ((((xself).xassertIs)) ((((((((xself).xtype2test)) ("abc")).x__rmod__)) ("%r"))) ((xNotImplemented)))
                xtest_replace.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xreplace)) ("i") ("a"))) ("massassappa"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xreplace)) ("ss") ("x"))) ("mixixippi"))
                xtest_replace_int_error.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xreplace)) (32) (""))
                xtest_split_string_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xsplit)) (" "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xrsplit)) (" "))
                xtest_split_int_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xsplit)) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xrsplit)) (32))
                xtest_split_unicodewhitespace.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        (((unsupported)) ((xb)) ((((unsupported)) ("ax1Cb") ("ax1Db") ("ax1Eb") ("ax1Fb"))))
                          seq
                            xb.write ((((xself).xtype2test)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xsplit)) 0)) ((((unsupported)) ((xb)))))
                        xb.write ((((xself).xtype2test)) ("x09x0Ax0Bx0Cx0Dx1Cx1Dx1Ex1F"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xsplit)) 0)) ((((unsupported)) ("x1cx1dx1ex1f"))))
                xtest_rsplit_unicodewhitespace.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("x09x0Ax0Bx0Cx0Dx1Cx1Dx1Ex1F"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrsplit)) 0)) ((((unsupported)) ("x1cx1dx1ex1f"))))
                xtest_partition.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xpartition)) ("ss"))) ((((unsupported)) ("mi") ("ss") ("issippi"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xpartition)) ("w"))) ((((unsupported)) ("mississippi") ("") (""))))
                xtest_rpartition.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("mississippi"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrpartition)) ("ss"))) ((((unsupported)) ("missi") ("ss") ("ippi"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrpartition)) ("i"))) ((((unsupported)) ("mississipp") ("i") (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrpartition)) ("w"))) ((((unsupported)) ("") ("") ("mississippi"))))
                xtest_partition_string_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xpartition)) (" "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xrpartition)) (" "))
                xtest_partition_int_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xpartition)) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("a b")).xrpartition)) (32))
                xtest_pickling.write
                  [xself]
                    memory > xps
                    memory > xq
                    memory > xb
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        (((unsupported)) ((xb)) ((((unsupported)) ("") ("a") ("abc") ("xffabx80") ("0037700"))))
                          seq
                            xb.write ((((xself).xtype2test)) ((xb)))
                            xps.write ((((xpickle).xdumps)) ((xb)) ((xproto)))
                            xq.write ((((xpickle).xloads)) ((xps)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xq)))
                xtest_iterator_pickling.write
                  [xself]
                    memory > xd
                    memory > xitorg
                    memory > xit
                    memory > xdata
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        (((unsupported)) ((xb)) ((((unsupported)) ("") ("a") ("abc") ("xffabx80") ("0037700"))))
                          seq
                            (((unsupported)) ((xit)) ((xitorg)) ((((xiter)) (((((xself).xtype2test)) ((xb)))))))
                            xdata.write (((xlist)) (((((xself).xtype2test)) ((xb)))))
                            xd.write ((((xpickle).xdumps)) ((xit)) ((xproto)))
                            xit.write ((((xpickle).xloads)) ((xd)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xitorg)))) ((((xtype)) ((xit)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((xdata)))
                            xit.write ((((xpickle).xloads)) ((xd)))
                            ((xb).not).if
                              (((unsupported)) 0)
                            bogusForceDataize.write (((xnext)) ((xit)))
                            xd.write ((((xpickle).xdumps)) ((xit)) ((xproto)))
                            xit.write ((((xpickle).xloads)) ((xd)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) ((xdata)) ((((unsupported)) (1))))))
                xtest_strip_bytearray.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("abc")).xstrip)) ((((xmemoryview)) ("ac"))))) ("b"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("abc")).xlstrip)) ((((xmemoryview)) ("ac"))))) ("bc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xself).xtype2test)) ("abc")).xrstrip)) ((((xmemoryview)) ("ac"))))) ("ab"))
                xtest_strip_string_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xstrip)) ("ac"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xlstrip)) ("ac"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xrstrip)) ("ac"))
                xtest_strip_int_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) (" abc ")).xstrip)) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) (" abc ")).xlstrip)) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) (" abc ")).xrstrip)) (32))
                xtest_center.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("abc"))
                        (((unsupported)) ((xfill_type)) ((((unsupported)) ((xbytes)) ((xbytearray)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xcenter)) (7) ((((xfill_type)) ("-"))))) (((((xself).xtype2test)) ("--abc--"))))
                xtest_ljust.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("abc"))
                        (((unsupported)) ((xfill_type)) ((((unsupported)) ((xbytes)) ((xbytearray)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xljust)) (7) ((((xfill_type)) ("-"))))) (((((xself).xtype2test)) ("abc----"))))
                xtest_rjust.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("abc"))
                        (((unsupported)) ((xfill_type)) ((((unsupported)) ((xbytes)) ((xbytearray)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xrjust)) (7) ((((xfill_type)) ("-"))))) (((((xself).xtype2test)) ("----abc"))))
                xtest_xjust_int_error.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xcenter)) (7) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xljust)) (7) (32))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xself).xtype2test)) ("abc")).xrjust)) (7) (32))
                xtest_ord.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("0Ax7fx80xff"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xord)) ((((unsupported)) ((xb)) ((((unsupported)) ((xi)) (((xi).add 1)))))))) ((xi)) ((((xrange)) ((((xlen)) ((xb)))))))) ((((unsupported)) (0) (65) (127) (128) (255))))
                xtest_maketrans.write
                  [xself]
                    memory > xtranstable
                    seq > @
                      seq
                        xtranstable.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xmaketrans)) ("abc") ("xyz"))) ((xtranstable)))
                        xtranstable.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xtype2test).xmaketrans)) ("375376377") ("xyz"))) ((xtranstable)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((xself).xtype2test).xmaketrans)) ("abc") ("xyzq"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xtype2test).xmaketrans)) ("abc") ("def"))
                xtest_none_arguments.write
                  [xself]
                    memory > xo
                    memory > xl
                    memory > xx
                    memory > xh
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        xl.write ((((xself).xtype2test)) ("l"))
                        xh.write ((((xself).xtype2test)) ("h"))
                        xx.write ((((xself).xtype2test)) ("x"))
                        xo.write ((((xself).xtype2test)) ("o"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xfind)) ((xl)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xfind)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xfind)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) (((((xb).xfind)) ((xh)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xrfind)) ((xl)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xrfind)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xrfind)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) (((((xb).xrfind)) ((xh)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xindex)) ((xl)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xindex)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xindex)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) (((((xb).xindex)) ((xh)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xrindex)) ((xl)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (3) (((((xb).xrindex)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xrindex)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) (((((xb).xrindex)) ((xh)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xb).xcount)) ((xl)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1) (((((xb).xcount)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1) (((((xb).xcount)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) (((((xb).xcount)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xendswith)) ((xo)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xendswith)) ((xo)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xendswith)) ((xl)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (FALSE) (((((xb).xendswith)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xstartswith)) ((xh)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xstartswith)) ((xl)) ((2.neg)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (TRUE) (((((xb).xstartswith)) ((xh)) ("None: is there a None literal in the EO language?") ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (FALSE) (((((xb).xstartswith)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_integer_arguments_out_of_byte_range.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        (((unsupported)) ((xmethod)) ((((unsupported)) (((xb).xcount)) (((xb).xfind)) (((xb).xindex)) (((xb).xrfind)) (((xb).xrindex)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xmethod)) ((1.neg)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xmethod)) (256))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xmethod)) (9999))
                xtest_find_etc_raise_correct_error_messages.write
                  [xself]
                    memory > xx
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        xx.write ((((xself).xtype2test)) ("x"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("bfindb") (((xb).xfind)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("brfindb") (((xb).xrfind)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("bindexb") (((xb).xindex)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("brindexb") (((xb).xrindex)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("bcountb") (((xb).xcount)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("bstartswithb") (((xb).xstartswith)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xTypeError)) ("bendswithb") (((xb).xendswith)) ((xx)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                xtest_free_after_iterating.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xtest).xsupport).xcheck_free_after_iterating)) ((xself)) ((xiter)) (((xself).xtype2test)))
                        bogusForceDataize.write (((((xtest).xsupport).xcheck_free_after_iterating)) ((xself)) ((xreversed)) (((xself).xtype2test)))
                xtest_translate.write
                  [xself]
                    memory > xd
                    memory > xrosetta
                    memory > xc
                    memory > xb
                    seq > @
                      seq
                        xb.write ((((xself).xtype2test)) ("hello"))
                        xrosetta.write (((xbytearray)) ((((xrange)) (256))))
                        (((unsupported)) ((((unsupported)) ((xrosetta)) ((((xord)) ("o"))))) ((((xord)) ("e"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xb).xtranslate)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xb).xtranslate)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xb).xtranslate)) ((((xbytes)) ((((xrange)) (255))))))
                        xc.write ((((xb).xtranslate)) ((xrosetta)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) (((xself).xtype2test)))
                        xc.write ((((xb).xtranslate)) ((xrosetta)))
                        xd.write ((((xb).xtranslate)) ((xrosetta)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("helle"))
                        xc.write ((((xb).xtranslate)) ((xrosetta)) ("l"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("hee"))
                        xc.write ((((xb).xtranslate)) ("None: is there a None literal in the EO language?") ("e"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("hllo"))
                        xc.write (((unsupported)) (((xb).xtranslate)) ((xrosetta)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("helle"))
                        xc.write (((unsupported)) (((xb).xtranslate)) ((xrosetta)) ("l"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("hee"))
                        xc.write (((unsupported)) (((xb).xtranslate)) ("None: is there a None literal in the EO language?") ("e"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ("hllo"))
            (((unsupported)) ((xBaseBytesTest)) (((xunittest).xTestCase)))
              seq
                xtype2test.write (xbytes)
                xtest_getitem_error.write
                  [xself]
                    memory > xmsg
                    memory > xb
                    seq > @
                      seq
                        xb.write "python"
                        xmsg.write "byte indices must be integers or slices"
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ((xmsg)))))
                          (((unsupported)) ((xb)) ("a"))
                xtest_buffer_is_readonly.write
                  [xself]
                    memory > xfd
                    seq > @
                      seq
                        xfd.write ((((xos).xopen)) ((x__file__)) (((xos).xO_RDONLY)))
                        (((unsupported)) ((((unsupported)) ((xopen)) ((xfd)) ("rb") (0))) ((xf)))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).xreadinto)) (""))
                xtest_custom.write
                  [xself]
                    memory > x__index__
                    memory > x__bytes__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__bytes__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((((xA)) 0)))) ("abc"))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((((xA)) 0)))
                        (((unsupported)) 0)
                          x__bytes__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((((xA)) 0)))
                        (((unsupported)) 0)
                          seq
                            x__bytes__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("a"))
                            x__index__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((((xA)) 0)))) ("a"))
                        (((unsupported)) ((xstr)))
                          x__bytes__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((((xA)) ("u20ac"))))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((((xA)) ("u20ac"))) ("iso8859-15"))) ("xa4"))
                        (((unsupported)) 0)
                          x__bytes__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xOtherBytesSubclass)) ("abc"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((((xA)) 0)))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xbytes)) ((((xA)) 0)))))) ((xOtherBytesSubclass)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xBytesSubclass)) ((((xA)) 0)))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xBytesSubclass)) ((((xA)) 0)))))) ((xBytesSubclass)))
                xtest_from_format.write
                  [xself]
                    memory > xPyBytes_FromFormat
                    memory > xptr
                    memory > xsize_max
                    memory > xptr_format
                    memory > xptr_formatter
                    memory > xsizeof_ptr
                    memory > x_testcapi
                    memory > xctypes
                    seq > @
                      seq
                        xctypes.write (((((xtest).xsupport).ximport_module)) ("ctypes"))
                        x_testcapi.write (((((xtest).xsupport).ximport_module)) ("_testcapi"))
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        xPyBytes_FromFormat.write ((xpythonapi).xPyBytes_FromFormat)
                        (((unsupported)) (((xPyBytes_FromFormat).xargtypes)) ((((unsupported)) ((xc_char_p)))))
                        (((unsupported)) (((xPyBytes_FromFormat).xrestype)) ((xpy_object)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("format"))) ("format"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("Hello %s !") ("world"))) ("Hello world !"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("c=%c") ((((xc_int)) (0))))) ("c=0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("c=%c") ((((xc_int)) ((((xord)) ("@"))))))) ("c=@"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("c=%c") ((((xc_int)) (255))))) ("c=xff"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("d=%d ld=%ld zd=%zd") ((((xc_int)) (1))) ((((xc_long)) (2))) ((((xc_size_t)) (3))))) ("d=1 ld=2 zd=3"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("d=%d ld=%ld zd=%zd") ((((xc_int)) ((1.neg)))) ((((xc_long)) ((2.neg)))) ((((xc_size_t)) ((3.neg)))))) ("d=-1 ld=-2 zd=-3"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("u=%u lu=%lu zu=%zu") ((((xc_uint)) (123))) ((((xc_ulong)) (456))) ((((xc_size_t)) (789))))) ("u=123 lu=456 zu=789"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("i=%i") ((((xc_int)) (123))))) ("i=123"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("i=%i") ((((xc_int)) ((123.neg)))))) ("i=-123"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("x=%x") ((((xc_int)) (2748))))) ("x=abc"))
                        xsizeof_ptr.write ((((xctypes).xsizeof)) ((xc_char_p)))
                        (((xos).xname).eq "nt").if
                          seq
                            xptr_format.write ((("0x%0{}X".xformat)) ((2.mul (xsizeof_ptr))))
                            xptr_formatter.write
                              [xptr]
                                seq > @
                                  (((unsupported)) (((xptr_format).mod (xptr))))
                          xptr_formatter.write
                            [xptr]
                              seq > @
                                (((unsupported)) (("%#x".mod (xptr))))
                        xptr.write 11259375
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("ptr=%p") ((((xc_char_p)) ((xptr)))))) ((((("ptr=".add (((xptr_formatter)) ((xptr)))).xencode)) ("ascii"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("s=%s") ((((xc_char_p)) ("cstr"))))) ("s=cstr"))
                        xsize_max.write ((((xc_size_t)) ((1.neg))).xvalue)
                        (((unsupported)) ((((unsupported)) ((xformatstr)) ((xctypes_type)) ((xvalue)) ((xpy_formatter)))) ((((unsupported)) ((((unsupported)) ("%d") ((xc_int)) (((x_testcapi).xINT_MIN)) ((xstr)))) ((((unsupported)) ("%d") ((xc_int)) (((x_testcapi).xINT_MAX)) ((xstr)))) ((((unsupported)) ("%ld") ((xc_long)) (((x_testcapi).xLONG_MIN)) ((xstr)))) ((((unsupported)) ("%ld") ((xc_long)) (((x_testcapi).xLONG_MAX)) ((xstr)))) ((((unsupported)) ("%lu") ((xc_ulong)) (((x_testcapi).xULONG_MAX)) ((xstr)))) ((((unsupported)) ("%zd") ((xc_ssize_t)) (((x_testcapi).xPY_SSIZE_T_MIN)) ((xstr)))) ((((unsupported)) ("%zd") ((xc_ssize_t)) (((x_testcapi).xPY_SSIZE_T_MAX)) ((xstr)))) ((((unsupported)) ("%zu") ((xc_size_t)) ((xsize_max)) ((xstr)))) ((((unsupported)) ("%p") ((xc_char_p)) ((xsize_max)) ((xptr_formatter)))))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ((xformatstr)) ((((xctypes_type)) ((xvalue)))))) (((((((xpy_formatter)) ((xvalue))).xencode)) ("ascii"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%5s") ("a"))) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%.3s") ("abcdef"))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%%"))) ("%"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("[%%]"))) ("[%]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%%%c") ((((xc_int)) ((((xord)) ("_"))))))) ("%_"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%%s"))) ("%s"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%"))) ("%"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("x=%i y=%") ((((xc_int)) (2))) ((((xc_int)) (3))))) ("x=2 y=%"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xPyBytes_FromFormat)) ("%c") ((((xc_int)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xPyBytes_FromFormat)) ("%c") ((((xc_int)) (256))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) (""))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPyBytes_FromFormat)) ("%s") (""))) (""))
                xtest_bytes_blocking.write
                  [xself]
                    memory > xi
                    memory > x__bytes__
                    seq > @
                      seq
                        (((unsupported)) ((xlist)))
                          x__bytes__.write "None: is there a None literal in the EO language?"
                        xi.write (((unsupported)) (0) (1) (2) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((xi)))) ("x00x01x02x03"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((((xIterationBlocked)) ((xi)))))
                        (((unsupported)) ((xint)))
                          x__bytes__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) (3))) ("000"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((((xIntBlocked)) (3))))
                        (((unsupported)) ((xbytes)))
                          x__bytes__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ("ab"))) ("ab"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((((xBytesSubclassBlocked)) ("ab"))))
                        (((unsupported)) ((xbytearray)))
                          x__bytes__.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((((unsupported)) ((xba)) ((xbb)))) ((((unsupported)) ((((xbytearray)) ("ab"))) ((((xBufferBlocked)) ("ab"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes)) ((xba)))) ("ab"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xbytes)) ((xbb)))
            (((unsupported)) ((xBaseBytesTest)) (((xunittest).xTestCase)))
              seq
                xtype2test.write (xbytearray)
                xtest_getitem_error.write
                  [xself]
                    memory > xmsg
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("python"))
                        xmsg.write "bytearray indices must be integers or slices"
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ((xmsg)))))
                          (((unsupported)) ((xb)) ("a"))
                xtest_setitem_error.write
                  [xself]
                    memory > xmsg
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("python"))
                        xmsg.write "bytearray indices must be integers or slices"
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ((xmsg)))))
                          (((unsupported)) ((((unsupported)) ((xb)) ("a"))) ("python"))
                xtest_nohash.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((((xbytearray)) 0)))
                xtest_bytearray_api.write
                  [xself]
                    memory > xb
                    memory > xtfn
                    memory > xsample
                    memory > xshort_sample
                    memory > xn
                    seq > @
                      seq
                        xshort_sample.write "Hello worldn"
                        xsample.write ((xshort_sample).add ("0".mul (20.sub (((xlen)) ((xshort_sample))))))
                        xtfn.write ((((xtempfile).xmktemp)) 0)
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) ((((xopen)) ((xtfn)) ("wb"))) ((xf)))
                              bogusForceDataize.write ((((xf).xwrite)) ((xshort_sample)))
                            (((unsupported)) ((((xopen)) ((xtfn)) ("rb"))) ((xf)))
                              seq
                                xb.write (((xbytearray)) (20))
                                xn.write ((((xf).xreadinto)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xn)) ((((xlen)) ((xshort_sample)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((xsample)))))
                            (((unsupported)) ((((xopen)) ((xtfn)) ("wb"))) ((xf)))
                              bogusForceDataize.write ((((xf).xwrite)) ((xb)))
                            (((unsupported)) ((((xopen)) ((xtfn)) ("rb"))) ((xf)))
                              bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xread)) 0)) ((xsample)))
                          (((unsupported)) ((xOSError)))
                            bogusForceDataize.write ((((xos).xremove)) ((xtfn)))
                xtest_reverse.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xreverse)) 0)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("olleh"))
                        xb.write (((xbytearray)) ("hello1"))
                        bogusForceDataize.write ((((xb).xreverse)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("1olleh"))
                        xb.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xb).xreverse)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xb)))
                xtest_clear.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("python"))
                        bogusForceDataize.write ((((xb).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        xb.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xb).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        xb.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xb).xappend)) ((((xord)) ("r"))))
                        bogusForceDataize.write ((((xb).xclear)) 0)
                        bogusForceDataize.write ((((xb).xappend)) ((((xord)) ("p"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("p"))
                xtest_copy.write
                  [xself]
                    memory > xbb
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("abc"))
                        xbb.write ((((xb).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbb)) ("abc"))
                        xb.write (((xbytearray)) (""))
                        xbb.write ((((xb).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbb)) (""))
                        xb.write (((xbytearray)) ("abc"))
                        xbb.write ((((xb).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xbb)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xb)) ((xbb)))
                        bogusForceDataize.write ((((xbb).xappend)) ((((xord)) ("d"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbb)) ("abcd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("abc"))
                xtest_regexps.write
                  [xself]
                    memory > xby
                    memory > xb
                    seq > @
                      seq
                        xby.write
                          [xs]
                            seq > @
                              (((unsupported)) ((((xbytearray)) ((((xmap)) ((xord)) ((xs)))))))
                        xb.write (((xby)) ("Hello, world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xre).xfindall)) ("w+") ((xb)))) ((((unsupported)) ((((xby)) ("Hello"))) ((((xby)) ("world"))))))
                xtest_setitem.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) ((((unsupported)) ((xb)) (1))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (1) (100) (3))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((1.neg)))) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (1) (100) (200))))))
                        (((unsupported)) ((((unsupported)) ((xb)) (0))) ((((xIndexable)) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (10) (100) (200))))))
                        (((unsupported)) ((xIndexError)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xb)) (3))) (0))
                            bogusForceDataize.write ((((xself).xfail)) ("Didn't raise IndexError"))
                        (((unsupported)) ((xIndexError)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xb)) ((10.neg)))) (0))
                            bogusForceDataize.write ((((xself).xfail)) ("Didn't raise IndexError"))
                        (((unsupported)) ((xValueError)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xb)) (0))) (256))
                            bogusForceDataize.write ((((xself).xfail)) ("Didn't raise ValueError"))
                        (((unsupported)) ((xValueError)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xb)) (0))) ((((xIndexable)) ((1.neg)))))
                            bogusForceDataize.write ((((xself).xfail)) ("Didn't raise ValueError"))
                        (((unsupported)) ((xTypeError)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xb)) (0))) ("None: is there a None literal in the EO language?"))
                            bogusForceDataize.write ((((xself).xfail)) ("Didn't raise TypeError"))
                xtest_delitem.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((xrange)) (10))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((xrange)) (1) (10))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((xrange)) (1) (9))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) (4))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (1) (2) (3) (4) (6) (7) (8))))))
                xtest_setslice.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((xrange)) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (10))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (0) (5))))) ((((xbytearray)) ((((unsupported)) (1) (1) (1) (1) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (1) (1) (1) (1) (1) (5) (6) (7) (8) (9))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (0) ((5.neg)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (5) (6) (7) (8) (9))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (0) (0))))) ((((xbytearray)) ((((unsupported)) (0) (1) (2) (3) (4))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((xrange)) (10))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) ((7.neg)) ((3.neg)))))) ((((xbytearray)) ((((unsupported)) (100) (101))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (0) (1) (2) (100) (101) (7) (8) (9))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3) (5))))) ((((unsupported)) (3) (4) (5) (6))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((xrange)) (10))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3) (0))))) ((((unsupported)) (42) (42) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (0) (1) (2) (42) (42) (42) (3) (4) (5) (6) (7) (8) (9))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3))))) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (0) (1) (2) (102) (111) (111))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3))))) ((((xmemoryview)) ("foo"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (102) (111) (111) (102) (111) (111))))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3) (4))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((((unsupported)) (102) (111) (111) (111) (111))))))
                        (((unsupported)) ((xelem)) ((((unsupported)) (5) ((5.neg)) (0) ((((xint)) ((((unsupported)) 0)))) ("str") (2.3) ((((unsupported)) ("a") ("b"))) ((((unsupported)) ("a") ("b"))) ((((unsupported)) ((((unsupported)) 0)))))))
                          (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3) (4))))) ((xelem)))
                        (((unsupported)) ((xelem)) ((((unsupported)) ((((unsupported)) (254) (255) (256))) ((((unsupported)) ((256.neg)) (9000))))))
                          (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (3) (4))))) ((xelem)))
                xtest_setslice_extend.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((xrange)) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (100))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (10))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (10) (100))))))
                        bogusForceDataize.write ((((xb).xextend)) ((((xrange)) (100) (110))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (10) (110))))))
                xtest_fifo_overrun.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) (10))
                        bogusForceDataize.write ((((xb).xpop)) 0)
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (1))))))))
                        (((unsupported)) ((xb)) ((((xbytes)) (2))))
                        (((unsupported)) ((((unsupported)) ((xb)))))
                xtest_del_expand.write
                  [xself]
                    memory > xsize
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) (10))
                        xsize.write ((((xsys).xgetsizeof)) ((xb)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (1))))))))
                        bogusForceDataize.write ((((xself).xassertLessEqual)) (((((xsys).xgetsizeof)) ((xb)))) ((xsize)))
                xtest_extended_set_del_slice.write
                  [xself]
                    memory > xL
                    memory > xindices
                    memory > xb
                    memory > xdata
                    seq > @
                      seq
                        xindices.write (((unsupported)) (0) ("None: is there a None literal in the EO language?") (1) (3) (19) (300) ((((unsupported)) (1) (333))) (((xsys).xmaxsize)) ((1.neg)) ((2.neg)) ((31.neg)) ((300.neg)))
                        (((unsupported)) ((xstart)) ((xindices)))
                          (((unsupported)) ((xstop)) ((xindices)))
                            (((unsupported)) ((xstep)) ((((unsupported)) ((xindices)) ((((unsupported)) (1))))))
                              seq
                                xL.write (((xlist)) ((((xrange)) (255))))
                                xb.write (((xbytearray)) ((xL)))
                                xdata.write (((unsupported)) ((xL)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))
                                bogusForceDataize.write ((((xdata).xreverse)) 0)
                                (((unsupported)) ((((unsupported)) ((xL)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))) ((xdata)))
                                (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))) ((xdata)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((xL)))))
                                (((unsupported)) ((((unsupported)) ((((unsupported)) ((xL)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))))))
                                (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) ((xstart)) ((xstop)) ((xstep)))))))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((xL)))))
                xtest_setslice_trap.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((xrange)) (256))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (8))))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) (((((xlist)) ((((xrange)) (8)))).add (((xlist)) ((((xrange)) (256)))))))))
                xtest_iconcat.write
                  [xself]
                    memory > xb1
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("abc"))
                        xb1.write (xb)
                        (((unsupported)) ((xb)) ("def"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("abcdef"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xb1)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xb)) ((xb1)))
                        (((unsupported)) ((xb)) ("xyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("abcdefxyz"))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xb)) (""))
                          bogusForceDataize.write ((((xself).xfail)) ("bytes += unicode didn't raise TypeError"))
                xtest_irepeat.write
                  [xself]
                    memory > xb1
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("abc"))
                        xb1.write (xb)
                        (((unsupported)) ((xb)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("abcabcabc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xb1)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xb)) ((xb1)))
                xtest_irepeat_1char.write
                  [xself]
                    memory > xb1
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("x"))
                        xb1.write (xb)
                        (((unsupported)) ((xb)) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (("x".mul 100)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xb1)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xb)) ((xb1)))
                xtest_alloc.write
                  [xself]
                    memory > xalloc
                    memory > xseq
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) 0)
                        xalloc.write ((((xb).x__alloc__)) 0)
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)) ((xalloc)) (0))
                        xseq.write (((unsupported)) ((xalloc)))
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          seq
                            (((unsupported)) ((xb)) ("x"))
                            xalloc.write ((((xb).x__alloc__)) 0)
                            bogusForceDataize.write ((((xself).xassertGreater)) ((xalloc)) ((((xlen)) ((xb)))))
                            (((unsupported)) ((xalloc)) ((xseq))).if
                              bogusForceDataize.write ((((xseq).xappend)) ((xalloc)))
                xtest_init_alloc.write
                  [xself]
                    memory > xalloc
                    memory > xb
                    memory > xg
                    seq > @
                      seq
                        xb.write (((xbytearray)) 0)
                        xg.write
                          []
                            memory > xalloc
                            memory > xa
                            seq > @
                              (((unsupported)) ((xi)) ((((xrange)) (1) (100))))
                                seq
                                  (((unsupported)) ((xi)))
                                  xa.write (((xlist)) ((xb)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((xlist)) ((((xrange)) (1) (((((xlen)) ((xa))).add 1)))))))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) ((((xlen)) ((xa)))))
                                  bogusForceDataize.write ((((xself).xassertLessEqual)) ((((xlen)) ((xb)))) ((xi)))
                                  xalloc.write ((((xb).x__alloc__)) 0)
                                  bogusForceDataize.write ((((xself).xassertGreater)) ((xalloc)) ((((xlen)) ((xb)))))
                        bogusForceDataize.write ((((xb).x__init__)) ((((xg)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xb)))) ((((xlist)) ((((xrange)) (1) (100))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (99))
                        xalloc.write ((((xb).x__alloc__)) 0)
                        bogusForceDataize.write ((((xself).xassertGreater)) ((xalloc)) ((((xlen)) ((xb)))))
                xtest_extend.write
                  [xself]
                    memory > xorig
                    memory > xa
                    seq > @
                      seq
                        xorig.write "hello"
                        xa.write (((xbytearray)) ((xorig)))
                        bogusForceDataize.write ((((xa).xextend)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (((xorig).add (xorig))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) (5))))) ((xorig)))
                        xa.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xa).xextend)) ((((xmap)) ((xint)) (((xorig).mul 25)))))
                        bogusForceDataize.write ((((xa).xextend)) ((((unsupported)) ((((xint)) ((xx)))) ((xx)) (((xorig).mul 25)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (((xorig).mul 50)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) ((5.neg)))))) ((xorig)))
                        xa.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xa).xextend)) ((((xiter)) ((((xmap)) ((xint)) (((xorig).mul 50)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (((xorig).mul 50)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) ((5.neg)))))) ((xorig)))
                        xa.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xa).xextend)) ((((xlist)) ((((xmap)) ((xint)) (((xorig).mul 50)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (((xorig).mul 50)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xa)) ((((unsupported)) ((5.neg)))))) ((xorig)))
                        xa.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xa).xextend)) ((((unsupported)) (0) (1) (2) (256))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xa).xextend)) ((((unsupported)) (0) (1) (2) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xa)))) (0))
                        xa.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xa).xextend)) ((((unsupported)) ((((xIndexable)) ((((xord)) ("a"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ("a"))
                xtest_remove.write
                  [xself]
                    memory > xc
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("hello"))
                        bogusForceDataize.write ((((xb).xremove)) ((((xord)) ("l"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("helo"))
                        bogusForceDataize.write ((((xb).xremove)) ((((xord)) ("l"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("heo"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((unsupported)) (((((xb).xremove)) ((((xord)) ("l"))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((((unsupported)) (((((xb).xremove)) (400))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((((xb).xremove)) ("e"))))))
                        bogusForceDataize.write ((((xb).xremove)) ((((xord)) ("o"))))
                        bogusForceDataize.write ((((xb).xremove)) ((((xord)) ("h"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("e"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((((xb).xremove)) ("e"))))))
                        bogusForceDataize.write ((((xb).xremove)) ((((xIndexable)) ((((xord)) ("e"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        xc.write (((xbytearray)) ((((unsupported)) (126) (127) (128) (129))))
                        bogusForceDataize.write ((((xc).xremove)) (127))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((xbytes)) ((((unsupported)) (126) (128) (129))))))
                        bogusForceDataize.write ((((xc).xremove)) (129))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((xbytes)) ((((unsupported)) (126) (128))))))
                xtest_pop.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xpop)) 0)) ((((xord)) ("d"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xpop)) (0))) ((((xord)) ("w"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xpop)) ((2.neg)))) ((((xord)) ("r"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) (((((xb).xpop)) (10))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((unsupported)) (((((((xbytearray)) 0).xpop)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xbytearray)) ("xff")).xpop)) 0)) (255))
                xtest_nosort.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((((unsupported)) (((((((xbytearray)) 0).xsort)) 0)))))
                xtest_append.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("hell"))
                        bogusForceDataize.write ((((xb).xappend)) ((((xord)) ("o"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xappend)) (100))) ("None: is there a None literal in the EO language?"))
                        xb.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xb).xappend)) ((((xord)) ("A"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xb)))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((((xb).xappend)) ("o"))))))
                        xb.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xb).xappend)) ((((xIndexable)) ((((xord)) ("A"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("A"))
                xtest_insert.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("msssspp"))
                        bogusForceDataize.write ((((xb).xinsert)) (1) ((((xord)) ("i"))))
                        bogusForceDataize.write ((((xb).xinsert)) (4) ((((xord)) ("i"))))
                        bogusForceDataize.write ((((xb).xinsert)) ((2.neg)) ((((xord)) ("i"))))
                        bogusForceDataize.write ((((xb).xinsert)) (1000) ((((xord)) ("i"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("mississippi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((unsupported)) (((((xb).xinsert)) (0) ("1"))))))
                        xb.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xb).xinsert)) (0) ((((xIndexable)) ((((xord)) ("A"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("A"))
                xtest_copied.write
                  [xself]
                    memory > xt
                    memory > xx
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xb)) (((((xb).xreplace)) ("abc") ("cde") (0))))
                        xt.write (((xbytearray)) ((((unsupported)) ((xi)) ((xi)) ((((xrange)) (256))))))
                        xx.write (((xbytearray)) (""))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xx)) (((((xx).xtranslate)) ((xt)))))
                xtest_partition_bytearray_doesnt_share_nullstring.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) (((((((xbytearray)) ("x")).xpartition)) ("y"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xb)) ((xc)))
                        (((unsupported)) ((xb)) ("!"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)) ((xc)))) (((((((xbytearray)) ("x")).xpartition)) ("y"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                        (((unsupported)) ((((unsupported)) ((xb)) ((xc)) ((xa)))) (((((((xbytearray)) ("x")).xrpartition)) ("y"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xb)) ((xc)))
                        (((unsupported)) ((xb)) ("!"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                        (((unsupported)) ((((unsupported)) ((xc)) ((xb)) ((xa)))) (((((((xbytearray)) ("x")).xrpartition)) ("y"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) (""))
                xtest_resize_forbidden.write
                  [xself]
                    memory > xorig
                    memory > xb
                    memory > xdelitem
                    memory > xresize
                    memory > xv
                    memory > xdelslice
                    seq > @
                      seq
                        xb.write (((xbytearray)) ((((xrange)) (10))))
                        xv.write (((xmemoryview)) ((xb)))
                        xresize.write
                          [xn]
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (1) ((1.neg)))))) ((((xrange)) (((xn).add 1)) (((2.mul (xn)).sub 1)))))
                        bogusForceDataize.write (((xresize)) (10))
                        xorig.write (((unsupported)) ((xb)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xresize)) (11))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xresize)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xresize)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) (((xb).xpop)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) (((xb).xremove)) ((((unsupported)) ((xb)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        xdelitem.write
                          []
                            seq > @
                              (((unsupported)) ((((unsupported)) ((((unsupported)) ((xb)) (1))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xdelitem)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                        xdelslice.write
                          []
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (1) ((1.neg)) (2))))) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xdelslice)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((xorig)))
                xtest_obsolete_write_lock.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBufferError)) ((xgetbuffer_with_null_view)) ((((xbytearray)) 0)))
                xtest_iterator_pickling2.write
                  [xself]
                    memory > xitorig
                    memory > xd
                    memory > xorig
                    memory > xdata
                    seq > @
                      seq
                        xorig.write (((xbytearray)) ("abc"))
                        xdata.write (((xlist)) ("qwerty"))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xitorig.write (((xiter)) ((xorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xb)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) 0)))) ((xdata)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((xdata)))
                            bogusForceDataize.write (((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xb)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) 0)))) ((xdata)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) ((xdata)) ((((unsupported)) (1))))))
                            (((unsupported)) ((xi)) ((((xrange)) (1) ((((xlen)) ((xorig)))))))
                              bogusForceDataize.write (((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xb)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) 0)))) ((xdata)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xit)))) ((((xtype)) ((xitorig)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) ((xdata)) ((((unsupported)) ((((xlen)) ((xorig)))))))))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xStopIteration)) ((xnext)) ((xitorig)))
                            xd.write ((((xpickle).xdumps)) ((((unsupported)) ((xitorig)) ((xorig)))) ((xproto)))
                            (((unsupported)) ((((unsupported)) ((xit)) ((xb)))) (((((xpickle).xloads)) ((xd)))))
                            (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) 0)))) ((xdata)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) 0)))
                xtest_exhausted_iterator.write ((((xtest).xlist_tests).xCommonTest).xtest_exhausted_iterator)
                xtest_iterator_length_hint.write
                  [xself]
                    memory > xit
                    memory > xba
                    seq > @
                      seq
                        xba.write (((xbytearray)) ("ab"))
                        xit.write (((xiter)) ((xba)))
                        bogusForceDataize.write (((xnext)) ((xit)))
                        bogusForceDataize.write ((((xba).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) 0)))
                xtest_repeat_after_setslice.write
                  [xself]
                    memory > xb1
                    memory > xb
                    memory > xb3
                    seq > @
                      seq
                        xb.write (((xbytearray)) ("abc"))
                        (((unsupported)) ((((unsupported)) ((xb)) ((((unsupported)) (2))))) ("x"))
                        xb1.write ((xb).mul 1)
                        xb3.write ((xb).mul 3)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb1)) ("xc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb1)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb3)) ("xcxcxc"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_repr_str.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xf)) ((((unsupported)) ((xstr)) ((xrepr)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((((xbytearray)) 0)))) ("bytearray(b'')"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((((xbytearray)) ((((unsupported)) (0))))))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((((xbytearray)) ((((unsupported)) (0) (1) (254) (255))))))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ("abc"))) ("b'abc'"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ("'"))) ("b\"'\""))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ("'\""))) ("b''\"'"))
                xtest_format.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xb)) ((((unsupported)) ("abc") ((((xbytearray)) ("abc"))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xformat)) ((xb)))) ((((xstr)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xformat)) ((xb)) (""))) ((((xstr)) ((xb)))))
                            (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) (("b%sb".mod ((((xre).xescape)) (((((xtype)) ((xb))).x__name__))))))))
                              bogusForceDataize.write (((xformat)) ((xb)) ("s"))
                xtest_compare_bytes_to_bytearray.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".eq (((xbytes)) ("abc")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".neq (((xbytes)) ("abc")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".leq (((xbytes)) ("abc")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".less (((xbytes)) ("abc")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".geq (((xbytes)) ("ab")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".greater (((xbytes)) ("ab")))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".neq (((xbytes)) ("abc")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".eq (((xbytes)) ("abc")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".greater (((xbytes)) ("abc")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("ab".geq (((xbytes)) ("abc")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".less (((xbytes)) ("ab")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (("abc".leq (((xbytes)) ("ab")))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).eq "abc")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).neq "abc")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).leq "abc")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).less "abc")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).geq "ab")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).greater "ab")) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).neq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).eq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).greater "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("ab")).geq "abc")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).less "ab")) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xbytes)) ("abc")).leq "ab")) (FALSE))
                xtest_doc.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNotNone)) (((xbytearray).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((xbytearray).x__doc__).xstartswith)) ("bytearray("))) (((xbytearray).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertIsNotNone)) (((xbytes).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((xbytes).x__doc__).xstartswith)) ("bytes("))) (((xbytes).x__doc__)))
                xtest_from_bytearray.write
                  [xself]
                    memory > xsample
                    memory > xbuf
                    memory > xb
                    seq > @
                      seq
                        xsample.write (((xbytes)) ("Hello worldnx80x81xfexff"))
                        xbuf.write (((xmemoryview)) ((xsample)))
                        xb.write (((xbytearray)) ((xbuf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((xsample)))))
                xtest_to_str.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) (""))) ("b''"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ("x"))) ("b'x'"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ("x80"))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xbytearray)) (""))))) ("bytearray(b'')"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xbytearray)) ("x"))))) ("bytearray(b'x')"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xbytearray)) ("x80"))))) ((((unsupported)) 0)))
                xtest_literal.write
                  [xself]
                    memory > xtests
                    seq > @
                      seq
                        xtests.write (((unsupported)) ((((unsupported)) ("Wonderful spam") ("Wonderful spam"))) ((((unsupported)) ("Wonderful spam too") ("Wonderful spam too"))) ((((unsupported)) ("xaax00000200") ("xaax00000200"))) ((((unsupported)) ("xaax00000200") ("xaax00000200"))))
                        (((unsupported)) ((((unsupported)) ((xb)) ((xs)))) ((xtests)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xbytearray)) ((xs)) ("latin-1"))))
                        (((unsupported)) ((xc)) ((((xrange)) (128) (256))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (("b\"%s\"".mod (((xchr)) ((xc))))))
                xtest_split_bytearray.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((("a b".xsplit)) ((((xmemoryview)) (" "))))) ((((unsupported)) ("a") ("b"))))
                xtest_rsplit_bytearray.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((("a b".xrsplit)) ((((xmemoryview)) (" "))))) ((((unsupported)) ("a") ("b"))))
                xtest_return_self.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        xb.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((((xb).xreplace)) ("") (""))) ((xb)))
                xtest_compare.write
                  [xself]
                    memory > xbytes_warning
                    seq > @
                      (((unsupported)) 0)
                        xbytes_warning.write
                          []
                            seq > @
                              (((unsupported)) ((((((xtest).xsupport).xcheck_warnings)) ((((unsupported)) ("") ((xBytesWarning)))))))
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
                        (((unsupported)) ((((xbytes_warning)) 0)))
                          unsupported
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xmarshal.write
                  [xself xx]
                    seq > @
                      (((unsupported)) ((((xbytearray)) ((xx)))))
                xtest_returns_new_copy.write
                  [xself]
                    memory > xval
                    memory > xsep
                    memory > xnewval
                    memory > xmethod
                    seq > @
                      seq
                        xval.write ((((xself).xmarshal)) ("1234"))
                        (((unsupported)) ((xmethname)) ((((unsupported)) ("zfill") ("rjust") ("ljust") ("center"))))
                          seq
                            xmethod.write (((xgetattr)) ((xval)) ((xmethname)))
                            xnewval.write (((xmethod)) (3))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xval)) ((xnewval)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((xval)) ((xnewval)) (((xmethname).add " returned self on a mutable object")))
                        (((unsupported)) ((xexpr)) ((((unsupported)) ("val.split()[0]") ("val.rsplit()[0]") ("val.partition(b\".\")[0]") ("val.rpartition(b\".\")[2]") ("val.splitlines()[0]") ("val.replace(b\"\", b\"\")"))))
                          seq
                            xnewval.write (((xeval)) ((xexpr)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xval)) ((xnewval)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((xval)) ((xnewval)) (((xexpr).add " returned val on a mutable object")))
                        xsep.write ((((xself).xmarshal)) (""))
                        xnewval.write ((((xsep).xjoin)) ((((unsupported)) ((xval)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xval)) ((xnewval)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xval)) ((xnewval)))
            (((unsupported)) ((((xtest).xstring_tests).xBaseTest)))
              seq
                xfixtype.write
                  [xself xobj]
                    seq > @
                      seq
                        (((xisinstance)) ((xobj)) ((xstr))).if
                          (((unsupported)) (((((xself).xtype2test)) (((((xobj).xencode)) ("utf-8"))))))
                        (((unsupported)) (((((((xsuper)) 0).xfixtype)) ((xobj)))))
                xcontains_bytes.write TRUE
            (((unsupported)) ((xFixedStringTest)) (((xunittest).xTestCase)))
              xtype2test.write (xbytearray)
            (((unsupported)) ((xFixedStringTest)) (((xunittest).xTestCase)))
              xtype2test.write (xbytes)
            (((unsupported)) 0)
              seq
                xtest_basic.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) (((xself).xtype2test)) (((xself).xbasetype)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xself).xtype2test)) 0)) (((xself).xbasetype)))
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) ("abcd") ("efgh"))))
                        (((unsupported)) ((((unsupported)) ((x_a)) ((x_b)))) ((((unsupported)) (((((xself).xtype2test)) ((xa)))) (((((xself).xtype2test)) ((xb)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_a).eq (x_a))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_a).neq (x_b))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_a).less (x_b))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_a).leq (x_b))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_b).geq (x_a))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((x_b).greater (x_a))))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((x_a)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).add (xb))) (((x_a).add (x_b))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).add (xb))) (((xa).add (x_b))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).add (xb))) (((x_a).add (xb))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xa).mul 5).eq ((x_a).mul 5))))
                xtest_join.write
                  [xself]
                    memory > xs1
                    memory > xs2
                    memory > xs3
                    seq > @
                      seq
                        xs1.write ((((xself).xtype2test)) ("abcd"))
                        xs2.write (((((((xself).xbasetype)) 0).xjoin)) ((((unsupported)) ((xs1)))))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((xs1)) ((xs2)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs2)))) (((xself).xbasetype)) ((((xtype)) ((xs2)))))
                        xs3.write ((((xs1).xjoin)) ((((unsupported)) ("abcd"))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs3)))) (((xself).xbasetype)))
                xtest_pickle.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write ((((xself).xtype2test)) ("abcd"))
                        (((unsupported)) (((xa).xx)) (10))
                        (((unsupported)) (((xa).xy)) (((((xself).xtype2test)) ("efgh"))))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xb.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xa)) ((xproto)))))
                            bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xa)))) ((((xid)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (((xb).xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xy)) (((xb).xy)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xa)))) ((((xtype)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((xa).xy)))) ((((xtype)) (((xb).xy)))))
                xtest_copy.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write ((((xself).xtype2test)) ("abcd"))
                        (((unsupported)) (((xa).xx)) (10))
                        (((unsupported)) (((xa).xy)) (((((xself).xtype2test)) ("efgh"))))
                        (((unsupported)) ((xcopy_method)) ((((unsupported)) (((xcopy).xcopy)) (((xcopy).xdeepcopy)))))
                          seq
                            xb.write (((xcopy_method)) ((xa)))
                            bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xid)) ((xa)))) ((((xid)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xx)) (((xb).xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xy)) (((xb).xy)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xa)))) ((((xtype)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((xa).xy)))) ((((xtype)) (((xb).xy)))))
                xtest_fromhex.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    memory > xb
                    seq > @
                      seq
                        xb.write (((((xself).xtype2test).xfromhex)) ("1a2B30"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x1ax2bx30"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) (((xself).xtype2test)))
                        (((unsupported)) (((xself).xbasetype)))
                          x__new__.write
                            [xcls xvalue]
                              memory > xme
                              seq > @
                                seq
                                  xme.write (((((xself).xbasetype).x__new__)) ((xcls)) ((xvalue)))
                                  (((unsupported)) (((xme).xfoo)) ("bar"))
                                  (((unsupported)) ((xme)))
                        xb.write ((((xB1).xfromhex)) ("1a2B30"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x1ax2bx30"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) ((xB1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) ("bar"))
                        (((unsupported)) (((xself).xbasetype)))
                          x__init__.write
                            [xme]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xself).xbasetype)) ((xbytes))).if
                                    bogusForceDataize.write (((((xself).xbasetype).x__init__)) ((xme)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xme).xfoo)) ("bar"))
                        xb.write ((((xB2).xfromhex)) ("1a2B30"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ("x1ax2bx30"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xb)))) ((xB2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xfoo)) ("bar"))
            (((unsupported)) ((xbytearray)))
            (((unsupported)) ((xbytes)))
            (((unsupported)) ((xbytes)))
            (((unsupported)) ((xSubclassTest)) (((xunittest).xTestCase)))
              seq
                xbasetype.write (xbytearray)
                xtype2test.write (xByteArraySubclass)
                xtest_init_override.write
                  [xself]
                    memory > xx
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xbytearray)))
                          x__init__.write
                            [xme xnewarg]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((xbytearray).x__init__)) ((xme)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                        xx.write (((xsubclass)) (4) ("abcd"))
                        xx.write (((unsupported)) ((xsubclass)) (4) ("abcd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("abcd"))
                        xx.write (((unsupported)) ((xsubclass)) (4) ("abcd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) ("abcd"))
            (((unsupported)) ((xSubclassTest)) (((xunittest).xTestCase)))
              seq
                xbasetype.write (xbytes)
                xtype2test.write (xBytesSubclass)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)