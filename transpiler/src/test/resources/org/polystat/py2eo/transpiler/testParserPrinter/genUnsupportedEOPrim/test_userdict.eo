memory > xlist
memory > xRuntimeError
memory > xstr
memory > xrange
memory > xcollections
memory > xKeyError
memory > xerr
memory > xhasattr
memory > xmapping_tests
memory > xMyUserDict
memory > xlen
memory > xk
memory > xD
memory > xb
memory > xG
memory > xkw
memory > xprint
memory > xset
memory > xrepr
memory > xi
memory > xF
memory > xsorted
memory > xDeprecationWarning
memory > xE
memory > xunittest
memory > xTypeError
memory > x__name__
memory > xa
[] > test_userdict
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_missing
        memory > xtest_init
        memory > xd0
        memory > xd3
        memory > xd1
        memory > xd4
        memory > xtype2test
        memory > xd5
        memory > xd2
        memory > xtest_update
        memory > xtest_all
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xd0.write (((unsupported)) 0)
            xd1.write (((unsupported)) ("one") (1))
            xd2.write (((unsupported)) ("one") (1) ("two") (2))
            xd3.write (((unsupported)) ("one") (1) ("two") (3) ("three") (5))
            xd4.write (((unsupported)) ("one") ("None: is there a None literal in the EO language?") ("two") ("None: is there a None literal in the EO language?"))
            xd5.write (((unsupported)) ("one") (1) ("two") (1))
            (((unsupported)) (((xmapping_tests).xTestHashMappingProtocol)))
              seq
                xtype2test.write ((xcollections).xUserDict)
                xtest_all.write
                  [xself]
                    memory > xuu0
                    memory > xu
                    memory > xall
                    memory > xu2
                    memory > xikeys
                    memory > xkeys
                    memory > xuu2
                    memory > xu2a
                    memory > xu0
                    memory > xuu
                    memory > xm2
                    memory > xm2a
                    memory > xu2b
                    memory > xu1
                    memory > xuu1
                    memory > xt
                    memory > xdisplay
                    memory > xu3
                    memory > xu2c
                    seq > @
                      seq
                        xu.write ((((xcollections).xUserDict)) 0)
                        xu0.write ((((xcollections).xUserDict)) ((xd0)))
                        xu1.write ((((xcollections).xUserDict)) ((xd1)))
                        xu2.write ((((xcollections).xUserDict)) ((xd2)))
                        xuu.write ((((xcollections).xUserDict)) ((xu)))
                        xuu0.write ((((xcollections).xUserDict)) ((xu0)))
                        xuu1.write ((((xcollections).xUserDict)) ((xu1)))
                        xuu2.write ((((xcollections).xUserDict)) ((xu2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xcollections).xUserDict)) (1) (2))) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcollections).xUserDict)) ((((unsupported)) ((((unsupported)) ("one") (1))) ((((unsupported)) ("two") (2))))))) ((xd2)))
                        (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("'dict'"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xcollections).xUserDict)) ((((unsupported)) ((((unsupported)) ("one") (1))) ((((unsupported)) ("two") (2))))))) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xcollections).xUserDict)) ((((unsupported)) ((((unsupported)) ("one") (1))) ((((unsupported)) ("two") (2))))) (3) (5))) ((xd3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xcollections).xUserDict).xfromkeys)) (((("one two".xsplit)) 0)))) ((xd4)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xcollections).xUserDict)) 0).xfromkeys)) (((("one two".xsplit)) 0)))) ((xd4)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xcollections).xUserDict).xfromkeys)) (((("one two".xsplit)) 0)) (1))) ((xd5)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((((xcollections).xUserDict)) 0).xfromkeys)) (((("one two".xsplit)) 0)) (1))) ((xd5)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((((xu1).xfromkeys)) (((("one two".xsplit)) 0)))) ((xu1)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xu1).xfromkeys)) (((("one two".xsplit)) 0)))) (((xcollections).xUserDict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xu2).xfromkeys)) (((("one two".xsplit)) 0)))) (((xcollections).xUserDict)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xu0)))) ((((xstr)) ((xd0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xu1)))) ((((xrepr)) ((xd1)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xrepr)) ((xu2)))) ((((unsupported)) ("{'one': 1, 'two': 2}") ("{'two': 2, 'one': 1}"))))
                        xall.write (((unsupported)) ((xd0)) ((xd1)) ((xd2)) ((xu)) ((xu0)) ((xu1)) ((xu2)) ((xuu)) ((xuu0)) ((xuu1)) ((xuu2)))
                        (((unsupported)) ((xa)) ((xall)))
                          (((unsupported)) ((xb)) ((xall)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xa).eq (xb))) (((((xlen)) ((xa))).eq (((xlen)) ((xb))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xu2)) ("one"))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xu1).x__getitem__)) ("two"))
                        xu3.write ((((xcollections).xUserDict)) ((xu2)))
                        (((unsupported)) ((((unsupported)) ((xu3)) ("two"))) (2))
                        (((unsupported)) ((((unsupported)) ((xu3)) ("three"))) (3))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xu3)) ("three"))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xu3).x__delitem__)) ("three"))
                        bogusForceDataize.write ((((xu3).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu3)) ((((unsupported)) 0)))
                        xu2a.write ((((xu2).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu2a)) ((xu2)))
                        xu2b.write (((unsupported)) (((xcollections).xUserDict)) (42) (23))
                        xu2c.write ((((xu2b).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xu2b)) ((xu2c)))
                        (((unsupported)) (((xcollections).xUserDict)))
                          xdisplay.write
                            [xself]
                              seq > @
                                bogusForceDataize.write (((xprint)) ((xself)))
                        xm2.write (((xMyUserDict)) ((xu2)))
                        xm2a.write ((((xm2).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xm2a)) ((xm2)))
                        (((unsupported)) ((((unsupported)) ((xm2)) ("foo"))) ("bar"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xm2a)) ((xm2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xu2).xkeys)) 0)))) ((((xsorted)) (((((xd2).xkeys)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xu2).xitems)) 0)))) ((((xsorted)) (((((xd2).xitems)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xu2).xvalues)) 0)))) ((((xsorted)) (((((xd2).xvalues)) 0)))))
                        (((unsupported)) ((xi)) (((((xu2).xkeys)) 0)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)) ((xi)) ((xu2)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xi)) ((xu1)))) ((((unsupported)) ((xi)) ((xd1)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xi)) ((xu0)))) ((((unsupported)) ((xi)) ((xd0)))))
                        xt.write ((((xcollections).xUserDict)) 0)
                        bogusForceDataize.write ((((xt).xupdate)) ((xu2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((xu2)))
                        (((unsupported)) ((xi)) (((((xu2).xkeys)) 0)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xu2).xget)) ((xi)))) ((((unsupported)) ((xu2)) ((xi)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xu1).xget)) ((xi)))) (((((xd1).xget)) ((xi)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xu0).xget)) ((xi)))) (((((xd0).xget)) ((xi)))))
                        (((unsupported)) ((xi)) ((((xrange)) (20))))
                          (((unsupported)) ((((unsupported)) ((xu2)) ((xi)))) ((((xstr)) ((xi)))))
                        xikeys.write (((unsupported)) 0)
                        (((unsupported)) ((xk)) ((xu2)))
                          bogusForceDataize.write ((((xikeys).xappend)) ((xk)))
                        xkeys.write ((((xu2).xkeys)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((xikeys)))) ((((xset)) ((xkeys)))))
                        xt.write ((((xcollections).xUserDict)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xsetdefault)) ("x") (42))) (42))
                        bogusForceDataize.write ((((xself).xassertIn)) ("x") ((xt)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xsetdefault)) ("x") (23))) (42))
                        xt.write (((unsupported)) (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xpop)) ("x"))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xt).xpop)) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xpop)) ("x") (1))) (1))
                        (((unsupported)) ((((unsupported)) ((xt)) ("x"))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xpop)) ("x") (1))) (42))
                        xt.write (((unsupported)) (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xpopitem)) 0)) ((((unsupported)) ("x") (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xt).xpopitem)))
                xtest_init.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xkw)) ((((unsupported)) ("self") ("other") ("iterable"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((((((xcollections).xUserDict)) ((((unsupported)) ((((unsupported)) ((xkw)) (42)))))).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xkw)) (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) (((xcollections).xUserDict)) ((((unsupported)) 0)) (42)).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("dict") (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) (((xcollections).xUserDict)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?")).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("dict") ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)) (((((xself).xassertWarnsRegex)) ((xDeprecationWarning)) ("'dict'"))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) (((xcollections).xUserDict)) ((((unsupported)) ("a") (42)))).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (42))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xcollections).xUserDict)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xcollections).xUserDict).x__init__)))
                xtest_update.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)) ((xkw)) ((((unsupported)) ("self") ("dict") ("other") ("iterable"))))
                          seq
                            xd.write ((((xcollections).xUserDict)) 0)
                            bogusForceDataize.write ((((xd).xupdate)) ((((unsupported)) ((((unsupported)) ((xkw)) (42))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xkw)) (42))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xcollections).xUserDict)) 0).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((((xcollections).xUserDict)) 0).xupdate)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xcollections).xUserDict).xupdate)))
                xtest_missing.write
                  [xself]
                    memory > xd
                    memory > x__missing__
                    memory > xg
                    memory > xf
                    memory > x__init__
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhasattr)) (((xcollections).xUserDict)) ("__missing__"))) (FALSE))
                        (((unsupported)) (((xcollections).xUserDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)) (42))
                        xd.write (((xD)) ((((unsupported)) (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) (3))) (4))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (2) ((xd)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (2) (((((xd).xkeys)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) (2))) (42))
                        (((unsupported)) (((xcollections).xUserDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)) ((((xRuntimeError)) ((xkey)))))
                        xe.write (((xE)) 0)
                        (((unsupported)) ((xRuntimeError)))
                          (((unsupported)) ((xe)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xerr).xargs)) ((((unsupported)) (42))))
                          bogusForceDataize.write ((((xself).xfail)) ("e[42] didn't raise RuntimeError"))
                        (((unsupported)) (((xcollections).xUserDict)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).x__missing__)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                                  bogusForceDataize.write (((((xcollections).xUserDict).x__init__)) ((xself)))
                        xf.write (((xF)) 0)
                        (((unsupported)) ((xKeyError)))
                          (((unsupported)) ((xf)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xerr).xargs)) ((((unsupported)) (42))))
                          bogusForceDataize.write ((((xself).xfail)) ("f[42] didn't raise KeyError"))
                        (((unsupported)) (((xcollections).xUserDict)))
                        xg.write (((xG)) 0)
                        (((unsupported)) ((xKeyError)))
                          (((unsupported)) ((xg)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xerr).xargs)) ((((unsupported)) (42))))
                          bogusForceDataize.write ((((xself).xfail)) ("g[42] didn't raise KeyError"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)