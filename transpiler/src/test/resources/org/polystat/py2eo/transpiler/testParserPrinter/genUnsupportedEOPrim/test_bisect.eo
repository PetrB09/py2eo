memory > xTestBisect
memory > xZeroDivisionError
memory > xLenOnly
memory > xr
memory > xi
memory > xList
memory > xsorted
memory > xUserList
memory > xscore
memory > xGetOnly
memory > xmin
memory > xexpected
memory > xdata
memory > xlist
memory > xTestInsort
memory > xValueError
memory > xfunc
memory > xRange
memory > xrange
memory > xIndexError
memory > xchoice
memory > xinsorted
memory > xmax
memory > xf
memory > xrandrange
memory > xTestDocExample
memory > xsupport
memory > xsys
memory > xunittest
memory > xelem
memory > xobject
memory > xCmpErr
memory > xj
memory > xlen
memory > xTypeError
memory > xTestErrorHandling
memory > x__name__
[] > test_bisect
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_keyword_args
        memory > xtest_random
        memory > xinsert
        memory > x__gt__
        memory > x__init__
        memory > xtest_get_only
        memory > x__len__
        memory > xtest_listDerived
        memory > xtest_grades
        memory > x__ge__
        memory > xtest_non_sequence
        memory > xtest_backcompatibility
        memory > xtest_vsBuiltinSort
        memory > x__eq__
        memory > xtest_colors
        memory > xtest_cmp_err
        memory > xpy_bisect
        memory > xtest_negative_lo
        memory > xtest_arg_parsing
        memory > x__getitem__
        memory > xtest_large_pyrange
        memory > xtest_precomputed
        memory > xsetUp
        memory > x__le__
        memory > x__lt__
        memory > x__ne__
        memory > xtest_large_range
        memory > xmodule
        memory > xtest_len_only
        memory > xc_bisect
        memory > xtest_optionalSlicing
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xpy_bisect.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("bisect") ((((unsupported)) ("_bisect"))))
            xc_bisect.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("bisect") ((((unsupported)) ("_bisect"))))
            (((unsupported)) ((xobject)))
              seq
                unsupported
                x__init__.write
                  [xself xstart xstop]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xstart)) ((xstart)))
                        (((unsupported)) (((xself).xstop)) ((xstop)))
                        (((unsupported)) (((xself).xlast_insert)) ("None: is there a None literal in the EO language?"))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xself).xstop).sub ((xself).xstart))))
                x__getitem__.write
                  [xself xidx]
                    memory > xn
                    seq > @
                      seq
                        xn.write (((xself).xstop).sub ((xself).xstart))
                        ((xidx).less 0).if
                          (((unsupported)) ((xidx)) ((xn)))
                        ((xidx).geq (xn)).if
                          (((unsupported)) ((((xIndexError)) ((xidx)))))
                        (((unsupported)) ((((xself).xstart).add (xidx))))
                xinsert.write
                  [xself xidx xitem]
                    seq > @
                      (((unsupported)) (((xself).xlast_insert)) ((((unsupported)) ((xidx)) ((xitem)))))
            (((unsupported)) 0)
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xprecomputedCases)) ((((unsupported)) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) 0)) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1))) (1) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1))) (2) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1))) (1) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1))) (2) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1))) (1) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1))) (2) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1) (1))) (1) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (1) (1))) (2) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2))) (1) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2))) (2) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2))) (3) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (2) (2))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (2) (2))) (1) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (2) (2))) (1.5) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (2) (2))) (2) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (1) (2) (2))) (3) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (1) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (2) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (2.5) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (3) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (3))) (4) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (1) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (2) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (2.5) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (3) (6))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (3.5) (6))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (4) (10))) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (5) (10))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) 0)) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1))) (2) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1))) (2) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1))) (2) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1) (1))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1) (1))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (1) (1))) (2) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2))) (2) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2))) (3) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (2) (2))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (2) (2))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (2) (2))) (1.5) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (2) (2))) (2) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (1) (2) (2))) (3) (4))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (2) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (2.5) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (3) (2))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (3))) (4) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (0) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (1) (0))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (1.5) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (2) (1))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (2.5) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (3) (3))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (3.5) (6))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (4) (6))) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((unsupported)) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4))) (5) (10))))))
                xtest_precomputed.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xfunc)) ((xdata)) ((xelem)) ((xexpected)))) (((xself).xprecomputedCases)))
                        seq
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xfunc)) ((xdata)) ((xelem)))) ((xexpected)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xfunc)) ((((xUserList)) ((xdata)))) ((xelem)))) ((xexpected)))
                xtest_negative_lo.write
                  [xself]
                    memory > xmod
                    seq > @
                      seq
                        xmod.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmod).xbisect_left)) ((((unsupported)) (1) (2) (3))) (5) ((1.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmod).xbisect_right)) ((((unsupported)) (1) (2) (3))) (5) ((1.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmod).xinsort_left)) ((((unsupported)) (1) (2) (3))) (5) ((1.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmod).xinsort_right)) ((((unsupported)) (1) (2) (3))) (5) ((1.neg)) (3))
                xtest_large_range.write
                  [xself]
                    memory > xn
                    memory > xmod
                    memory > xdata
                    seq > @
                      seq
                        xmod.write ((xself).xmodule)
                        xn.write ((xsys).xmaxsize)
                        xdata.write (((xrange)) (((xn).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_left)) ((xdata)) (((xn).sub 3)))) (((xn).sub 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_right)) ((xdata)) (((xn).sub 3)))) (((xn).sub 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_left)) ((xdata)) (((xn).sub 3)) (((xn).sub 10)) ((xn)))) (((xn).sub 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_right)) ((xdata)) (((xn).sub 3)) (((xn).sub 10)) ((xn)))) (((xn).sub 2)))
                xtest_large_pyrange.write
                  [xself]
                    memory > xn
                    memory > xx
                    memory > xmod
                    memory > xdata
                    seq > @
                      seq
                        xmod.write ((xself).xmodule)
                        xn.write ((xsys).xmaxsize)
                        xdata.write (((xRange)) (0) (((xn).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_left)) ((xdata)) (((xn).sub 3)))) (((xn).sub 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_right)) ((xdata)) (((xn).sub 3)))) (((xn).sub 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_left)) ((xdata)) (((xn).sub 3)) (((xn).sub 10)) ((xn)))) (((xn).sub 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmod).xbisect_right)) ((xdata)) (((xn).sub 3)) (((xn).sub 10)) ((xn)))) (((xn).sub 2)))
                        xx.write ((xn).sub 100)
                        bogusForceDataize.write ((((xmod).xinsort_left)) ((xdata)) ((xx)) (((xx).sub 50)) (((xx).add 50)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdata).xlast_insert)) ((((unsupported)) ((xx)) ((xx)))))
                        xx.write ((xn).sub 200)
                        bogusForceDataize.write ((((xmod).xinsort_right)) ((xdata)) ((xx)) (((xx).sub 50)) (((xx).add 50)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xdata).xlast_insert)) ((((unsupported)) (((xx).add 1)) ((xx)))))
                xtest_random.write
                  [xself xn]
                    memory > xip
                    memory > xelem
                    memory > xdata
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) ((xn)))))
                          seq
                            xdata.write (((unsupported)) ((((xrandrange)) (0) ((xn)) (2))) ((xj)) ((((xrange)) ((xi)))))
                            bogusForceDataize.write ((((xdata).xsort)) 0)
                            xelem.write (((xrandrange)) ((1.neg)) (((xn).add 1)))
                            xip.write (((((xself).xmodule).xbisect_left)) ((xdata)) ((xelem)))
                            ((xip).less (((xlen)) ((xdata)))).if
                              bogusForceDataize.write ((((xself).xassertTrue)) (((xelem).leq (((unsupported)) ((xdata)) ((xip))))))
                            ((xip).greater 0).if
                              bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xdata)) (((xip).sub 1))).less (xelem))))
                            xip.write (((((xself).xmodule).xbisect_right)) ((xdata)) ((xelem)))
                            ((xip).less (((xlen)) ((xdata)))).if
                              bogusForceDataize.write ((((xself).xassertTrue)) (((xelem).less (((unsupported)) ((xdata)) ((xip))))))
                            ((xip).greater 0).if
                              bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xdata)) (((xip).sub 1))).leq (xelem))))
                xtest_optionalSlicing.write
                  [xself]
                    memory > xlo
                    memory > xip
                    memory > xhi
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xfunc)) ((xdata)) ((xelem)) ((xexpected)))) (((xself).xprecomputedCases)))
                        (((unsupported)) ((xlo)) ((((xrange)) (4))))
                          seq
                            xlo.write (((xmin)) ((((xlen)) ((xdata)))) ((xlo)))
                            (((unsupported)) ((xhi)) ((((xrange)) (3) (8))))
                              seq
                                xhi.write (((xmin)) ((((xlen)) ((xdata)))) ((xhi)))
                                xip.write (((xfunc)) ((xdata)) ((xelem)) ((xlo)) ((xhi)))
                                bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) ((xlo)) ((xip)) ((xhi)))))
                                ((((unsupported)) ((xfunc)) ((((xself).xmodule).xbisect_left))).and ((xip).less (xhi))).if
                                  bogusForceDataize.write ((((xself).xassertTrue)) (((xelem).leq (((unsupported)) ((xdata)) ((xip))))))
                                ((((unsupported)) ((xfunc)) ((((xself).xmodule).xbisect_left))).and ((xip).greater (xlo))).if
                                  bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xdata)) (((xip).sub 1))).less (xelem))))
                                ((((unsupported)) ((xfunc)) ((((xself).xmodule).xbisect_right))).and ((xip).less (xhi))).if
                                  bogusForceDataize.write ((((xself).xassertTrue)) (((xelem).less (((unsupported)) ((xdata)) ((xip))))))
                                ((((unsupported)) ((xfunc)) ((((xself).xmodule).xbisect_right))).and ((xip).greater (xlo))).if
                                  bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xdata)) (((xip).sub 1))).leq (xelem))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xip)) ((((xmax)) ((xlo)) ((((xmin)) ((xhi)) ((xexpected)))))))
                xtest_backcompatibility.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xmodule).xbisect)) ((((xself).xmodule).xbisect_right)))
                xtest_keyword_args.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) (10) (20) (30) (40) (50))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((xdata)) (25) (1) (3))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xmodule).xbisect_right)) ((xdata)) (25) (1) (3))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xmodule).xbisect)) ((xdata)) (25) (1) (3))) (2))
                        (((unsupported)) ((((xself).xmodule).xinsort_left)) ((xdata)) (25) (1) (3))
                        (((unsupported)) ((((xself).xmodule).xinsort_right)) ((xdata)) (25) (1) (3))
                        (((unsupported)) ((((xself).xmodule).xinsort)) ((xdata)) (25) (1) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((((unsupported)) (10) (20) (25) (25) (25) (30) (40) (50))))
            (((unsupported)) ((xTestBisect)) (((xunittest).xTestCase)))
              xmodule.write (xpy_bisect)
            (((unsupported)) ((xTestBisect)) (((xunittest).xTestCase)))
              xmodule.write (xc_bisect)
            (((unsupported)) 0)
              seq
                xtest_vsBuiltinSort.write
                  [xself xn]
                    memory > xdigit
                    memory > xf
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) ((xinsorted)) ((((unsupported)) ((((xlist)) 0)) ((((xUserList)) 0)))))
                          seq
                            (((unsupported)) ((xi)) ((((xrange)) ((xn)))))
                              seq
                                xdigit.write (((xchoice)) ("0123456789"))
                                (((unsupported)) ((xdigit)) ("02468")).if
                                  xf.write (((xself).xmodule).xinsort_left)
                                  xf.write (((xself).xmodule).xinsort_right)
                                bogusForceDataize.write (((xf)) ((xinsorted)) ((xdigit)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((xinsorted)))) ((xinsorted)))
                xtest_backcompatibility.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xmodule).xinsort)) ((((xself).xmodule).xinsort_right)))
                xtest_listDerived.write
                  [xself]
                    memory > xinsert
                    memory > xlst
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((xlist)))
                          seq
                            xdata.write (((unsupported)) 0)
                            xinsert.write
                              [xself xindex xitem]
                                seq > @
                                  bogusForceDataize.write (((((xself).xdata).xinsert)) ((xindex)) ((xitem)))
                        xlst.write (((xList)) 0)
                        bogusForceDataize.write (((((xself).xmodule).xinsort_left)) ((xlst)) (10))
                        bogusForceDataize.write (((((xself).xmodule).xinsort_right)) ((xlst)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (5) (10))) (((xlst).xdata)))
            (((unsupported)) ((xTestInsort)) (((xunittest).xTestCase)))
              xmodule.write (xpy_bisect)
            (((unsupported)) ((xTestInsort)) (((xunittest).xTestCase)))
              xmodule.write (xc_bisect)
            (((unsupported)) 0)
              seq
                unsupported
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) (10))
            (((unsupported)) 0)
              seq
                unsupported
                x__getitem__.write
                  [xself xndx]
                    seq > @
                      (((unsupported)) (10))
            (((unsupported)) 0)
              seq
                unsupported
                x__lt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((xZeroDivisionError)))
                x__gt__.write (x__lt__)
                x__le__.write (x__lt__)
                x__ge__.write (x__lt__)
                x__eq__.write (x__lt__)
                x__ne__.write (x__lt__)
            (((unsupported)) 0)
              seq
                xtest_non_sequence.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((xself).xmodule).xbisect_right)) ((((xself).xmodule).xinsort_left)) ((((xself).xmodule).xinsort_right)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) (10) (10))
                xtest_len_only.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((xself).xmodule).xbisect_right)) ((((xself).xmodule).xinsort_left)) ((((xself).xmodule).xinsort_right)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((((xLenOnly)) 0)) (10))
                xtest_get_only.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((xself).xmodule).xbisect_right)) ((((xself).xmodule).xinsort_left)) ((((xself).xmodule).xinsort_right)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((((xGetOnly)) 0)) (10))
                xtest_cmp_err.write
                  [xself]
                    memory > xseq
                    seq > @
                      seq
                        xseq.write (((unsupported)) ((((xCmpErr)) 0)) ((((xCmpErr)) 0)) ((((xCmpErr)) 0)))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((xself).xmodule).xbisect_right)) ((((xself).xmodule).xinsort_left)) ((((xself).xmodule).xinsort_right)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) ((xseq)) (10))
                xtest_arg_parsing.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xbisect_left)) ((((xself).xmodule).xbisect_right)) ((((xself).xmodule).xinsort_left)) ((((xself).xmodule).xinsort_right)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) (10))
            (((unsupported)) ((xTestErrorHandling)) (((xunittest).xTestCase)))
              xmodule.write (xpy_bisect)
            (((unsupported)) ((xTestErrorHandling)) (((xunittest).xTestCase)))
              xmodule.write (xc_bisect)
            (((unsupported)) 0)
              seq
                xtest_grades.write
                  [xself]
                    memory > xgrade
                    memory > xresult
                    seq > @
                      seq
                        xgrade.write
                          [xscore xbreakpoints xgrades]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((((xself).xmodule).xbisect)) ((xbreakpoints)) ((xscore)))
                                (((unsupported)) ((((unsupported)) ((xgrades)) ((xi)))))
                        xresult.write (((unsupported)) ((((xgrade)) ((xscore)))) ((xscore)) ((((unsupported)) (33) (99) (77) (70) (89) (90) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) ("F") ("A") ("C") ("C") ("B") ("A") ("A"))))
                xtest_colors.write
                  [xself]
                    memory > xkeys
                    memory > xbisect_left
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) ((((unsupported)) ("red") (5))) ((((unsupported)) ("blue") (1))) ((((unsupported)) ("yellow") (8))) ((((unsupported)) ("black") (0))))
                        (((unsupported)) (((xdata).xsort)) ((((unsupported)) ((((unsupported)) ((xr)) (1))))))
                        xkeys.write (((unsupported)) ((((unsupported)) ((xr)) (1))) ((xr)) ((xdata)))
                        xbisect_left.write (((xself).xmodule).xbisect_left)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdata)) ((((xbisect_left)) ((xkeys)) (0))))) ((((unsupported)) ("black") (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdata)) ((((xbisect_left)) ((xkeys)) (1))))) ((((unsupported)) ("blue") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdata)) ((((xbisect_left)) ((xkeys)) (5))))) ((((unsupported)) ("red") (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xdata)) ((((xbisect_left)) ((xkeys)) (8))))) ((((unsupported)) ("yellow") (8))))
            (((unsupported)) ((xTestDocExample)) (((xunittest).xTestCase)))
              xmodule.write (xpy_bisect)
            (((unsupported)) ((xTestDocExample)) (((xunittest).xTestCase)))
              xmodule.write (xc_bisect)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)