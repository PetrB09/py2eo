memory > xreverse
memory > xAttributeError
memory > xlist
memory > xseq
memory > xSideEffectLT
memory > xlist2
memory > xNotImplemented
memory > xmap
memory > xN
memory > xRuntimeError
memory > xenumerate
memory > xlist1
memory > xskipUnless
memory > xdummy
memory > xg
memory > xTestCase
memory > xpos
memory > xS
memory > xrange
memory > xsize
memory > xh
memory > xG
memory > xZeroDivisionError
memory > xIndexError
memory > xStopIteration
memory > xrandom
memory > xInt
memory > xLenOnly
memory > xtype
memory > xf
memory > xTestHeap
memory > xint
memory > xEvilClass
memory > xX
memory > xdoctest
memory > xx
memory > xitemgetter
memory > xi
memory > xI
memory > xtrial
memory > xLT
memory > xLE
memory > xchain
memory > xs
memory > xfname
memory > xsupport
memory > xsorted
memory > xHeapqMergeDocTestFinder
memory > xfloat
memory > xIg
memory > xitem
memory > xval
memory > xgetattr
memory > xE
memory > xunittest
memory > xn
memory > xCmpErr
memory > xj
memory > xlen
memory > xTypeError
memory > xTestErrorHandling
memory > x__name__
memory > xkey
[] > test_heapq
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_c_functions
        memory > xtest_py_functions
        memory > xtest_naive_nbest
        memory > xtest_nlargest
        memory > xL
        memory > x__ne__
        memory > xtest_empty_merges
        memory > xtest_comparison_operator
        memory > xtest_nsmallest
        memory > xtest_non_sequence
        memory > xtest_nbest_with_pushpop
        memory > xpy_heapq
        memory > xtest_merge_stability
        memory > xtest_heappush_mutating_heap
        memory > xtest_comparison_operator_modifiying_heap
        memory > x__eq__
        memory > xtest_nbest
        memory > xtest_heappushpop
        memory > x__iter__
        memory > xtest_comparison_operator_modifiying_heap_two_heaps
        memory > xtest_cmp_err
        memory > xfunc_names
        memory > xtest_arg_parsing
        memory > x__getitem__
        memory > x__le__
        memory > x__lt__
        memory > xtest_push_pop
        memory > xtest_heappop_mutating_heap
        memory > xtest_merge_does_not_suppress_index_error
        memory > xtest_iterable_args
        memory > x__next__
        memory > xcheck_invariant
        memory > x__gt__
        memory > xload_tests
        memory > xR
        memory > xtest_heapify
        memory > xmodule
        memory > xtest_len_only
        memory > xtest_heapsort
        memory > x__init__
        memory > xtest_heappop_max
        memory > xheapiter
        memory > xtest_merge
        memory > x__len__
        memory > x__ge__
        memory > xc_heapq
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            xpy_heapq.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("heapq") ((((unsupported)) ("_heapq"))))
            xc_heapq.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("heapq") ((((unsupported)) ("_heapq"))))
            xfunc_names.write (((unsupported)) ("heapify") ("heappop") ("heappush") ("heappushpop") ("heapreplace") ("_heappop_max") ("_heapreplace_max") ("_heapify_max"))
            (((unsupported)) ((xTestCase)))
              seq
                xtest_py_functions.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xfname)) ((xfunc_names)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xgetattr)) ((xpy_heapq)) ((xfname))).x__module__)) ("heapq"))
                xtest_c_functions.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xfname)) ((xfunc_names)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xgetattr)) ((xc_heapq)) ((xfname))).x__module__)) ("_heapq"))
            xload_tests.write
              [xloader xtests xignore]
                memory > xfind
                seq > @
                  seq
                    (((unsupported)) 0)
                      xfind.write
                        [xself]
                          memory > xdtf
                          seq > @
                            (((unsupported)) 0)
                              xdtf.write ((((xdoctest).xDocTestFinder)) 0)
                              (((unsupported)) (((((xdtf).xfind)) (((xpy_heapq).xmerge)))))
                    bogusForceDataize.write ((((xtests).xaddTests)) ((((unsupported)) (((xdoctest).xDocTestSuite)) ((xpy_heapq)) ((((xHeapqMergeDocTestFinder)) 0)))))
                    (((unsupported)) ((xtests)))
            (((unsupported)) 0)
              seq
                xtest_push_pop.write
                  [xself]
                    memory > xdata
                    memory > xheap
                    memory > xdata_sorted
                    memory > xitem
                    memory > xresults
                    seq > @
                      seq
                        xheap.write (((unsupported)) 0)
                        xdata.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xcheck_invariant)) ((xheap)))
                        (((unsupported)) ((xi)) ((((xrange)) (256))))
                          seq
                            xitem.write ((((xrandom).xrandom)) 0)
                            bogusForceDataize.write ((((xdata).xappend)) ((xitem)))
                            bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xheap)) ((xitem)))
                            bogusForceDataize.write ((((xself).xcheck_invariant)) ((xheap)))
                        xresults.write (((unsupported)) 0)
                        while.
                          (xheap)
                          [unused]
                            seq > @
                              seq
                                xitem.write (((((xself).xmodule).xheappop)) ((xheap)))
                                bogusForceDataize.write ((((xself).xcheck_invariant)) ((xheap)))
                                bogusForceDataize.write ((((xresults).xappend)) ((xitem)))
                        xdata_sorted.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xdata_sorted).xsort)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata_sorted)) ((xresults)))
                        bogusForceDataize.write ((((xself).xcheck_invariant)) ((xresults)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheappush)) ((((unsupported)) 0)))
                        (((unsupported)) ((xAttributeError)))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheappush)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheappop)) ("None: is there a None literal in the EO language?"))
                xcheck_invariant.write
                  [xself xheap]
                    memory > xparentpos
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xpos)) ((xitem)))) ((((xenumerate)) ((xheap)))))
                        (xpos).if
                          seq
                            xparentpos.write (((unsupported)) (((xpos).sub 1)) (1))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((unsupported)) ((xheap)) ((xparentpos))).leq (xitem))))
                xtest_heapify.write
                  [xself]
                    memory > xheap
                    seq > @
                      seq
                        (((unsupported)) ((xsize)) (((((xlist)) ((((xrange)) (30)))).add (((unsupported)) (20000)))))
                          seq
                            xheap.write (((unsupported)) (((((xrandom).xrandom)) 0)) ((xdummy)) ((((xrange)) ((xsize)))))
                            bogusForceDataize.write (((((xself).xmodule).xheapify)) ((xheap)))
                            bogusForceDataize.write ((((xself).xcheck_invariant)) ((xheap)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheapify)) ("None: is there a None literal in the EO language?"))
                xtest_naive_nbest.write
                  [xself]
                    memory > xheap
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) (((((xrandom).xrandrange)) (2000))) ((xi)) ((((xrange)) (1000))))
                        xheap.write (((unsupported)) 0)
                        (((unsupported)) ((xitem)) ((xdata)))
                          seq
                            bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xheap)) ((xitem)))
                            ((((xlen)) ((xheap))).greater 10).if
                              bogusForceDataize.write (((((xself).xmodule).xheappop)) ((xheap)))
                        bogusForceDataize.write ((((xheap).xsort)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xheap)) ((((unsupported)) ((((xsorted)) ((xdata)))) ((((unsupported)) ((10.neg)))))))
                xheapiter.write
                  [xself xheap]
                    seq > @
                      (((unsupported)) ((xIndexError)))
                        while.
                          1
                          [unused]
                            seq > @
                              (((unsupported)) ((((((xself).xmodule).xheappop)) ((xheap)))))
                xtest_nbest.write
                  [xself]
                    memory > xheap
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) (((((xrandom).xrandrange)) (2000))) ((xi)) ((((xrange)) (1000))))
                        xheap.write (((unsupported)) ((xdata)) ((((unsupported)) (10))))
                        bogusForceDataize.write (((((xself).xmodule).xheapify)) ((xheap)))
                        (((unsupported)) ((xitem)) ((((unsupported)) ((xdata)) ((((unsupported)) (10))))))
                          ((xitem).greater (((unsupported)) ((xheap)) (0))).if
                            bogusForceDataize.write (((((xself).xmodule).xheapreplace)) ((xheap)) ((xitem)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xself).xheapiter)) ((xheap)))))) ((((unsupported)) ((((xsorted)) ((xdata)))) ((((unsupported)) ((10.neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheapreplace)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((((xself).xmodule).xheapreplace)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((xself).xmodule).xheapreplace)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))
                xtest_nbest_with_pushpop.write
                  [xself]
                    memory > xheap
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) (((((xrandom).xrandrange)) (2000))) ((xi)) ((((xrange)) (1000))))
                        xheap.write (((unsupported)) ((xdata)) ((((unsupported)) (10))))
                        bogusForceDataize.write (((((xself).xmodule).xheapify)) ((xheap)))
                        (((unsupported)) ((xitem)) ((((unsupported)) ((xdata)) ((((unsupported)) (10))))))
                          bogusForceDataize.write (((((xself).xmodule).xheappushpop)) ((xheap)) ((xitem)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xself).xheapiter)) ((xheap)))))) ((((unsupported)) ((((xsorted)) ((xdata)))) ((((unsupported)) ((10.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xmodule).xheappushpop)) ((((unsupported)) 0)) ("x"))) ("x"))
                xtest_heappushpop.write
                  [xself]
                    memory > xx
                    memory > xh
                    seq > @
                      seq
                        xh.write (((unsupported)) 0)
                        xx.write (((((xself).xmodule).xheappushpop)) ((xh)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xh)) ((xx)))) ((((unsupported)) ((((unsupported)) 0)) (10))))
                        xh.write (((unsupported)) (10))
                        xx.write (((((xself).xmodule).xheappushpop)) ((xh)) (10.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xh)) ((xx)))) ((((unsupported)) ((((unsupported)) (10))) (10.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((unsupported)) ((xh)) (0))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xx)))) ((xfloat)))
                        xh.write (((unsupported)) (10))
                        xx.write (((((xself).xmodule).xheappushpop)) ((xh)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xh)) ((xx)))) ((((unsupported)) ((((unsupported)) (10))) (9))))
                        xh.write (((unsupported)) (10))
                        xx.write (((((xself).xmodule).xheappushpop)) ((xh)) (11))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xh)) ((xx)))) ((((unsupported)) ((((unsupported)) (11))) (10))))
                xtest_heappop_max.write
                  [xself]
                    memory > xh
                    seq > @
                      seq
                        xh.write (((unsupported)) (3) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xmodule).x_heappop_max)) ((xh)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xmodule).x_heappop_max)) ((xh)))) (2))
                xtest_heapsort.write
                  [xself]
                    memory > xsize
                    memory > xheap
                    memory > xheap_sorted
                    memory > xdata
                    seq > @
                      (((unsupported)) ((xtrial)) ((((xrange)) (100))))
                        seq
                          xsize.write ((((xrandom).xrandrange)) (50))
                          xdata.write (((unsupported)) (((((xrandom).xrandrange)) (25))) ((xi)) ((((xrange)) ((xsize)))))
                          ((xtrial).and 1).if
                            seq
                              xheap.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                              bogusForceDataize.write (((((xself).xmodule).xheapify)) ((xheap)))
                            seq
                              xheap.write (((unsupported)) 0)
                              (((unsupported)) ((xitem)) ((xdata)))
                                bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xheap)) ((xitem)))
                          xheap_sorted.write (((unsupported)) ((((((xself).xmodule).xheappop)) ((xheap)))) ((xi)) ((((xrange)) ((xsize)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xheap_sorted)) ((((xsorted)) ((xdata)))))
                xtest_merge.write
                  [xself]
                    memory > xseqs
                    memory > xinputs
                    memory > xtup
                    memory > xrow
                    seq > @
                      seq
                        xinputs.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (((((xrandom).xrandrange)) (25))))))
                          seq
                            xrow.write (((unsupported)) 0)
                            (((unsupported)) ((xj)) ((((xrange)) (((((xrandom).xrandrange)) (100))))))
                              seq
                                xtup.write (((unsupported)) (((((xrandom).xchoice)) ("ABC"))) (((((xrandom).xrandrange)) ((500.neg)) (500))))
                                bogusForceDataize.write ((((xrow).xappend)) ((xtup)))
                            bogusForceDataize.write ((((xinputs).xappend)) ((xrow)))
                        (((unsupported)) ((xkey)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((xitemgetter)) (0))) ((((xitemgetter)) (1))) ((((xitemgetter)) (1) (0))))))
                          (((unsupported)) ((xreverse)) ((((unsupported)) (FALSE) (TRUE))))
                            seq
                              xseqs.write (((unsupported)) 0)
                              (((unsupported)) ((xseq)) ((xinputs)))
                                bogusForceDataize.write ((((xseqs).xappend)) ((((unsupported)) ((xsorted)) ((xseq)) ((xkey)) ((xreverse)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xsorted)) ((((xchain)) ((((unsupported)) ((xinputs)))))) ((xkey)) ((xreverse)))) ((((xlist)) ((((unsupported)) ((((xself).xmodule).xmerge)) ((((unsupported)) ((xseqs)))) ((xkey)) ((xreverse)))))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((((xself).xmodule).xmerge)) 0)))) ((((unsupported)) 0)))
                xtest_empty_merges.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((((xself).xmodule).xmerge)) ((((unsupported)) 0)) ((((unsupported)) 0)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((unsupported)) ((((xself).xmodule).xmerge)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) (6))))))) ((((unsupported)) 0)))
                xtest_merge_does_not_suppress_index_error.write
                  [xself]
                    memory > xiterable
                    seq > @
                      seq
                        xiterable.write
                          []
                            memory > xs
                            seq > @
                              seq
                                xs.write (((xlist)) ((((xrange)) (10))))
                                (((unsupported)) ((xi)) ((((xrange)) (20))))
                                  (((unsupported)) ((((unsupported)) ((xs)) ((xi)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          bogusForceDataize.write (((xlist)) ((((((xself).xmodule).xmerge)) ((((xiterable)) 0)) ((((xiterable)) 0)))))
                xtest_merge_stability.write
                  [xself]
                    memory > xstream
                    memory > xx
                    memory > xobj
                    memory > xresult
                    memory > xinputs
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                        xinputs.write (((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        (((unsupported)) ((xi)) ((((xrange)) (20000))))
                          seq
                            xstream.write ((((xrandom).xrandrange)) (4))
                            xx.write ((((xrandom).xrandrange)) (500))
                            xobj.write (((xInt)) ((xx)))
                            (((unsupported)) (((xobj).xpair)) ((((unsupported)) ((xx)) ((xstream)))))
                            bogusForceDataize.write ((((((unsupported)) ((xinputs)) ((xstream))).xappend)) ((xobj)))
                        (((unsupported)) ((xstream)) ((xinputs)))
                          bogusForceDataize.write ((((xstream).xsort)) 0)
                        xresult.write (((unsupported)) (((xi).xpair)) ((xi)) ((((((xself).xmodule).xmerge)) ((((unsupported)) ((xinputs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((xsorted)) ((xresult)))))
                xtest_nsmallest.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) ((((unsupported)) (((((xrandom).xrandrange)) (2000))) ((xi)))) ((xi)) ((((xrange)) (1000))))
                        (((unsupported)) ((xf)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((unsupported)) ((((((unsupported)) ((xx)) (0)).mul 547).mod 2000)))))))
                          (((unsupported)) ((xn)) ((((unsupported)) (0) (1) (2) (10) (100) (400) (999) (1000) (1100))))
                            seq
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((((xself).xmodule).xnsmallest)) ((xn)) ((xdata)))))) ((((unsupported)) ((((xsorted)) ((xdata)))) ((((unsupported)) ((xn)))))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((unsupported)) ((((xself).xmodule).xnsmallest)) ((xn)) ((xdata)) ((xf)))))) ((((unsupported)) ((((unsupported)) ((xsorted)) ((xdata)) ((xf)))) ((((unsupported)) ((xn)))))))
                xtest_nlargest.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) ((((unsupported)) (((((xrandom).xrandrange)) (2000))) ((xi)))) ((xi)) ((((xrange)) (1000))))
                        (((unsupported)) ((xf)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((unsupported)) ((((((unsupported)) ((xx)) (0)).mul 547).mod 2000)))))))
                          (((unsupported)) ((xn)) ((((unsupported)) (0) (1) (2) (10) (100) (400) (999) (1000) (1100))))
                            seq
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((((xself).xmodule).xnlargest)) ((xn)) ((xdata)))))) ((((unsupported)) ((((unsupported)) ((xsorted)) ((xdata)) (TRUE))) ((((unsupported)) ((xn)))))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((unsupported)) ((((xself).xmodule).xnlargest)) ((xn)) ((xdata)) ((xf)))))) ((((unsupported)) ((((unsupported)) ((xsorted)) ((xdata)) ((xf)) (TRUE))) ((((unsupported)) ((xn)))))))
                xtest_comparison_operator.write
                  [xself]
                    memory > x__init__
                    memory > xtarget
                    memory > xhsort
                    memory > xdata
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        xhsort.write
                          [xdata xcomp]
                            seq > @
                              seq
                                xdata.write (((unsupported)) ((((xcomp)) ((xx)))) ((xx)) ((xdata)))
                                bogusForceDataize.write (((((xself).xmodule).xheapify)) ((xdata)))
                                (((unsupported)) ((((unsupported)) (((((((xself).xmodule).xheappop)) ((xdata))).xx)) ((xi)) ((((xrange)) ((((xlen)) ((xdata)))))))))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).greater ((xother).xx))))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                            x__le__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xx).geq ((xother).xx))))
                        xdata.write (((unsupported)) (((((xrandom).xrandom)) 0)) ((xi)) ((((xrange)) (100))))
                        xtarget.write (((unsupported)) ((xsorted)) ((xdata)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhsort)) ((xdata)) ((xLT)))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xdata)) ((xLE)))
            (((unsupported)) ((xTestHeap)) ((xTestCase)))
              xmodule.write (xpy_heapq)
            (((unsupported)) ((xTestHeap)) ((xTestCase)) ((((xskipUnless)) ((xc_heapq)) ("requires _heapq"))))
              xmodule.write (xc_heapq)
            (((unsupported)) 0)
              seq
                unsupported
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) (10))
            (((unsupported)) 0)
              seq
                unsupported
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((xZeroDivisionError)))
                (((unsupported)) ((x__ne__)) ((x__lt__)) ((x__le__)) ((x__gt__)) ((x__ge__)) ((x__eq__)))
            xR.write
              [xseqn]
                seq > @
                  seq
                    unsupported
                    (((unsupported)) ((xi)) ((xseqn)))
                      (((unsupported)) ((xi)))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      (((unsupported)) (((xself).xseqn)) ((xseqn)))
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)) ((((unsupported)) (((xself).xseqn)) ((xi)))))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xseqn)) ((xseqn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xself)))
                x__next__.write
                  [xself]
                    memory > xv
                    seq > @
                      seq
                        (((xself).xi).geq (((xlen)) (((xself).xseqn)))).if
                          (((unsupported)) ((xStopIteration)))
                        xv.write (((unsupported)) (((xself).xseqn)) (((xself).xi)))
                        (((unsupported)) (((xself).xi)) (1))
                        (((unsupported)) ((xv)))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xseqn)) ((xseqn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xval)) (((xself).xseqn)))
                        (((unsupported)) ((xval)))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xseqn)) ((xseqn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__next__.write
                  [xself]
                    memory > xv
                    seq > @
                      seq
                        (((xself).xi).geq (((xlen)) (((xself).xseqn)))).if
                          (((unsupported)) ((xStopIteration)))
                        xv.write (((unsupported)) (((xself).xseqn)) (((xself).xi)))
                        (((unsupported)) (((xself).xi)) (1))
                        (((unsupported)) ((xv)))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xseqn)) ((xseqn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xself)))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xseqn)) ((xseqn)))
                        (((unsupported)) (((xself).xi)) (0))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xself)))
                x__next__.write
                  [xself]
                    seq > @
                      (((unsupported)) (3) (0))
            (((unsupported)) 0)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xself)))
                x__next__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xStopIteration)))
            (((unsupported)) 0)
            xL.write
              [xseqn]
                seq > @
                  seq
                    unsupported
                    (((unsupported)) ((((xchain)) ((((xmap)) ((((unsupported)) ((xx)))) ((((xR)) ((((xIg)) ((((xG)) ((xseqn)))))))))))))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xvalue xheap]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xvalue)) ((xvalue)))
                        (((unsupported)) (((xself).xheap)) ((xheap)))
                x__lt__.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xself).xheap)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
            (((unsupported)) 0)
              seq
                xtest_non_sequence.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheapify)) ((((xself).xmodule).xheappop)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))) ((xf)) (10))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheappush)) ((((xself).xmodule).xheapreplace)) ((((xself).xmodule).xnlargest)) ((((xself).xmodule).xnsmallest)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))) ((xf)) (10) (10))
                xtest_len_only.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheapify)) ((((xself).xmodule).xheappop)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))) ((xf)) ((((xLenOnly)) 0)))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheappush)) ((((xself).xmodule).xheapreplace)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))) ((xf)) ((((xLenOnly)) 0)) (10))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xnlargest)) ((((xself).xmodule).xnsmallest)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) (2) ((((xLenOnly)) 0)))
                xtest_cmp_err.write
                  [xself]
                    memory > xseq
                    seq > @
                      seq
                        xseq.write (((unsupported)) ((((xCmpErr)) 0)) ((((xCmpErr)) 0)) ((((xCmpErr)) 0)))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheapify)) ((((xself).xmodule).xheappop)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) ((xseq)))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheappush)) ((((xself).xmodule).xheapreplace)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) ((xseq)) (10))
                        (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xnlargest)) ((((xself).xmodule).xnsmallest)))))
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) (2) ((xseq)))
                xtest_arg_parsing.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xheapify)) ((((xself).xmodule).xheappop)) ((((xself).xmodule).xheappush)) ((((xself).xmodule).xheapreplace)) ((((xself).xmodule).xnlargest)) ((((xself).xmodule).xnsmallest)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))) ((xf)) (10))
                xtest_iterable_args.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xf)) ((((unsupported)) ((((xself).xmodule).xnlargest)) ((((xself).xmodule).xnsmallest)))))
                        (((unsupported)) ((xs)) ((((unsupported)) ("123") ("") ((((xrange)) (1000))) ((((unsupported)) (1) (1.2))) ((((xrange)) (2000) (2200) (5))))))
                          seq
                            (((unsupported)) ((xg)) ((((unsupported)) ((xG)) ((xI)) ((xIg)) ((xL)) ((xR)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xf)) (2) ((((xg)) ((xs)))))))) ((((xlist)) ((((xf)) (2) ((xs)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xf)) (2) ((((xS)) ((xs)))))))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) (2) ((((xX)) ((xs)))))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) (2) ((((xN)) ((xs)))))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xf)) (2) ((((xE)) ((xs)))))
                xtest_heappush_mutating_heap.write
                  [xself]
                    memory > xheap
                    seq > @
                      seq
                        xheap.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xheap).xextend)) ((((unsupported)) ((((xSideEffectLT)) ((xi)) ((xheap)))) ((xi)) ((((xrange)) (200))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xIndexError)) ((xRuntimeError)))))))
                          bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xheap)) ((((xSideEffectLT)) (5) ((xheap)))))
                xtest_heappop_mutating_heap.write
                  [xself]
                    memory > xheap
                    seq > @
                      seq
                        xheap.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xheap).xextend)) ((((unsupported)) ((((xSideEffectLT)) ((xi)) ((xheap)))) ((xi)) ((((xrange)) (200))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xIndexError)) ((xRuntimeError)))))))
                          bogusForceDataize.write (((((xself).xmodule).xheappop)) ((xheap)))
                xtest_comparison_operator_modifiying_heap.write
                  [xself]
                    memory > xheap
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          x__lt__.write
                            [xself xo]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xheap).xclear)) 0)
                                  (((unsupported)) ((xNotImplemented)))
                        xheap.write (((unsupported)) 0)
                        bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xheap)) ((((xEvilClass)) (0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((((xself).xmodule).xheappushpop)) ((xheap)) (1))
                xtest_comparison_operator_modifiying_heap_two_heaps.write
                  [xself]
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          x__lt__.write
                            [xself xo]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xlist2).xclear)) 0)
                                  (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) ((xint)))
                          x__lt__.write
                            [xself xo]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xlist1).xclear)) 0)
                                  (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) ((((unsupported)) ((xlist1)) ((xlist2)))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xlist1)) ((((xh)) (0))))
                        bogusForceDataize.write (((((xself).xmodule).xheappush)) ((xlist2)) ((((xg)) (0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xIndexError)) ((xRuntimeError)))) ((((xself).xmodule).xheappush)) ((xlist1)) ((((xg)) (1))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((((unsupported)) ((xIndexError)) ((xRuntimeError)))) ((((xself).xmodule).xheappush)) ((xlist2)) ((((xh)) (1))))
            (((unsupported)) ((xTestErrorHandling)) ((xTestCase)))
              xmodule.write (xpy_heapq)
            (((unsupported)) ((xTestErrorHandling)) ((xTestCase)) ((((xskipUnless)) ((xc_heapq)) ("requires _heapq"))))
              xmodule.write (xc_heapq)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)