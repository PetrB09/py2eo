memory > xstr
memory > xt
memory > xMissing
memory > xException
memory > xi
memory > xissubclass
memory > xsorted
memory > xnext
memory > xMyOrderedDict
memory > xd
memory > xk
memory > xcopy
memory > xMyOD
memory > xAttributeError
memory > xc
memory > xall
memory > xpickle
memory > xshuffle
memory > xlist
memory > xRuntimeError
memory > xCPythonOrderedDictTests
memory > xenumerate
memory > xpair
memory > xrange
memory > xeval
memory > x_
memory > xKeyError
memory > xPurePythonOrderedDictTests
memory > xMutableMapping
memory > xproto
memory > xSpam
memory > xmethod_name
memory > xreversed
memory > xtype
memory > xrandrange
memory > xrepr
memory > xc0
memory > xOrderedDictTests
memory > xstruct
memory > xbuiltins
memory > xsupport
memory > xsys
memory > xKey
memory > xgc
memory > xweakref
memory > xgetattr
memory > xv
memory > xid
memory > xCPythonBuiltinDictTests
memory > xiter
memory > xsetattr
memory > xunittest
memory > xA
memory > xmapping_tests
memory > xc1
memory > xlen
memory > xdict
memory > xTypeError
memory > xmethod
memory > x__name__
[] > test_ordered_dict
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_dict_setdefault
        memory > xtest_468
        memory > xtest_pickle_recursive
        memory > xtest_dict_popitem
        memory > xmodule
        memory > xtest_init_calls
        memory > xtest_abc
        memory > xtest_iterators
        memory > xtest_sorted_iterators
        memory > xtest_move_to_end_issue25406
        memory > xtest_reinsert
        memory > xtest_override_update
        memory > xtest_issue24667
        memory > xtest_move_to_end
        memory > xtest_detect_deletion_during_iteration
        memory > xtest_update
        memory > xpy_coll
        memory > xOrderedDict
        memory > xtest_dict_setitem
        memory > xtest_reference_loop
        memory > xc_coll
        memory > xtest_weakref_list_is_not_traversed
        memory > xtest_repr
        memory > xtest_highly_nested_subclass
        memory > xtest_init
        memory > xtest_pop
        memory > xtest_issue24347
        memory > xsetUpClass
        memory > xtest_reduce_not_too_fat
        memory > xtest_highly_nested
        memory > xtest_iterators_empty
        memory > xtest_popitem_last
        memory > xtest_sizeof_exact
        memory > xtest_key_change_during_iteration
        memory > xtest_ordered_dict_items_result_gc
        memory > xtest_delitem_hash_collision
        memory > xtest_dict_clear
        memory > xtest_yaml_linkage
        memory > xtest_dict_update
        memory > xtest_sizeof
        memory > xtest_repr_recursive_values
        memory > xtest_clear
        memory > xtest_views
        memory > xtest_setitem
        memory > xtest_fromkeys
        memory > xtest_repr_recursive
        memory > xtest_free_after_iterating
        memory > xtest_issue24348
        memory > xtest_dict_pop
        memory > xtest_copying
        memory > xtest_popitem
        memory > xcheck_sizeof
        memory > xtest_delitem
        memory > xtest_iterators_pickling
        memory > xtest_equality
        memory > xtest_dict_delitem
        memory > xtest_setdefault
        memory > xreplaced_module
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            xpy_coll.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("collections") ((((unsupported)) ("_collections"))))
            xc_coll.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("collections") ((((unsupported)) ("_collections"))))
            xreplaced_module.write
              [xname xreplacement]
                memory > xoriginal_module
                seq > @
                  (((unsupported)) 0)
                    xoriginal_module.write (((unsupported)) (((xsys).xmodules)) ((xname)))
                    (((unsupported)) ((((unsupported)) (((xsys).xmodules)) ((xname)))) ((xreplacement)))
                    (((unsupported)) 0)
                      (((unsupported)) 0)
                      (((unsupported)) ((((unsupported)) (((xsys).xmodules)) ((xname)))) ((xoriginal_module)))
            (((unsupported)) 0)
              seq
                xtest_init.write
                  [xself]
                    memory > xd
                    memory > xOrderedDict
                    memory > xpairs
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))))) ("None: is there a None literal in the EO language?"))
                        xpairs.write (((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((((xOrderedDict)) ((((xdict)) ((xpairs))))).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((((xOrderedDict)) ((((unsupported)) ((((xdict)) ((xpairs))))))).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((xOrderedDict)) ((xpairs))).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (9))) ((((unsupported)) ("d") (4))))) (3) (5)).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xOrderedDict)) (42)).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("self") (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xOrderedDict)) (42)).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("other") (42))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xOrderedDict)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xOrderedDict)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xOrderedDict).x__init__)))
                        xd.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (44))) ((((unsupported)) ("e") (55))))))
                        (((unsupported)) (((xd).x__init__)) ((((unsupported)) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))) (7) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))) ((((unsupported)) ("g") (7))))))
                xtest_468.write
                  [xself]
                    memory > xd
                    memory > xOrderedDict
                    memory > xargdict
                    memory > xitems
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xitems.write (((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))) ((((unsupported)) ("g") (7))))
                        bogusForceDataize.write (((xshuffle)) ((xitems)))
                        xargdict.write (((xOrderedDict)) ((xitems)))
                        xd.write (((xOrderedDict)) ((((unsupported)) ((xargdict)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((xitems)))
                xtest_update.write
                  [xself]
                    memory > xd
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((((xOrderedDict)) 0).xupdate)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))))) ("None: is there a None literal in the EO language?"))
                        xpairs.write (((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))))
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xod).xupdate)) ((((xdict)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xod).xitems)) 0)))) ((xpairs)))
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xod).xupdate)) ((((unsupported)) ((((xdict)) ((xpairs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xod).xitems)) 0)))) ((xpairs)))
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xod).xupdate)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((xpairs)))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) (((xod).xupdate)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (9))) ((((unsupported)) ("d") (4))))) (3) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((xpairs)))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) (((xod).xupdate)) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("self") (23))))))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) (((xod).xupdate)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("other") ((((unsupported)) 0)))))))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) (((xod).xupdate)) (5) (6) (7) (8))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((((xlist)) (((((xod).xitems)) 0)))))) ((((unsupported)) ((((unsupported)) ("blue") (6))) ((((unsupported)) ("other") (7))) ((((unsupported)) ("red") (5))) ((((unsupported)) ("self") (8))))))
                        xd.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (44))) ((((unsupported)) ("e") (55))))))
                        (((unsupported)) (((xd).xupdate)) ((((unsupported)) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))) (7) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))) ((((unsupported)) ("g") (7))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xOrderedDict)) 0).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xOrderedDict)) 0).xupdate)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xOrderedDict).xupdate)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xOrderedDict)) 0).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xOrderedDict)) 0).xupdate)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xOrderedDict).xupdate)))
                xtest_init_calls.write
                  [xself]
                    memory > xkeys
                    memory > xcalls
                    memory > xitems
                    seq > @
                      seq
                        xcalls.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            xkeys.write
                              [xself]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xcalls).xappend)) ("keys"))
                                    (((unsupported)) ((((unsupported)) 0)))
                            xitems.write
                              [xself]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xcalls).xappend)) ("items"))
                                    (((unsupported)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xOrderedDict)) ((((xSpam)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcalls)) ((((unsupported)) ("keys"))))
                xtest_fromkeys.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xc)) ("None: is there a None literal in the EO language?"))) ((xc)) ("abc"))))
                        xod.write (((unsupported)) (((xOrderedDict).xfromkeys)) ("abc") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xc)) ("None: is there a None literal in the EO language?"))) ((xc)) ("abc"))))
                        xod.write (((unsupported)) (((xOrderedDict).xfromkeys)) ("abc") (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xc)) (0))) ((xc)) ("abc"))))
                xtest_abc.write
                  [xself]
                    memory > xOrderedDict
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xOrderedDict)) 0)) ((xMutableMapping)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xOrderedDict)) ((xMutableMapping)))))
                xtest_clear.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xod)))) ((((xlen)) ((xpairs)))))
                        bogusForceDataize.write ((((xod).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xod)))) (0))
                xtest_delitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ("a"))))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("a") ((xod)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ("a"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) (((((unsupported)) ((xpairs)) ((((unsupported)) (2)))).add (((unsupported)) ((xpairs)) ((((unsupported)) (3)))))))
                xtest_setitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("d") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("a") (4))) ((((unsupported)) ("e") (5))))))
                        (((unsupported)) ((((unsupported)) ((xod)) ("c"))) (10))
                        (((unsupported)) ((((unsupported)) ((xod)) ("f"))) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("d") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (10))) ((((unsupported)) ("a") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (20))))))
                xtest_iterators.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xkeys)) 0)))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xvalues)) 0)))) ((((unsupported)) ((((unsupported)) ((xt)) (1))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) ((xod)))))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((((xreversed)) ((xpairs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xkeys)) 0)))))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((((xreversed)) ((xpairs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xvalues)) 0)))))) ((((unsupported)) ((((unsupported)) ((xt)) (1))) ((xt)) ((((xreversed)) ((xpairs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xitems)) 0)))))) ((((xlist)) ((((xreversed)) ((xpairs)))))))
                xtest_detect_deletion_during_iteration.write
                  [xself]
                    memory > xOrderedDict
                    memory > xit
                    memory > xod
                    memory > xkey
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abc"))
                        xit.write (((xiter)) ((xod)))
                        xkey.write (((xnext)) ((xit)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ((xkey)))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xException)))))
                          bogusForceDataize.write (((xnext)) ((xit)))
                xtest_sorted_iterators.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))))) ("None: is there a None literal in the EO language?"))
                        xpairs.write (((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((xod)))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xod).xkeys)) 0)))) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xod).xvalues)) 0)))) ((((unsupported)) ((((unsupported)) ((xt)) (1))) ((xt)) ((xpairs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((xod).xitems)) 0)))) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((((xreversed)) ((xod)))))) ((((xsorted)) ((((unsupported)) ((((unsupported)) ((xt)) (0))) ((xt)) ((((xreversed)) ((xpairs)))))))))
                xtest_iterators_empty.write
                  [xself]
                    memory > xOrderedDict
                    memory > xempty
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        xempty.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xkeys)) 0)))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xvalues)) 0)))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) ((xod)))))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xkeys)) 0)))))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xvalues)) 0)))))) ((xempty)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) (((((xod).xitems)) 0)))))) ((xempty)))
                xtest_popitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        while.
                          (xpairs)
                          [unused]
                            seq > @
                              bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xpopitem)) 0)) (((((xpairs).xpop)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xod).xpopitem)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xod)))) (0))
                xtest_popitem_last.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xobj
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ((xi)) ((xi)))) ((xi)) ((((xrange)) (30))))
                        xobj.write (((xOrderedDict)) ((xpairs)))
                        (((unsupported)) ((xi)) ((((xrange)) (8))))
                          bogusForceDataize.write ((((xobj).xpopitem)) (TRUE))
                        bogusForceDataize.write ((((xobj).xpopitem)) (TRUE))
                        (((unsupported)) (((xobj).xpopitem)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xobj)))) (20))
                xtest_pop.write
                  [xself]
                    memory > x__missing__
                    memory > xod
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xm
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        while.
                          (xpairs)
                          [unused]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xpairs).xpop)) 0)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xpop)) ((xk)))) ((xv)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xod).xpop)) ("xyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xod)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xpop)) ((xk)) (12345))) (12345))
                        (((unsupported)) ((xOrderedDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)) (0))
                        xm.write (((unsupported)) ((xMissing)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xm).xpop)) ("b") (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xm).xpop)) ("a") (6))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xm).xpop)) ("a") (6))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xm).xpop)) ("a") (6))) (6))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xm).xpop)) ("a"))
                xtest_equality.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod2
                    memory > xod1
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod1.write (((xOrderedDict)) ((xpairs)))
                        xod2.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xod1)) ((xod2)))
                        xpairs.write ((((unsupported)) ((xpairs)) ((((unsupported)) (2)))).add (((unsupported)) ((xpairs)) ((((unsupported)) (2)))))
                        xod2.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xod1)) ((xod2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xod1)) ((((xdict)) ((xod2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((xod2)))) ((xod1)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xod1)) ((((xOrderedDict)) ((((unsupported)) ((xpairs)) ((((unsupported)) ((1.neg)))))))))
                xtest_copying.write
                  [xself]
                    memory > xupdate_test
                    memory > xod
                    memory > xpairs
                    memory > xcheck
                    memory > xOrderedDict
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        xcheck.write
                          [xdup]
                            memory > xmsg
                            seq > @
                              seq
                                xmsg.write ("ncopy: %snod: %s".mod (((unsupported)) ((xdup)) ((xod))))
                                bogusForceDataize.write ((((xself).xassertIsNot)) ((xdup)) ((xod)) ((xmsg)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xdup)) ((xod)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xdup).xitems)) 0)))) ((((xlist)) (((((xod).xitems)) 0)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xdup)))) ((((xlen)) ((xod)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xdup)))) ((((xtype)) ((xod)))))
                        bogusForceDataize.write (((xcheck)) (((((xod).xcopy)) 0)))
                        bogusForceDataize.write (((xcheck)) (((((xcopy).xcopy)) ((xod)))))
                        bogusForceDataize.write (((xcheck)) (((((xcopy).xdeepcopy)) ((xod)))))
                        (((unsupported)) ((((xreplaced_module)) ("collections") (((xself).xmodule)))))
                          (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)))))
                              bogusForceDataize.write (((xcheck)) (((((xpickle).xloads)) (((((xpickle).xdumps)) ((xod)) ((xproto)))))))
                        bogusForceDataize.write (((xcheck)) ((((xeval)) ((((xrepr)) ((xod)))))))
                        xupdate_test.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xupdate_test).xupdate)) ((xod)))
                        bogusForceDataize.write (((xcheck)) ((xupdate_test)))
                        bogusForceDataize.write (((xcheck)) ((((xOrderedDict)) ((xod)))))
                xtest_yaml_linkage.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xall)) ((((unsupported)) (((((xtype)) ((xpair))).eq (xlist))) ((xpair)) ((((unsupported)) (((((xod).x__reduce__)) 0)) (1))))))))
                xtest_reduce_not_too_fat.write
                  [xself]
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xod).x__dict__)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((unsupported)) (((((xod).x__reduce__)) 0)) (2))))
                        (((unsupported)) (((xod).xx)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xod).x__dict__)) ("x"))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((xod).x__reduce__)) 0)) (2))) ((((unsupported)) ("x") (10))))
                xtest_pickle_recursive.write
                  [xself]
                    memory > xOrderedDict
                    memory > xdup
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) (1))) ((xod)))
                        (((unsupported)) ((((xreplaced_module)) ("collections") (((xself).xmodule)))))
                          (((unsupported)) ((xproto)) ((((xrange)) ((1.neg)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            seq
                              xdup.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xod)) ((xproto)))))
                              bogusForceDataize.write ((((xself).xassertIsNot)) ((xdup)) ((xod)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xdup).xkeys)) 0)))) ((((unsupported)) (1))))
                              bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((xdup)) (1))) ((xdup)))
                xtest_repr.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xod)))) ("OrderedDict([('c', 1), ('b', 2), ('a', 3), ('d', 4), ('e', 5), ('f', 6)])"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) ((((xrepr)) ((xod)))))) ((xod)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xOrderedDict)) 0)))) ("OrderedDict()"))
                xtest_repr_recursive.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abc"))
                        (((unsupported)) ((((unsupported)) ((xod)) ("x"))) ((xod)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xod)))) ("OrderedDict([('a', None), ('b', None), ('c', None), ('x', ...)])"))
                xtest_repr_recursive_values.write
                  [xself]
                    memory > xOrderedDict
                    memory > xr
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) (42))) (((((xod).xvalues)) 0)))
                        xr.write (((xrepr)) ((xod)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xr)) ((xstr)))
                        (((unsupported)) ((((unsupported)) ((xod)) (42))) (((((xod).xitems)) 0)))
                        xr.write (((xrepr)) ((xod)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xr)) ((xstr)))
                xtest_setdefault.write
                  [xself]
                    memory > x__missing__
                    memory > xod
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xpair_order
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        bogusForceDataize.write (((xshuffle)) ((xpairs)))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        xpair_order.write (((xlist)) (((((xod).xitems)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xsetdefault)) ("a") (10))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((xpair_order)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xsetdefault)) ("x") (10))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xlist)) (((((xod).xitems)) 0)))) ((1.neg)))) ((((unsupported)) ("x") (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xod).xsetdefault)) ("g") (9))) (9))
                        (((unsupported)) ((xOrderedDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xMissing)) 0).xsetdefault)) (5) (9))) (9))
                xtest_reinsert.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ("a"))) (1))
                        (((unsupported)) ((((unsupported)) ((xod)) ("b"))) (2))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ("a"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("b") (2))))))
                        (((unsupported)) ((((unsupported)) ((xod)) ("a"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (1))))))
                xtest_move_to_end.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abcde"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("abcde"))))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("c"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("abdec"))))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("c") (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("cabde"))))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("c") (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("cabde"))))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("e"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("cabde"))))
                        (((unsupported)) (((xod).xmove_to_end)) ("b") (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("bcade"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xod).xmove_to_end)) ("x"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xod).xmove_to_end)) ("x") (0))
                xtest_move_to_end_issue25406.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abc"))
                        (((unsupported)) (((xod).xmove_to_end)) ("c") (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("cab"))))
                        (((unsupported)) (((xod).xmove_to_end)) ("a") (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("acb"))))
                        xod.write ((((xOrderedDict).xfromkeys)) ("abc"))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("bca"))))
                        bogusForceDataize.write ((((xod).xmove_to_end)) ("c"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("bac"))))
                xtest_sizeof.write
                  [xself]
                    memory > xd
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xd.write (((unsupported)) ((xdict)) (1))
                        xod.write (((xOrderedDict)) ((((unsupported)) ((xd)))))
                        bogusForceDataize.write ((((xself).xassertGreater)) (((((xsys).xgetsizeof)) ((xod)))) (((((xsys).xgetsizeof)) ((xd)))))
                xtest_views.write
                  [xself]
                    memory > xod
                    memory > xOrderedDict
                    memory > xs
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xs.write ((("the quick brown fox jumped over a lazy dog yesterday before dawn".xsplit)) 0)
                        xod.write ((((xOrderedDict).xfromkeys)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xkeys)) 0)) (((((((xdict)) ((xod))).xkeys)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xod).xitems)) 0)) (((((((xdict)) ((xod))).xitems)) 0)))
                xtest_override_update.write
                  [xself]
                    memory > xOrderedDict
                    memory > xupdate
                    memory > xitems
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) ((xOrderedDict)))
                          xupdate.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((((xException)) 0)))
                        xitems.write (((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("c") (3))) ((((unsupported)) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((xMyOD)) ((xitems))).xitems)) 0)))) ((xitems)))
                xtest_highly_nested.write
                  [xself]
                    memory > xOrderedDict
                    memory > xobj
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xobj.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((x_)) ((((xrange)) (1000))))
                          xobj.write (((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((xobj)))))))
                        (((unsupported)) ((((unsupported)) ((xobj)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                xtest_highly_nested_subclass.write
                  [xself]
                    memory > xdeleted
                    memory > x__del__
                    memory > xOrderedDict
                    memory > xobj
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xdeleted.write (((unsupported)) 0)
                        (((unsupported)) ((xOrderedDict)))
                          x__del__.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xdeleted).xappend)) (((xself).xi)))
                        xobj.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          seq
                            xobj.write (((xMyOD)) ((((unsupported)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((xobj)))))))
                            (((unsupported)) (((xobj).xi)) ((xi)))
                        (((unsupported)) ((((unsupported)) ((xobj)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdeleted)) ((((xlist)) ((((xreversed)) ((((xrange)) (100))))))))
                xtest_delitem_hash_collision.write
                  [xself]
                    memory > xod
                    memory > xOrderedDict
                    memory > xcolliding
                    memory > x__init__
                    memory > x__hash__
                    memory > xkey
                    memory > xblocking
                    memory > x__eq__
                    memory > x__repr__
                    memory > xblocking_hash
                    memory > xCOLLIDING
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xhash]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).x_hash)) ((xhash)))
                                    (((unsupported)) (((xself).xvalue)) ((((xstr)) ((((xid)) ((xself)))))))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).x_hash)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((xAttributeError)))
                                    (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)))
                        xblocking_hash.write
                          [xhash]
                            memory > xMINSIZE
                            memory > xi
                            seq > @
                              seq
                                xMINSIZE.write 8
                                xi.write ((xhash).and ((xMINSIZE).sub 1))
                                (((unsupported)) (((((((unsupported)) ((xi)) (2)).add (xi)).add (xhash)).add 1)))
                        xCOLLIDING.write 1
                        xkey.write (((xKey)) ((xCOLLIDING)))
                        xcolliding.write (((xKey)) ((xCOLLIDING)))
                        xblocking.write (((xKey)) ((((xblocking_hash)) ((xCOLLIDING)))))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ((xkey)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xod)) ((xblocking)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xod)) ((xcolliding)))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((xod)) ("after"))) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ((xblocking)))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ((xcolliding)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xod).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ((xkey)) ((((unsupported)) 0)))) ((((unsupported)) ("after") ((((unsupported)) 0)))))))
                xtest_issue24347.write
                  [xself]
                    memory > xOrderedDict
                    memory > x__hash__
                    memory > xod
                    memory > xkey
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) 0)
                          x__hash__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xrandrange)) (100000))))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          seq
                            xkey.write (((xKey)) 0)
                            (((unsupported)) ((((unsupported)) ((xod)) ((xkey)))) ((xi)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xlist)) (((((xod).xvalues)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xlist)) (((((xod).xitems)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xrepr)) ((xod)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xod).xcopy)) 0)
                xtest_issue24348.write
                  [xself]
                    memory > xOrderedDict
                    memory > x__hash__
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) 0)
                          x__hash__.write
                            [xself]
                              seq > @
                                (((unsupported)) (1))
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ((((xKey)) 0)))) (0))
                        bogusForceDataize.write ((((xod).xpopitem)) 0)
                xtest_issue24667.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    memory > xkey
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((xc0)) ("0123456789ABCDEF"))
                          (((unsupported)) ((xc1)) ("0123456789ABCDEF"))
                            seq
                              ((((xlen)) ((xod))).eq 4).if
                                (((unsupported)) (((xod).xpopitem)) (FALSE))
                              xkey.write ((xc0).add (xc1))
                              (((unsupported)) ((((unsupported)) ((xod)) ((xkey)))) ((xkey)))
                xtest_dict_setitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xdict).x__setitem__)) ((xod)) ("spam") (1))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("NULL") ((((xrepr)) ((xod)))))
                xtest_dict_delitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ("spam"))) (1))
                        (((unsupported)) ((((unsupported)) ((xod)) ("ham"))) (2))
                        bogusForceDataize.write ((((xdict).x__delitem__)) ((xod)) ("spam"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xrepr)) ((xod)))
                xtest_dict_clear.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ("spam"))) (1))
                        (((unsupported)) ((((unsupported)) ((xod)) ("ham"))) (2))
                        bogusForceDataize.write ((((xdict).xclear)) ((xod)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("NULL") ((((xrepr)) ((xod)))))
                xtest_dict_pop.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ("spam"))) (1))
                        (((unsupported)) ((((unsupported)) ((xod)) ("ham"))) (2))
                        bogusForceDataize.write ((((xdict).xpop)) ((xod)) ("spam"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xrepr)) ((xod)))
                xtest_dict_popitem.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xod)) ("spam"))) (1))
                        (((unsupported)) ((((unsupported)) ((xod)) ("ham"))) (2))
                        bogusForceDataize.write ((((xdict).xpopitem)) ((xod)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write (((xrepr)) ((xod)))
                xtest_dict_setdefault.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xdict).xsetdefault)) ((xod)) ("spam") (1))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("NULL") ((((xrepr)) ((xod)))))
                xtest_dict_update.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write ((((xdict).xupdate)) ((xod)) ((((unsupported)) ((((unsupported)) ("spam") (1))))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("NULL") ((((xrepr)) ((xod)))))
                xtest_reference_loop.write
                  [xself]
                    memory > xOrderedDict
                    memory > xr
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        (((unsupported)) 0)
                          xod.write (((xOrderedDict)) 0)
                        (((unsupported)) ((((unsupported)) (((xA).xod)) ((xA)))) ("None: is there a None literal in the EO language?"))
                        xr.write ((((xweakref).xref)) ((xA)))
                        (((unsupported)) ((((unsupported)) ((xA)))))
                        bogusForceDataize.write ((((xgc).xcollect)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xr)) 0)))
                xtest_free_after_iterating.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xsupport).xcheck_free_after_iterating)) ((xself)) ((xiter)) (((xself).xOrderedDict)))
                        bogusForceDataize.write ((((xsupport).xcheck_free_after_iterating)) ((xself)) ((((unsupported)) ((((xiter)) (((((xd).xkeys)) 0)))))) (((xself).xOrderedDict)))
                        bogusForceDataize.write ((((xsupport).xcheck_free_after_iterating)) ((xself)) ((((unsupported)) ((((xiter)) (((((xd).xvalues)) 0)))))) (((xself).xOrderedDict)))
                        bogusForceDataize.write ((((xsupport).xcheck_free_after_iterating)) ((xself)) ((((unsupported)) ((((xiter)) (((((xd).xitems)) 0)))))) (((xself).xOrderedDict)))
                xtest_ordered_dict_items_result_gc.write
                  [xself]
                    memory > xit
                    seq > @
                      (((unsupported)) 0)
                        xit.write (((xiter)) ((((((((xself).xOrderedDict)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((unsupported)) 0))))).xitems)) 0)))
                        bogusForceDataize.write ((((xgc).xcollect)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xgc).xis_tracked)) ((((xnext)) ((xit)))))))
            (((unsupported)) ((xOrderedDictTests)) (((xunittest).xTestCase)))
              seq
                xmodule.write (xpy_coll)
                xOrderedDict.write ((xpy_coll).xOrderedDict)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xmodule.write (xbuiltins)
                xOrderedDict.write (xdict)
            (((unsupported)) ((xmethod)) (((((((("test_init test_update test_abc test_clear test_delitem ".add "test_setitem test_detect_deletion_during_iteration ").add "test_popitem test_reinsert test_override_update ").add "test_highly_nested test_highly_nested_subclass ").add "test_delitem_hash_collision ").xsplit)) 0)))
              bogusForceDataize.write (((xsetattr)) ((xCPythonBuiltinDictTests)) ((xmethod)) ((((xgetattr)) ((xOrderedDictTests)) ((xmethod)))))
            (((unsupported)) ((((unsupported)) ((xmethod)))))
            (((unsupported)) ((xOrderedDictTests)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_coll)) ("requires the C version of the collections module"))))
              seq
                xmodule.write (xc_coll)
                xOrderedDict.write ((xc_coll).xOrderedDict)
                xcheck_sizeof.write ((xsupport).xcheck_sizeof)
                xtest_sizeof_exact.write
                  [xself]
                    memory > xod
                    memory > xsize
                    memory > xentrysize
                    memory > xitersize
                    memory > xcalcsize
                    memory > xcheck
                    memory > xnodesize
                    memory > xOrderedDict
                    memory > xp
                    memory > xbasicsize
                    seq > @
                      (((unsupported)) 0)
                        xOrderedDict.write ((xself).xOrderedDict)
                        xcalcsize.write ((xstruct).xcalcsize)
                        xsize.write ((xsupport).xcalcobjsize)
                        xcheck.write ((xself).xcheck_sizeof)
                        xbasicsize.write ((((xsize)) (("nQ2P".add "3PnPn2P"))).add (((xcalcsize)) ("2nP2n")))
                        xentrysize.write (((xcalcsize)) ("n2P"))
                        xp.write (((xcalcsize)) ("P"))
                        xnodesize.write (((xcalcsize)) ("Pn2P"))
                        xod.write (((xOrderedDict)) 0)
                        bogusForceDataize.write (((xcheck)) ((xod)) ((((xbasicsize).add 8).add (5.mul (xentrysize)))))
                        (((unsupported)) (((xod).xx)) (1))
                        bogusForceDataize.write (((xcheck)) ((xod)) ((((xbasicsize).add 8).add (5.mul (xentrysize)))))
                        bogusForceDataize.write ((((xod).xupdate)) ((((unsupported)) ((((unsupported)) ((xi)) ((xi)))) ((xi)) ((((xrange)) (3))))))
                        bogusForceDataize.write (((xcheck)) ((xod)) ((((((xbasicsize).add (8.mul (xp))).add 8).add (5.mul (xentrysize))).add (3.mul (xnodesize)))))
                        bogusForceDataize.write ((((xod).xupdate)) ((((unsupported)) ((((unsupported)) ((xi)) ((xi)))) ((xi)) ((((xrange)) (3) (10))))))
                        bogusForceDataize.write (((xcheck)) ((xod)) ((((((xbasicsize).add (16.mul (xp))).add 16).add (10.mul (xentrysize))).add (10.mul (xnodesize)))))
                        bogusForceDataize.write (((xcheck)) (((((xod).xkeys)) 0)) ((((xsize)) ("P"))))
                        bogusForceDataize.write (((xcheck)) (((((xod).xitems)) 0)) ((((xsize)) ("P"))))
                        bogusForceDataize.write (((xcheck)) (((((xod).xvalues)) 0)) ((((xsize)) ("P"))))
                        xitersize.write (((xsize)) ("iP2n2P"))
                        bogusForceDataize.write (((xcheck)) ((((xiter)) ((xod)))) ((xitersize)))
                        bogusForceDataize.write (((xcheck)) ((((xiter)) (((((xod).xkeys)) 0)))) ((xitersize)))
                        bogusForceDataize.write (((xcheck)) ((((xiter)) (((((xod).xitems)) 0)))) ((xitersize)))
                        bogusForceDataize.write (((xcheck)) ((((xiter)) (((((xod).xvalues)) 0)))) ((xitersize)))
                xtest_key_change_during_iteration.write
                  [xself]
                    memory > xOrderedDict
                    memory > xod
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xod.write ((((xOrderedDict).xfromkeys)) ("abcde"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("abcde"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((((unsupported)) ((xi)) ((xk)))) ((((xenumerate)) ((xod)))))
                            seq
                              bogusForceDataize.write ((((xod).xmove_to_end)) ((xk)))
                              bogusForceDataize.write ((((xself).xassertLess)) ((xi)) (5))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((xk)) ((xod)))
                            (((unsupported)) ((((unsupported)) ((xod)) ("f"))) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((xk)) ((xod)))
                            (((unsupported)) ((((unsupported)) ((((unsupported)) ((xod)) ("c"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xod)))) ((((xlist)) ("bdeaf"))))
                xtest_iterators_pickling.write
                  [xself]
                    memory > xexpected
                    memory > xmeth
                    memory > xod
                    memory > xOrderedDict
                    memory > xpairs
                    memory > xp
                    memory > xunpickled
                    memory > xit
                    seq > @
                      seq
                        xOrderedDict.write ((xself).xOrderedDict)
                        xpairs.write (((unsupported)) ((((unsupported)) ("c") (1))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (3))) ((((unsupported)) ("d") (4))) ((((unsupported)) ("e") (5))) ((((unsupported)) ("f") (6))))
                        xod.write (((xOrderedDict)) ((xpairs)))
                        (((unsupported)) ((xmethod_name)) ((((unsupported)) ("keys") ("values") ("items"))))
                          seq
                            xmeth.write (((xgetattr)) ((xod)) ((xmethod_name)))
                            xexpected.write (((unsupported)) ((((xlist)) ((((xmeth)) 0)))) ((((unsupported)) (1))))
                            (((unsupported)) ((xi)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                              (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xmethod_name)) ((xi)))))
                                seq
                                  xit.write (((xiter)) ((((xmeth)) 0)))
                                  bogusForceDataize.write (((xnext)) ((xit)))
                                  xp.write ((((xpickle).xdumps)) ((xit)) ((xi)))
                                  xunpickled.write ((((xpickle).xloads)) ((xp)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xunpickled)))) ((xexpected)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((xexpected)))
                xtest_weakref_list_is_not_traversed.write
                  [xself]
                    memory > xx_ref
                    memory > xcycle
                    memory > xx
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xgc).xcollect)) 0)
                        xx.write ((((xself).xOrderedDict)) 0)
                        (((unsupported)) (((xx).xcycle)) ((xx)))
                        xcycle.write (((unsupported)) 0)
                        bogusForceDataize.write ((((xcycle).xappend)) ((xcycle)))
                        xx_ref.write ((((xweakref).xref)) ((xx)))
                        bogusForceDataize.write ((((xcycle).xappend)) ((xx_ref)))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xcycle)) ((xx_ref)))))
                        bogusForceDataize.write ((((xgc).xcollect)) 0)
            (((unsupported)) ((xPurePythonOrderedDictTests)))
              seq
                xmodule.write (xpy_coll)
                (((unsupported)) (((xpy_coll).xOrderedDict)))
            (((unsupported)) ((xCPythonOrderedDictTests)))
              seq
                xmodule.write (xc_coll)
                (((unsupported)) (((xc_coll).xOrderedDict)))
            (((unsupported)) (((xmapping_tests).xBasicTestMappingProtocol)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xcls).xtype2test)) (((xpy_coll).xOrderedDict)))
                xtest_popitem.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xself).x_empty_mapping)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xd).xpopitem)))
            (((unsupported)) (((xmapping_tests).xBasicTestMappingProtocol)) (((((xunittest).xskipUnless)) ((xc_coll)) ("requires the C version of the collections module"))))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xcls).xtype2test)) (((xc_coll).xOrderedDict)))
                xtest_popitem.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xself).x_empty_mapping)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xd).xpopitem)))
            (((unsupported)) (((xmapping_tests).xBasicTestMappingProtocol)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xpy_coll).xOrderedDict)))
                        (((unsupported)) (((xcls).xtype2test)) ((xMyOrderedDict)))
                xtest_popitem.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xself).x_empty_mapping)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xd).xpopitem)))
            (((unsupported)) (((xmapping_tests).xBasicTestMappingProtocol)) (((((xunittest).xskipUnless)) ((xc_coll)) ("requires the C version of the collections module"))))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xc_coll).xOrderedDict)))
                        (((unsupported)) (((xcls).xtype2test)) ((xMyOrderedDict)))
                xtest_popitem.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xself).x_empty_mapping)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xd).xpopitem)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)