memory > xLeft
memory > xRuntimeError
memory > xRight
memory > xstr
memory > xBase
memory > xZeroDivisionError
memory > xtype
memory > xMyMeta
memory > xsuper
memory > xMyClass
memory > xMeta
memory > xMiddle
memory > xkwargs
memory > xcm
memory > xtypes
memory > xBaseWithoutInit
memory > xDescriptor
memory > xB
memory > xNonDescriptor
memory > xsetattr
memory > xunittest
memory > xobject
memory > xA
memory > xdict
memory > xBaseWithInit
memory > xTypeError
memory > x__name__
[] > test_subclassinit
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_init_subclass_wrong
        memory > xtest_set_name_wrong
        memory > xtest_init_subclass_skipped
        memory > xtest_type
        memory > xtest_init_subclass_kwargs
        memory > xtest_errors_changed_pep487
        memory > xtest_set_name_error
        memory > xtest_set_name_metaclass
        memory > xtest_init_subclass_diamond
        memory > xtest_set_name_lookup
        memory > xtest_set_name
        memory > xtest_init_subclass_dict
        memory > xtest_init_subclass_error
        memory > xtest_errors
        memory > xtest_set_name_init_subclass
        memory > xtest_set_name_modifying_dict
        memory > xtest_init_subclass
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_init_subclass.write
                  [xself]
                    memory > xinitialized
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xinitialized.write FALSE
                            x__init_subclass__.write
                              [xcls]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) 0)
                                    (((unsupported)) (((xcls).xinitialized)) (TRUE))
                        (((unsupported)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xA).xinitialized)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xB).xinitialized)))
                xtest_init_subclass_dict.write
                  [xself]
                    memory > xinitialized
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) ((xdict)))
                          seq
                            xinitialized.write FALSE
                            x__init_subclass__.write
                              [xcls]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) 0)
                                    (((unsupported)) (((xcls).xinitialized)) (TRUE))
                        (((unsupported)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xA).xinitialized)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xB).xinitialized)))
                xtest_init_subclass_kwargs.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xcls).xkwargs)) ((xkwargs)))
                        (((unsupported)) ((xA)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB).xkwargs)) ((((unsupported)) ((xdict)) (3))))
                xtest_init_subclass_error.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) ((xRuntimeError)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((xA)))
                xtest_init_subclass_wrong.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls xwhatever]
                              seq > @
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xA)))
                xtest_init_subclass_skipped.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xcls).xinitialized)) ((xcls)))
                        (((unsupported)) ((xBaseWithInit)))
                        (((unsupported)) ((xBaseWithoutInit)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xA).xinitialized)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xBaseWithoutInit).xinitialized)) ((xBaseWithoutInit)))
                xtest_init_subclass_diamond.write
                  [xself]
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xcls).xcalls)) ((((unsupported)) 0)))
                        (((unsupported)) ((xBase)))
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls xmiddle]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xcls).xcalls)) ((((unsupported)) ((xmiddle)))))
                        (((unsupported)) ((xBase)))
                          x__init_subclass__.write
                            [xcls xright]
                              seq > @
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((((xsuper)) 0).x__init_subclass__)) ((((unsupported)) ((xkwargs)))))
                                  (((unsupported)) (((xcls).xcalls)) ((((unsupported)) ((xright)))))
                        (((unsupported)) ((xLeft)) ((xMiddle)) ((xRight)) ("middle"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xA).xcalls)) ((((unsupported)) ("right") ("middle"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xLeft).xcalls)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xRight).xcalls)) ((((unsupported)) 0)))
                xtest_set_name.write
                  [xself]
                    memory > xd
                    memory > x__set_name__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself xowner xname]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xowner)) ((xowner)))
                                  (((unsupported)) (((xself).xname)) ((xname)))
                        (((unsupported)) 0)
                          xd.write (((xDescriptor)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xA).xd).xname)) ("d"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xA).xd).xowner)) ((xA)))
                xtest_set_name_metaclass.write
                  [xself]
                    memory > xd
                    memory > x__new__
                    memory > x__set_name__
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xns]
                              memory > xret
                              seq > @
                                seq
                                  xret.write ((((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xns)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xret).xd).xname)) ("d"))
                                  bogusForceDataize.write ((((xself).xassertIs)) ((((xret).xd).xowner)) ((xret)))
                                  (((unsupported)) (0))
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself xowner xname]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xowner)) ((xowner)))
                                  (((unsupported)) (((xself).xname)) ((xname)))
                        (((unsupported)) ((xMeta)))
                          xd.write (((xDescriptor)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xA)) (0))
                xtest_set_name_error.write
                  [xself]
                    memory > xattr
                    memory > x__set_name__
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself xowner xname]
                              seq > @
                                unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xcm)))
                          (((unsupported)) 0)
                            xattr.write (((xDescriptor)) 0)
                        xexc.write ((xcm).xexception)
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("bNotGoingToWorkb"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("battrb"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("bDescriptorb"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__cause__)) ((xZeroDivisionError)))
                xtest_set_name_wrong.write
                  [xself]
                    memory > xattr
                    memory > x__set_name__
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself]
                              seq > @
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xcm)))
                          (((unsupported)) 0)
                            xattr.write (((xDescriptor)) 0)
                        xexc.write ((xcm).xexception)
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("bNotGoingToWorkb"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("battrb"))
                        bogusForceDataize.write ((((xself).xassertRegex)) ((((xstr)) ((xexc)))) ("bDescriptorb"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__cause__)) ((xTypeError)))
                xtest_set_name_lookup.write
                  [xself]
                    memory > xd
                    memory > x__getattr__
                    memory > xresolved
                    seq > @
                      seq
                        xresolved.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__getattr__.write
                            [xself xname]
                              seq > @
                                bogusForceDataize.write ((((xresolved).xappend)) ((xname)))
                        (((unsupported)) 0)
                          xd.write (((xNonDescriptor)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("__set_name__") ((xresolved)) ("__set_name__ is looked up in instance dict"))
                xtest_set_name_init_subclass.write
                  [xself]
                    memory > xd
                    memory > x__new__
                    memory > x__set_name__
                    memory > x__init_subclass__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself xowner xname]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xowner)) ((xowner)))
                                  (((unsupported)) (((xself).xname)) ((xname)))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xns]
                              memory > xself
                              seq > @
                                seq
                                  xself.write ((((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xns)))
                                  (((unsupported)) (((xself).xmeta_owner)) (((xself).xowner)))
                                  (((unsupported)) (((xself).xmeta_name)) (((xself).xname)))
                                  (((unsupported)) ((xself)))
                        (((unsupported)) 0)
                          x__init_subclass__.write
                            [xcls]
                              seq > @
                                seq
                                  (((unsupported)) (((xcls).xowner)) ((((xcls).xd).xowner)))
                                  (((unsupported)) (((xcls).xname)) ((((xcls).xd).xname)))
                        (((unsupported)) ((xA)) ((xMeta)))
                          xd.write (((xDescriptor)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((xB).xowner)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB).xname)) ("d"))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xB).xmeta_owner)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xB).xname)) ("d"))
                xtest_set_name_modifying_dict.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xb
                    memory > xe
                    memory > xa
                    memory > xnotified
                    memory > x__set_name__
                    seq > @
                      seq
                        xnotified.write (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__set_name__.write
                            [xself xowner xname]
                              seq > @
                                seq
                                  bogusForceDataize.write (((xsetattr)) ((xowner)) (((xname).add "x")) ("None: is there a None literal in the EO language?"))
                                  bogusForceDataize.write ((((xnotified).xappend)) ((xname)))
                        (((unsupported)) 0)
                          seq
                            xa.write (((xDescriptor)) 0)
                            xb.write (((xDescriptor)) 0)
                            xc.write (((xDescriptor)) 0)
                            xd.write (((xDescriptor)) 0)
                            xe.write (((xDescriptor)) 0)
                        bogusForceDataize.write ((((xself).xassertCountEqual)) ((xnotified)) ((((unsupported)) ("a") ("b") ("c") ("d") ("e"))))
                xtest_errors.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xMyMeta)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xtypes).xnew_class)) ("MyClass") ((((unsupported)) ((xobject)))) ((((unsupported)) ((xdict)) ((xMyMeta)) (1))))
                        bogusForceDataize.write ((((xtypes).xprepare_class)) ("MyClass") ((((unsupported)) ((xobject)))) ((((unsupported)) ((xdict)) ((xMyMeta)) (1))))
                        (((unsupported)) ((xtype)))
                          x__init__.write
                            [xself xname xbases xnamespace xotherarg]
                              seq > @
                                bogusForceDataize.write ((((((xsuper)) 0).x__init__)) ((xname)) ((xbases)) ((xnamespace)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xMyMeta)) (1))
                        (((unsupported)) ((xtype)))
                          seq
                            x__new__.write
                              [xcls xname xbases xnamespace xotherarg]
                                seq > @
                                  (((unsupported)) (((((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xnamespace)))))
                            x__init__.write
                              [xself xname xbases xnamespace xotherarg]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((((xsuper)) 0).x__init__)) ((xname)) ((xbases)) ((xnamespace)))
                                    (((unsupported)) (((xself).xotherarg)) ((xotherarg)))
                        (((unsupported)) ((xMyMeta)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xMyClass).xotherarg)) (1))
                xtest_errors_changed_pep487.write
                  [xself]
                    memory > x__new__
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xnamespace]
                              seq > @
                                (((unsupported)) ((((unsupported)) (((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xnamespace)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xMyMeta)))
                        (((unsupported)) ((xtype)))
                          x__new__.write
                            [xcls xname xbases xnamespace xotherarg]
                              memory > xself
                              seq > @
                                seq
                                  xself.write ((((((xsuper)) 0).x__new__)) ((xcls)) ((xname)) ((xbases)) ((xnamespace)))
                                  (((unsupported)) (((xself).xotherarg)) ((xotherarg)))
                                  (((unsupported)) ((xself)))
                        (((unsupported)) ((xMyMeta)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xMyClass).xotherarg)) (1))
                xtest_type.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        xt.write (((xtype)) ("NewClass") ((((unsupported)) ((xobject)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xt)) ((xtype)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xt).x__name__)) ("NewClass"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xtype)) ("NewClass") ((((unsupported)) ((xobject)))) ((((unsupported)) 0)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)