memory > xNonAGen2
memory > xk
memory > xinspect
memory > x_count_elements
memory > xletter
memory > xC
memory > xcopy
memory > xIgnoreGeneratorExit
memory > xCustomSequence
memory > xIterator
memory > xMutableSequence
memory > xSet
memory > xmin
memory > xcomplex
memory > xsetop
memory > xAttributeError
memory > xRevPlusIter
memory > xMutableSequenceSubclass
memory > xpickle
memory > xNewPoint
memory > xlist
memory > xRuntimeError
memory > xMySet
memory > xNonGen1
memory > xenumerate
memory > xCounterSubclassWithSetItem
memory > xDerCol
memory > xAnextOnly
memory > xFailOnClose
memory > xColNoIter
memory > xRevItBlocked
memory > xValueError
memory > xAsyncIterable
memory > xTestUserObjects
memory > xfrozenset
memory > xCollection
memory > xstr
memory > xTestChainMap
memory > xq
memory > xDefaultChainMap
memory > xOrderedDict
memory > xNonAGen3
memory > xAI
memory > xB
memory > xpos
memory > xcontainer
memory > xRev
memory > xrange
memory > xNonGen2
memory > xH
memory > xcopier
memory > xdeque
memory > xRevNoIter
memory > xIt
memory > xTestCounter
memory > xstop
memory > xColImpl
memory > xUserString
memory > xb
memory > xMinimalAGen
memory > xItBlocked
memory > xRevRevBlocked
memory > xNotImplementedError
memory > xContainer
memory > xBar
memory > xMyCounter
memory > xchoice
memory > xGen
memory > xStopIteration
memory > xSequence
memory > xcollections
memory > xeval
memory > xinplace_op
memory > xIndexError
memory > xbytearray
memory > xUserDict
memory > xKeyError
memory > xChainMap
memory > xStopAsyncIteration
memory > xproto
memory > xMutableMapping
memory > xstart
memory > xHashable
memory > xmax
memory > xColNoSize
memory > xMyComparableSet
memory > xnamedtuple
memory > xp
memory > xValuesView
memory > xreversed
memory > xCoroutine
memory > xOther
memory > xtype
memory > xMinimalGen
memory > xrandrange
memory > xstring
memory > xGenerator
memory > xColNoCont
memory > xrepr
memory > xint
memory > xTestOneTrickPonyABCs
memory > xregular_op
memory > xset
memory > xhasattr
memory > xCustomEqualObject
memory > xdoctest
memory > xsample
memory > xCounter
memory > xsum
memory > xx
memory > xI
memory > xoperator
memory > xi
memory > xSized
memory > xTestCollectionABCs
memory > xIterable
memory > xR
memory > xAsyncGenerator
memory > xIterBlock
memory > xsuper
memory > xmodule
memory > xsupport
memory > xWithSet
memory > xnumberop
memory > xkwds
memory > xissubclass
memory > xm1
memory > xcounterop
memory > xtuple
memory > xnames
memory > xMapping
memory > xNotImplemented
memory > xspec
memory > xcnt
memory > xbytes
memory > xsorted
memory > xCoroLike
memory > xTestNamedTuple
memory > xfloat
memory > xAsyncIterator
memory > xMinimalCoro
memory > xargs
memory > xNonCol
memory > xPoint
memory > xdir
memory > xrenamed
memory > xCol
memory > xlowerdict
memory > xgetattr
memory > xv
memory > xid
memory > xListSet
memory > xprotocol
memory > xByteString
memory > xiter
memory > xUserList
memory > xCallable
memory > xAwaitable
memory > xsetattr
memory > xelem
memory > xname
memory > xzip
memory > xunittest
memory > xex
memory > xy
memory > xMyMapping
memory > xhash
memory > xnext
memory > xReversible
memory > xNextOnly
memory > xobject
memory > xABCTestCase
memory > xCounterSubclassWithGet
memory > xmemoryview
memory > xSequenceSubclass
memory > xSizeBlock
memory > xm2
memory > xop
memory > xMyNonComparableSet
memory > xlen
memory > xdict
memory > xOneTwoThreeSet
memory > xItemsView
memory > xj
memory > xisinstance
memory > xNonGen3
memory > xMutableSet
memory > xty
memory > xTypeError
memory > x__name__
memory > xkey
memory > xKeysView
memory > xNonAGen1
memory > xa
[] > test_collections
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_Hashable
        memory > xtest_constructor
        memory > xtest_init
        memory > xtest_direct_subclassing
        memory > xtest_basics
        memory > xtest_issue_5647
        memory > xtest_copy_subclass
        memory > xtest_helper_function
        memory > xtest_Collection
        memory > xvalidate_comparison
        memory > xtest_defaults
        memory > xtest_Container
        memory > xtest_Sequence
        memory > xtest_ByteString
        memory > xtest_readonly
        memory > xtest_pickle
        memory > xtest_module_parameter
        memory > xtest_Sized
        memory > xget
        memory > xassertSameSet
        memory > xtest_keyword_only_arguments
        memory > xtest_order_preservation
        memory > xtest_dict_protocol
        memory > xtest_Iterator
        memory > xtest_update
        memory > xtest_field_doc_reuse
        memory > xtest_AsyncGenerator
        memory > x__iter__
        memory > xtest_Set
        memory > xtest_subtract
        memory > xtest_bool
        memory > xtest_invariant_for_the_in_operator
        memory > x__contains__
        memory > xtest_dict_coercion
        memory > xvalidate_isinstance
        memory > xtest_missing
        memory > xtest_MutableMapping
        memory > xtest_Awaitable
        memory > xtest_main
        memory > xtest_repr
        memory > xtest_Iterable
        memory > xtest_field_doc
        memory > xvalidate_abstract_methods
        memory > xtest_dict_copy
        memory > xtest_Coroutine
        memory > xTestNT
        memory > xtest_hash_Set
        memory > xtest_Generator
        memory > xtest_Mapping
        memory > xtest_multiset_operations
        memory > xtest_tupleness
        memory > xtest_isdisjoint_Set
        memory > xtest_MutableSequence
        memory > xtest_factory
        memory > xtest_odd_sizes
        memory > xtest_inplace_operations
        memory > xtest_AsyncIterable
        memory > xtest_Callable
        memory > xtest_new_child
        memory > xtest_issue8750
        memory > xtest_copy
        memory > xtest_repr_nonsortable
        memory > xtest_Sequence_mixins
        memory > xtest_registration
        memory > x__setitem__
        memory > xtest_issue26915
        memory > x__init__
        memory > xadd
        memory > xtest_field_descriptor
        memory > xtest_issue16373
        memory > x_superset_test
        memory > xtest_Reversible
        memory > xtest_MutableSequence_mixins
        memory > xdiscard
        memory > xtest_name_conflicts
        memory > x_test_gen
        memory > xtest_MutableMapping_subclass
        memory > x__len__
        memory > xtest_instance
        memory > xtest_ordering
        memory > xtest_equality_Set
        memory > xtest_list_protocol
        memory > xtest_conversions
        memory > xtest_copying
        memory > xtest_Set_interoperability_with_real_sets
        memory > xtest_arithmetic_Set
        memory > xtest_AsyncIterator
        memory > xtest_MutableSet
        memory > xtest_list_copy
        memory > xtest_name_fixer
        memory > xtest_unary
        memory > xtest_issue_4920
        memory > x_copy_test
        memory > xtest_str_protocol
        memory > xtest_factory_doc_attr
        memory > xtest_namedtuple_subclass_issue_24931
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                x_superset_test.write
                  [xself xa xb]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertGreaterEqual)) ((((xset)) ((((xdir)) ((xa)))))) ((((xset)) ((((xdir)) ((xb)))))) ((((unsupported)) (("{a} should have all the methods of {b}".xformat)) (((xa).x__name__)) (((xb).x__name__)))))
                x_copy_test.write
                  [xself xobj]
                    memory > xobj_copy
                    seq > @
                      seq
                        xobj_copy.write ((((xobj).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((xobj).xdata)) (((xobj_copy).xdata)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).xdata)) (((xobj_copy).xdata)))
                        (((unsupported)) (((xobj).xtest)) ((((unsupported)) (1234))))
                        xobj_copy.write ((((xcopy).xcopy)) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((xobj).xdata)) (((xobj_copy).xdata)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xobj).xdata)) (((xobj_copy).xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xobj).xtest)) (((xobj_copy).xtest)))
                xtest_str_protocol.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_superset_test)) ((xUserString)) ((xstr)))
                xtest_list_protocol.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_superset_test)) ((xUserList)) ((xlist)))
                xtest_dict_protocol.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_superset_test)) ((xUserDict)) ((xdict)))
                xtest_list_copy.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        xobj.write (((xUserList)) 0)
                        bogusForceDataize.write ((((xobj).xappend)) (123))
                        bogusForceDataize.write ((((xself).x_copy_test)) ((xobj)))
                xtest_dict_copy.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        xobj.write (((xUserDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xobj)) (123))) ("abc"))
                        bogusForceDataize.write ((((xself).x_copy_test)) ((xobj)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xc
                    memory > xf
                    memory > xd
                    memory > xe
                    seq > @
                      seq
                        xc.write (((xChainMap)) 0)
                        (((unsupported)) ((((unsupported)) ((xc)) ("a"))) (1))
                        (((unsupported)) ((((unsupported)) ((xc)) ("b"))) (2))
                        xd.write ((((xc).xnew_child)) 0)
                        (((unsupported)) ((((unsupported)) ((xd)) ("b"))) (20))
                        (((unsupported)) ((((unsupported)) ((xd)) ("c"))) (30))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) ((((unsupported)) ((((unsupported)) ("b") (20) ("c") (30))) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xitems)) 0)) (((((((unsupported)) ((xdict)) (1) (20) (30)).xitems)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xd)))) (3))
                        (((unsupported)) ((xkey)) ("abc"))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xkey)) ((xd)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (1) (20) (30) (100)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xget)) ((xk)) (100))) ((xv)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xd)) ("b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) ((((unsupported)) ((((unsupported)) ("c") (30))) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xitems)) 0)) (((((((unsupported)) ((xdict)) (1) (2) (30)).xitems)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xd)))) (3))
                        (((unsupported)) ((xkey)) ("abc"))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xkey)) ((xd)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (1) (2) (30) (100)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xget)) ((xk)) (100))) ((xv)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xrepr)) ((xd)))) ((((unsupported)) ((((((xtype)) ((xd))).x__name__).add "({'c': 30}, {'a': 1, 'b': 2})")) ((((((xtype)) ((xd))).x__name__).add "({'c': 30}, {'b': 2, 'a': 1})")))))
                        (((unsupported)) ((xe)) ((((unsupported)) (((((xd).xcopy)) 0)) (((((xcopy).xcopy)) ((xd)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xe)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) (((xe).xmaps)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((xd)) ((xe)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((((unsupported)) (((xd).xmaps)) (0))) ((((unsupported)) (((xe).xmaps)) (0))))
                            (((unsupported)) ((((unsupported)) ((xm1)) ((xm2)))) ((((xzip)) ((((unsupported)) (((xd).xmaps)) ((((unsupported)) (1))))) ((((unsupported)) (((xe).xmaps)) ((((unsupported)) (1))))))))
                              bogusForceDataize.write ((((xself).xassertIs)) ((xm1)) ((xm2)))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xe.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xd)) ((xproto)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xe)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) (((xe).xmaps)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((xd)) ((xe)))
                            (((unsupported)) ((((unsupported)) ((xm1)) ((xm2)))) ((((xzip)) (((xd).xmaps)) (((xe).xmaps)))))
                              bogusForceDataize.write ((((xself).xassertIsNot)) ((xm1)) ((xm2)) ((xe)))
                        (((unsupported)) ((xe)) ((((unsupported)) (((((xcopy).xdeepcopy)) ((xd)))) ((((xeval)) ((((xrepr)) ((xd)))))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xe)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) (((xe).xmaps)))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ((xd)) ((xe)))
                            (((unsupported)) ((((unsupported)) ((xm1)) ((xm2)))) ((((xzip)) (((xd).xmaps)) (((xe).xmaps)))))
                              bogusForceDataize.write ((((xself).xassertIsNot)) ((xm1)) ((xm2)) ((xe)))
                        xf.write ((((xd).xnew_child)) 0)
                        (((unsupported)) ((((unsupported)) ((xf)) ("b"))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xmaps)) ((((unsupported)) ((((unsupported)) ("b") (5))) ((((unsupported)) ("c") (30))) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf).xparents).xmaps)) ((((unsupported)) ((((unsupported)) ("c") (30))) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) ("b"))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xf).xparents)) ("b"))) (2))
                xtest_ordering.write
                  [xself]
                    memory > xadjustments
                    memory > xbaseline
                    memory > xcombined
                    memory > xcm
                    seq > @
                      seq
                        xbaseline.write (((unsupported)) ("music") ("bach") ("art") ("rembrandt"))
                        xadjustments.write (((unsupported)) ("art") ("van gogh") ("opera") ("carmen"))
                        xcm.write (((xChainMap)) ((xadjustments)) ((xbaseline)))
                        xcombined.write ((((xbaseline).xcopy)) 0)
                        bogusForceDataize.write ((((xcombined).xupdate)) ((xadjustments)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xcombined).xitems)) 0)))) ((((xlist)) (((((xcm).xitems)) 0)))))
                xtest_constructor.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xChainMap)) 0).xmaps)) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xChainMap)) ((((unsupported)) (1) (2)))).xmaps)) ((((unsupported)) ((((unsupported)) (1) (2))))))
                xtest_bool.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xChainMap)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xChainMap)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xChainMap)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xChainMap)) ((((unsupported)) 0)) ((((unsupported)) (1) (2))))))
                xtest_missing.write
                  [xself]
                    memory > xd
                    memory > x__missing__
                    seq > @
                      seq
                        (((unsupported)) ((xChainMap)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)) (999))
                        xd.write (((xDefaultChainMap)) ((((unsupported)) ((xdict)) (1) (2))) ((((unsupported)) ((xdict)) (20) (30))))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (1) (2) (30) (999)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) ((xk)))) ((xv)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (1) (2) (30) (77)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xget)) ((xk)) (77))) ((xv)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (TRUE) (TRUE) (TRUE) (FALSE)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xk)) ((xd)))) ((xv)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xpop)) ("a") (1001))) (1) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xpop)) ("a") (1002))) (1002))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xpopitem)) 0)) ((((unsupported)) ("b") (2))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xKeyError)))))
                          bogusForceDataize.write ((((xd).xpopitem)) 0)
                xtest_order_preservation.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write (((xChainMap)) ((((unsupported)) ((xOrderedDict)) (0) (88888))) ((((xOrderedDict)) 0)) ((((unsupported)) ((xOrderedDict)) (9999) (4444) (3333))) ((((unsupported)) ((xOrderedDict)) (666) (222) (777) (333) (888))) ((((xOrderedDict)) 0)) ((((unsupported)) ((xOrderedDict)) (55) (22))) ((((unsupported)) ((xOrderedDict)) (1) (2) (3) (4) (5))) ((((xOrderedDict)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) ((xd)))) ("abcdefghij"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xd).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (222))) ((((unsupported)) ("c") (3333))) ((((unsupported)) ("d") (4444))) ((((unsupported)) ("e") (55))) ((((unsupported)) ("f") (666))) ((((unsupported)) ("g") (777))) ((((unsupported)) ("h") (88888))) ((((unsupported)) ("i") (9999))) ((((unsupported)) ("j") (0))))))
                xtest_dict_coercion.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write (((xChainMap)) ((((unsupported)) ((xdict)) (1) (2))) ((((unsupported)) ((xdict)) (20) (30))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((xd)))) ((((unsupported)) ((xdict)) (1) (2) (30))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) (((((xd).xitems)) 0)))) ((((unsupported)) ((xdict)) (1) (2) (30))))
                xtest_new_child.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > x__contains__
                    memory > x__getitem__
                    memory > xm
                    seq > @
                      seq
                        unsupported
                        xc.write (((xChainMap)) 0)
                        (((unsupported)) ((((unsupported)) ((xc)) ("a"))) (1))
                        (((unsupported)) ((((unsupported)) ((xc)) ("b"))) (2))
                        xm.write (((unsupported)) ("b") (20) ("c") (30))
                        xd.write ((((xc).xnew_child)) ((xm)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xd).xmaps)) ((((unsupported)) ((((unsupported)) ("b") (20) ("c") (30))) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xm)) ((((unsupported)) (((xd).xmaps)) (0))))
                        (((unsupported)) ((xdict)))
                          seq
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xkey)) ((xstr))).if
                                      xkey.write ((((xkey).xlower)) 0)
                                    (((unsupported)) (((((xdict).x__getitem__)) ((xself)) ((xkey)))))
                            x__contains__.write
                              [xself xkey]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xkey)) ((xstr))).if
                                      xkey.write ((((xkey).xlower)) 0)
                                    (((unsupported)) (((((xdict).x__contains__)) ((xself)) ((xkey)))))
                        xc.write (((xChainMap)) 0)
                        (((unsupported)) ((((unsupported)) ((xc)) ("a"))) (1))
                        (((unsupported)) ((((unsupported)) ((xc)) ("b"))) (2))
                        xm.write (((unsupported)) ((xlowerdict)) (20) (30))
                        xd.write ((((xc).xnew_child)) ((xm)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xm)) ((((unsupported)) (((xd).xmaps)) (0))))
                        (((unsupported)) ((xkey)) ("abc"))
                          bogusForceDataize.write ((((xself).xassertIn)) ((xkey)) ((xd)))
                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((((unsupported)) ((xdict)) (1) (20) (30) (100)).xitems)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xd).xget)) ((xk)) (100))) ((xv)))
            xTestNT.write (((xnamedtuple)) ("TestNT") ("x y z"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_factory.write
                  [xself]
                    memory > xPoint
                    memory > xnt
                    seq > @
                      seq
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__name__)) ("Point"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__slots__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__module__)) ((x__name__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__getitem__)) (((xtuple).x__getitem__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_fields)) ((((unsupported)) ("x") ("y"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc%") ("efg ghi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("class") ("efg ghi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("9abc") ("efg ghi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc") ("efg g%hi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc") ("abc class"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc") ("8efg 9ghi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc") ("_efg ghi"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xnamedtuple)) ("abc") ("efg efg ghi"))
                        bogusForceDataize.write (((xnamedtuple)) ("Point0") ("x1 y2"))
                        bogusForceDataize.write (((xnamedtuple)) ("_") ("a b c"))
                        xnt.write (((xnamedtuple)) ("nt") ("the quick brown fox"))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("u'") ((((xrepr)) (((xnt).x_fields)))))
                        xnt.write (((xnamedtuple)) ("nt") ((((unsupported)) ("the") ("quick"))))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("u'") ((((xrepr)) (((xnt).x_fields)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xPoint).x_make)) ((((unsupported)) (11))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xPoint).x_make)) ((((unsupported)) (11) (22) (33))))
                xtest_defaults.write
                  [xself]
                    memory > xPoint
                    seq > @
                      seq
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((unsupported)) (10) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) ("x") (10) ("y") (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1) (2))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1))) ((((unsupported)) (1) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) 0)) ((((unsupported)) (10) (20))))
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((unsupported)) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) ("y") (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1) (2))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1))) ((((unsupported)) (1) (20))))
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1) (2))) ((((unsupported)) (1) (2))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xPoint)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xPoint)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xPoint)) (1) (2) (3))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((unsupported)) (10) (20) (30))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") (10))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") (FALSE))
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xPoint).x__new__).x__defaults__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (10) (20))) ((((unsupported)) (10) (20))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xPoint)) (10))
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((unsupported)) (10) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) ("x") (10) ("y") (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint).x__new__).x__defaults__)) ((((unsupported)) (10) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1) (2))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1))) ((((unsupported)) (1) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) 0)) ((((unsupported)) (10) (20))))
                        xPoint.write (((unsupported)) ((xnamedtuple)) ("Point") ("x y") ((((xiter)) ((((unsupported)) (10) (20))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x_field_defaults)) ((((unsupported)) ("x") (10) ("y") (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint).x__new__).x__defaults__)) ((((unsupported)) (10) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1) (2))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) (1))) ((((unsupported)) (1) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint)) 0)) ((((unsupported)) (10) (20))))
                xtest_readonly.write
                  [xself]
                    memory > xPoint
                    memory > xp
                    seq > @
                      seq
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        xp.write (((xPoint)) (11) (22))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xp).xx)) (33))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xp).xx)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((xp)) (0))) (33))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((unsupported)) ((((unsupported)) ((xp)) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xx)) (11))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) (0))) (11))
                xtest_factory_doc_attr.write
                  [xself]
                    memory > xPoint
                    seq > @
                      (((unsupported)) 0)
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__doc__)) ("Point(x, y)"))
                        (((unsupported)) (((xPoint).x__doc__)) ("2D point"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xPoint).x__doc__)) ("2D point"))
                xtest_field_doc.write
                  [xself]
                    memory > xPoint
                    memory > xVector
                    seq > @
                      (((unsupported)) 0)
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint).xx).x__doc__)) ("Alias for field number 0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint).xy).x__doc__)) ("Alias for field number 1"))
                        (((unsupported)) ((((xPoint).xx).x__doc__)) ("docstring for Point.x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xPoint).xx).x__doc__)) ("docstring for Point.x"))
                        xVector.write (((xnamedtuple)) ("Vector") ("x y"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xVector).xx).x__doc__)) ("Alias for field number 0"))
                        (((unsupported)) ((((xVector).xx).x__doc__)) ("docstring for Vector.x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xVector).xx).x__doc__)) ("docstring for Vector.x"))
                xtest_field_doc_reuse.write
                  [xself]
                    memory > xP
                    memory > xQ
                    seq > @
                      (((unsupported)) 0)
                        xP.write (((xnamedtuple)) ("P") ((((unsupported)) ("m") ("n"))))
                        xQ.write (((xnamedtuple)) ("Q") ((((unsupported)) ("o") ("p"))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xP).xm).x__doc__)) ((((xQ).xo).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xP).xn).x__doc__)) ((((xQ).xp).x__doc__)))
                xtest_name_fixer.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xspec)) ((xrenamed)))) ((((unsupported)) ((((unsupported)) ((((unsupported)) ("efg") ("g%hi"))) ((((unsupported)) ("efg") ("_1"))))) ((((unsupported)) ((((unsupported)) ("abc") ("class"))) ((((unsupported)) ("abc") ("_1"))))) ((((unsupported)) ((((unsupported)) ("8efg") ("9ghi"))) ((((unsupported)) ("_0") ("_1"))))) ((((unsupported)) ((((unsupported)) ("abc") ("_efg"))) ((((unsupported)) ("abc") ("_1"))))) ((((unsupported)) ((((unsupported)) ("abc") ("efg") ("efg") ("ghi"))) ((((unsupported)) ("abc") ("efg") ("_2") ("ghi"))))) ((((unsupported)) ((((unsupported)) ("abc") ("") ("x"))) ((((unsupported)) ("abc") ("_1") ("x"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xnamedtuple)) ("NT") ((xspec)) (TRUE)).x_fields)) ((xrenamed)))
                xtest_module_parameter.write
                  [xself]
                    memory > xNT
                    seq > @
                      seq
                        xNT.write (((unsupported)) ((xnamedtuple)) ("NT") ((((unsupported)) ("x") ("y"))) ((xcollections)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xNT).x__module__)) ((xcollections)))
                xtest_instance.write
                  [xself]
                    memory > xPoint
                    memory > xp
                    seq > @
                      seq
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        xp.write (((xPoint)) (11) (22))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((unsupported)) ((xPoint)) (11) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((unsupported)) ((xPoint)) (11) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((unsupported)) ((xPoint)) (22) (11))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((xPoint)) ((((unsupported)) ((((unsupported)) (11) (22))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((xPoint)) ((((unsupported)) ((((unsupported)) ((xdict)) (11) (22))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xPoint)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xPoint)) (1) (2) (3))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPoint)) (1) (2))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xPoint)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xp)))) ("Point(x=11, y=22)"))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("__weakref__") ((((xdir)) ((xp)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) (((((xPoint).x_make)) ((((unsupported)) (11) (22))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).x_fields)) ((((unsupported)) ("x") ("y"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xp).x_replace)) (1))) ((((unsupported)) (1) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xp).x_asdict)) 0)) ((((unsupported)) ((xdict)) (11) (22))))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) (((xp).x_replace)) (1) (2))
                          bogusForceDataize.write ((((xself).x_fail)) ("Did not detect an incorrect fieldname"))
                        xPoint.write (((xnamedtuple)) ("Point") ("x, y"))
                        xp.write (((unsupported)) ((xPoint)) (11) (22))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xp)))) ("Point(x=11, y=22)"))
                        xPoint.write (((xnamedtuple)) ("Point") ((((unsupported)) ("x") ("y"))))
                        xp.write (((unsupported)) ((xPoint)) (11) (22))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xp)))) ("Point(x=11, y=22)"))
                xtest_tupleness.write
                  [xself]
                    memory > xPoint
                    memory > xp
                    seq > @
                      seq
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        xp.write (((xPoint)) (11) (22))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xp)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((unsupported)) (11) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtuple)) ((xp)))) ((((unsupported)) (11) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xp)))) ((((unsupported)) (11) (22))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) ((xp)))) (22))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmax)) ((((unsupported)) ((xp)))))) (22))
                        (((unsupported)) ((((unsupported)) ((xx)) ((xy)))) ((xp)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((((unsupported)) ((xx)) ((xy)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xp)) (0))) ((((unsupported)) ((xp)) (1))))) ((((unsupported)) (11) (22))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xp)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) ((1.neg)))) (22))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xp)))) ((((xhash)) ((((unsupported)) (11) (22))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xx)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xy)) ((xy)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          unsupported
                xtest_odd_sizes.write
                  [xself]
                    memory > xd
                    memory > xd_expected
                    memory > xb
                    memory > xb2
                    memory > xZero
                    memory > xnames
                    memory > xDot
                    memory > xb2_expected
                    memory > xn
                    memory > xBig
                    seq > @
                      seq
                        xZero.write (((xnamedtuple)) ("Zero") (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xZero)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xZero).x_make)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xZero)) 0)))) ("Zero()"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xZero)) 0).x_asdict)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xZero)) 0).x_fields)) ((((unsupported)) 0)))
                        xDot.write (((xnamedtuple)) ("Dot") ("d"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xDot)) (1))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xDot).x_make)) ((((unsupported)) (1))))) ((((unsupported)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xDot)) (1)).xd)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xDot)) (1))))) ("Dot(d=1)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xDot)) (1)).x_asdict)) 0)) ((((unsupported)) ("d") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((xDot)) (1)).x_replace)) (999))) ((((unsupported)) (999))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xDot)) (1)).x_fields)) ((((unsupported)) ("d"))))
                        xn.write 5000
                        xnames.write (((xlist)) ((((xset)) ((((unsupported)) (((("".xjoin)) ((((unsupported)) ((((xchoice)) (((xstring).xascii_letters)))) ((xj)) ((((xrange)) (10))))))) ((xi)) ((((xrange)) ((xn)))))))))
                        xn.write (((xlen)) ((xnames)))
                        xBig.write (((xnamedtuple)) ("Big") ((xnames)))
                        xb.write (((xBig)) ((((unsupported)) ((((xrange)) ((xn)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb)) ((((xtuple)) ((((xrange)) ((xn)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xBig).x_make)) ((((xrange)) ((xn)))))) ((((xtuple)) ((((xrange)) ((xn)))))))
                        (((unsupported)) ((((unsupported)) ((xpos)) ((xname)))) ((((xenumerate)) ((xnames)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xb)) ((xname)))) ((xpos)))
                        bogusForceDataize.write (((xrepr)) ((xb)))
                        xd.write ((((xb).x_asdict)) 0)
                        xd_expected.write (((xdict)) ((((xzip)) ((xnames)) ((((xrange)) ((xn)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xd_expected)))
                        xb2.write ((((xb).x_replace)) ((((unsupported)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((((unsupported)) ((xnames)) (1))) (999))) ((((unsupported)) ((((unsupported)) ((xnames)) ((5.neg)))) (42))))))))))
                        xb2_expected.write (((xlist)) ((((xrange)) ((xn)))))
                        (((unsupported)) ((((unsupported)) ((xb2_expected)) (1))) (999))
                        (((unsupported)) ((((unsupported)) ((xb2_expected)) ((5.neg)))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xb2)) ((((xtuple)) ((xb2_expected)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).x_fields)) ((((xtuple)) ((xnames)))))
                xtest_pickle.write
                  [xself]
                    memory > xq
                    memory > xdumps
                    memory > xp
                    memory > xloads
                    seq > @
                      seq
                        xp.write (((unsupported)) ((xTestNT)) (10) (20) (30))
                        (((unsupported)) ((xmodule)) ((((unsupported)) ((xpickle)))))
                          seq
                            xloads.write (((xgetattr)) ((xmodule)) ("loads"))
                            xdumps.write (((xgetattr)) ((xmodule)) ("dumps"))
                            (((unsupported)) ((xprotocol)) ((((xrange)) ((1.neg)) ((((xmodule).xHIGHEST_PROTOCOL).add 1)))))
                              seq
                                xq.write (((xloads)) ((((xdumps)) ((xp)) ((xprotocol)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((xq)))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((xp).x_fields)) (((xq).x_fields)))
                                bogusForceDataize.write ((((xself).xassertNotIn)) ("OrderedDict") ((((xdumps)) ((xp)) ((xprotocol)))))
                xtest_copy.write
                  [xself]
                    memory > xp
                    memory > xq
                    seq > @
                      seq
                        xp.write (((unsupported)) ((xTestNT)) (10) (20) (30))
                        (((unsupported)) ((xcopier)) ((((unsupported)) (((xcopy).xcopy)) (((xcopy).xdeepcopy)))))
                          seq
                            xq.write (((xcopier)) ((xp)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xp)) ((xq)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xp).x_fields)) (((xq).x_fields)))
                xtest_name_conflicts.write
                  [xself]
                    memory > xvalues
                    memory > xt
                    memory > xwords
                    memory > xnewvalues
                    memory > xnewt
                    memory > xT
                    seq > @
                      seq
                        xT.write (((xnamedtuple)) ("T") ("itemgetter property self cls tuple"))
                        xt.write (((xT)) (1) (2) (3) (4) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((((unsupported)) (1) (2) (3) (4) (5))))
                        xnewt.write (((unsupported)) (((xt).x_replace)) (10) (20) (30) (40) (50))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xnewt)) ((((unsupported)) (10) (20) (30) (40) (50))))
                        xwords.write (((unsupported)) ("Alias") ("At") ("AttributeError") ("Build") ("Bypass") ("Create") ("Encountered") ("Expected") ("Field") ("For") ("Got") ("Helper") ("IronPython") ("Jython") ("KeyError") ("Make") ("Modify") ("Note") ("OrderedDict") ("Point") ("Return") ("Returns") ("Type") ("TypeError") ("Used") ("Validate") ("ValueError") ("Variables") ("a") ("accessible") ("add") ("added") ("all") ("also") ("an") ("arg_list") ("args") ("arguments") ("automatically") ("be") ("build") ("builtins") ("but") ("by") ("cannot") ("class_namespace") ("classmethod") ("cls") ("collections") ("convert") ("copy") ("created") ("creation") ("d") ("debugging") ("defined") ("dict") ("dictionary") ("doc") ("docstring") ("docstrings") ("duplicate") ("effect") ("either") ("enumerate") ("environments") ("error") ("example") ("exec") ("f") ("f_globals") ("field") ("field_names") ("fields") ("formatted") ("frame") ("function") ("functions") ("generate") ("get") ("getter") ("got") ("greater") ("has") ("help") ("identifiers") ("index") ("indexable") ("instance") ("instantiate") ("interning") ("introspection") ("isidentifier") ("isinstance") ("itemgetter") ("iterable") ("join") ("keyword") ("keywords") ("kwds") ("len") ("like") ("list") ("map") ("maps") ("message") ("metadata") ("method") ("methods") ("module") ("module_name") ("must") ("name") ("named") ("namedtuple") ("namedtuple_") ("names") ("namespace") ("needs") ("new") ("nicely") ("num_fields") ("number") ("object") ("of") ("operator") ("option") ("p") ("particular") ("pickle") ("pickling") ("plain") ("pop") ("positional") ("property") ("r") ("regular") ("rename") ("replace") ("replacing") ("repr") ("repr_fmt") ("representation") ("result") ("reuse_itemgetter") ("s") ("seen") ("self") ("sequence") ("set") ("side") ("specified") ("split") ("start") ("startswith") ("step") ("str") ("string") ("strings") ("subclass") ("sys") ("targets") ("than") ("the") ("their") ("this") ("to") ("tuple") ("tuple_new") ("type") ("typename") ("underscore") ("unexpected") ("unpack") ("up") ("use") ("used") ("user") ("valid") ("values") ("variable") ("verbose") ("where") ("which") ("work") ("x") ("y") ("z") ("zip"))
                        xT.write (((xnamedtuple)) ("T") ((xwords)))
                        xvalues.write (((xtuple)) ((((xrange)) ((((xlen)) ((xwords)))))))
                        xt.write (((xT)) ((((unsupported)) ((xvalues)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((xvalues)))
                        xt.write (((xT)) ((((unsupported)) ((((xdict)) ((((xzip)) (((xT).x_fields)) ((xvalues)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((xvalues)))
                        xt.write ((((xT).x_make)) ((xvalues)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xt)) ((xvalues)))
                        bogusForceDataize.write (((xrepr)) ((xt)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).x_asdict)) 0)) ((((xdict)) ((((xzip)) (((xT).x_fields)) ((xvalues)))))))
                        xt.write ((((xT).x_make)) ((xvalues)))
                        xnewvalues.write (((xtuple)) ((((unsupported)) (((xv).mul 10)) ((xv)) ((xvalues)))))
                        xnewt.write ((((xt).x_replace)) ((((unsupported)) ((((xdict)) ((((xzip)) (((xT).x_fields)) ((xnewvalues)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xnewt)) ((xnewvalues)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xT).x_fields)) ((((xtuple)) ((xwords)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).x__getnewargs__)) 0)) ((xvalues)))
                xtest_repr.write
                  [xself]
                    memory > xA
                    seq > @
                      seq
                        xA.write (((xnamedtuple)) ("A") ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xA)) (1))))) ("A(x=1)"))
                        (((unsupported)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xB)) (1))))) ("B(x=1)"))
                xtest_keyword_only_arguments.write
                  [xself]
                    memory > xNT
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xNT.write (((xnamedtuple)) ("NT") ((((unsupported)) ("x") ("y"))) (TRUE))
                        xNT.write (((unsupported)) ((xnamedtuple)) ("NT") ((((unsupported)) ("abc") ("def"))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xNT).x_fields)) ((((unsupported)) ("abc") ("_1"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xNT.write (((xnamedtuple)) ("NT") ((((unsupported)) ("abc") ("def"))) (FALSE) (TRUE))
                xtest_namedtuple_subclass_issue_24931.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((((xnamedtuple)) ("_Point") ((((unsupported)) ("x") ("y"))))))
                        xa.write (((xPoint)) (3) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).x_asdict)) 0)) ((((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("x") (3))) ((((unsupported)) ("y") (4))))))))
                        (((unsupported)) (((xa).xw)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).x__dict__)) ((((unsupported)) ("w") (5))))
                xtest_field_descriptor.write
                  [xself]
                    memory > xnp
                    memory > xp
                    memory > xx
                    memory > xPoint
                    memory > xy
                    seq > @
                      seq
                        xPoint.write (((xnamedtuple)) ("Point") ("x y"))
                        xp.write (((xPoint)) (11) (22))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xinspect).xisdatadescriptor)) (((xPoint).xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xPoint).xx).x__get__)) ((xp)))) (11))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((((xPoint).xx).x__set__)) ((xp)) (33))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((((xPoint).xx).x__delete__)) ((xp)))
                        (((unsupported)) ((xtuple)))
                          seq
                            xx.write ((((xpickle).xloads)) (((((xpickle).xdumps)) (((xPoint).xx)))))
                            xy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) (((xPoint).xy)))))
                        xnp.write (((xNewPoint)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xnp).xx)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xnp).xy)) (2))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xvalidate_abstract_methods.write
                  [xself xabc]
                    memory > xmethodstubs
                    memory > xC
                    memory > xstubs
                    seq > @
                      (((unsupported)) 0)
                        xmethodstubs.write ((((xdict).xfromkeys)) ((xnames)) ((((unsupported)) (0))))
                        xC.write (((xtype)) ("C") ((((unsupported)) ((xabc)))) ((xmethodstubs)))
                        bogusForceDataize.write (((xC)) 0)
                        (((unsupported)) ((xname)) ((xnames)))
                          seq
                            xstubs.write ((((xmethodstubs).xcopy)) 0)
                            (((unsupported)) ((((unsupported)) ((((unsupported)) ((xstubs)) ((xname)))))))
                            xC.write (((xtype)) ("C") ((((unsupported)) ((xabc)))) ((xstubs)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xC)) ((xname)))
                xvalidate_isinstance.write
                  [xself xabc xname]
                    memory > xC
                    memory > xstub
                    seq > @
                      seq
                        xstub.write (((unsupported)) (0))
                        xC.write (((xtype)) ("C") ((((unsupported)) ((xobject)))) ((((unsupported)) ("__hash__") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((xsetattr)) ((xC)) ((xname)) ((xstub)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xC)) 0)) ((xabc)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xC)) ((xabc)))))
                        xC.write (((xtype)) ("C") ((((unsupported)) ((xobject)))) ((((unsupported)) ("__hash__") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xC)) 0)) ((xabc)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xC)) ((xabc)))))
                xvalidate_comparison.write
                  [xself xinstance]
                    memory > xoperators
                    memory > x__eq__
                    memory > x__rxor__
                    memory > x__rsub__
                    memory > x__gt__
                    memory > x__init__
                    memory > xname
                    memory > x__ge__
                    memory > xother
                    memory > x__ror__
                    memory > xops
                    memory > x__le__
                    memory > x__lt__
                    memory > x__ne__
                    memory > x__rand__
                    seq > @
                      seq
                        xops.write (((unsupported)) ("lt") ("gt") ("le") ("ge") ("ne") ("or") ("and") ("xor") ("sub"))
                        xoperators.write (((unsupported)) 0)
                        (((unsupported)) ((xop)) ((xops)))
                          seq
                            xname.write (("__".add (xop)).add "__")
                            (((unsupported)) ((((unsupported)) ((xoperators)) ((xname)))) ((((xgetattr)) ((xoperator)) ((xname)))))
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xright_side)) (FALSE))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xright_side)) (TRUE))
                                    (((unsupported)) (TRUE))
                            x__lt__.write (x__eq__)
                            x__gt__.write (x__eq__)
                            x__le__.write (x__eq__)
                            x__ge__.write (x__eq__)
                            x__ne__.write (x__eq__)
                            x__ror__.write (x__eq__)
                            x__rand__.write (x__eq__)
                            x__rxor__.write (x__eq__)
                            x__rsub__.write (x__eq__)
                        (((unsupported)) ((((unsupported)) ((xname)) ((xop)))) (((((xoperators).xitems)) 0)))
                          seq
                            ((((xhasattr)) ((xinstance)) ((xname))).not).if
                              (((unsupported)) 0)
                            xother.write (((xOther)) 0)
                            bogusForceDataize.write (((xop)) ((xinstance)) ((xother)))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((xother).xright_side)) (("Right side not called for %s.%s".mod (((unsupported)) ((((xtype)) ((xinstance)))) ((xname))))))
            x_test_gen.write
              []
                seq > @
                  (((unsupported)) 0)
            (((unsupported)) ((xABCTestCase)))
              seq
                xtest_Awaitable.write
                  [xself]
                    memory > xsamples
                    memory > xc
                    memory > xthrow
                    memory > xcoro
                    memory > xnon_samples
                    memory > xsend
                    memory > x__await__
                    memory > xCoroLike
                    memory > xnew_coro
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        xcoro.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        xnew_coro.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__await__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((xCoroutine)))
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((((xsuper)) 0).xthrow)) ((xtyp)) ((xval)) ((xtb)))
                            x__await__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") ((((xint)) 0)) ((((xgen)) 0)) ((((xobject)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xAwaitable)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAwaitable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xBar)) 0)) ((((xMinimalCoro)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xAwaitable)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAwaitable)))))
                        xc.write (((xcoro)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xc)) ((xAwaitable)))
                        xc.write (((xnew_coro)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xAwaitable)))
                        bogusForceDataize.write ((((xc).xclose)) 0)
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xCoroutine).xregister)) ((xCoroLike)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xCoroLike)) 0)) ((xAwaitable)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xCoroLike)) ((xAwaitable)))))
                        xCoroLike.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                xtest_Coroutine.write
                  [xself]
                    memory > xsamples
                    memory > xc
                    memory > xthrow
                    memory > xclose
                    memory > xcoro
                    memory > xnon_samples
                    memory > xsend
                    memory > x__await__
                    memory > xnew_coro
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        xcoro.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        xnew_coro.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) 0)
                          x__await__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                        (((unsupported)) ((xCoroutine)))
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((((xsuper)) 0).xthrow)) ((xtyp)) ((xval)) ((xtb)))
                            x__await__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") ((((xint)) 0)) ((((xgen)) 0)) ((((xobject)) 0)) ((((xBar)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xCoroutine)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCoroutine)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xMinimalCoro)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xAwaitable)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAwaitable)))))
                        xc.write (((xcoro)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xc)) ((xCoroutine)))
                        xc.write (((xnew_coro)) 0)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xCoroutine)))
                        bogusForceDataize.write ((((xc).xclose)) 0)
                        (((unsupported)) 0)
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                            xclose.write
                              [xself]
                                seq > @
                            x__await__.write
                              [xself]
                                seq > @
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xCoroLike)) 0)) ((xCoroutine)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xCoroLike)) ((xCoroutine)))))
                        (((unsupported)) 0)
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                            xclose.write
                              [xself]
                                seq > @
                            x__await__.write
                              [xself]
                                seq > @
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xCoroLike)) 0)) ((xCoroutine)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xCoroLike)) ((xCoroutine)))))
                xtest_Hashable.write
                  [xself]
                    memory > xnon_samples
                    memory > x__hash__
                    memory > xsamples
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ((((xbytearray)) 0)) ((((xlist)) 0)) ((((xset)) 0)) ((((xdict)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xHashable)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xHashable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ("None: is there a None literal in the EO language?") ((((xint)) 0)) ((((xfloat)) 0)) ((((xcomplex)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xfrozenset)) 0)) ((xint)) ((xlist)) ((xobject)) ((xtype)) ((((xbytes)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xHashable)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xHashable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xHashable)))
                        (((unsupported)) ((xHashable)))
                          x__hash__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((((((xsuper)) 0).x__hash__)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((((xH)) 0)))) (0))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xint)) ((xH)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xHashable)) ("__hash__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xHashable)) ("__hash__"))
                xtest_AsyncIterable.write
                  [xself]
                    memory > xnon_samples
                    memory > x__aiter__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__aiter__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xself)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xAI)) 0)) ((xAsyncIterable)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xAI)) ((xAsyncIterable)))))
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") ((xobject)) ((((unsupported)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xAsyncIterable)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAsyncIterable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xAsyncIterable)) ("__aiter__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xAsyncIterable)) ("__aiter__"))
                xtest_AsyncIterator.write
                  [xself]
                    memory > xnon_samples
                    memory > x__aiter__
                    memory > x__anext__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__aiter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__anext__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xStopAsyncIteration)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xAI)) 0)) ((xAsyncIterator)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xAI)) ((xAsyncIterator)))))
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") ((xobject)) ((((unsupported)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xAsyncIterator)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAsyncIterator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        (((unsupported)) 0)
                          x__anext__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((xStopAsyncIteration)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xAnextOnly)) 0)) ((xAsyncIterator)))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xAsyncIterator)) ("__anext__") ("__aiter__"))
                xtest_Iterable.write
                  [xself]
                    memory > xnon_samples
                    memory > xsamples
                    memory > x__iter__
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xIterable)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xIterable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xbytes)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xlist)) 0)) ((((xset)) 0)) ((((xfrozenset)) 0)) ((((xdict)) 0)) (((((((xdict)) 0).xkeys)) 0)) (((((((xdict)) 0).xitems)) 0)) (((((((xdict)) 0).xvalues)) 0)) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xIterable)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xIterable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        (((unsupported)) ((xIterable)))
                          x__iter__.write
                            [xself]
                              seq > @
                                (((unsupported)) (((((((xsuper)) 0).x__iter__)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xI)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xstr)) ((xI)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xIterable)) ("__iter__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xIterable)) ("__iter__"))
                        (((unsupported)) 0)
                          x__iter__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xIt)))
                          x__iter__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xIt)) ((xIterable)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xIt)) 0)) ((xIterable)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xItBlocked)) ((xIterable)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xItBlocked)) 0)) ((xIterable)))))
                xtest_Reversible.write
                  [xself]
                    memory > xsamples
                    memory > x__reversed__
                    memory > xnon_reversibles
                    memory > x__iter__
                    memory > xnon_samples
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ((((xset)) 0)) ((((xfrozenset)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xReversible)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xReversible)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xnon_reversibles.write (((unsupported)) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))) ((((xiter)) ((((unsupported)) 0)))) ((((xreversed)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xnon_reversibles)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xReversible)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xReversible)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xbytes)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xlist)) 0)) ((((xOrderedDict)) 0)) (((((((xOrderedDict)) 0).xkeys)) 0)) (((((((xOrderedDict)) 0).xitems)) 0)) (((((((xOrderedDict)) 0).xvalues)) 0)) ((((xCounter)) 0)) (((((((xCounter)) 0).xkeys)) 0)) (((((((xCounter)) 0).xitems)) 0)) (((((((xCounter)) 0).xvalues)) 0)) ((((xdict)) 0)) (((((((xdict)) 0).xkeys)) 0)) (((((((xdict)) 0).xitems)) 0)) (((((((xdict)) 0).xvalues)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xReversible)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xReversible)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xSequence)) ((xReversible)))) ((((xrepr)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xMapping)) ((xReversible)))) ((((xrepr)) ((xMapping)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xMutableMapping)) ((xReversible)))) ((((xrepr)) ((xMutableMapping)))))
                        (((unsupported)) ((xReversible)))
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((xlist)) 0)))))
                            x__reversed__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((xlist)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) ((((xR)) 0)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xfloat)) ((xR)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xReversible)) ("__reversed__") ("__iter__"))
                        (((unsupported)) 0)
                          x__reversed__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xreversed)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xRevNoIter)))
                          x__iter__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xRevNoIter)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xRevNoIter)) 0)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xRevPlusIter)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xRevPlusIter)) 0)) ((xReversible)))))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__reversed__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xreversed)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xRev)))
                          x__iter__.write "None: is there a None literal in the EO language?"
                        (((unsupported)) ((xRev)))
                          x__reversed__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xRev)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xisinstance)) ((((xRev)) 0)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xRevItBlocked)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xRevItBlocked)) 0)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xRevRevBlocked)) ((xReversible)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xRevRevBlocked)) 0)) ((xReversible)))))
                xtest_Collection.write
                  [xself]
                    memory > xsamples
                    memory > x__iter__
                    memory > x__contains__
                    memory > xnon_col_iterables
                    memory > xnon_collections
                    memory > x__len__
                    seq > @
                      seq
                        xnon_collections.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ((((unsupported)) ((2.mul (xx))))))
                        (((unsupported)) ((xx)) ((xnon_collections)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xCollection)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCollection)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xnon_col_iterables.write (((unsupported)) ((((x_test_gen)) 0)) ((((xiter)) (""))) ((((xiter)) ((((xbytearray)) 0)))) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xnon_col_iterables)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xCollection)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCollection)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xset)) 0)) ((((xfrozenset)) 0)) ((((xdict)) 0)) ((((xbytes)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xlist)) 0)) (((((((xdict)) 0).xkeys)) 0)) (((((((xdict)) 0).xitems)) 0)) (((((((xdict)) 0).xvalues)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xCollection)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCollection)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xSequence)) ((xCollection)))) ((((xrepr)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xMapping)) ((xCollection)))) ((((xrepr)) ((xMapping)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xMutableMapping)) ((xCollection)))) ((((xrepr)) ((xMutableMapping)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xSet)) ((xCollection)))) ((((xrepr)) ((xSet)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xMutableSet)) ((xCollection)))) ((((xrepr)) ((xMutableSet)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xSequence)) ((xCollection)))) ((((xrepr)) ((xMutableSet)))))
                        (((unsupported)) ((xCollection)))
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((xlist)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__contains__.write
                              [xself xitem]
                                seq > @
                                  (((unsupported)) (FALSE))
                        (((unsupported)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xiter)) ((((xCol)) 0)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xlist)) ((xCol)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xset)) ((xCol)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xfloat)) ((xCol)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xiter)) ((((xDerCol)) 0)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xlist)) ((xDerCol)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xset)) ((xDerCol)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xfloat)) ((xDerCol)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xCollection)) ("__len__") ("__iter__") ("__contains__"))
                        (((unsupported)) 0)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__contains__.write
                              [xself xitem]
                                seq > @
                                  (((unsupported)) (FALSE))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__contains__.write
                              [xself xitem]
                                seq > @
                                  (((unsupported)) (FALSE))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xColNoIter)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xColNoIter)) 0)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xColNoSize)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xColNoSize)) 0)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xColNoCont)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xColNoCont)) 0)) ((xCollection)))))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__contains__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (FALSE))
                            x__len__.write "None: is there a None literal in the EO language?"
                        (((unsupported)) 0)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__contains__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (TRUE))
                            x__iter__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xSizeBlock)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xSizeBlock)) 0)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xIterBlock)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xIterBlock)) 0)) ((xCollection)))))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((xlist)) 0)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__contains__.write
                              [xself xitem]
                                seq > @
                                  (((unsupported)) (FALSE))
                        (((unsupported)) ((xColImpl)))
                          x__contains__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xNonCol)) ((xCollection)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xisinstance)) ((((xNonCol)) 0)) ((xCollection)))))
                xtest_Iterator.write
                  [xself]
                    memory > xsamples
                    memory > xnon_samples
                    memory > x__next__
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ("") ("") ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((xset)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xIterator)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xIterator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xiter)) ((((xbytes)) 0)))) ((((xiter)) ((((xstr)) 0)))) ((((xiter)) ((((xtuple)) 0)))) ((((xiter)) ((((xlist)) 0)))) ((((xiter)) ((((xdict)) 0)))) ((((xiter)) ((((xset)) 0)))) ((((xiter)) ((((xfrozenset)) 0)))) ((((xiter)) (((((((xdict)) 0).xkeys)) 0)))) ((((xiter)) (((((((xdict)) 0).xitems)) 0)))) ((((xiter)) (((((((xdict)) 0).xvalues)) 0)))) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xIterator)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xIterator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xIterator)) ("__next__") ("__iter__"))
                        (((unsupported)) 0)
                          x__next__.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)) (1))
                                  (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xNextOnly)) 0)) ((xIterator)))
                xtest_Generator.write
                  [xself]
                    memory > xsamples
                    memory > xmgen
                    memory > xthrow
                    memory > x__iter__
                    memory > xclose
                    memory > x__next__
                    memory > xnon_samples
                    memory > xsend
                    memory > xgen
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xclose.write
                              [xself]
                                seq > @
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xclose.write
                              [xself]
                                seq > @
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                        (((unsupported)) 0)
                          seq
                            xclose.write
                              [xself]
                                seq > @
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ("") ("") ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((xset)) 0)) ((((xiter)) ((((unsupported)) 0)))) ((((xiter)) ((((unsupported)) 0)))) ((((xNonGen1)) 0)) ((((xNonGen2)) 0)) ((((xNonGen3)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xGenerator)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xGenerator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        (((unsupported)) 0)
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__next__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xclose.write
                              [xself]
                                seq > @
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) ((xGenerator)))
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((((xsuper)) 0).xthrow)) ((xtyp)) ((xval)) ((xtb)))
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) (1))
                        xsamples.write (((unsupported)) ((((xgen)) 0)) ((((((unsupported)) ((((unsupported)) 0)))) 0)) ((((xGen)) 0)) ((((xMinimalGen)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xIterator)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xGenerator)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xGenerator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xGenerator)) ("send") ("throw"))
                        xmgen.write (((xMinimalGen)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((xmgen)) ((((xiter)) ((xmgen)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xmgen).xsend)) ("None: is there a None literal in the EO language?"))) ((((xnext)) ((xmgen)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) (((((xmgen).xsend)) (2))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xmgen).xclose)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmgen).xthrow)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertRaisesRegex)) ((xValueError)) ("^huhu$") (((xmgen).xthrow)) ((xValueError)) ((((xValueError)) ("huhu"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xStopIteration)) (((xmgen).xthrow)) ((((xStopIteration)) 0)))
                        (((unsupported)) ((xGenerator)))
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((((xFailOnClose)) 0).xclose)))
                        (((unsupported)) ((xGenerator)))
                          seq
                            xsend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xthrow.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((((xIgnoreGeneratorExit)) 0).xclose)))
                xtest_AsyncGenerator.write
                  [xself]
                    memory > xsamples
                    memory > xmgen
                    memory > xathrow
                    memory > x__anext__
                    memory > xnon_samples
                    memory > x__aiter__
                    memory > xrun_async
                    memory > xasend
                    memory > xgen
                    memory > xaclose
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__aiter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__anext__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xaclose.write
                              [xself]
                                seq > @
                            xathrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) 0)
                          seq
                            x__aiter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__anext__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xaclose.write
                              [xself]
                                seq > @
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                        (((unsupported)) 0)
                          seq
                            xaclose.write
                              [xself]
                                seq > @
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) ((xvalue)))
                            xathrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ("") ("") ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((xset)) 0)) ((((xiter)) ((((unsupported)) 0)))) ((((xiter)) ((((unsupported)) 0)))) ((((xNonAGen1)) 0)) ((((xNonAGen2)) 0)) ((((xNonAGen3)) 0)))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xAsyncGenerator)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAsyncGenerator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        (((unsupported)) 0)
                          seq
                            x__aiter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xself)))
                            x__anext__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("None: is there a None literal in the EO language?"))
                            xaclose.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xvalue)))
                            xathrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) ((xAsyncGenerator)))
                          seq
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xvalue)))
                            xathrow.write
                              [xself xtyp xval xtb]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((((((xsuper)) 0).xathrow)) ((xtyp)) ((xval)) ((xtb)))))
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (1))
                        xsamples.write (((unsupported)) ((((xgen)) 0)) ((((xGen)) 0)) ((((xMinimalAGen)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xAsyncIterator)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xAsyncGenerator)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xAsyncGenerator)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xAsyncGenerator)) ("asend") ("athrow"))
                        xrun_async.write
                          [xcoro]
                            memory > xresult
                            seq > @
                              seq
                                xresult.write "None: is there a None literal in the EO language?"
                                while.
                                  TRUE
                                  [unused]
                                    seq > @
                                      (((unsupported)) ((xStopIteration)))
                                        bogusForceDataize.write ((((xcoro).xsend)) ("None: is there a None literal in the EO language?"))
                                        seq
                                          xresult.write (((xex).xargs).if (((unsupported)) (((xex).xargs)) (0)) "None: is there a None literal in the EO language?")
                                          (((unsupported)) 0)
                                (((unsupported)) ((xresult)))
                        xmgen.write (((xMinimalAGen)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((xmgen)) (((((xmgen).x__aiter__)) 0)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xrun_async)) (((((xmgen).xasend)) ("None: is there a None literal in the EO language?"))))) ((((xrun_async)) (((((xmgen).x__anext__)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) ((((xrun_async)) (((((xmgen).xasend)) (2))))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xrun_async)) (((((xmgen).xaclose)) 0)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write (((xrun_async)) (((((xmgen).xathrow)) ((xValueError)))))
                        (((unsupported)) ((xAsyncGenerator)))
                          seq
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xvalue)))
                            xathrow.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xValueError)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write (((xrun_async)) (((((((xFailOnClose)) 0).xaclose)) 0)))
                        (((unsupported)) ((xAsyncGenerator)))
                          seq
                            xasend.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xvalue)))
                            xathrow.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          bogusForceDataize.write (((xrun_async)) (((((((xIgnoreGeneratorExit)) 0).xaclose)) 0)))
                xtest_Sized.write
                  [xself]
                    memory > xnon_samples
                    memory > xsamples
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xSized)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xSized)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xbytes)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xlist)) 0)) ((((xset)) 0)) ((((xfrozenset)) 0)) ((((xdict)) 0)) (((((((xdict)) 0).xkeys)) 0)) (((((((xdict)) 0).xitems)) 0)) (((((((xdict)) 0).xvalues)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xSized)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xSized)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xSized)) ("__len__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xSized)) ("__len__"))
                xtest_Container.write
                  [xself]
                    memory > xnon_samples
                    memory > xsamples
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xContainer)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xContainer)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((xbytes)) 0)) ((((xstr)) 0)) ((((xtuple)) 0)) ((((xlist)) 0)) ((((xset)) 0)) ((((xfrozenset)) 0)) ((((xdict)) 0)) (((((((xdict)) 0).xkeys)) 0)) (((((((xdict)) 0).xitems)) 0)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xContainer)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xContainer)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xContainer)) ("__contains__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xContainer)) ("__contains__"))
                xtest_Callable.write
                  [xself]
                    memory > xnon_samples
                    memory > xsamples
                    seq > @
                      seq
                        xnon_samples.write (((unsupported)) ("None: is there a None literal in the EO language?") (42) (3.14) ((((unsupported)) 0)) ("") ("") ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((xset)) 0)) ((((x_test_gen)) 0)) ((((unsupported)) ((xx)) ((xx)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xx)) ((xnon_samples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xx)) ((xCallable)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCallable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        xsamples.write (((unsupported)) ((((unsupported)) ("None: is there a None literal in the EO language?"))) ((xtype)) ((xint)) ((xobject)) ((xlen)) (((xlist).xappend)) (((((unsupported)) 0).xappend)))
                        (((unsupported)) ((xx)) ((xsamples)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xx)) ((xCallable)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((((xtype)) ((xx)))) ((xCallable)))) ((((xrepr)) ((((xtype)) ((xx)))))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xCallable)) ("__call__"))
                        bogusForceDataize.write ((((xself).xvalidate_isinstance)) ((xCallable)) ("__call__"))
                xtest_direct_subclassing.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xB)) ((((unsupported)) ((xHashable)) ((xIterable)) ((xIterator)) ((xReversible)) ((xSized)) ((xContainer)) ((xCallable)))))
                        seq
                          (((unsupported)) ((xB)))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xC)) ((xB)))))
                          bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xint)) ((xC)))))
                xtest_registration.write
                  [xself]
                    memory > x__hash__
                    seq > @
                      (((unsupported)) ((xB)) ((((unsupported)) ((xHashable)) ((xIterable)) ((xIterator)) ((xReversible)) ((xSized)) ((xContainer)) ((xCallable)))))
                        seq
                          (((unsupported)) 0)
                            x__hash__.write "None: is there a None literal in the EO language?"
                          bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xC)) ((xB)))) (((xB).x__name__)))
                          bogusForceDataize.write ((((xB).xregister)) ((xC)))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xC)) ((xB)))))
            (((unsupported)) ((xMutableSet)))
              seq
                x__init__.write
                  [xself xit]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xdata)) ((((xset)) ((xit)))))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xlen)) (((xself).xdata)))))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xiter)) (((xself).xdata)))))
                x__contains__.write
                  [xself xitem]
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xitem)) (((xself).xdata)))))
                xadd.write
                  [xself xitem]
                    seq > @
                      bogusForceDataize.write (((((xself).xdata).xadd)) ((xitem)))
                xdiscard.write
                  [xself xitem]
                    seq > @
                      bogusForceDataize.write (((((xself).xdata).xdiscard)) ((xitem)))
            (((unsupported)) ((xABCTestCase)))
              seq
                xtest_Set.write
                  [xself]
                    memory > x__len__
                    memory > x__contains__
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xset)) ((xfrozenset)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xSet)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xSet)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xSet)) ("__contains__") ("__iter__") ("__len__"))
                        (((unsupported)) ((xSet)))
                          seq
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (FALSE))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xvalidate_comparison)) ((((xMySet)) 0)))
                xtest_hash_Set.write
                  [xself]
                    memory > x__iter__
                    memory > x__contains__
                    memory > x__init__
                    memory > x__hash__
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xcontents)) ((((unsupported)) (1) (2) (3))))
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xx)) (((xself).xcontents)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).xcontents)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).xcontents)))))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((((xself).x_hash)) 0)))
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((((unsupported)) ((((xOneTwoThreeSet)) 0)) ((((xOneTwoThreeSet)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xhash)) ((xa))).eq (((xhash)) ((xb))))))
                xtest_isdisjoint_Set.write
                  [xself]
                    memory > x__iter__
                    memory > x__contains__
                    memory > xs1
                    memory > xs2
                    memory > x__init__
                    memory > x__len__
                    memory > xs3
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__init__.write
                              [xself xitr]
                                seq > @
                                  (((unsupported)) (((xself).xcontents)) ((xitr)))
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xx)) (((xself).xcontents)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).xcontents)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) ((((unsupported)) ((xx)) ((xx)) (((xself).xcontents)))))))
                        xs1.write (((xMySet)) ((((unsupported)) (1) (2) (3))))
                        xs2.write (((xMySet)) ((((unsupported)) (4) (5) (6))))
                        xs3.write (((xMySet)) ((((unsupported)) (1) (5) (6))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xs1).xisdisjoint)) ((xs2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xs1).xisdisjoint)) ((xs3)))))
                xtest_equality_Set.write
                  [xself]
                    memory > xs4
                    memory > x__iter__
                    memory > x__contains__
                    memory > xs1
                    memory > xs2
                    memory > x__init__
                    memory > x__len__
                    memory > xs3
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__init__.write
                              [xself xitr]
                                seq > @
                                  (((unsupported)) (((xself).xcontents)) ((xitr)))
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xx)) (((xself).xcontents)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).xcontents)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) ((((unsupported)) ((xx)) ((xx)) (((xself).xcontents)))))))
                        xs1.write (((xMySet)) ((((unsupported)) (1))))
                        xs2.write (((xMySet)) ((((unsupported)) (1) (2))))
                        xs3.write (((xMySet)) ((((unsupported)) (3) (4))))
                        xs4.write (((xMySet)) ((((unsupported)) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xs2).greater (xs1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xs1).less (xs2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xs2).leq (xs1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xs2).leq (xs3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xs1).geq (xs2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs3)) ((xs4)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xs2)) ((xs3)))
                xtest_arithmetic_Set.write
                  [xself]
                    memory > x__iter__
                    memory > x__contains__
                    memory > xs1
                    memory > xs2
                    memory > x__init__
                    memory > x__len__
                    memory > xs3
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__init__.write
                              [xself xitr]
                                seq > @
                                  (((unsupported)) (((xself).xcontents)) ((xitr)))
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xx)) (((xself).xcontents)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).xcontents)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) ((((unsupported)) ((xx)) ((xx)) (((xself).xcontents)))))))
                        xs1.write (((xMySet)) ((((unsupported)) (1) (2) (3))))
                        xs2.write (((xMySet)) ((((unsupported)) (3) (4) (5))))
                        xs3.write ((xs1).and (xs2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs3)) ((((xMySet)) ((((unsupported)) (3))))))
                xtest_MutableSet.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xset)) 0)) ((xMutableSet)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xset)) ((xMutableSet)))))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xfrozenset)) 0)) ((xMutableSet)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xfrozenset)) ((xMutableSet)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xMutableSet)) ("__contains__") ("__iter__") ("__len__") ("add") ("discard"))
                xtest_issue_5647.write
                  [xself]
                    memory > xs
                    seq > @
                      seq
                        xs.write (((xWithSet)) ("abcd"))
                        (((unsupported)) ((xs)) ((((xWithSet)) ("cdef"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((xs)))) ((((xset)) ("cd"))))
                xtest_issue_4920.write
                  [xself]
                    memory > x__repr__
                    memory > x__iter__
                    memory > x__contains__
                    memory > x__slots__
                    memory > xs
                    memory > x__init__
                    memory > x__len__
                    memory > xr
                    memory > xitems
                    memory > xadd
                    memory > xdiscard
                    seq > @
                      seq
                        (((unsupported)) ((xMutableSet)))
                          seq
                            x__slots__.write (((unsupported)) ("__s"))
                            x__init__.write
                              [xself xitems]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xitems)) ("None: is there a None literal in the EO language?")).if
                                      xitems.write (((unsupported)) 0)
                                    (((unsupported)) (((xself).x__s)) ((((xset)) ((xitems)))))
                            x__contains__.write
                              [xself xv]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xv)) (((xself).x__s)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).x__s)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).x__s)))))
                            xadd.write
                              [xself xv]
                                memory > xresult
                                seq > @
                                  seq
                                    xresult.write (((unsupported)) ((xv)) (((xself).x__s)))
                                    bogusForceDataize.write (((((xself).x__s).xadd)) ((xv)))
                                    (((unsupported)) ((xresult)))
                            xdiscard.write
                              [xself xv]
                                memory > xresult
                                seq > @
                                  seq
                                    xresult.write (((unsupported)) ((xv)) (((xself).x__s)))
                                    bogusForceDataize.write (((((xself).x__s).xdiscard)) ((xv)))
                                    (((unsupported)) ((xresult)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (("MySet(%s)".mod (((xrepr)) ((((xlist)) ((xself))))))))
                        xitems.write (((unsupported)) (5) (43) (2) (1))
                        xs.write (((xMySet)) ((xitems)))
                        xr.write ((((xs).xpop)) 0)
                        bogusForceDataize.write ((((xself).xassertEquals)) ((((xlen)) ((xs)))) (((((xlen)) ((xitems))).sub 1)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xr)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xr)) ((xitems)))
                xtest_issue8750.write
                  [xself]
                    memory > xs
                    memory > xfull
                    memory > xempty
                    seq > @
                      seq
                        xempty.write (((xWithSet)) 0)
                        xfull.write (((xWithSet)) ((((xrange)) (10))))
                        xs.write (((xWithSet)) ((xfull)))
                        (((unsupported)) ((xs)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xempty)))
                        xs.write (((xWithSet)) ((xfull)))
                        (((unsupported)) ((xs)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xempty)))
                        xs.write (((xWithSet)) ((xfull)))
                        (((unsupported)) ((xs)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xfull)))
                        (((unsupported)) ((xs)) ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((xfull)))
                xtest_issue16373.write
                  [xself]
                    memory > x__iter__
                    memory > x__contains__
                    memory > xncs
                    memory > xcs
                    memory > x__len__
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (FALSE))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                        (((unsupported)) ((xSet)))
                          seq
                            x__contains__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (FALSE))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                            x__le__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((xNotImplemented)))
                            x__lt__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) ((xNotImplemented)))
                        xcs.write (((xMyComparableSet)) 0)
                        xncs.write (((xMyNonComparableSet)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xncs).less (xcs))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xncs).leq (xcs))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xncs).greater (xcs))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xncs).geq (xcs))))
                xtest_issue26915.write
                  [xself]
                    memory > x__eq__
                    memory > xseq
                    memory > xobj
                    memory > x__init__
                    memory > x__len__
                    memory > xnan
                    memory > xcontainers
                    memory > x__getitem__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (FALSE))
                        (((unsupported)) ((xSequence)))
                          seq
                            x__init__.write
                              [xself xseq]
                                seq > @
                                  (((unsupported)) (((xself).x_seq)) ((xseq)))
                            x__getitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).x_seq)) ((xindex)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).x_seq)))))
                        xnan.write (((xfloat)) ("nan"))
                        xobj.write (((xCustomEqualObject)) 0)
                        xseq.write (((xCustomSequence)) ((((unsupported)) ((xnan)) ((xobj)) ((xnan)))))
                        xcontainers.write (((unsupported)) ((xseq)) ((((xItemsView)) ((((unsupported)) (1) ((xnan)) (2) ((xobj)))))) ((((xValuesView)) ((((unsupported)) (1) ((xnan)) (2) ((xobj)))))))
                        (((unsupported)) ((xcontainer)) ((xcontainers)))
                          (((unsupported)) ((xelem)) ((xcontainer)))
                            bogusForceDataize.write ((((xself).xassertIn)) ((xelem)) ((xcontainer)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xseq).xindex)) ((xnan)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xseq).xindex)) ((xobj)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xseq).xcount)) ((xnan)))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xseq).xcount)) ((xobj)))) (1))
                xassertSameSet.write
                  [xself xs1 xs2]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertSetEqual)) ((((xset)) ((xs1)))) ((((xset)) ((xs2)))))
                xtest_Set_interoperability_with_real_sets.write
                  [xself]
                    memory > x__repr__
                    memory > xl1
                    memory > x__iter__
                    memory > xl3
                    memory > xr2
                    memory > xf1
                    memory > x__init__
                    memory > xrev_target
                    memory > xf3
                    memory > xl2
                    memory > xr1
                    memory > x__contains__
                    memory > xfwd_target
                    memory > xf2
                    memory > xr3
                    memory > xtarget
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) ((xSet)))
                          seq
                            x__init__.write
                              [xself xelements]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xdata)) ((((unsupported)) 0)))
                                    (((unsupported)) ((xelem)) ((xelements)))
                                      (((unsupported)) ((xelem)) (((xself).xdata))).if
                                        bogusForceDataize.write (((((xself).xdata).xappend)) ((xelem)))
                            x__contains__.write
                              [xself xelem]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((xelem)) (((xself).xdata)))))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) (((xself).xdata)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).xdata)))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((("Set({!r})".xformat)) (((xself).xdata)))))
                        xr1.write (((xset)) ("abc"))
                        xr2.write (((xset)) ("bcd"))
                        xr3.write (((xset)) ("abcde"))
                        xf1.write (((xListSet)) ("abc"))
                        xf2.write (((xListSet)) ("bcd"))
                        xf3.write (((xListSet)) ("abcde"))
                        xl1.write (((xlist)) ("abccba"))
                        xl2.write (((xlist)) ("bcddcb"))
                        xl3.write (((xlist)) ("abcdeedcba"))
                        xtarget.write ((xr1).and (xr2))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).and (xf2))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).and (xr2))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xr2).and (xf1))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).and (xl2))) ((xtarget)))
                        xtarget.write ((xr1).or (xr2))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).or (xf2))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).or (xr2))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xr2).or (xf1))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).or (xl2))) ((xtarget)))
                        xfwd_target.write ((xr1).sub (xr2))
                        xrev_target.write ((xr2).sub (xr1))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).sub (xf2))) ((xfwd_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf2).sub (xf1))) ((xrev_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).sub (xr2))) ((xfwd_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf2).sub (xr1))) ((xrev_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xr1).sub (xf2))) ((xfwd_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xr2).sub (xf1))) ((xrev_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf1).sub (xl2))) ((xfwd_target)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) (((xf2).sub (xl1))) ((xrev_target)))
                        xtarget.write (((unsupported)) ((xr1)) ((xr2)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) ((((unsupported)) ((xf1)) ((xf2)))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) ((((unsupported)) ((xf1)) ((xr2)))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) ((((unsupported)) ((xr2)) ((xf1)))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertSameSet)) ((((unsupported)) ((xf1)) ((xl2)))) ((xtarget)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).less (xf3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).less (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).less (xf2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).less (xf3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).less (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).less (xf2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).less (xr3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).less (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).less (xr2))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).leq (xf3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).leq (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).leq (xf2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).leq (xf3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).leq (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).leq (xf2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).leq (xr3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).leq (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).leq (xr2))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf3).greater (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).greater (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf2).greater (xf1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr3).greater (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).greater (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf2).greater (xr1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr3).greater (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).greater (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr2).greater (xr1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf3).geq (xf1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).geq (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf2).geq (xf1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr3).geq (xr1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).geq (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf2).geq (xr1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr3).geq (xr1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).geq (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr2).geq (xr1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).eq (xf1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).eq (xf1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).eq (xr1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).eq (xf3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).eq (xf3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).eq (xr3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).eq (xl3))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).eq (xl1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).eq (xl2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).neq (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xr1).neq (xf1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((xf1).neq (xr1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).neq (xf3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xr1).neq (xf3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).neq (xr3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).neq (xl3))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).neq (xl1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xf1).neq (xl2))))
                xtest_Mapping.write
                  [xself]
                    memory > x__getitem__
                    memory > x__len__
                    memory > x__iter__
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xdict)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xMapping)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xMapping)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xMapping)) ("__contains__") ("__iter__") ("__len__") ("__getitem__"))
                        (((unsupported)) ((xMapping)))
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (0))
                            x__getitem__.write
                              [xself xi]
                                seq > @
                                  (((unsupported)) ((xIndexError)))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xiter)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xvalidate_comparison)) ((((xMyMapping)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xreversed)) ((((xMyMapping)) 0)))
                xtest_MutableMapping.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xdict)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xMutableMapping)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xMutableMapping)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xMutableMapping)) ("__contains__") ("__iter__") ("__len__") ("__getitem__") ("__setitem__") ("__delitem__"))
                xtest_MutableMapping_subclass.write
                  [xself]
                    memory > xz
                    memory > xmymap
                    seq > @
                      seq
                        xmymap.write (((xUserDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xmymap)) ("red"))) (5))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xmymap).xkeys)) 0)) ((xSet)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xmymap).xkeys)) 0)) ((xKeysView)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xmymap).xitems)) 0)) ((xSet)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xmymap).xitems)) 0)) ((xItemsView)))
                        xmymap.write (((xUserDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xmymap)) ("red"))) (5))
                        xz.write (((((xmymap).xkeys)) 0).or (((unsupported)) ("orange")))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xz)) ((xset)))
                        bogusForceDataize.write (((xlist)) ((xz)))
                        (((unsupported)) ((((unsupported)) ((xmymap)) ("blue"))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((xz)))) ((((unsupported)) ("orange") ("red"))))
                        xmymap.write (((xUserDict)) 0)
                        (((unsupported)) ((((unsupported)) ((xmymap)) ("red"))) (5))
                        xz.write (((((xmymap).xitems)) 0).or (((unsupported)) ((((unsupported)) ("orange") (3)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xz)) ((xset)))
                        bogusForceDataize.write (((xlist)) ((xz)))
                        (((unsupported)) ((((unsupported)) ((xmymap)) ("blue"))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xz)) ((((unsupported)) ((((unsupported)) ("orange") (3))) ((((unsupported)) ("red") (5))))))
                xtest_Sequence.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xtuple)) ((xlist)) ((xbytes)) ((xstr)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xSequence)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xrange)) (10))) ((xSequence)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xrange)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xmemoryview)) (""))) ((xSequence)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xmemoryview)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xstr)) ((xSequence)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xSequence)) ("__contains__") ("__iter__") ("__len__") ("__getitem__"))
                xtest_Sequence_mixins.write
                  [xself]
                    memory > x__getitem__
                    memory > xindexes
                    memory > xseqseq
                    memory > xnativeseq
                    memory > x__init__
                    memory > x__len__
                    memory > xassert_index_same
                    seq > @
                      seq
                        (((unsupported)) ((xSequence)))
                          seq
                            x__init__.write
                              [xself xseq]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xseq)) ((xseq)))
                            x__getitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).xseq)) ((xindex)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).xseq)))))
                        xassert_index_same.write
                          [xseq1 xseq2 xindex_args]
                            memory > xactual
                            memory > xexpected
                            seq > @
                              (((unsupported)) ((xValueError)))
                                xexpected.write ((((xseq1).xindex)) ((((unsupported)) ((xindex_args)))))
                                (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                                  bogusForceDataize.write ((((xseq2).xindex)) ((((unsupported)) ((xindex_args)))))
                                seq
                                  xactual.write ((((xseq2).xindex)) ((((unsupported)) ((xindex_args)))))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((xactual)) ((xexpected)) (("%r.index%s".mod (((unsupported)) ((xseq1)) ((xindex_args))))))
                        (((unsupported)) ((xty)) ((((unsupported)) ((xlist)) ((xstr)))))
                          seq
                            xnativeseq.write (((xty)) ("abracadabra"))
                            xindexes.write ((((unsupported)) ((10000.neg)) ((9999.neg))).add (((xlist)) ((((xrange)) ((3.neg)) (((((xlen)) ((xnativeseq))).add 3))))))
                            xseqseq.write (((xSequenceSubclass)) ((xnativeseq)))
                            (((unsupported)) ((xletter)) (((((xset)) ((xnativeseq))).or (((unsupported)) ("z")))))
                              seq
                                bogusForceDataize.write (((xassert_index_same)) ((xnativeseq)) ((xseqseq)) ((((unsupported)) ((xletter)))))
                                (((unsupported)) ((xstart)) ((((xrange)) ((3.neg)) (((((xlen)) ((xnativeseq))).add 3)))))
                                  seq
                                    bogusForceDataize.write (((xassert_index_same)) ((xnativeseq)) ((xseqseq)) ((((unsupported)) ((xletter)) ((xstart)))))
                                    (((unsupported)) ((xstop)) ((((xrange)) ((3.neg)) (((((xlen)) ((xnativeseq))).add 3)))))
                                      bogusForceDataize.write (((xassert_index_same)) ((xnativeseq)) ((xseqseq)) ((((unsupported)) ((xletter)) ((xstart)) ((xstop)))))
                xtest_ByteString.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xbytes)) ((xbytearray)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xByteString)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xByteString)))))
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xstr)) ((xlist)) ((xtuple)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xsample)) 0)) ((xByteString)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xsample)) ((xByteString)))))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xmemoryview)) (""))) ((xByteString)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xmemoryview)) ((xByteString)))))
                xtest_MutableSequence.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xtuple)) ((xstr)) ((xbytes)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((((xsample)) 0)) ((xMutableSequence)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xsample)) ((xMutableSequence)))))
                        (((unsupported)) ((xsample)) ((((unsupported)) ((xlist)) ((xbytearray)) ((xdeque)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xsample)) 0)) ((xMutableSequence)))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xsample)) ((xMutableSequence)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xstr)) ((xMutableSequence)))))
                        bogusForceDataize.write ((((xself).xvalidate_abstract_methods)) ((xMutableSequence)) ("__contains__") ("__iter__") ("__len__") ("__getitem__") ("__setitem__") ("__delitem__") ("insert"))
                xtest_MutableSequence_mixins.write
                  [xself]
                    memory > x__getitem__
                    memory > x__delitem__
                    memory > xmss
                    memory > xinsert
                    memory > xitems
                    memory > x__setitem__
                    memory > x__init__
                    memory > xmss2
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) ((xMutableSequence)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xlst)) ((((unsupported)) 0)))
                            x__setitem__.write
                              [xself xindex xvalue]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).xlst)) ((xindex)))) ((xvalue)))
                            x__getitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)) ((((unsupported)) (((xself).xlst)) ((xindex)))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).xlst)))))
                            x__delitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)) ((((unsupported)) ((((unsupported)) (((xself).xlst)) ((xindex)))))))
                            xinsert.write
                              [xself xindex xvalue]
                                seq > @
                                  bogusForceDataize.write (((((xself).xlst).xinsert)) ((xindex)) ((xvalue)))
                        xmss.write (((xMutableSequenceSubclass)) 0)
                        bogusForceDataize.write ((((xmss).xappend)) (0))
                        bogusForceDataize.write ((((xmss).xextend)) ((((unsupported)) (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xmss)) (3))) (3))
                        bogusForceDataize.write ((((xmss).xreverse)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xmss)) (3))) (1))
                        bogusForceDataize.write ((((xmss).xpop)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) (4))
                        bogusForceDataize.write ((((xmss).xremove)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) (3))
                        (((unsupported)) ((xmss)) ((((unsupported)) (10) (20) (30))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xmss)) ((1.neg)))) (30))
                        bogusForceDataize.write ((((xmss).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) (0))
                        xitems.write "ABCD"
                        xmss2.write (((xMutableSequenceSubclass)) 0)
                        bogusForceDataize.write ((((xmss2).xextend)) (((xitems).add (xitems))))
                        bogusForceDataize.write ((((xmss).xclear)) 0)
                        bogusForceDataize.write ((((xmss).xextend)) ((xitems)))
                        bogusForceDataize.write ((((xmss).xextend)) ((xmss)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xmss)))) ((((xlen)) ((xmss2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xmss)))) ((((xlist)) ((xmss2)))))
            (((unsupported)) ((xCounter)))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xcalled)) (FALSE))
                        bogusForceDataize.write ((((xCounter).x__init__)) ((xself)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwds)))))
                x__setitem__.write
                  [xself xkey xvalue]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xcalled)) (TRUE))
                        bogusForceDataize.write ((((xCounter).x__setitem__)) ((xself)) ((xkey)) ((xvalue)))
            (((unsupported)) ((xCounter)))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xcalled)) (FALSE))
                        bogusForceDataize.write ((((xCounter).x__init__)) ((xself)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwds)))))
                xget.write
                  [xself xkey xdefault]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xcalled)) (TRUE))
                        (((unsupported)) (((((xCounter).xget)) ((xself)) ((xkey)) ((xdefault)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_basics.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xCounter)) ("abcaba"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((xCounter)) ((((unsupported)) ("a") (3) ("b") (2) ("c") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xCounter)) (3) (2) (1))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xMapping)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xCounter)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xCounter)) ((xMapping)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xc)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsum)) (((((xc).xvalues)) 0)))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xvalues)) 0)))) ((((unsupported)) (3) (2) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xkeys)) 0)))) ((((unsupported)) ("a") ("b") ("c"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xc)))) ((((unsupported)) ("a") ("b") ("c"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (3))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xc)) ("b"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xc)) ("z"))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).x__contains__)) ("c"))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).x__contains__)) ("z"))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xget)) ("b") (10))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xget)) ("z") (10))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xdict)) (3) (2) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xc)))) ("Counter({'a': 3, 'b': 2, 'c': 1})"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xmost_common)) 0)) ((((unsupported)) ((((unsupported)) ("a") (3))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (1))))))
                        (((unsupported)) ((xi)) ((((xrange)) (5))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xmost_common)) ((xi)))) ((((unsupported)) ((((unsupported)) ((((unsupported)) ("a") (3))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("c") (1))))) ((((unsupported)) ((xi)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) (((((xc).xelements)) 0)))) ("aaabbc"))
                        (((unsupported)) ((((unsupported)) ((xc)) ("a"))) (1))
                        (((unsupported)) ((((unsupported)) ((xc)) ("b"))) (2))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xc)) ("c"))))))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xc)) ("c"))))))
                        (((unsupported)) ((((unsupported)) ((xc)) ("d"))) (2))
                        (((unsupported)) ((((unsupported)) ((xc)) ("e"))) ((5.neg)))
                        (((unsupported)) ((((unsupported)) ((xc)) ("f"))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xdict)) (4) (0) ((2.neg)) ((5.neg)) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((("".xjoin)) (((((xc).xelements)) 0)))) ("aaaaffff"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xpop)) ("f"))) (4))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("f") ((xc)))
                        (((unsupported)) ((xi)) ((((xrange)) (3))))
                          seq
                            (((unsupported)) ((((unsupported)) ((xelem)) ((xcnt)))) (((((xc).xpopitem)) 0)))
                            bogusForceDataize.write ((((xself).xassertNotIn)) ((xelem)) ((xc)))
                        bogusForceDataize.write ((((xc).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xc)))) ("Counter()"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xNotImplementedError)) (((xCounter).xfromkeys)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xc)))
                        bogusForceDataize.write ((((xc).xupdate)) ((((unsupported)) ((xdict)) (5) (3))))
                        (((unsupported)) (((xc).xupdate)) (1))
                        bogusForceDataize.write ((((xc).xupdate)) ((((xCounter)) ((("a".mul 50).add ("b".mul 30))))))
                        bogusForceDataize.write ((((xc).xupdate)) 0)
                        bogusForceDataize.write ((((xc).x__init__)) ((("a".mul 500).add ("b".mul 300))))
                        bogusForceDataize.write ((((xc).x__init__)) ("cdc"))
                        bogusForceDataize.write ((((xc).x__init__)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xdict)) (555) (333) (3) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xsetdefault)) ("d") (5))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xc)) ("d"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xsetdefault)) ("e") (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xc)) ("e"))) (5))
                xtest_init.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xCounter)) (42)).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("self") (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xCounter)) (42)).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("iterable") (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((unsupported)) ((xCounter)) ("None: is there a None literal in the EO language?")).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("iterable") ("None: is there a None literal in the EO language?"))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xCounter)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xCounter)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xCounter).x__init__)))
                xtest_order_preservation.write
                  [xself]
                    memory > xqs
                    memory > xcorrectly_ordered
                    memory > xorder
                    memory > xps
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((xCounter)) ("abracadabra")).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("a") (5))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("r") (2))) ((((unsupported)) ("c") (1))) ((((unsupported)) ("d") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((xCounter)) ("xyzpdqqdpzyx")).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("x") (2))) ((((unsupported)) ("y") (2))) ((((unsupported)) ("z") (2))) ((((unsupported)) ("p") (2))) ((((unsupported)) ("d") (2))) ((((unsupported)) ("q") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((((xCounter)) ("abracadabra simsalabim")).xelements)) 0)))) ((((unsupported)) ("a") ("a") ("a") ("a") ("a") ("a") ("a") ("b") ("b") ("b") ("r") ("r") ("c") ("d") (" ") ("s") ("s") ("i") ("i") ("m") ("m") ("l"))))
                        xps.write "aaabbcdddeefggghhijjjkkl"
                        xqs.write "abbcccdeefffhkkllllmmnno"
                        xorder.write (((unsupported)) ((xletter)) ((xi)) ((((unsupported)) ((xi)) ((xletter)))) ((((xenumerate)) (((((xdict).xfromkeys)) (((xps).add (xqs))))))))
                        xcorrectly_ordered.write
                          [xseq]
                            memory > xpositions
                            seq > @
                              seq
                                unsupported
                                xpositions.write (((unsupported)) ((((unsupported)) ((xorder)) ((xletter)))) ((xletter)) ((xseq)))
                                (((unsupported)) (((xpositions).eq (((xsorted)) ((xpositions))))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp).neg)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp).add (xq))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp).sub (xq))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp).or (xq))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) (((xp).and (xq))))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        (((unsupported)) ((xp)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        (((unsupported)) ((xp)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        (((unsupported)) ((xp)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        (((unsupported)) ((xp)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        bogusForceDataize.write ((((xp).xupdate)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                        (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) ((((xCounter)) ((xps)))) ((((xCounter)) ((xqs)))))))
                        bogusForceDataize.write ((((xp).xsubtract)) ((xq)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcorrectly_ordered)) ((xp)))))
                xtest_update.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xCounter)) 0)
                        (((unsupported)) (((xc).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("self") (42))))))
                        xc.write (((xCounter)) 0)
                        (((unsupported)) (((xc).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("iterable") (42))))))
                        xc.write (((xCounter)) 0)
                        (((unsupported)) (((xc).xupdate)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("iterable") ("None: is there a None literal in the EO language?"))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xCounter)) 0).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xCounter)) 0).xupdate)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xCounter).xupdate)))
                xtest_copying.write
                  [xself]
                    memory > xwords
                    memory > xcheck
                    memory > xupdate_test
                    seq > @
                      seq
                        xwords.write (((xCounter)) (((("which witch had which witches wrist watch".xsplit)) 0)))
                        xcheck.write
                          [xdup]
                            memory > xmsg
                            seq > @
                              seq
                                xmsg.write ("ncopy: %snwords: %s".mod (((unsupported)) ((xdup)) ((xwords))))
                                bogusForceDataize.write ((((xself).xassertIsNot)) ((xdup)) ((xwords)) ((xmsg)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xdup)) ((xwords)))
                        bogusForceDataize.write (((xcheck)) (((((xwords).xcopy)) 0)))
                        bogusForceDataize.write (((xcheck)) (((((xcopy).xcopy)) ((xwords)))))
                        bogusForceDataize.write (((xcheck)) (((((xcopy).xdeepcopy)) ((xwords)))))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)))))
                            bogusForceDataize.write (((xcheck)) (((((xpickle).xloads)) (((((xpickle).xdumps)) ((xwords)) ((xproto)))))))
                        bogusForceDataize.write (((xcheck)) ((((xeval)) ((((xrepr)) ((xwords)))))))
                        xupdate_test.write (((xCounter)) 0)
                        bogusForceDataize.write ((((xupdate_test).xupdate)) ((xwords)))
                        bogusForceDataize.write (((xcheck)) ((xupdate_test)))
                        bogusForceDataize.write (((xcheck)) ((((xCounter)) ((xwords)))))
                xtest_copy_subclass.write
                  [xself]
                    memory > xd
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) ((xCounter)))
                        xc.write (((xMyCounter)) ("slartibartfast"))
                        xd.write ((((xc).xcopy)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xd)))) ((((xlen)) ((xc)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xd)))) ((((xtype)) ((xc)))))
                xtest_conversions.write
                  [xself]
                    memory > xs
                    seq > @
                      seq
                        xs.write "she sells sea shells by the sea shore"
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) (((((((xCounter)) ((xs))).xelements)) 0)))) ((((xsorted)) ((xs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((((xCounter)) ((xs)))))) ((((xsorted)) ((((xset)) ((xs)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((((xCounter)) ((xs)))))) ((((xdict)) (((((((xCounter)) ((xs))).xitems)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((((xCounter)) ((xs)))))) ((((xset)) ((xs)))))
                xtest_invariant_for_the_in_operator.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((unsupported)) ((xCounter)) (10) ((2.neg)) (0))
                        (((unsupported)) ((xelem)) ((xc)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) ((xelem)) ((xc)))))
                            bogusForceDataize.write ((((xself).xassertIn)) ((xelem)) ((xc)))
                xtest_multiset_operations.write
                  [xself]
                    memory > xset_result
                    memory > xq
                    memory > xp
                    memory > xresult
                    memory > xcounter_result
                    memory > xelements
                    memory > xc
                    seq > @
                      seq
                        xc.write ((((unsupported)) ((xCounter)) (10) ((2.neg)) (0)).add (((xCounter)) 0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((xc)))) ((((unsupported)) ((xdict)) (10))))
                        xelements.write "abcd"
                        (((unsupported)) ((xi)) ((((xrange)) (1000))))
                          seq
                            xp.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) ((2.neg)) (4))))) ((xelem)) ((xelements)))))))
                            (((unsupported)) (((xp).xupdate)) (1) ((1.neg)) (0))
                            xq.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) ((2.neg)) (4))))) ((xelem)) ((xelements)))))))
                            (((unsupported)) (((xq).xupdate)) (1) ((1.neg)) (0))
                            (((unsupported)) ((((unsupported)) ((xcounterop)) ((xnumberop)))) ((((unsupported)) ((((unsupported)) (((xCounter).x__add__)) ((((unsupported)) ((((xmax)) (0) (((xx).add (xy))))))))) ((((unsupported)) (((xCounter).x__sub__)) ((((unsupported)) ((((xmax)) (0) (((xx).sub (xy))))))))) ((((unsupported)) (((xCounter).x__or__)) ((((unsupported)) ((((xmax)) (0) ((xx)) ((xy)))))))) ((((unsupported)) (((xCounter).x__and__)) ((((unsupported)) ((((xmax)) (0) ((((xmin)) ((xx)) ((xy)))))))))))))
                              seq
                                xresult.write (((xcounterop)) ((xp)) ((xq)))
                                (((unsupported)) ((xx)) ((xelements)))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xnumberop)) ((((unsupported)) ((xp)) ((xx)))) ((((unsupported)) ((xq)) ((xx)))))) ((((unsupported)) ((xresult)) ((xx)))) ((((unsupported)) ((xcounterop)) ((xx)) ((xp)) ((xq)))))
                                bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xx).greater 0)) ((xx)) (((((xresult).xvalues)) 0)))))
                        xelements.write "abcdef"
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          seq
                            xp.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) (0) (2))))) ((xelem)) ((xelements)))))))
                            xq.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) (0) (2))))) ((xelem)) ((xelements)))))))
                            (((unsupported)) ((((unsupported)) ((xcounterop)) ((xsetop)))) ((((unsupported)) ((((unsupported)) (((xCounter).x__sub__)) (((xset).x__sub__)))) ((((unsupported)) (((xCounter).x__or__)) (((xset).x__or__)))) ((((unsupported)) (((xCounter).x__and__)) (((xset).x__and__)))))))
                              seq
                                xcounter_result.write (((xcounterop)) ((xp)) ((xq)))
                                xset_result.write (((xsetop)) ((((xset)) (((((xp).xelements)) 0)))) ((((xset)) (((((xq).xelements)) 0)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xcounter_result)) (((((xdict).xfromkeys)) ((xset_result)) (1))))
                xtest_inplace_operations.write
                  [xself]
                    memory > xq
                    memory > xinplace_result
                    memory > xp
                    memory > xregular_result
                    memory > xc_id
                    memory > xelements
                    memory > xc
                    seq > @
                      seq
                        xelements.write "abcd"
                        (((unsupported)) ((xi)) ((((xrange)) (1000))))
                          seq
                            xp.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) ((2.neg)) (4))))) ((xelem)) ((xelements)))))))
                            (((unsupported)) (((xp).xupdate)) (1) ((1.neg)) (0))
                            xq.write (((xCounter)) ((((xdict)) ((((unsupported)) ((((unsupported)) ((xelem)) ((((xrandrange)) ((2.neg)) (4))))) ((xelem)) ((xelements)))))))
                            (((unsupported)) (((xq).xupdate)) (1) ((1.neg)) (0))
                            (((unsupported)) ((((unsupported)) ((xinplace_op)) ((xregular_op)))) ((((unsupported)) ((((unsupported)) (((xCounter).x__iadd__)) (((xCounter).x__add__)))) ((((unsupported)) (((xCounter).x__isub__)) (((xCounter).x__sub__)))) ((((unsupported)) (((xCounter).x__ior__)) (((xCounter).x__or__)))) ((((unsupported)) (((xCounter).x__iand__)) (((xCounter).x__and__)))))))
                              seq
                                xc.write ((((xp).xcopy)) 0)
                                xc_id.write (((xid)) ((xc)))
                                xregular_result.write (((xregular_op)) ((xc)) ((xq)))
                                xinplace_result.write (((xinplace_op)) ((xc)) ((xq)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xinplace_result)) ((xregular_result)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xid)) ((xinplace_result)))) ((xc_id)))
                xtest_subtract.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((unsupported)) ((xCounter)) ((5.neg)) (0) (5) (10) (15) (40))
                        (((unsupported)) (((xc).xsubtract)) (1) (2) ((3.neg)) (10) (20) (30) ((50.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xCounter)) ((6.neg)) ((2.neg)) (8) (0) ((5.neg)) ((30.neg)) (40) (50))))
                        xc.write (((unsupported)) ((xCounter)) ((5.neg)) (0) (5) (10) (15) (40))
                        bogusForceDataize.write ((((xc).xsubtract)) ((((unsupported)) ((xCounter)) (1) (2) ((3.neg)) (10) (20) (30) ((50.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xCounter)) ((6.neg)) ((2.neg)) (8) (0) ((5.neg)) ((30.neg)) (40) (50))))
                        xc.write (((xCounter)) ("aaabbcd"))
                        bogusForceDataize.write ((((xc).xsubtract)) ("aaaabbcce"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xc)) ((((unsupported)) ((xCounter)) ((1.neg)) (0) ((1.neg)) (1) ((1.neg)))))
                        xc.write (((xCounter)) 0)
                        (((unsupported)) (((xc).xsubtract)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("self") ((42.neg)))))))
                        xc.write (((xCounter)) 0)
                        (((unsupported)) (((xc).xsubtract)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xc).xitems)) 0)))) ((((unsupported)) ((((unsupported)) ("iterable") ((42.neg)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xCounter)) 0).xsubtract)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xCounter)) 0).xsubtract)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xCounter).xsubtract)))
                xtest_unary.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((unsupported)) ((xCounter)) ((5.neg)) (0) (5) (10) (15) (40))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) (((xc))))) ((((unsupported)) ((xdict)) (5) (10) (15) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) (((xc).neg)))) ((((unsupported)) ((xdict)) (5))))
                xtest_repr_nonsortable.write
                  [xself]
                    memory > xc
                    memory > xr
                    seq > @
                      seq
                        xc.write (((unsupported)) ((xCounter)) (2) ("None: is there a None literal in the EO language?"))
                        xr.write (((xrepr)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("'a': 2") ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("'b': None") ((xr)))
                xtest_helper_function.write
                  [xself]
                    memory > xd
                    memory > xm
                    memory > xelems
                    memory > xc
                    seq > @
                      seq
                        xelems.write (((xlist)) ("abracadabra"))
                        xd.write (((xdict)) 0)
                        bogusForceDataize.write (((x_count_elements)) ((xd)) ((xelems)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ("a") (5) ("r") (2) ("b") (2) ("c") (1) ("d") (1))))
                        xm.write (((xOrderedDict)) 0)
                        bogusForceDataize.write (((x_count_elements)) ((xm)) ((xelems)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((xOrderedDict)) ((((unsupported)) ((((unsupported)) ("a") (5))) ((((unsupported)) ("b") (2))) ((((unsupported)) ("r") (2))) ((((unsupported)) ("c") (1))) ((((unsupported)) ("d") (1))))))))
                        xc.write (((xCounterSubclassWithSetItem)) ("abracadabra"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xc).xcalled)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((xc)))) ((((unsupported)) ("a") (5) ("b") (2) ("c") (1) ("d") (1) ("r") (2))))
                        xc.write (((xCounterSubclassWithGet)) ("abracadabra"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xc).xcalled)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict)) ((xc)))) ((((unsupported)) ("a") (5) ("b") (2) ("c") (1) ("d") (1) ("r") (2))))
            xtest_main.write
              [xverbose]
                memory > xtest_classes
                memory > xNamedTupleDocs
                seq > @
                  (((unsupported)) 0)
                    xNamedTupleDocs.write (((unsupported)) (((xdoctest).xDocTestSuite)) ((xcollections)))
                    xtest_classes.write (((unsupported)) ((xTestNamedTuple)) ((xNamedTupleDocs)) ((xTestOneTrickPonyABCs)) ((xTestCollectionABCs)) ((xTestCounter)) ((xTestChainMap)) ((xTestUserObjects)))
                    bogusForceDataize.write ((((xsupport).xrun_unittest)) ((((unsupported)) ((xtest_classes)))))
                    bogusForceDataize.write ((((xsupport).xrun_doctest)) ((xcollections)) ((xverbose)))
            ((x__name__).eq "__main__").if
              (((unsupported)) ((xtest_main)) (TRUE))