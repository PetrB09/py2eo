memory > xall
memory > xValueError
memory > xstr
memory > xstring
memory > xi
memory > xs
memory > xunittest
memory > xn
memory > xsecrets
memory > xc
memory > xfunc
memory > xnumbits
memory > xrange
memory > xbool
memory > xbytes
memory > xisinstance
memory > xlen
memory > xTypeError
memory > x__name__
[] > test_secrets
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_randbits
        memory > xtest_randbelow
        memory > xtest_equal
        memory > xtest_unequal
        memory > xtest_bool
        memory > xtest_token_bytes
        memory > xtest_bad_types
        memory > xtest_token_urlsafe
        memory > xtest_choice
        memory > xtest_token_hex
        memory > xtest_token_defaults
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xtest_equal.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      (((unsupported)) ((xs)) ((((unsupported)) ("a") ("bcd") ("xyz123"))))
                        seq
                          xa.write ((xs).mul 100)
                          xb.write ((xs).mul 100)
                          bogusForceDataize.write ((((xself).xassertTrue)) (((((xsecrets).xcompare_digest)) ((xa)) ((xb)))))
                          bogusForceDataize.write ((((xself).xassertTrue)) (((((xsecrets).xcompare_digest)) (((((xa).xencode)) ("utf-8"))) (((((xb).xencode)) ("utf-8"))))))
                xtest_unequal.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xsecrets).xcompare_digest)) ("abc") ("abcd"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xsecrets).xcompare_digest)) ("abc") ("abcd"))))
                        (((unsupported)) ((xs)) ((((unsupported)) ("x") ("mn") ("a1b2c3"))))
                          seq
                            xa.write (((xs).mul 100).add "q")
                            xb.write (((xs).mul 100).add "k")
                            bogusForceDataize.write ((((xself).xassertFalse)) (((((xsecrets).xcompare_digest)) ((xa)) ((xb)))))
                            bogusForceDataize.write ((((xself).xassertFalse)) (((((xsecrets).xcompare_digest)) (((((xa).xencode)) ("utf-8"))) (((((xb).xencode)) ("utf-8"))))))
                xtest_bad_types.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write "abcde"
                        xb.write ((((xa).xencode)) ("utf-8"))
                        (((unsupported)) ((((xisinstance)) ((xa)) ((xstr)))))
                        (((unsupported)) ((((xisinstance)) ((xb)) ((xbytes)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xsecrets).xcompare_digest)) ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xsecrets).xcompare_digest)) ((xb)) ((xa)))
                xtest_bool.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xsecrets).xcompare_digest)) ("abc") ("abc"))) ((xbool)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xsecrets).xcompare_digest)) ("abc") ("xyz"))) ((xbool)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xtest_randbits.write
                  [xself]
                    memory > xn
                    memory > xerrmsg
                    seq > @
                      seq
                        xerrmsg.write "randbits(%d) returned %d"
                        (((unsupported)) ((xnumbits)) ((((unsupported)) (3) (12) (30))))
                          (((unsupported)) ((xi)) ((((xrange)) (6))))
                            seq
                              xn.write ((((xsecrets).xrandbits)) ((xnumbits)))
                              bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (0) ((xn)) ((((unsupported)) (2) ((xnumbits)))))) (((xerrmsg).mod (((unsupported)) ((xnumbits)) ((xn))))))
                xtest_choice.write
                  [xself]
                    memory > xitems
                    seq > @
                      seq
                        xitems.write (((unsupported)) (1) (2) (4) (8) (16) (32) (64))
                        (((unsupported)) ((xi)) ((((xrange)) (10))))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((((xsecrets).xchoice)) ((xitems)))) ((xitems)))))
                xtest_randbelow.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xi)) ((((xrange)) (2) (10))))
                          bogusForceDataize.write ((((xself).xassertIn)) (((((xsecrets).xrandbelow)) ((xi)))) ((((xrange)) ((xi)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xsecrets).xrandbelow)) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xsecrets).xrandbelow)) ((1.neg)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xtest_token_defaults.write
                  [xself]
                    memory > xname
                    memory > xsize
                    seq > @
                      seq
                        (((unsupported)) ((xfunc)) ((((unsupported)) (((xsecrets).xtoken_bytes)) (((xsecrets).xtoken_hex)) (((xsecrets).xtoken_urlsafe)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xfunc)))))
                            seq
                              xname.write ((xfunc).x__name__)
                              (((unsupported)) ((xTypeError)))
                                bogusForceDataize.write (((xfunc)) 0)
                                bogusForceDataize.write ((((xself).xfail)) (("%s cannot be called with no argument".mod (xname))))
                              (((unsupported)) ((xTypeError)))
                                bogusForceDataize.write (((xfunc)) ("None: is there a None literal in the EO language?"))
                                bogusForceDataize.write ((((xself).xfail)) (("%s cannot be called with None".mod (xname))))
                        xsize.write ((xsecrets).xDEFAULT_ENTROPY)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((((xsecrets).xtoken_bytes)) ("None: is there a None literal in the EO language?"))))) ((xsize)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((((xsecrets).xtoken_hex)) ("None: is there a None literal in the EO language?"))))) ((2.mul (xsize))))
                xtest_token_bytes.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xn)) ((((unsupported)) (1) (8) (17) (100))))
                        (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xn)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xsecrets).xtoken_bytes)) ((xn)))) ((xbytes)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) (((((xsecrets).xtoken_bytes)) ((xn)))))) ((xn)))
                xtest_token_hex.write
                  [xself]
                    memory > xs
                    seq > @
                      (((unsupported)) ((xn)) ((((unsupported)) (1) (12) (25) (90))))
                        (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xn)))))
                          seq
                            xs.write ((((xsecrets).xtoken_hex)) ((xn)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((xs)) ((xstr)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xs)))) ((2.mul (xn))))
                            bogusForceDataize.write ((((xself).xassertTrue)) ((((xall)) ((((unsupported)) ((((unsupported)) ((xc)) (((xstring).xhexdigits)))) ((xc)) ((xs)))))))
                xtest_token_urlsafe.write
                  [xself]
                    memory > xs
                    memory > xlegal
                    seq > @
                      seq
                        xlegal.write ((((xstring).xascii_letters).add ((xstring).xdigits)).add "-_")
                        (((unsupported)) ((xn)) ((((unsupported)) (1) (11) (28) (76))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xn)))))
                            seq
                              xs.write ((((xsecrets).xtoken_urlsafe)) ((xn)))
                              bogusForceDataize.write ((((xself).xassertIsInstance)) ((xs)) ((xstr)))
                              bogusForceDataize.write ((((xself).xassertTrue)) ((((xall)) ((((unsupported)) ((((unsupported)) ((xc)) ((xlegal)))) ((xc)) ((xs)))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)