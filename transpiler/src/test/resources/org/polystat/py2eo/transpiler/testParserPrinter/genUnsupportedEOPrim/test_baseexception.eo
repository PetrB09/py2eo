memory > xAttributeError
memory > xexpected
memory > xNewStyleClass
memory > xstr
memory > xrange
memory > xopen
memory > xtype
memory > xtest_name
memory > xbuiltins
memory > xos
memory > xgetattr
memory > xobject
memory > xlen
memory > xset
memory > xrepr
memory > xException
memory > xhasattr
memory > xissubclass
memory > xtuple
memory > xBaseException
memory > xNonBaseException
memory > xgiven
memory > x__file__
memory > xobject_
memory > xattr
memory > xzip
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_baseexception
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_catch_non_BaseException
        memory > xinterface_tests
        memory > xtest_interface_no_arg
        memory > xtest_raise_string
        memory > xtest_inheritance
        memory > xtest_interface_single_arg
        memory > xinterface_test_driver
        memory > xverify_instance_interface
        memory > xtest_interface_multi_arg
        memory > xtest_catch_BaseException_instance
        memory > xcatch_fails
        memory > xraise_fails
        memory > xtest_builtins_new_style
        memory > xtest_catch_string
        memory > xtest_raise_new_style_non_exception
        memory > xplatform_system
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xtest_builtins_new_style.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xException)) ((xobject)))))
                xverify_instance_interface.write
                  [xself xins]
                    seq > @
                      (((unsupported)) ((xattr)) ((((unsupported)) ("args") ("__str__") ("__repr__"))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xhasattr)) ((xins)) ((xattr)))) (("%s missing %s attribute".mod (((unsupported)) ((((xins).x__class__).x__name__)) ((xattr))))))
                xtest_inheritance.write
                  [xself]
                    memory > xplatform_name
                    memory > xinheritance_tree
                    memory > xexc_line
                    memory > xleft_bracket
                    memory > xlast_exc
                    memory > xparen_index
                    memory > xlast_depth
                    memory > xsuperclasses
                    memory > xexc
                    memory > xexc_set
                    memory > xsuperclass_name
                    memory > xdepth
                    memory > xexc_name
                    seq > @
                      seq
                        xexc_set.write (((xset)) 0)
                        (((unsupported)) ((xobject_)) ((((((xbuiltins).x__dict__).xvalues)) 0)))
                          (((unsupported)) ((xTypeError)))
                            (((xissubclass)) ((xobject_)) ((xBaseException))).if
                              bogusForceDataize.write ((((xexc_set).xadd)) (((xobject_).x__name__)))
                        xinheritance_tree.write (((xopen)) ((((((xos).xpath).xjoin)) ((((unsupported)) ((((((xos).xpath).xsplit)) ((x__file__)))) (0))) ("exception_hierarchy.txt"))))
                        (((unsupported)) 0)
                          seq
                            xsuperclass_name.write (((((((xinheritance_tree).xreadline)) 0).xrstrip)) 0)
                            (((unsupported)) ((xAttributeError)))
                              xlast_exc.write (((xgetattr)) ((xbuiltins)) ((xsuperclass_name)))
                              bogusForceDataize.write ((((xself).xfail)) (("base class %s not a built-in".mod (xsuperclass_name))))
                            bogusForceDataize.write ((((xself).xassertIn)) ((xsuperclass_name)) ((xexc_set)) (("%s not found".mod (xsuperclass_name))))
                            bogusForceDataize.write ((((xexc_set).xdiscard)) ((xsuperclass_name)))
                            xsuperclasses.write (((unsupported)) 0)
                            xlast_depth.write 0
                            (((unsupported)) ((xexc_line)) ((xinheritance_tree)))
                              seq
                                xexc_line.write ((((xexc_line).xrstrip)) 0)
                                xdepth.write ((((xexc_line).xrindex)) ("-"))
                                xexc_name.write (((unsupported)) ((xexc_line)) ((((unsupported)) (((xdepth).add 2)))))
                                (((unsupported)) ("(") ((xexc_name))).if
                                  seq
                                    xparen_index.write ((((xexc_name).xindex)) ("("))
                                    xplatform_name.write (((unsupported)) ((xexc_name)) ((((unsupported)) (((xparen_index).add 1)) ((1.neg)))))
                                    xexc_name.write (((unsupported)) ((xexc_name)) ((((unsupported)) (((xparen_index).sub 1)))))
                                    ((((xplatform_system)) 0).neq (xplatform_name)).if
                                      seq
                                        bogusForceDataize.write ((((xexc_set).xdiscard)) ((xexc_name)))
                                        (((unsupported)) 0)
                                (((unsupported)) ("[") ((xexc_name))).if
                                  seq
                                    xleft_bracket.write ((((xexc_name).xindex)) ("["))
                                    xexc_name.write (((unsupported)) ((xexc_name)) ((((unsupported)) (((xleft_bracket).sub 1)))))
                                (((unsupported)) ((xAttributeError)))
                                  xexc.write (((xgetattr)) ((xbuiltins)) ((xexc_name)))
                                  bogusForceDataize.write ((((xself).xfail)) (("%s not a built-in exception".mod (xexc_name))))
                                ((xlast_depth).less (xdepth)).if
                                  bogusForceDataize.write ((((xsuperclasses).xappend)) ((((unsupported)) ((xlast_depth)) ((xlast_exc)))))
                                  ((xlast_depth).greater (xdepth)).if
                                    while.
                                      ((((unsupported)) ((((unsupported)) ((xsuperclasses)) ((1.neg)))) (0)).geq (xdepth))
                                      [unused]
                                        seq > @
                                          bogusForceDataize.write ((((xsuperclasses).xpop)) 0)
                                bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xexc)) ((((unsupported)) ((((unsupported)) ((xsuperclasses)) ((1.neg)))) (1))))) (("%s is not a subclass of %s".mod (((unsupported)) (((xexc).x__name__)) (((((unsupported)) ((((unsupported)) ((xsuperclasses)) ((1.neg)))) (1)).x__name__))))))
                                (((unsupported)) ((xTypeError)))
                                  bogusForceDataize.write ((((xself).xverify_instance_interface)) ((((xexc)) 0)))
                                bogusForceDataize.write ((((xself).xassertIn)) ((xexc_name)) ((xexc_set)))
                                bogusForceDataize.write ((((xexc_set).xdiscard)) ((xexc_name)))
                                xlast_exc.write (xexc)
                                xlast_depth.write (xdepth)
                          bogusForceDataize.write ((((xinheritance_tree).xclose)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xexc_set)))) (0) (("%s not accounted for".mod (xexc_set))))
                xinterface_tests.write (((unsupported)) ("length") ("args") ("str") ("repr"))
                xinterface_test_driver.write
                  [xself xresults]
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xtest_name)) ((((unsupported)) ((xgiven)) ((xexpected)))))) ((((xzip)) (((xself).xinterface_tests)) ((xresults)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xgiven)) ((xexpected)) (("%s: %s != %s".mod (((unsupported)) ((xtest_name)) ((xgiven)) ((xexpected))))))
                xtest_interface_single_arg.write
                  [xself]
                    memory > xresults
                    memory > xexc
                    memory > xarg
                    seq > @
                      seq
                        xarg.write "spam"
                        xexc.write (((xException)) ((xarg)))
                        xresults.write (((unsupported)) ((((unsupported)) ((((xlen)) (((xexc).xargs)))) (1))) ((((unsupported)) ((((unsupported)) (((xexc).xargs)) (0))) ((xarg)))) ((((unsupported)) ((((xstr)) ((xexc)))) ((((xstr)) ((xarg)))))) ((((unsupported)) ((((xrepr)) ((xexc)))) (("%s(%r)".mod (((unsupported)) ((((xexc).x__class__).x__name__)) ((xarg))))))))
                        bogusForceDataize.write ((((xself).xinterface_test_driver)) ((xresults)))
                xtest_interface_multi_arg.write
                  [xself]
                    memory > xargs
                    memory > xresults
                    memory > xexc
                    memory > xarg_count
                    seq > @
                      seq
                        xarg_count.write 3
                        xargs.write (((xtuple)) ((((xrange)) ((xarg_count)))))
                        xexc.write (((xException)) ((((unsupported)) ((xargs)))))
                        xresults.write (((unsupported)) ((((unsupported)) ((((xlen)) (((xexc).xargs)))) ((xarg_count)))) ((((unsupported)) (((xexc).xargs)) ((xargs)))) ((((unsupported)) ((((xstr)) ((xexc)))) ((((xstr)) ((xargs)))))) ((((unsupported)) ((((xrepr)) ((xexc)))) (((((xexc).x__class__).x__name__).add (((xrepr)) (((xexc).xargs))))))))
                        bogusForceDataize.write ((((xself).xinterface_test_driver)) ((xresults)))
                xtest_interface_no_arg.write
                  [xself]
                    memory > xresults
                    memory > xexc
                    seq > @
                      seq
                        xexc.write (((xException)) 0)
                        xresults.write (((unsupported)) ((((unsupported)) ((((xlen)) (((xexc).xargs)))) (0))) ((((unsupported)) (((xexc).xargs)) ((((xtuple)) 0)))) ((((unsupported)) ((((xstr)) ((xexc)))) (""))) ((((unsupported)) ((((xrepr)) ((xexc)))) (((((xexc).x__class__).x__name__).add "()")))))
                        bogusForceDataize.write ((((xself).xinterface_test_driver)) ((xresults)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xraise_fails.write
                  [xself xobject_]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((xobject_)))
                          (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xfail)) (("TypeError expected for raising %s".mod (((xtype)) ((xobject_))))))
                xcatch_fails.write
                  [xself xobject_]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)) ((xTypeError)) ((xException)))
                          (((unsupported)) ((xobject_)))
                            (((unsupported)) ((xException)))
                          bogusForceDataize.write ((((xself).xfail)) (("TypeError expected when catching %s".mod (((xtype)) ((xobject_))))))
                        (((unsupported)) ((xTypeError)) ((xException)))
                          (((unsupported)) ((((unsupported)) ((xobject_)))))
                            (((unsupported)) ((xException)))
                          (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xfail)) (("TypeError expected when catching %s as specified in a tuple".mod (((xtype)) ((xobject_))))))
                xtest_raise_new_style_non_exception.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xself).xraise_fails)) ((xNewStyleClass)))
                        bogusForceDataize.write ((((xself).xraise_fails)) ((((xNewStyleClass)) 0)))
                xtest_raise_string.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xraise_fails)) ("spam"))
                xtest_catch_non_BaseException.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xself).xcatch_fails)) ((xNonBaseException)))
                        bogusForceDataize.write ((((xself).xcatch_fails)) ((((xNonBaseException)) 0)))
                xtest_catch_BaseException_instance.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcatch_fails)) ((((xBaseException)) 0)))
                xtest_catch_string.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcatch_fails)) ("spam"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)