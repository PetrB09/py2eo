memory > xtypes
memory > xC
memory > xAttributeError
memory > xRuntimeError
memory > xZeroDivisionError
memory > x_
memory > xf
memory > xsupport
memory > xweakref
memory > xe
memory > xunittest
memory > xnext
memory > xkwargs
memory > x__name__
[] > test_frame
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_clear_executing_generator
        memory > xouter
        memory > xtest_locals
        memory > xtest_clear_executing
        memory > xtest_repr
        memory > xtest_clear_locals
        memory > xmake_frames
        memory > xtest_clear_refcycles
        memory > xtest_clear_generator
        memory > xinner
        memory > xtest_locals_clear_locals
        memory > xclear_traceback_frames
        memory > xtest_f_lineno_del_segfault
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xinner.write
                  [xself xx]
                    seq > @
                      (((unsupported)) 0)
                        unsupported
                xouter.write
                  [xself]
                    memory > xexc
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xZeroDivisionError)))
                          bogusForceDataize.write ((((xself).xinner)) ((((unsupported)) ((xkwargs)))))
                          xexc.write (xe)
                        (((unsupported)) ((xexc)))
                xclear_traceback_frames.write
                  [xself xtb]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        while.
                          (((unsupported)) ((xtb)) ("None: is there a None literal in the EO language?"))
                          [unused]
                            seq > @
                              seq
                                bogusForceDataize.write (((((xtb).xtb_frame).xclear)) 0)
                                xtb.write ((xtb).xtb_next)
                xtest_clear_locals.write
                  [xself]
                    memory > xc
                    memory > xwr
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xc.write (((xC)) 0)
                        xwr.write ((((xweakref).xref)) ((xc)))
                        xexc.write (((unsupported)) (((xself).xouter)) ((xc)))
                        (((unsupported)) ((((unsupported)) ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertIsNot)) ("None: is there a None literal in the EO language?") ((((xwr)) 0)))
                        bogusForceDataize.write ((((xself).xclear_traceback_frames)) (((xexc).x__traceback__)))
                        bogusForceDataize.write ((((xsupport).xgc_collect)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ("None: is there a None literal in the EO language?") ((((xwr)) 0)))
                xtest_clear_generator.write
                  [xself]
                    memory > xendly
                    memory > xgen
                    memory > xg
                    seq > @
                      seq
                        xendly.write FALSE
                        xg.write
                          []
                            memory > xendly
                            seq > @
                              seq
                                (((unsupported)) 0)
                                (((unsupported)) 0)
                                  seq
                                    (((unsupported)) 0)
                                    bogusForceDataize.write (((xinner)) 0)
                                  xendly.write TRUE
                        xgen.write (((xg)) 0)
                        bogusForceDataize.write (((xnext)) ((xgen)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xendly)))
                        bogusForceDataize.write (((((xgen).xgi_frame).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xendly)))
                xtest_clear_executing.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) ((xZeroDivisionError)))
                          unsupported
                          xf.write (((xe).x__traceback__).xtb_frame)
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          bogusForceDataize.write ((((xf).xclear)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          bogusForceDataize.write (((((xf).xf_back).xclear)) 0)
                xtest_clear_executing_generator.write
                  [xself]
                    memory > xendly
                    memory > xgen
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xendly.write FALSE
                        xg.write
                          []
                            memory > xendly
                            memory > xf
                            seq > @
                              seq
                                (((unsupported)) 0)
                                (((unsupported)) ((xZeroDivisionError)))
                                  unsupported
                                  seq
                                    xf.write (((xe).x__traceback__).xtb_frame)
                                    (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                                      bogusForceDataize.write ((((xf).xclear)) 0)
                                    (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                                      bogusForceDataize.write (((((xf).xf_back).xclear)) 0)
                                    (((unsupported)) ((xf)))
                                  xendly.write TRUE
                        xgen.write (((xg)) 0)
                        xf.write (((xnext)) ((xgen)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xendly)))
                        bogusForceDataize.write ((((xf).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xendly)))
                xtest_clear_refcycles.write
                  [xself]
                    memory > xc
                    memory > xwr
                    memory > xexc
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((((xsupport).xdisable_gc)) 0)))
                          seq
                            (((unsupported)) 0)
                            xc.write (((xC)) 0)
                            xwr.write ((((xweakref).xref)) ((xc)))
                            xexc.write (((unsupported)) (((xself).xouter)) ((xc)))
                            (((unsupported)) ((((unsupported)) ((xc)))))
                            bogusForceDataize.write ((((xself).xassertIsNot)) ("None: is there a None literal in the EO language?") ((((xwr)) 0)))
                            bogusForceDataize.write ((((xself).xclear_traceback_frames)) (((xexc).x__traceback__)))
                            bogusForceDataize.write ((((xself).xassertIs)) ("None: is there a None literal in the EO language?") ((((xwr)) 0)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xmake_frames.write
                  [xself]
                    memory > xtb
                    memory > xframes
                    memory > xouter
                    seq > @
                      seq
                        xouter.write
                          []
                            memory > xx
                            memory > xinner
                            memory > xy
                            seq > @
                              seq
                                xx.write 5
                                xy.write 6
                                xinner.write
                                  []
                                    memory > xt
                                    memory > xz
                                    seq > @
                                      seq
                                        xz.write ((xx).add 2)
                                        unsupported
                                        xt.write 9
                                (((unsupported)) ((((xinner)) 0)))
                        (((unsupported)) ((xZeroDivisionError)))
                          bogusForceDataize.write (((xouter)) 0)
                          seq
                            xtb.write ((xe).x__traceback__)
                            xframes.write (((unsupported)) 0)
                            while.
                              (xtb)
                              [unused]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xframes).xappend)) (((xtb).xtb_frame)))
                                    xtb.write ((xtb).xtb_next)
                        (((unsupported)) ((xframes)))
                xtest_locals.write
                  [xself]
                    memory > xouter_locals
                    memory > xinner_locals
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xf)) ((xouter)) ((xinner)))) (((((xself).xmake_frames)) 0)))
                        xouter_locals.write ((xouter).xf_locals)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((((xouter_locals).xpop)) ("inner"))) (((xtypes).xFunctionType)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xouter_locals)) ((((unsupported)) ("x") (5) ("y") (6))))
                        xinner_locals.write ((xinner).xf_locals)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xinner_locals)) ((((unsupported)) ("x") (5) ("z") (7))))
                xtest_clear_locals.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xf)) ((xouter)) ((xinner)))) (((((xself).xmake_frames)) 0)))
                        bogusForceDataize.write ((((xouter).xclear)) 0)
                        bogusForceDataize.write ((((xinner).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xouter).xf_locals)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xinner).xf_locals)) ((((unsupported)) 0)))
                xtest_locals_clear_locals.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xf)) ((xouter)) ((xinner)))) (((((xself).xmake_frames)) 0)))
                        unsupported
                        unsupported
                        bogusForceDataize.write ((((xouter).xclear)) 0)
                        bogusForceDataize.write ((((xinner).xclear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xouter).xf_locals)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xinner).xf_locals)) ((((unsupported)) 0)))
                xtest_f_lineno_del_segfault.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xf)) ((x_)) ((x_)))) (((((xself).xmake_frames)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xf).xf_lineno)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xtest_repr.write
                  [xself]
                    seq > @
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)