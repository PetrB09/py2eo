memory > xlist
memory > xothertype
memory > xValueError
memory > xTestRpow
memory > xkl
memory > xi
memory > xm
memory > xfloat
memory > xpow
memory > xn
memory > xj
memory > xk
memory > xjh
memory > xrange
memory > xmath
memory > xb
memory > xZeroDivisionError
memory > xkh
memory > xint
memory > xunittest
memory > xih
memory > xTypeError
memory > x__name__
memory > xa
[] > test_pow
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_bug643260
        memory > xpowtest
        memory > xtest_negative_exponent
        memory > xtest_powint
        memory > xtest_powfloat
        memory > xtest_bug705231
        memory > xtest_other
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xpowtest.write
                  [xself xtype]
                    memory > xpow2
                    memory > xjl
                    memory > xii
                    memory > xasseq
                    memory > xjj
                    memory > xil
                    memory > xexp
                    memory > xzero
                    seq > @
                      seq
                        ((xtype).neq (xfloat)).if
                          seq
                            (((unsupported)) ((xi)) ((((xrange)) ((1000.neg)) (1000))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((((xtype)) ((xi)))) (0))) (1))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((((xtype)) ((xi)))) (1))) ((((xtype)) ((xi)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((((xtype)) (0))) (1))) ((((xtype)) (0))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((((xtype)) (1))) (1))) ((((xtype)) (1))))
                            (((unsupported)) ((xi)) ((((xrange)) ((100.neg)) (100))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((((xtype)) ((xi)))) (3))) ((((xi).mul (xi)).mul (xi))))
                            xpow2.write 1
                            (((unsupported)) ((xi)) ((((xrange)) (0) (31))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) (2) ((xi)))) ((xpow2)))
                                ((xi).neq 30).if
                                  xpow2.write ((xpow2).mul 2)
                            (((unsupported)) ((xothertype)) ((((unsupported)) ((xint)))))
                              (((unsupported)) ((xi)) (((((xlist)) ((((xrange)) ((10.neg)) (0)))).add (((xlist)) ((((xrange)) (1) (10)))))))
                                seq
                                  xii.write (((xtype)) ((xi)))
                                  (((unsupported)) ((xj)) ((((xrange)) (1) (11))))
                                    seq
                                      xjj.write ((((xothertype)) ((xj))).neg)
                                      bogusForceDataize.write (((xpow)) ((xii)) ((xjj)))
                        (((unsupported)) ((xothertype)) ((((unsupported)) ((xint)) ((xfloat)))))
                          (((unsupported)) ((xi)) ((((xrange)) (1) (100))))
                            seq
                              xzero.write (((xtype)) (0))
                              xexp.write ((((xothertype)) (((xi).div 10.0))).neg)
                              ((xexp).eq 0).if
                                (((unsupported)) 0)
                              bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((xpow)) ((xzero)) ((xexp)))
                        (((unsupported)) ((((unsupported)) ((xil)) ((xih)))) ((((unsupported)) ((20.neg)) (20))))
                        (((unsupported)) ((((unsupported)) ((xjl)) ((xjh)))) ((((unsupported)) ((5.neg)) (5))))
                        (((unsupported)) ((((unsupported)) ((xkl)) ((xkh)))) ((((unsupported)) ((10.neg)) (10))))
                        xasseq.write ((xself).xassertEqual)
                        ((xtype).eq (xfloat)).if
                          seq
                            xil.write 1
                            xasseq.write ((xself).xassertAlmostEqual)
                          ((xtype).eq (xint)).if
                            xjl.write 0
                            ((xtype).eq (xint)).if
                              (((unsupported)) ((((unsupported)) ((xjl)) ((xjh)))) ((((unsupported)) (0) (15))))
                        (((unsupported)) ((xi)) ((((xrange)) ((xil)) (((xih).add 1)))))
                          (((unsupported)) ((xj)) ((((xrange)) ((xjl)) (((xjh).add 1)))))
                            (((unsupported)) ((xk)) ((((xrange)) ((xkl)) (((xkh).add 1)))))
                              ((xk).neq 0).if
                                seq
                                  (((xtype).eq (xfloat)).or ((xj).less 0)).if
                                    seq
                                      bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xpow)) ((((xtype)) ((xi)))) ((xj)) ((xk)))
                                      (((unsupported)) 0)
                                  bogusForceDataize.write (((xasseq)) ((((xpow)) ((((xtype)) ((xi)))) ((xj)) ((xk)))) (((((xpow)) ((((xtype)) ((xi)))) ((xj))).mod (((xtype)) ((xk))))))
                xtest_powint.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xpowtest)) ((xint)))
                xtest_powfloat.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xpowtest)) ((xfloat)))
                xtest_other.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (3)).mod 8)) ((((xpow)) (3) (3) (8))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (3)).mod (8.neg))) ((((xpow)) (3) (3) ((8.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (2)).mod (2.neg))) ((((xpow)) (3) (2) ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((3.neg)) (3)).mod 8)) ((((xpow)) ((3.neg)) (3) (8))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((3.neg)) (3)).mod (8.neg))) ((((xpow)) ((3.neg)) (3) ((8.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (5) (2)).mod (8.neg))) ((((xpow)) (5) (2) ((8.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (3)).mod 8)) ((((xpow)) (3) (3) (8))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (3)).mod (8.neg))) ((((xpow)) (3) (3) ((8.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (3) (2)).mod (2.neg))) ((((xpow)) (3) (2) ((2.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((3.neg)) (3)).mod 8)) ((((xpow)) ((3.neg)) (3) (8))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((3.neg)) (3)).mod (8.neg))) ((((xpow)) ((3.neg)) (3) ((8.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) (5) (2)).mod (8.neg))) ((((xpow)) (5) (2) ((8.neg)))))
                        (((unsupported)) ((xi)) ((((xrange)) ((10.neg)) (11))))
                          (((unsupported)) ((xj)) ((((xrange)) (0) (6))))
                            (((unsupported)) ((xk)) ((((xrange)) ((7.neg)) (11))))
                              seq
                                (((xj).geq 0).and ((xk).neq 0)).if
                                  bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((xi)) ((xj))).mod (xk))) ((((xpow)) ((xi)) ((xj)) ((xk)))))
                                (((xj).geq 0).and ((xk).neq 0)).if
                                  bogusForceDataize.write ((((xself).xassertEqual)) (((((xpow)) ((((xint)) ((xi)))) ((xj))).mod (xk))) ((((xpow)) ((((xint)) ((xi)))) ((xj)) ((xk)))))
                xtest_bug643260.write
                  [xself]
                    memory > x__rpow__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__rpow__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ("None: is there a None literal in the EO language?") ((((xTestRpow)) 0)))
                xtest_bug705231.write
                  [xself]
                    memory > xeq
                    memory > xexpected
                    memory > xfiveto
                    memory > xa
                    seq > @
                      seq
                        xeq.write ((xself).xassertEqual)
                        xa.write (1.0.neg)
                        bogusForceDataize.write (((xeq)) ((((xpow)) ((xa)) ((((unsupported)) 0)))) (1.0))
                        bogusForceDataize.write (((xeq)) ((((xpow)) ((xa)) (((((unsupported)) 0).neg)))) (1.0))
                        (((unsupported)) ((xb)) ((((xrange)) ((10.neg)) (11))))
                          bogusForceDataize.write (((xeq)) ((((xpow)) ((xa)) ((((xfloat)) ((xb)))))) (((((xb).and 1).and (1.0.neg)).or 1.0)))
                        (((unsupported)) ((xn)) ((((xrange)) (0) (100))))
                          seq
                            xfiveto.write (((xfloat)) ((((unsupported)) (5) ((xn)))))
                            xexpected.write ((((xfiveto).mod 2.0).and (1.0.neg)).or 1.0)
                            bogusForceDataize.write (((xeq)) ((((xpow)) ((xa)) ((xfiveto)))) ((xexpected)))
                            bogusForceDataize.write (((xeq)) ((((xpow)) ((xa)) (((xfiveto).neg)))) ((xexpected)))
                        bogusForceDataize.write (((xeq)) ((xexpected)) (1.0))
                xtest_negative_exponent.write
                  [xself]
                    memory > xinv
                    seq > @
                      (((unsupported)) ((xa)) ((((xrange)) ((50.neg)) (50))))
                        (((unsupported)) ((xm)) ((((xrange)) ((50.neg)) (50))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xa)) ((xm)))))
                            (((xm).neq 0).and (((((xmath).xgcd)) ((xa)) ((xm))).eq 1)).if
                              seq
                                xinv.write (((xpow)) ((xa)) ((1.neg)) ((xm)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xinv)) (((xinv).mod (xm))))
                                bogusForceDataize.write ((((xself).xassertEqual)) (((((xinv).mul (xa)).sub 1).mod (xm))) (0))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((xa)) ((2.neg)) ((xm)))) ((((xpow)) ((xinv)) (2) ((xm)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((xa)) ((3.neg)) ((xm)))) ((((xpow)) ((xinv)) (3) ((xm)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xpow)) ((xa)) ((1001.neg)) ((xm)))) ((((xpow)) ((xinv)) (1001) ((xm)))))
                              seq
                                (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                                  bogusForceDataize.write (((xpow)) ((xa)) ((1.neg)) ((xm)))
                                (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                                  bogusForceDataize.write (((xpow)) ((xa)) ((2.neg)) ((xm)))
                                (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                                  bogusForceDataize.write (((xpow)) ((xa)) ((1001.neg)) ((xm)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)