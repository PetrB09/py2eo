memory > xeval
memory > xunittest
memory > xop
memory > xTypeError
memory > x__name__
[] > test_unary
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_invert
        memory > xtest_no_overflow
        memory > xtest_bad_types
        memory > xtest_negative
        memory > xtest_negation_of_exponentiation
        memory > xtest_positive
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_negative.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((2.neg).eq (0.sub 2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((0.neg)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((2.neg).neg)) (2))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((2.neg).eq (0.sub 2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((2.0.neg).eq (0.sub 2.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((unsupported)) 0).neg).eq (0.sub (((unsupported)) 0)))))
                xtest_positive.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((0)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((2))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((2.0)) (2.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) 0))) ((((unsupported)) 0)))
                xtest_invert.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((2.neg).eq (0.sub 2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((0.neg)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((2.neg).neg)) (2))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((2.neg).eq (0.sub 2))))
                xtest_no_overflow.write
                  [xself]
                    memory > xnines
                    seq > @
                      seq
                        xnines.write ("9".mul 32)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xeval)) (("+".add (xnines)))).eq ((((unsupported)) (10) (32)).sub 1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xeval)) (("-".add (xnines)))).eq (((((unsupported)) (10) (32)).sub 1).neg))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xeval)) (("~".add (xnines)))).eq (((((unsupported)) (10) (32)).sub 1).neg))))
                xtest_negation_of_exponentiation.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) (2) (3)).neg)) ((8.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((2.neg)) (3))) ((8.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) (2) (4)).neg)) ((16.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((2.neg)) (4))) (16))
                xtest_bad_types.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xop)) ((((unsupported)) ("+") ("-") ("~"))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xeval)) (((xop).add "b'a'")))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xeval)) (((xop).add "'a'")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xeval)) ("~2j"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xeval)) ("~2.0"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)