memory > xylower
memory > xC
memory > xlist
memory > xstr
memory > xt
memory > xrange
memory > xpower
memory > xprint
memory > xsupport
memory > xid
memory > xy
memory > xxlower
memory > xStable
memory > xopt
memory > xRuntimeError
memory > xSortKiller
memory > xcmp_to_key
memory > xenumerate
memory > xWackyList2
memory > xValueError
memory > xb
memory > xZeroDivisionError
memory > xref
memory > x_
memory > xL
memory > xPointlessComparator
memory > xgood
memory > xrandom
memory > xWackyComparator
memory > xint
memory > xComplains
memory > xx
memory > xi
memory > xbytes
memory > xNotImplemented
memory > xsorted
memory > xfloat
memory > xy0
memory > xe
memory > xzip
memory > xunittest
memory > xobject
memory > xx0
memory > xlen
memory > xWackyList1
memory > xTypeError
memory > x__name__
memory > xa
[] > test_sort
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_not_all_tuples
        memory > xtest_unsafe_object_compare
        memory > xtest_key_with_mutating_del
        memory > xtest_reverse_stability
        memory > xtest_decorated
        memory > xtest_unsafe_float_compare
        memory > xtest_stability
        memory > xtestStressfully
        memory > xnerrors
        memory > xtest_reverse
        memory > xtest_undetected_mutation
        memory > xtest_unsafe_latin_compare
        memory > xtest_key_with_exception
        memory > xtest_key_with_mutation
        memory > xcheck_against_PyObject_RichCompareBool
        memory > xcheck
        memory > xtest_safe_object_compare
        memory > xtest_unsafe_tuple_compare
        memory > xtest_unsafe_long_compare
        memory > xtest_bug453523
        memory > xverbose
        memory > xtest_baddecorator
        memory > xtest_key_with_mutating_del_and_exception
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xverbose.write ((xsupport).xverbose)
            xnerrors.write 0
            xcheck.write
              [xtag xexpected xraw xcompare]
                memory > xmaybe
                memory > xorig
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) 0)
                    (xverbose).if
                      bogusForceDataize.write (((xprint)) ("    checking") ((xtag)))
                    xorig.write (((unsupported)) ((xraw)) ((((unsupported)) 0)))
                    (xcompare).if
                      (((unsupported)) (((xraw).xsort)) ((((xcmp_to_key)) ((xcompare)))))
                      bogusForceDataize.write ((((xraw).xsort)) 0)
                    ((((xlen)) ((xexpected))).neq (((xlen)) ((xraw)))).if
                      seq
                        bogusForceDataize.write (((xprint)) ("error in") ((xtag)))
                        bogusForceDataize.write (((xprint)) ("length mismatch;") ((((xlen)) ((xexpected)))) ((((xlen)) ((xraw)))))
                        bogusForceDataize.write (((xprint)) ((xexpected)))
                        bogusForceDataize.write (((xprint)) ((xorig)))
                        bogusForceDataize.write (((xprint)) ((xraw)))
                        (((unsupported)) ((xnerrors)) (1))
                        (((unsupported)) 0)
                    (((unsupported)) ((((unsupported)) ((xi)) ((xgood)))) ((((xenumerate)) ((xexpected)))))
                      seq
                        xmaybe.write (((unsupported)) ((xraw)) ((xi)))
                        (((unsupported)) ((xgood)) ((xmaybe))).if
                          seq
                            bogusForceDataize.write (((xprint)) ("error in") ((xtag)))
                            bogusForceDataize.write (((xprint)) ("out of order at index") ((xi)) ((xgood)) ((xmaybe)))
                            bogusForceDataize.write (((xprint)) ((xexpected)))
                            bogusForceDataize.write (((xprint)) ((xorig)))
                            bogusForceDataize.write (((xprint)) ((xraw)))
                            (((unsupported)) ((xnerrors)) (1))
                            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              xtestStressfully.write
                [xself]
                  memory > xbad_key
                  memory > xsizes
                  memory > xit_complained
                  memory > x__lt__
                  memory > xmaybe_complain
                  memory > xx
                  memory > xs
                  memory > x__init__
                  memory > xy
                  memory > xn
                  memory > xaugmented
                  memory > x__repr__
                  seq > @
                    seq
                      xsizes.write (((unsupported)) (0))
                      (((unsupported)) ((xpower)) ((((xrange)) (1) (10))))
                        seq
                          xn.write (((unsupported)) (2) ((xpower)))
                          bogusForceDataize.write ((((xsizes).xextend)) ((((xrange)) (((xn).sub 1)) (((xn).add 2)))))
                      bogusForceDataize.write ((((xsizes).xextend)) ((((unsupported)) (10) (100) (1000))))
                      (((unsupported)) ((xobject)))
                        seq
                          xmaybe_complain.write TRUE
                          x__init__.write
                            [xself xi]
                              seq > @
                                (((unsupported)) (((xself).xi)) ((xi)))
                          x__lt__.write
                            [xself xother]
                              seq > @
                                seq
                                  (((xComplains).xmaybe_complain).and (((((xrandom).xrandom)) 0).less 0.001)).if
                                    seq
                                      (xverbose).if
                                        bogusForceDataize.write (((xprint)) ("        complaining at") ((xself)) ((xother)))
                                      (((unsupported)) ((xRuntimeError)))
                                  (((unsupported)) ((((xself).xi).less ((xother).xi))))
                          x__repr__.write
                            [xself]
                              seq > @
                                (((unsupported)) (("Complains(%d)".mod ((xself).xi))))
                      (((unsupported)) ((xobject)))
                        seq
                          x__init__.write
                            [xself xkey xi]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xkey)) ((xkey)))
                                  (((unsupported)) (((xself).xindex)) ((xi)))
                          x__lt__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((((xself).xkey).less ((xother).xkey))))
                          x__repr__.write
                            [xself]
                              seq > @
                                (((unsupported)) (("Stable(%d, %d)".mod (((unsupported)) (((xself).xkey)) (((xself).xindex))))))
                      (((unsupported)) ((xn)) ((xsizes)))
                        seq
                          xx.write (((xlist)) ((((xrange)) ((xn)))))
                          (xverbose).if
                            bogusForceDataize.write (((xprint)) ("Testing size") ((xn)))
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write (((xcheck)) ("identity") ((xx)) ((xs)))
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xs).xreverse)) 0)
                          bogusForceDataize.write (((xcheck)) ("reversed") ((xx)) ((xs)))
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xrandom).xshuffle)) ((xs)))
                          bogusForceDataize.write (((xcheck)) ("random permutation") ((xx)) ((xs)))
                          xy.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xy).xreverse)) 0)
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write (((xcheck)) ("reversed via function") ((xy)) ((xs)) ((((unsupported)) ((((xb).greater (xa)).sub ((xb).less (xa)))))))
                          (xverbose).if
                            seq
                              bogusForceDataize.write (((xprint)) ("    Checking against an insane comparison function."))
                              bogusForceDataize.write (((xprint)) ("        If the implementation isn't careful, this may segfault."))
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          (((unsupported)) (((xs).xsort)) ((((xcmp_to_key)) ((((unsupported)) (((((xint)) ((((((xrandom).xrandom)) 0).mul 3))).sub 1)))))))
                          bogusForceDataize.write (((xcheck)) ("an insane function left some permutation") ((xx)) ((xs)))
                          ((((xlen)) ((xx))).geq 2).if
                            seq
                              xbad_key.write
                                [xx]
                                  seq > @
                                    (((unsupported)) ((xRuntimeError)))
                              xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                              (((unsupported)) (((xself).xassertRaises)) ((xRuntimeError)) (((xs).xsort)) ((xbad_key)))
                          xx.write (((unsupported)) ((((xComplains)) ((xi)))) ((xi)) ((xx)))
                          xs.write (((unsupported)) ((xx)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xrandom).xshuffle)) ((xs)))
                          (((unsupported)) (((xComplains).xmaybe_complain)) (TRUE))
                          xit_complained.write FALSE
                          (((unsupported)) ((xRuntimeError)))
                            bogusForceDataize.write ((((xs).xsort)) 0)
                            xit_complained.write TRUE
                          (xit_complained).if
                            seq
                              (((unsupported)) (((xComplains).xmaybe_complain)) (FALSE))
                              bogusForceDataize.write (((xcheck)) ("exception during sort left some permutation") ((xx)) ((xs)))
                          xs.write (((unsupported)) ((((xStable)) (((((xrandom).xrandrange)) (10))) ((xi)))) ((xi)) ((((xrange)) ((xn)))))
                          xaugmented.write (((unsupported)) ((((unsupported)) ((xe)) (((xe).xindex)))) ((xe)) ((xs)))
                          bogusForceDataize.write ((((xaugmented).xsort)) 0)
                          xx.write (((unsupported)) ((xe)) ((((unsupported)) ((xe)) ((xi)))) ((xaugmented)))
                          bogusForceDataize.write (((xcheck)) ("stability") ((xx)) ((xs)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_bug453523.write
                  [xself]
                    memory > x__lt__
                    memory > xL
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__lt__.write
                            [xself xother]
                              seq > @
                                seq
                                  ((xL).and (((((xrandom).xrandom)) 0).less 0.75)).if
                                    bogusForceDataize.write ((((xL).xpop)) 0)
                                    bogusForceDataize.write ((((xL).xappend)) (3))
                                  (((unsupported)) ((((((xrandom).xrandom)) 0).less 0.5)))
                        xL.write (((unsupported)) ((((xC)) 0)) ((xi)) ((((xrange)) (50))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xL).xsort)))
                xtest_undetected_mutation.write
                  [xself]
                    memory > xL
                    memory > xmemorywaster
                    memory > xmutating_cmp
                    seq > @
                      seq
                        xmemorywaster.write (((unsupported)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (20))))
                          seq
                            xmutating_cmp.write
                              [xx xy]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xL).xappend)) (3))
                                    bogusForceDataize.write ((((xL).xpop)) 0)
                                    (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                            xL.write (((unsupported)) (1) (2))
                            (((unsupported)) (((xself).xassertRaises)) ((xValueError)) (((xL).xsort)) ((((xcmp_to_key)) ((xmutating_cmp)))))
                            xmutating_cmp.write
                              [xx xy]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xL).xappend)) (3))
                                    (((unsupported)) ((((unsupported)) ((((unsupported)) ((xL)) ((((unsupported)) 0)))))))
                                    (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                            (((unsupported)) (((xself).xassertRaises)) ((xValueError)) (((xL).xsort)) ((((xcmp_to_key)) ((xmutating_cmp)))))
                            xmemorywaster.write (((unsupported)) ((xmemorywaster)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_decorated.write
                  [xself]
                    memory > xmy_cmp
                    memory > xcopy
                    memory > xdata
                    seq > @
                      seq
                        xdata.write ((("The quick Brown fox Jumped over The lazy Dog".xsplit)) 0)
                        xcopy.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xrandom).xshuffle)) ((xdata)))
                        (((unsupported)) (((xdata).xsort)) (((xstr).xlower)))
                        xmy_cmp.write
                          [xx xy]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xxlower)) ((xylower)))) ((((unsupported)) (((((xx).xlower)) 0)) (((((xy).xlower)) 0)))))
                                (((unsupported)) ((((xxlower).greater (xylower)).sub ((xxlower).less (xylower)))))
                        (((unsupported)) (((xcopy).xsort)) ((((xcmp_to_key)) ((xmy_cmp)))))
                xtest_baddecorator.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write ((("The quick Brown fox Jumped over The lazy Dog".xsplit)) 0)
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) (((xdata).xsort)) ((((unsupported)) (0))))
                xtest_stability.write
                  [xself]
                    memory > xcopy
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)) ((((unsupported)) (((((xrandom).xrandrange)) (100))) ((xi)))) ((xi)) ((((xrange)) (200))))
                        xcopy.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        (((unsupported)) (((xdata).xsort)) ((((unsupported)) ((((unsupported)) ((xt)) (0))))))
                        bogusForceDataize.write ((((xcopy).xsort)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((xcopy)))
                xtest_key_with_exception.write
                  [xself]
                    memory > xdup
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xrange)) ((2.neg)) (2))))
                        xdup.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        (((unsupported)) (((xself).xassertRaises)) ((xZeroDivisionError)) (((xdata).xsort)) ((((unsupported)) ((1.div (xx))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((xdup)))
                xtest_key_with_mutation.write
                  [xself]
                    memory > xk
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xrange)) (10))))
                        xk.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))))))
                                (((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))) ((((xrange)) (20))))
                                (((unsupported)) ((xx)))
                        (((unsupported)) (((xself).xassertRaises)) ((xValueError)) (((xdata).xsort)) ((xk)))
                xtest_key_with_mutating_del.write
                  [xself]
                    memory > x__del__
                    memory > x__lt__
                    memory > x__init__
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xrange)) (10))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                            x__del__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) ((((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))))))
                                    (((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))) ((((xrange)) (20))))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) (((((xid)) ((xself))).less (((xid)) ((xother))))))
                        (((unsupported)) (((xself).xassertRaises)) ((xValueError)) (((xdata).xsort)) ((xSortKiller)))
                xtest_key_with_mutating_del_and_exception.write
                  [xself]
                    memory > x__del__
                    memory > x__init__
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xrange)) (10))))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  ((xx).greater 2).if
                                    (((unsupported)) ((xRuntimeError)))
                            x__del__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)) ((((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))))))
                                    (((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) 0)))) ((((xlist)) ((((xrange)) (20))))))
                        (((unsupported)) (((xself).xassertRaises)) ((xRuntimeError)) (((xdata).xsort)) ((xSortKiller)))
                xtest_reverse.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xrange)) (100))))
                        bogusForceDataize.write ((((xrandom).xshuffle)) ((xdata)))
                        (((unsupported)) (((xdata).xsort)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((((xlist)) ((((xrange)) (99) ((1.neg)) ((1.neg)))))))
                xtest_reverse_stability.write
                  [xself]
                    memory > xdata
                    memory > xcopy2
                    memory > xmy_cmp_reversed
                    memory > xmy_cmp
                    memory > xcopy1
                    seq > @
                      seq
                        xdata.write (((unsupported)) ((((unsupported)) (((((xrandom).xrandrange)) (100))) ((xi)))) ((xi)) ((((xrange)) (200))))
                        xcopy1.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        xcopy2.write (((unsupported)) ((xdata)) ((((unsupported)) 0)))
                        xmy_cmp.write
                          [xx xy]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xx0)) ((xy0)))) ((((unsupported)) ((((unsupported)) ((xx)) (0))) ((((unsupported)) ((xy)) (0))))))
                                (((unsupported)) ((((xx0).greater (xy0)).sub ((xx0).less (xy0)))))
                        xmy_cmp_reversed.write
                          [xx xy]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xx0)) ((xy0)))) ((((unsupported)) ((((unsupported)) ((xx)) (0))) ((((unsupported)) ((xy)) (0))))))
                                (((unsupported)) ((((xy0).greater (xx0)).sub ((xy0).less (xx0)))))
                        (((unsupported)) (((xdata).xsort)) ((((xcmp_to_key)) ((xmy_cmp)))) (TRUE))
                        (((unsupported)) (((xcopy1).xsort)) ((((xcmp_to_key)) ((xmy_cmp_reversed)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((xcopy1)))
                        (((unsupported)) (((xcopy2).xsort)) ((((unsupported)) ((((unsupported)) ((xx)) (0))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xdata)) ((xcopy2)))
            xcheck_against_PyObject_RichCompareBool.write
              [xself xL]
                memory > xreference
                memory > xL_1
                memory > xL_2
                memory > xoptimized
                memory > xL_3
                seq > @
                  seq
                    bogusForceDataize.write ((((xrandom).xseed)) (0))
                    bogusForceDataize.write ((((xrandom).xshuffle)) ((xL)))
                    xL_1.write (((unsupported)) ((xL)) ((((unsupported)) 0)))
                    xL_2.write (((unsupported)) ((((unsupported)) ((xx)))) ((xx)) ((xL)))
                    xL_3.write (((unsupported)) ((((unsupported)) ((((unsupported)) ((xx)))))) ((xx)) ((xL)))
                    (((unsupported)) ((xL)) ((((unsupported)) ((xL_1)) ((xL_2)) ((xL_3)))))
                      seq
                        xoptimized.write (((xsorted)) ((xL)))
                        xreference.write (((unsupported)) ((((unsupported)) ((xy)) (1))) ((xy)) ((((xsorted)) ((((unsupported)) ((((unsupported)) (0) ((xx)))) ((xx)) ((xL)))))))
                        (((unsupported)) ((((unsupported)) ((xopt)) ((xref)))) ((((xzip)) ((xoptimized)) ((xreference)))))
                          bogusForceDataize.write ((((xself).xassertIs)) ((xopt)) ((xref)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_safe_object_compare.write
                  [xself]
                    memory > xfloat_int_lists
                    memory > xheterogeneous_lists
                    seq > @
                      seq
                        xheterogeneous_lists.write (((unsupported)) ((((unsupported)) (0) ("foo"))) ((((unsupported)) (0.0) ("foo"))) ((((unsupported)) ((((unsupported)) ("foo"))) ("foo"))))
                        (((unsupported)) ((xL)) ((xheterogeneous_lists)))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xL).xsort)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) ((xx)))) ((xx)) ((xL))).xsort)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) ((((unsupported)) ((xx)))))) ((xx)) ((xL))).xsort)))
                        xfloat_int_lists.write (((unsupported)) ((((unsupported)) (1) (1.1))) ((((unsupported)) ((((unsupported)) (1) (70))) (1.1))) ((((unsupported)) (1.1) (1))) ((((unsupported)) (1.1) ((((unsupported)) (1) (70))))))
                        (((unsupported)) ((xL)) ((xfloat_int_lists)))
                          bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((xL)))
                xtest_unsafe_object_compare.write
                  [xself]
                    memory > xlists
                    memory > x__lt__
                    memory > xelem
                    memory > xL
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          x__lt__.write
                            [xself xother]
                              seq > @
                                seq
                                  (((unsupported)) (((xelem).x__class__)) ((xWackyList2)))
                                  (((unsupported)) (((((xint).x__lt__)) ((xself)) ((xother)))))
                        (((unsupported)) ((xlist)))
                        (((unsupported)) ((xlist)))
                          x__lt__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xValueError)))
                        xL.write (((unsupported)) ((((xWackyList1)) ((((unsupported)) ((((xWackyComparator)) ((xi)))) ((xi)))))) ((xi)) ((((xrange)) (10))))
                        xelem.write (((unsupported)) ((xL)) ((1.neg)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xL).xsort)) 0)
                        xL.write (((unsupported)) ((((xWackyList1)) ((((unsupported)) ((((xWackyComparator)) ((xi)))) ((xi)))))) ((xi)) ((((xrange)) (10))))
                        xelem.write (((unsupported)) ((xL)) ((1.neg)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((((unsupported)) ((((unsupported)) ((xx)))) ((xx)) ((xL))).xsort)) 0)
                        (((unsupported)) 0)
                          x__lt__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xNotImplemented)))
                        xL.write (((unsupported)) ((((xPointlessComparator)) 0)) ((((xPointlessComparator)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xL).xsort)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) ((xx)))) ((xx)) ((xL))).xsort)))
                        xlists.write (((unsupported)) (((((xlist)) ((((xrange)) (100)))).add (((unsupported)) ((((unsupported)) (1) (70)))))) (((((unsupported)) ((((xstr)) ((xx)))) ((xx)) ((((xrange)) (100)))).add (((unsupported)) ("uffff")))) ((((unsupported)) ((((xbytes)) ((xx)))) ((xx)) ((((xrange)) (100))))) ((((unsupported)) ((((((xcmp_to_key)) ((((unsupported)) (((xx).less (xy))))))) ((xx)))) ((xx)) ((((xrange)) (100))))))
                        (((unsupported)) ((xL)) ((xlists)))
                          bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((xL)))
                xtest_unsafe_latin_compare.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((((unsupported)) ((((xstr)) ((xx)))) ((xx)) ((((xrange)) (100))))))
                xtest_unsafe_long_compare.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((((unsupported)) ((xx)) ((xx)) ((((xrange)) (100))))))
                xtest_unsafe_float_compare.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((((unsupported)) ((((xfloat)) ((xx)))) ((xx)) ((((xrange)) (100))))))
                xtest_unsafe_tuple_compare.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) (((((unsupported)) ((((xfloat)) ("nan")))).mul 100)))
                        bogusForceDataize.write (((xcheck_against_PyObject_RichCompareBool)) ((xself)) ((((unsupported)) ((((xfloat)) ("nan"))) ((x_)) ((((xrange)) (100))))))
                xtest_not_all_tuples.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) (1.0) (1.0))) ((((unsupported)) (FALSE) ("A"))) (6)).xsort)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) (1) ("a")))).xsort)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((unsupported)) ((((unsupported)) (1) ("a"))) ((((unsupported)) ("a") (1)))).xsort)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)