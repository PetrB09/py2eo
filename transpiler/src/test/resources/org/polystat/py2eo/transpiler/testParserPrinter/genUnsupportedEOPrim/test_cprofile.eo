memory > xrc
memory > xProfileTest
memory > xout
memory > x__enter__return_value
memory > xerr
memory > xint
memory > xcProfile
memory > x_lsprof
memory > xcm
memory > xCProfileTest
memory > xassert_python_failure
memory > xregenerate_expected_output
memory > xsupport
memory > xsys
memory > x__file__
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_cprofile
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xget_expected_output
        memory > xmain
        memory > xtest_profile_enable_disable
        memory > xtest_sort
        memory > xprofilermodule
        memory > xtest_bad_counter_during_dealloc
        memory > xexpected_max_output
        memory > xtest_profile_as_context_manager
        memory > x_ProfileOutput
        memory > xprofilerclass
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) ((xProfileTest)))
              seq
                xprofilerclass.write ((xcProfile).xProfile)
                xprofilermodule.write (xcProfile)
                xexpected_max_output.write "{built-in method builtins.max}"
                xget_expected_output.write
                  [xself]
                    seq > @
                      (((unsupported)) ((x_ProfileOutput)))
                xtest_bad_counter_during_dealloc.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) (((((xsupport).xcatch_unraisable_exception)) 0)) ((xcm)))
                          seq
                            xobj.write ((((x_lsprof).xProfiler)) ((((unsupported)) ((xint)))))
                            bogusForceDataize.write ((((xobj).xenable)) 0)
                            xobj.write ((((x_lsprof).xProfiler)) (1))
                            bogusForceDataize.write ((((xobj).xdisable)) 0)
                            bogusForceDataize.write ((((xobj).xclear)) 0)
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcm).xunraisable).xexc_type)) ((xTypeError)))
                xtest_profile_enable_disable.write
                  [xself]
                    memory > xprof
                    seq > @
                      seq
                        xprof.write ((((xself).xprofilerclass)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xprof).xdisable)))
                        bogusForceDataize.write ((((xprof).xenable)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xsys).xgetprofile)) 0)) ((xprof)))
                        bogusForceDataize.write ((((xprof).xdisable)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xsys).xgetprofile)) 0)) ("None: is there a None literal in the EO language?"))
                xtest_profile_as_context_manager.write
                  [xself]
                    memory > xprof
                    seq > @
                      seq
                        xprof.write ((((xself).xprofilerclass)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xprof).xdisable)))
                        (((unsupported)) ((xprof)) ((x__enter__return_value)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((xprof)) ((x__enter__return_value)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((xsys).xgetprofile)) 0)) ((xprof)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xsys).xgetprofile)) 0)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_sort.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)) ((((unsupported)) ((xrc)) ((xout)) ((xerr)))) ((((xassert_python_failure)) ("-m") ("cProfile") ("-s") ("demo"))))
                      bogusForceDataize.write ((((xself).xassertGreater)) ((xrc)) (0))
                      bogusForceDataize.write ((((xself).xassertIn)) ("option -s: invalid choice: 'demo'") ((xerr)))
            xmain.write
              []
                seq > @
                  (((unsupported)) ("-r") (((xsys).xargv))).if
                    bogusForceDataize.write ((((xunittest).xmain)) 0)
                    bogusForceDataize.write (((xregenerate_expected_output)) ((x__file__)) ((xCProfileTest)))
            x_ProfileOutput.write (((unsupported)) 0)
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_stats"))) ((((unsupported)) 0)))
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_callers"))) ((((unsupported)) 0)))
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_callees"))) ((((unsupported)) 0)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xmain)) 0)