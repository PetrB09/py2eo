memory > xC
memory > xTest
memory > xlist
memory > xlocals
memory > xcheck_syntax_error
memory > xexec
memory > xrange
memory > xb
memory > xobj
memory > xlst
memory > xunittest
memory > xkwargs
memory > xNameError
memory > xz
memory > xValueError
memory > xdec
memory > xinc
memory > xeval
memory > xAdder
memory > xFoo
memory > xkind
memory > xprint
memory > xUnboundLocalError
memory > xException
memory > xnestedcell_get
memory > xX
memory > xhasattr
memory > xx
memory > xi
memory > xs
memory > xsys
memory > xTester
memory > xbad
memory > xweakref
memory > xgetattr
memory > xexc
memory > xy
memory > xTestClass
memory > xTypeError
memory > x__name__
[] > test_scope
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtestCellIsKwonlyArg
        memory > xtestGlobalInParallelNestedFunctions
        memory > xtestInteractionWithTraceFunc
        memory > xtestRecursion
        memory > xtestLocalsClass_WithTrace
        memory > xtestFreeVarInMethod
        memory > xtestUnboundLocal_AfterDel
        memory > xtestLambdas
        memory > xtestNonLocalGenerator
        memory > xtestNestingGlobalNoFree
        memory > xtestEvalExecFreeVars
        memory > xtestScopeOfGlobalStmt
        memory > xtestUnboundLocal_AugAssign
        memory > xtestLocalsClass
        memory > xtestMixedFreevarsAndCellvars
        memory > xtestNestingPlusFreeRefToGlobal
        memory > xtestEvalFreeVars
        memory > xtestLeaks
        memory > xtestExtraNesting
        memory > xtestComplexDefinitions
        memory > xtestNearestEnclosingScope
        memory > xtestFreeingCell
        memory > xtestNestedNonLocal
        memory > xtestClassAndGlobal
        memory > xtestCellLeak
        memory > xtestUnboundLocal
        memory > xtestSimpleNesting
        memory > xtestLocalsFunction
        memory > xtestTopIsNotSignificant
        memory > xtestNestingThroughClass
        memory > xtestBoundAndFree
        memory > xtestNonLocalClass
        memory > xtestNonLocalMethod
        memory > xtestSimpleAndRebinding
        memory > xtestClassNamespaceOverridesClosure
        memory > xtestUnoptimizedNamespaces
        memory > xtestListCompLocalVars
        memory > xtestNonLocalFunction
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtestSimpleNesting.write
                  [xself]
                    memory > xinc
                    memory > xplus10
                    memory > xmake_adder
                    seq > @
                      seq
                        xmake_adder.write
                          [xx]
                            memory > xadder
                            seq > @
                              seq
                                xadder.write
                                  [xy]
                                    seq > @
                                      (((unsupported)) (((xx).add (xy))))
                                (((unsupported)) ((xadder)))
                        xinc.write (((xmake_adder)) (1))
                        xplus10.write (((xmake_adder)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) ((2.neg)))) (8))
                xtestExtraNesting.write
                  [xself]
                    memory > xinc
                    memory > xplus10
                    memory > xmake_adder2
                    seq > @
                      seq
                        xmake_adder2.write
                          [xx]
                            memory > xextra
                            seq > @
                              seq
                                xextra.write
                                  []
                                    memory > xadder
                                    seq > @
                                      seq
                                        xadder.write
                                          [xy]
                                            seq > @
                                              (((unsupported)) (((xx).add (xy))))
                                        (((unsupported)) ((xadder)))
                                (((unsupported)) ((((xextra)) 0)))
                        xinc.write (((xmake_adder2)) (1))
                        xplus10.write (((xmake_adder2)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) ((2.neg)))) (8))
                xtestSimpleAndRebinding.write
                  [xself]
                    memory > xinc
                    memory > xmake_adder3
                    memory > xplus10
                    seq > @
                      seq
                        xmake_adder3.write
                          [xx]
                            memory > xadder
                            seq > @
                              seq
                                xadder.write
                                  [xy]
                                    seq > @
                                      (((unsupported)) (((xx).add (xy))))
                                xx.write ((xx).add 1)
                                (((unsupported)) ((xadder)))
                        xinc.write (((xmake_adder3)) (0))
                        xplus10.write (((xmake_adder3)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) ((2.neg)))) (8))
                xtestNestingGlobalNoFree.write
                  [xself]
                    memory > xglobal_x
                    memory > xadder
                    memory > xmake_adder4
                    seq > @
                      seq
                        xmake_adder4.write
                          []
                            memory > xnest
                            seq > @
                              seq
                                xnest.write
                                  []
                                    memory > xnest
                                    seq > @
                                      seq
                                        xnest.write
                                          []
                                            memory > xadder
                                            seq > @
                                              seq
                                                xadder.write
                                                  [xy]
                                                    seq > @
                                                      (((unsupported)) (((xglobal_x).add (xy))))
                                                (((unsupported)) ((xadder)))
                                        (((unsupported)) ((((xnest)) 0)))
                                (((unsupported)) ((((xnest)) 0)))
                        xglobal_x.write 1
                        xadder.write (((xmake_adder4)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xadder)) (1))) (2))
                        xglobal_x.write 10
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xadder)) ((2.neg)))) (8))
                xtestNestingThroughClass.write
                  [xself]
                    memory > xinc
                    memory > xmake_adder5
                    memory > xplus10
                    seq > @
                      seq
                        xmake_adder5.write
                          [xx]
                            memory > x__call__
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  x__call__.write
                                    [xself xy]
                                      seq > @
                                        (((unsupported)) (((xx).add (xy))))
                                (((unsupported)) ((((xAdder)) 0)))
                        xinc.write (((xmake_adder5)) (1))
                        xplus10.write (((xmake_adder5)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) ((2.neg)))) (8))
                xtestNestingPlusFreeRefToGlobal.write
                  [xself]
                    memory > xinc
                    memory > xplus10
                    memory > xmake_adder6
                    seq > @
                      seq
                        xmake_adder6.write
                          [xx]
                            memory > xglobal_nest_x
                            memory > xadder
                            seq > @
                              seq
                                (((unsupported)) 0)
                                xadder.write
                                  [xy]
                                    seq > @
                                      (((unsupported)) (((xglobal_nest_x).add (xy))))
                                xglobal_nest_x.write (xx)
                                (((unsupported)) ((xadder)))
                        xinc.write (((xmake_adder6)) (1))
                        xplus10.write (((xmake_adder6)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (11))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) ((2.neg)))) (8))
                xtestNearestEnclosingScope.write
                  [xself]
                    memory > xtest_func
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  [xy]
                                    memory > xx
                                    memory > xh
                                    seq > @
                                      seq
                                        xx.write 42
                                        xh.write
                                          [xz]
                                            seq > @
                                              (((unsupported)) (((xx).add (xz))))
                                        (((unsupported)) ((xh)))
                                (((unsupported)) ((((xg)) (2))))
                        xtest_func.write (((xf)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtest_func)) (5))) (47))
                xtestMixedFreevarsAndCellvars.write
                  [xself]
                    memory > xidentity
                    memory > xh
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xidentity.write
                          [xx]
                            seq > @
                              (((unsupported)) ((xx)))
                        xf.write
                          [xx xy xz]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  [xa xb xc]
                                    memory > xh
                                    memory > xy
                                    seq > @
                                      seq
                                        xa.write ((xa).add (xx))
                                        xh.write
                                          []
                                            seq > @
                                              (((unsupported)) ((((xidentity)) (((xz).mul ((xb).add (xy)))))))
                                        xy.write ((xc).add (xz))
                                        (((unsupported)) ((xh)))
                                (((unsupported)) ((xg)))
                        xg.write (((xf)) (1) (2) (3))
                        xh.write (((xg)) (2) (4) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) 0)) (39))
                xtestFreeVarInMethod.write
                  [xself]
                    memory > xactual_global
                    memory > xstr
                    memory > xt
                    memory > xtest
                    memory > xmethod_and_var
                    seq > @
                      seq
                        xtest.write
                          []
                            memory > xtest
                            memory > xstr
                            memory > xactual_global
                            memory > xmethod_and_var
                            seq > @
                              seq
                                xmethod_and_var.write "var"
                                (((unsupported)) 0)
                                  seq
                                    xmethod_and_var.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ("method"))
                                    xtest.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((xmethod_and_var)))
                                    xactual_global.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((((xstr)) ("global"))))
                                    xstr.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((((xstr)) ((xself)))))
                                (((unsupported)) ((((xTest)) 0)))
                        xt.write (((xtest)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xtest)) 0)) ("var"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xmethod_and_var)) 0)) ("method"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xactual_global)) 0)) ("global"))
                        xmethod_and_var.write "var"
                        (((unsupported)) 0)
                          seq
                            xmethod_and_var.write
                              [xself]
                                seq > @
                                  (((unsupported)) ("method"))
                            xtest.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((xmethod_and_var)))
                            xactual_global.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xstr)) ("global"))))
                            xstr.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xstr)) ((xself)))))
                        xt.write (((xTest)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xtest)) 0)) ("var"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xmethod_and_var)) 0)) ("method"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xt).xactual_global)) 0)) ("global"))
                xtestCellIsKwonlyArg.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          [xa]
                            memory > xbar
                            seq > @
                              (((unsupported)) 0)
                                xbar.write
                                  []
                                    seq > @
                                      (((unsupported)) (((xa).add 5)))
                                (((unsupported)) (((((xbar)) 0).add 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xfoo)) (42))) (50))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfoo)) 0)) (25))
                xtestRecursion.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xfact
                            seq > @
                              seq
                                xfact.write
                                  [xn]
                                    seq > @
                                      ((xn).eq 0).if
                                        (((unsupported)) (1))
                                        (((unsupported)) (((xn).mul (((xfact)) (((xn).sub 1))))))
                                ((xx).geq 0).if
                                  (((unsupported)) ((((xfact)) ((xx)))))
                                  (((unsupported)) ((((xValueError)) ("x must be >= 0"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (6))) (720))
                xtestUnoptimizedNamespaces.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xcheck_syntax_error)) ((xself)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcheck_syntax_error)) ((xself)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcheck_syntax_error)) ((xself)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcheck_syntax_error)) ((xself)) ((((unsupported)) 0)))
                xtestLambdas.write
                  [xself]
                    memory > xplus10
                    memory > xf3
                    memory > xinc
                    memory > xg
                    memory > xh
                    memory > xf2
                    memory > xf8
                    memory > xf1
                    memory > xglobal_x
                    seq > @
                      seq
                        xf1.write (((unsupported)) ((((unsupported)) (((xx).add (xy))))))
                        xinc.write (((xf1)) (1))
                        xplus10.write (((xf1)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) (5))) (15))
                        xf2.write (((unsupported)) ((((((unsupported)) ((((unsupported)) (((xx).add (xy))))))) 0)))
                        xinc.write (((xf2)) (1))
                        xplus10.write (((xf2)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xplus10)) (5))) (15))
                        xf3.write (((unsupported)) ((((unsupported)) (((xglobal_x).add (xy))))))
                        xglobal_x.write 1
                        xinc.write (((xf3)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) (2))) (3))
                        xf8.write (((unsupported)) ((((unsupported)) ((((unsupported)) (((xz).mul ((xb).add (xy)))))))))
                        xg.write (((xf8)) (1) (2) (3))
                        xh.write (((xg)) (2) (4) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) 0)) (18))
                xtestUnboundLocal.write
                  [xself]
                    memory > xerrorInInner
                    memory > xerrorInOuter
                    seq > @
                      seq
                        xerrorInOuter.write
                          []
                            memory > xinner
                            memory > xy
                            seq > @
                              seq
                                bogusForceDataize.write (((xprint)) ((xy)))
                                xinner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xy)))
                                xy.write 1
                        xerrorInInner.write
                          []
                            memory > xinner
                            memory > xy
                            seq > @
                              seq
                                xinner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xy)))
                                bogusForceDataize.write (((xinner)) 0)
                                xy.write 1
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnboundLocalError)) ((xerrorInOuter)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xNameError)) ((xerrorInInner)))
                xtestUnboundLocal_AfterDel.write
                  [xself]
                    memory > xerrorInInner
                    memory > xerrorInOuter
                    seq > @
                      seq
                        xerrorInOuter.write
                          []
                            memory > xinner
                            memory > xy
                            seq > @
                              seq
                                xy.write 1
                                (((unsupported)) ((((unsupported)) ((xy)))))
                                bogusForceDataize.write (((xprint)) ((xy)))
                                xinner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xy)))
                        xerrorInInner.write
                          []
                            memory > xinner
                            memory > xy
                            seq > @
                              seq
                                xinner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xy)))
                                xy.write 1
                                (((unsupported)) ((((unsupported)) ((xy)))))
                                bogusForceDataize.write (((xinner)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnboundLocalError)) ((xerrorInOuter)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xNameError)) ((xerrorInInner)))
                xtestUnboundLocal_AugAssign.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xexec)) ((((unsupported)) 0)) ((((unsupported)) ("fail") (((xself).xfail)))))
                xtestComplexDefinitions.write
                  [xself]
                    memory > xmakeReturner
                    memory > xmakeReturner2
                    seq > @
                      seq
                        xmakeReturner.write
                          []
                            memory > xreturner
                            seq > @
                              (((unsupported)) 0)
                                xreturner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xlst)))
                                (((unsupported)) ((xreturner)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xmakeReturner)) (1) (2) (3))) 0)) ((((unsupported)) (1) (2) (3))))
                        xmakeReturner2.write
                          []
                            memory > xreturner
                            seq > @
                              (((unsupported)) 0)
                                xreturner.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xkwargs)))
                                (((unsupported)) ((xreturner)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((((unsupported)) ((xmakeReturner2)) (11))) 0)) ("a"))) (11))
                xtestScopeOfGlobalStmt.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xexec)) ((((unsupported)) 0)))
                xtestLeaks.write
                  [xself]
                    memory > x__del__
                    memory > xf1
                    memory > xcount
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xcount.write 0
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xFoo).xcount)) (1))
                            x__del__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xFoo).xcount)) (1))
                        xf1.write
                          []
                            memory > xx
                            memory > xf2
                            seq > @
                              seq
                                xx.write (((xFoo)) 0)
                                xf2.write
                                  []
                                    seq > @
                                      (((unsupported)) ((xx)))
                                bogusForceDataize.write (((xf2)) 0)
                        (((unsupported)) ((xi)) ((((xrange)) (100))))
                          bogusForceDataize.write (((xf1)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xFoo).xcount)) (0))
                xtestClassAndGlobal.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xexec)) ((((unsupported)) 0)))
                xtestLocalsFunction.write
                  [xself]
                    memory > xd
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  [xy]
                                    memory > xh
                                    memory > xw
                                    seq > @
                                      seq
                                        xh.write
                                          [xz]
                                            seq > @
                                              (((unsupported)) (((xy).add (xz))))
                                        xw.write ((xx).add (xy))
                                        (((unsupported)) ((xy)) (3))
                                        (((unsupported)) ((((xlocals)) 0)))
                                (((unsupported)) ((xg)))
                        xd.write (((((xf)) (2))) (4))
                        bogusForceDataize.write ((((xself).xassertIn)) ("h") ((xd)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) ((xd)) ("h"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ("x") (2) ("y") (7) ("w") (6))))
                xtestLocalsClass.write
                  [xself]
                    memory > xvarnames
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xm
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  seq
                                    xx.write 12
                                    xm.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((xx)))
                                    bogusForceDataize.write (((xlocals)) 0)
                                (((unsupported)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf)) (1)).xx)) (12))
                        xf.write
                          [xx]
                            memory > xy
                            memory > xz
                            memory > xm
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  seq
                                    xy.write (xx)
                                    xm.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((xx)))
                                    xz.write (((xlist)) ((((xlocals)) 0)))
                                (((unsupported)) ((xC)))
                        xvarnames.write ((((xf)) (1)).xz)
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("x") ((xvarnames)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("y") ((xvarnames)))
                xtestLocalsClass_WithTrace.write
                  [xself]
                    memory > xx
                    memory > xf
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xsys).xsettrace)) (((((xsys).xgettrace)) 0)))
                        bogusForceDataize.write ((((xsys).xsettrace)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                        xx.write 12
                        (((unsupported)) 0)
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (12))
                xtestBoundAndFree.write
                  [xself]
                    memory > xf
                    memory > xinst
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xm
                            memory > xa
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  seq
                                    xm.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((xx)))
                                    xa.write (xx)
                                (((unsupported)) ((xC)))
                        xinst.write (((((xf)) (3))) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xinst).xa)) (((((xinst).xm)) 0)))
                xtestInteractionWithTraceFunc.write
                  [xself]
                    memory > xtracer
                    memory > xadaptgetter
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xtracer.write
                          [xa xb xc]
                            seq > @
                              (((unsupported)) ((xtracer)))
                        xadaptgetter.write
                          [xname xklass xgetter]
                            memory > xdes
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xkind)) ((xdes)))) ((xgetter)))
                                ((xkind).eq 1).if
                                  seq
                                    ((xdes).eq "").if
                                      xdes.write ("_%s__%s".mod (((unsupported)) (((xklass).x__name__)) ((xname))))
                                    (((unsupported)) ((((unsupported)) ((((xgetattr)) ((xobj)) ((xdes)))))))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xsys).xsettrace)) (((((xsys).xgettrace)) 0)))
                        bogusForceDataize.write ((((xsys).xsettrace)) ((xtracer)))
                        bogusForceDataize.write (((xadaptgetter)) ("foo") ((xTestClass)) ((((unsupported)) (1) (""))))
                        bogusForceDataize.write ((((xsys).xsettrace)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xsys).xsettrace)))
                xtestEvalExecFreeVars.write
                  [xself]
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) ((((unsupported)) (((xx).add 1)))))
                        xg.write (((xf)) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xeval)) (((xg).x__code__)))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xexec)) (((xg).x__code__)) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xself).xfail)) ("exec should have failed, because code contained free vars"))
                xtestListCompLocalVars.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        (((unsupported)) ((xNameError)))
                          bogusForceDataize.write (((xprint)) ((xbad)))
                          bogusForceDataize.write (((xprint)) ("bad should not be defined"))
                        xx.write
                          []
                            seq > @
                              (((unsupported)) ((xbad)) ((xs)) ("a b") ((xbad)) (((((xs).xsplit)) 0)))
                        bogusForceDataize.write (((xx)) 0)
                        (((unsupported)) ((xNameError)))
                          bogusForceDataize.write (((xprint)) ((xbad)))
                xtestEvalFreeVars.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  []
                                    seq > @
                                      seq
                                        unsupported
                                        bogusForceDataize.write (((xeval)) ("x + 1"))
                                (((unsupported)) ((xg)))
                        bogusForceDataize.write (((((xf)) (4))) 0)
                xtestFreeingCell.write
                  [xself]
                    memory > x__del__
                    seq > @
                      (((unsupported)) 0)
                        x__del__.write
                          [xself]
                            seq > @
                              bogusForceDataize.write (((xnestedcell_get)) 0)
                xtestNonLocalFunction.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xinc
                            memory > xdec
                            seq > @
                              seq
                                xinc.write
                                  []
                                    seq > @
                                      seq
                                        (((unsupported)) 0)
                                        (((unsupported)) ((xx)) (1))
                                        (((unsupported)) ((xx)))
                                xdec.write
                                  []
                                    seq > @
                                      seq
                                        (((unsupported)) 0)
                                        (((unsupported)) ((xx)) (1))
                                        (((unsupported)) ((xx)))
                                (((unsupported)) ((((unsupported)) ((xinc)) ((xdec)))))
                        (((unsupported)) ((((unsupported)) ((xinc)) ((xdec)))) ((((xf)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xinc)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdec)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdec)) 0)) (0))
                xtestNonLocalMethod.write
                  [xself]
                    memory > xc
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xinc
                            memory > xdec
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  seq
                                    xinc.write
                                      [xself]
                                        seq > @
                                          seq
                                            (((unsupported)) 0)
                                            (((unsupported)) ((xx)) (1))
                                            (((unsupported)) ((xx)))
                                    xdec.write
                                      [xself]
                                        seq > @
                                          seq
                                            (((unsupported)) 0)
                                            (((unsupported)) ((xx)) (1))
                                            (((unsupported)) ((xx)))
                                (((unsupported)) ((((xc)) 0)))
                        xc.write (((xf)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xinc)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xinc)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xdec)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xdec)) 0)) (0))
                xtestGlobalInParallelNestedFunctions.write
                  [xself]
                    memory > xglobal_ns
                    memory > xlocal_ns
                    seq > @
                      seq
                        xlocal_ns.write (((unsupported)) 0)
                        xglobal_ns.write (((unsupported)) 0)
                        bogusForceDataize.write (((xexec)) ((((unsupported)) 0)) ((xlocal_ns)) ((xglobal_ns)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (2) ((((unsupported)) ((xglobal_ns)) ("result2"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (9) ((((unsupported)) ((xglobal_ns)) ("result9"))))
                xtestNonLocalClass.write
                  [xself]
                    memory > xc
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xget
                            seq > @
                              seq
                                (((unsupported)) 0)
                                  seq
                                    (((unsupported)) 0)
                                    (((unsupported)) ((xx)) (1))
                                    xget.write
                                      [xself]
                                        seq > @
                                          (((unsupported)) ((xx)))
                                (((unsupported)) ((((xc)) 0)))
                        xc.write (((xf)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xget)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("x") ((((xc).x__class__).x__dict__)))
                xtestNonLocalGenerator.write
                  [xself]
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  [xy]
                                    seq > @
                                      seq
                                        (((unsupported)) 0)
                                        (((unsupported)) ((xi)) ((((xrange)) ((xy)))))
                                          seq
                                            (((unsupported)) ((xx)) (1))
                                            (((unsupported)) ((xx)))
                                (((unsupported)) ((xg)))
                        xg.write (((xf)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xg)) (5))))) ((((unsupported)) (1) (2) (3) (4) (5))))
                xtestNestedNonLocal.write
                  [xself]
                    memory > xh
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            memory > xg
                            seq > @
                              seq
                                xg.write
                                  []
                                    memory > xh
                                    seq > @
                                      seq
                                        (((unsupported)) 0)
                                        (((unsupported)) ((xx)) (2))
                                        xh.write
                                          []
                                            seq > @
                                              seq
                                                (((unsupported)) 0)
                                                (((unsupported)) ((xx)) (4))
                                                (((unsupported)) ((xx)))
                                        (((unsupported)) ((xh)))
                                (((unsupported)) ((xg)))
                        xg.write (((xf)) (1))
                        xh.write (((xg)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) 0)) (3))
                xtestTopIsNotSignificant.write
                  [xself]
                    memory > xtop
                    memory > xb
                    seq > @
                      seq
                        xtop.write
                          [xa]
                            seq > @
                        xb.write
                          []
                            seq > @
                              (((unsupported)) 0)
                xtestClassNamespaceOverridesClosure.write
                  [xself]
                    memory > xx
                    memory > xy
                    seq > @
                      seq
                        xx.write 42
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) ((((unsupported)) ((((xlocals)) 0)) ("x"))) (43))
                            xy.write (xx)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xX).xy)) (43))
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) ((((unsupported)) ((((xlocals)) 0)) ("x"))) (43))
                            (((unsupported)) ((((unsupported)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xX)) ("x"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                xtestCellLeak.write
                  [xself]
                    memory > xref
                    memory > xdig
                    memory > xtester
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                          xdig.write
                            [xself]
                              seq > @
                                seq
                                  0.if
                                    (((unsupported)) ((xself)))
                                  (((unsupported)) ((xException)))
                                    unsupported
                                    (((unsupported)) (((xself).xexc)) ((xexc)))
                                  xself.write "None: is there a None literal in the EO language?"
                        xtester.write (((xTester)) 0)
                        bogusForceDataize.write ((((xtester).xdig)) 0)
                        xref.write ((((xweakref).xref)) ((xtester)))
                        (((unsupported)) ((((unsupported)) ((xtester)))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xref)) 0)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)