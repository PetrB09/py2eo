memory > xAttributeError
memory > xValueError
memory > xstr
memory > xrange
memory > xIndexError
memory > xtype
memory > xrepr
memory > xsorted
memory > xmap
memory > xSeq2
memory > xC
memory > xOperatorTestCase
memory > xpickle
memory > xlist
memory > xZeroDivisionError
memory > xT
memory > xKeyError
memory > xproto
memory > xBadIterable
memory > xX
memory > xSeq1
memory > xsupport
memory > xsys
memory > xkwds
memory > xM
memory > xtuple
memory > xNotImplemented
memory > xargs
memory > xLookupError
memory > xdir
memory > xslice
memory > xgetattr
memory > xSyntaxError
memory > xOperatorPickleTestCase
memory > xiter
memory > xname
memory > xunittest
memory > xobject
memory > xA
memory > xlen
memory > xdict
memory > xTypeError
memory > x__name__
[] > test_operator
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_lt
        memory > xtest_ne
        memory > xtest_bitwise_xor
        memory > xtest_matmul
        memory > xtest_truth
        memory > xmodule
        memory > x__init__
        memory > xtest_setitem
        memory > xtest_bitwise_or
        memory > xtest_delitem
        memory > xtest_truediv
        memory > xtest_eq
        memory > xtest_itemgetter
        memory > xtest_methodcaller
        memory > xcopy
        memory > xtest_floordiv
        memory > xtest_bitwise_and
        memory > xtest_attrgetter
        memory > xtest_gt
        memory > xpy_operator
        memory > x__iter__
        memory > xtest_neg
        memory > x__rmul__
        memory > xtest_length_hint
        memory > xtest_add
        memory > xtest_rshift
        memory > xtest_dunder_is_original
        memory > x__getitem__
        memory > xtest_inplace
        memory > xmodule2
        memory > xc_operator
        memory > xtest_invert
        memory > xtest_lshift
        memory > xtest_pos
        memory > xtest_le
        memory > xtest_getitem
        memory > xtest_pow
        memory > xtest_ge
        memory > xtest_contains
        memory > xtest_sub
        memory > xtest_mul
        memory > xtest_mod
        memory > xtest_is
        memory > xtest_countOf
        memory > xtest_indexOf
        memory > x__add__
        memory > xtest_concat
        memory > xtest_is_not
        memory > x__len__
        memory > x__mul__
        memory > xtest_abs
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xpy_operator.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("operator") ((((unsupported)) ("_operator"))))
            xc_operator.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("operator") ((((unsupported)) ("_operator"))))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xlst]
                    seq > @
                      (((unsupported)) (((xself).xlst)) ((xlst)))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xlen)) (((xself).xlst)))))
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)) ((((unsupported)) (((xself).xlst)) ((xi)))))
                x__add__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xlst).add ((xother).xlst))))
                x__mul__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xlst).mul (xother))))
                x__rmul__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((xother).mul ((xself).xlst))))
            (((unsupported)) ((xobject)))
              seq
                x__init__.write
                  [xself xlst]
                    seq > @
                      (((unsupported)) (((xself).xlst)) ((xlst)))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xlen)) (((xself).xlst)))))
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)) ((((unsupported)) (((xself).xlst)) ((xi)))))
                x__add__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xlst).add ((xother).xlst))))
                x__mul__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xlst).mul (xother))))
                x__rmul__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) (((xother).mul ((xself).xlst))))
            (((unsupported)) 0)
              x__iter__.write
                [xself]
                  seq > @
                    (((unsupported)) ((xZeroDivisionError)))
            (((unsupported)) 0)
              seq
                xtest_lt.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xlt)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xlt)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xlt)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xlt)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xlt)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xlt)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xlt)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xlt)) (1) (2.0))))
                xtest_le.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xle)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xle)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xle)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xle)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xle)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xle)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xle)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xle)) (1) (2.0))))
                xtest_eq.write
                  [xself]
                    memory > xoperator
                    memory > x__eq__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xobject)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xSyntaxError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xeq)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((xoperator).xeq)) ((((xC)) 0)) ((((xC)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xeq)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xeq)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xeq)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xeq)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xeq)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xeq)) (1) (2.0))))
                xtest_ne.write
                  [xself]
                    memory > xoperator
                    memory > x__ne__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xobject)))
                          x__ne__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xSyntaxError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xne)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((xoperator).xne)) ((((xC)) 0)) ((((xC)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xne)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xne)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xne)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xne)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xne)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xne)) (1) (2.0))))
                xtest_ge.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xge)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xge)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xge)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xge)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xge)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xge)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xge)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xge)) (1) (2.0))))
                xtest_gt.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xgt)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xgt)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xgt)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xgt)) (1) (0.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xgt)) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xgt)) (1) (1.0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xgt)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xgt)) (1) (2.0))))
                xtest_abs.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xabs)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xabs)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xabs)) ((1.neg)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xabs)) (1))) (1))
                xtest_add.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xadd)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xadd)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xadd)) (3) (4))) (7))
                xtest_bitwise_and.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xand_)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xand_)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xand_)) (15) (10))) (10))
                xtest_concat.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xconcat)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xconcat)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xconcat)) ("py") ("thon"))) ("python"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xconcat)) ((((unsupported)) (1) (2))) ((((unsupported)) (3) (4))))) ((((unsupported)) (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xconcat)) ((((xSeq1)) ((((unsupported)) (5) (6))))) ((((xSeq1)) ((((unsupported)) (7))))))) ((((unsupported)) (5) (6) (7))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xconcat)) ((((xSeq2)) ((((unsupported)) (5) (6))))) ((((xSeq2)) ((((unsupported)) (7))))))) ((((unsupported)) (5) (6) (7))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xconcat)) (13) (29))
                xtest_countOf.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xcountOf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xcountOf)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xoperator).xcountOf)) ((((xBadIterable)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xcountOf)) ((((unsupported)) (1) (2) (1) (3) (1) (4))) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xcountOf)) ((((unsupported)) (1) (2) (1) (3) (1) (4))) (5))) (0))
                xtest_delitem.write
                  [xself]
                    memory > xoperator
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        xa.write (((unsupported)) (4) (3) (2) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xdelitem)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xdelitem)) ((xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xoperator).xdelitem)) ((xa)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (4) (2) (1))))
                xtest_floordiv.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xfloordiv)) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xfloordiv)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xfloordiv)) (5) (2))) (2))
                xtest_truediv.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xtruediv)) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xtruediv)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xtruediv)) (5) (2))) (2.5))
                xtest_getitem.write
                  [xself]
                    memory > xoperator
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        xa.write (((xrange)) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xgetitem)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xgetitem)) ((xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xgetitem)) ((xa)) (2))) (2))
                xtest_indexOf.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xindexOf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xindexOf)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xoperator).xindexOf)) ((((xBadIterable)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xindexOf)) ((((unsupported)) (4) (3) (2) (1))) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xoperator).xindexOf)) ((((unsupported)) (4) (3) (2) (1))) (0))
                xtest_invert.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xinvert)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xinvert)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xinv)) (4))) ((5.neg)))
                xtest_lshift.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xlshift)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xlshift)) ("None: is there a None literal in the EO language?") (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlshift)) (5) (1))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlshift)) (5) (0))) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xoperator).xlshift)) (2) ((1.neg)))
                xtest_mod.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmod)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmod)) ("None: is there a None literal in the EO language?") (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xmod)) (5) (2))) (1))
                xtest_mul.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmul)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmul)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xmul)) (5) (2))) (10))
                xtest_matmul.write
                  [xself]
                    memory > xoperator
                    memory > x__matmul__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmatmul)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmatmul)) (42) (42))
                        (((unsupported)) 0)
                          x__matmul__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (((xother).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xM)) 0)) (42))) (41))
                xtest_neg.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xneg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xneg)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xneg)) (5))) ((5.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xneg)) ((5.neg)))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xneg)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xneg)) ((0.neg)))) (0))
                xtest_bitwise_or.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xor_)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xor_)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xor_)) (10) (5))) (15))
                xtest_pos.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpos)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpos)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xpos)) (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xpos)) ((5.neg)))) ((5.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xpos)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xpos)) ((0.neg)))) (0))
                xtest_pow.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpow)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpow)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xpow)) (3) (5))) ((((unsupported)) (3) (5))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpow)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xpow)) (1) (2) (3))
                xtest_rshift.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xrshift)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xrshift)) ("None: is there a None literal in the EO language?") (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xrshift)) (5) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xrshift)) (5) (0))) (5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xoperator).xrshift)) (2) ((1.neg)))
                xtest_contains.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xcontains)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xcontains)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((xoperator).xcontains)) ((((xBadIterable)) 0)) (1))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xcontains)) ((((xrange)) (4))) (2))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xcontains)) ((((xrange)) (4))) (5))))
                xtest_setitem.write
                  [xself]
                    memory > xoperator
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        xa.write (((xlist)) ((((xrange)) (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xsetitem)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xsetitem)) ((xa)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xoperator).xsetitem)) ((xa)) (0) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((((unsupported)) (2) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) (((xoperator).xsetitem)) ((xa)) (4) (2))
                xtest_sub.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xsub)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xsub)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xsub)) (5) (2))) (3))
                xtest_truth.write
                  [xself]
                    memory > xoperator
                    memory > x__bool__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xobject)))
                          x__bool__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xSyntaxError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xtruth)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((xoperator).xtruth)) ((((xC)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xtruth)) (5))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xtruth)) ((((unsupported)) (0))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xtruth)) (0))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xtruth)) ((((unsupported)) 0)))))
                xtest_bitwise_xor.write
                  [xself]
                    memory > xoperator
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xxor)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xxor)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xxor)) (11) (12))) (7))
                xtest_is.write
                  [xself]
                    memory > xoperator
                    memory > xc
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xa)) ((xb)) ("xyzpdq"))
                        xc.write ((((unsupported)) ((xa)) ((((unsupported)) (3)))).add (((unsupported)) ((xb)) ((((unsupported)) (3)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xis_)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xis_)) ((xa)) ((xb)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xis_)) ((xa)) ((xc)))))
                xtest_is_not.write
                  [xself]
                    memory > xoperator
                    memory > xc
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xa)) ((xb)) ("xyzpdq"))
                        xc.write ((((unsupported)) ((xa)) ((((unsupported)) (3)))).add (((unsupported)) ((xb)) ((((unsupported)) (3)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xis_not)))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xoperator).xis_not)) ((xa)) ((xb)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xoperator).xis_not)) ((xa)) ((xc)))))
                xtest_attrgetter.write
                  [xself]
                    memory > xrecord
                    memory > x__getattr__
                    memory > xf
                    memory > xoperator
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) 0)
                        xa.write (((xA)) 0)
                        (((unsupported)) (((xa).xname)) ("arthur"))
                        xf.write ((((xoperator).xattrgetter)) ("name"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ("arthur"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) ("dent"))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) ("dent"))
                        xf.write ((((xoperator).xattrgetter)) ("rank"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xf)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xattrgetter)) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xattrgetter)))
                        xrecord.write (((xA)) 0)
                        (((unsupported)) (((xrecord).xx)) ("X"))
                        (((unsupported)) (((xrecord).xy)) ("Y"))
                        (((unsupported)) (((xrecord).xz)) ("Z"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xattrgetter)) ("x") ("z") ("y"))) ((xrecord)))) ((((unsupported)) ("X") ("Z") ("Y"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xattrgetter)) ((((unsupported)) ("x") ((((unsupported)) 0)) ("y"))))
                        (((unsupported)) ((xobject)))
                          x__getattr__.write
                            [xself xname]
                              seq > @
                                (((unsupported)) ((xSyntaxError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((((xoperator).xattrgetter)) ("foo"))) ((((xC)) 0)))
                        xa.write (((xA)) 0)
                        (((unsupported)) (((xa).xname)) ("arthur"))
                        (((unsupported)) (((xa).xchild)) ((((xA)) 0)))
                        (((unsupported)) ((((xa).xchild).xname)) ("thomas"))
                        xf.write ((((xoperator).xattrgetter)) ("child.name"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ("thomas"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xf)) (((xa).xchild)))
                        xf.write ((((xoperator).xattrgetter)) ("name") ("child.name"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ((((unsupported)) ("arthur") ("thomas"))))
                        xf.write ((((xoperator).xattrgetter)) ("name") ("child.name") ("child.child.name"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xf)) ((xa)))
                        xf.write ((((xoperator).xattrgetter)) ("child."))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xf)) ((xa)))
                        xf.write ((((xoperator).xattrgetter)) (".child"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xf)) ((xa)))
                        (((unsupported)) ((((xa).xchild).xchild)) ((((xA)) 0)))
                        (((unsupported)) (((((xa).xchild).xchild).xname)) ("johnson"))
                        xf.write ((((xoperator).xattrgetter)) ("child.child.name"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ("johnson"))
                        xf.write ((((xoperator).xattrgetter)) ("name") ("child.name") ("child.child.name"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ((((unsupported)) ("arthur") ("thomas") ("johnson"))))
                xtest_itemgetter.write
                  [xself]
                    memory > xd
                    memory > xdata
                    memory > xgetcount
                    memory > xinventory
                    memory > xt
                    memory > x__getitem__
                    memory > xf
                    memory > xoperator
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        xa.write "ABCDE"
                        xf.write ((((xoperator).xitemgetter)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ("C"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) (3))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) (3))
                        xf.write ((((xoperator).xitemgetter)) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((xf)) ((xa)))
                        (((unsupported)) ((xobject)))
                          x__getitem__.write
                            [xself xname]
                              seq > @
                                (((unsupported)) ((xSyntaxError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((((xoperator).xitemgetter)) (42))) ((((xC)) 0)))
                        xf.write ((((xoperator).xitemgetter)) ("name"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xitemgetter)))
                        xd.write (((unsupported)) ((xdict)) ("val"))
                        xf.write ((((xoperator).xitemgetter)) ("key"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xd)))) ("val"))
                        xf.write ((((xoperator).xitemgetter)) ("nonkey"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) ((xf)) ((xd)))
                        xinventory.write (((unsupported)) ((((unsupported)) ("apple") (3))) ((((unsupported)) ("banana") (2))) ((((unsupported)) ("pear") (5))) ((((unsupported)) ("orange") (1))))
                        xgetcount.write ((((xoperator).xitemgetter)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xmap)) ((xgetcount)) ((xinventory)))))) ((((unsupported)) (3) (2) (5) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xsorted)) ((xinventory)) ((xgetcount)))) ((((unsupported)) ((((unsupported)) ("orange") (1))) ((((unsupported)) ("banana") (2))) ((((unsupported)) ("apple") (3))) ((((unsupported)) ("pear") (5))))))
                        xdata.write (((xlist)) ((((xmap)) ((xstr)) ((((xrange)) (20))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) (2) (10) (5))) ((xdata)))) ((((unsupported)) ("2") ("10") ("5"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((((xoperator).xitemgetter)) (2) ("x") (5))) ((xdata)))
                        xt.write (((xtuple)) ("abcde"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) ((1.neg)))) ((xt)))) ("e"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) ((((xslice)) (2) (4))))) ((xt)))) ((((unsupported)) ("c") ("d"))))
                        (((unsupported)) ((xtuple)))
                          seq
                            unsupported
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) (0))) ((((xT)) ("abc"))))) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) (0))) ((((unsupported)) ("a") ("b") ("c"))))) ("a"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xoperator).xitemgetter)) (0))) ((((xrange)) (100) (200))))) (100))
                xtest_methodcaller.write
                  [xself]
                    memory > xbar
                    memory > xbaz
                    memory > xf
                    memory > xoperator
                    memory > xfoo
                    memory > xa
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmethodcaller)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xoperator).xmethodcaller)) (12))
                        (((unsupported)) 0)
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((((unsupported)) ((xargs)) (0)).add (((unsupported)) ((xargs)) (1)))))
                            xbar.write
                              [xself xf]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xf)))
                            xbaz.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) ((((unsupported)) ((xkwds)) ("name"))) ((((unsupported)) ((xkwds)) ("self"))))))
                        xa.write (((xA)) 0)
                        xf.write ((((xoperator).xmethodcaller)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xIndexError)) ((xf)) ((xa)))
                        xf.write ((((xoperator).xmethodcaller)) ("foo") (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) (3))
                        (((unsupported)) (((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) (3))
                        xf.write ((((xoperator).xmethodcaller)) ("bar"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xf)) ((xa)) ((xa)))
                        xf.write (((unsupported)) (((xoperator).xmethodcaller)) ("bar") (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) (5))
                        xf.write (((unsupported)) (((xoperator).xmethodcaller)) ("baz") ("spam") ("eggs"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xa)))) ((((unsupported)) ("spam") ("eggs"))))
                xtest_inplace.write
                  [xself]
                    memory > xc
                    memory > x__ixor__
                    memory > x__itruediv__
                    memory > x__imatmul__
                    memory > x__ifloordiv__
                    memory > xoperator
                    memory > x__imod__
                    memory > x__ilshift__
                    memory > x__ipow__
                    memory > x__iadd__
                    memory > x__iand__
                    memory > x__ior__
                    memory > x__isub__
                    memory > x__getitem__
                    memory > x__irshift__
                    memory > x__imul__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xobject)))
                          seq
                            x__iadd__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("iadd"))
                            x__iand__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("iand"))
                            x__ifloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("ifloordiv"))
                            x__ilshift__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("ilshift"))
                            x__imod__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("imod"))
                            x__imul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("imul"))
                            x__imatmul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("imatmul"))
                            x__ior__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("ior"))
                            x__ipow__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("ipow"))
                            x__irshift__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("irshift"))
                            x__isub__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("isub"))
                            x__itruediv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("itruediv"))
                            x__ixor__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ("ixor"))
                            x__getitem__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) (5))
                        xc.write (((xC)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xiadd)) ((xc)) (5))) ("iadd"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xiand)) ((xc)) (5))) ("iand"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xifloordiv)) ((xc)) (5))) ("ifloordiv"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xilshift)) ((xc)) (5))) ("ilshift"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).ximod)) ((xc)) (5))) ("imod"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).ximul)) ((xc)) (5))) ("imul"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).ximatmul)) ((xc)) (5))) ("imatmul"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xior)) ((xc)) (5))) ("ior"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xipow)) ((xc)) (5))) ("ipow"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xirshift)) ((xc)) (5))) ("irshift"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xisub)) ((xc)) (5))) ("isub"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xitruediv)) ((xc)) (5))) ("itruediv"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xixor)) ((xc)) (5))) ("ixor"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xiconcat)) ((xc)) ((xc)))) ("iadd"))
                xtest_length_hint.write
                  [xself]
                    memory > xoperator
                    memory > x__length_hint__
                    memory > x__init__
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__length_hint__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xtype)) (((xself).xvalue)))) ((xtype))).if
                                    (((unsupported)) (((xself).xvalue)))
                                    (((unsupported)) (((xself).xvalue)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlength_hint)) ((((unsupported)) 0)) (2))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlength_hint)) ((((xiter)) ((((unsupported)) (1) (2) (3))))))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlength_hint)) ((((xX)) (2))))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlength_hint)) ((((xX)) ((xNotImplemented)))) (4))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xoperator).xlength_hint)) ((((xX)) ((xTypeError)))) (12))) (12))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write ((((xoperator).xlength_hint)) ((((xX)) ("abc"))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xoperator).xlength_hint)) ((((xX)) ((2.neg)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xLookupError)))))
                          bogusForceDataize.write ((((xoperator).xlength_hint)) ((((xX)) ((xLookupError)))))
                xtest_dunder_is_original.write
                  [xself]
                    memory > xoperator
                    memory > xorig
                    memory > xdunder
                    memory > xnames
                    seq > @
                      seq
                        xoperator.write ((xself).xmodule)
                        xnames.write (((unsupported)) ((xname)) ((xname)) ((((xdir)) ((xoperator)))) ((((((xname).xstartswith)) ("_")).not)))
                        (((unsupported)) ((xname)) ((xnames)))
                          seq
                            xorig.write (((xgetattr)) ((xoperator)) ((xname)))
                            xdunder.write (((xgetattr)) ((xoperator)) ((("__".add ((((xname).xstrip)) ("_"))).add "__")) ("None: is there a None literal in the EO language?"))
                            (xdunder).if
                              bogusForceDataize.write ((((xself).xassertIs)) ((xdunder)) ((xorig)))
            (((unsupported)) ((xOperatorTestCase)) (((xunittest).xTestCase)))
              xmodule.write (xpy_operator)
            (((unsupported)) ((xOperatorTestCase)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_operator)) ("requires _operator"))))
              xmodule.write (xc_operator)
            (((unsupported)) 0)
              seq
                xcopy.write
                  [xself xobj xproto]
                    memory > xpickled
                    seq > @
                      seq
                        (((unsupported)) (((((xsupport).xswap_item)) (((xsys).xmodules)) ("operator") (((xself).xmodule)))))
                          xpickled.write ((((xpickle).xdumps)) ((xobj)) ((xproto)))
                        (((unsupported)) (((((xsupport).xswap_item)) (((xsys).xmodules)) ("operator") (((xself).xmodule2)))))
                          (((unsupported)) (((((xpickle).xloads)) ((xpickled)))))
                xtest_attrgetter.write
                  [xself]
                    memory > xf2
                    memory > xattrgetter
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        xattrgetter.write (((xself).xmodule).xattrgetter)
                        (((unsupported)) 0)
                        xa.write (((xA)) 0)
                        (((unsupported)) (((xa).xx)) ("X"))
                        (((unsupported)) (((xa).xy)) ("Y"))
                        (((unsupported)) (((xa).xz)) ("Z"))
                        (((unsupported)) (((xa).xt)) ((((xA)) 0)))
                        (((unsupported)) ((((xa).xt).xu)) ((((xA)) 0)))
                        (((unsupported)) (((((xa).xt).xu).xv)) ("V"))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)))))
                            seq
                              xf.write (((xattrgetter)) ("x"))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((xattrgetter)) ("x") ("y") ("z"))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((xattrgetter)) ("t.u.v"))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                xtest_itemgetter.write
                  [xself]
                    memory > xf2
                    memory > xitemgetter
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        xitemgetter.write (((xself).xmodule).xitemgetter)
                        xa.write "ABCDE"
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)))))
                            seq
                              xf.write (((xitemgetter)) (2))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((xitemgetter)) (2) (0) (4))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                xtest_methodcaller.write
                  [xself]
                    memory > xbar
                    memory > xf2
                    memory > xbaz
                    memory > xf
                    memory > xmethodcaller
                    memory > xfoo
                    memory > xa
                    seq > @
                      seq
                        xmethodcaller.write (((xself).xmodule).xmethodcaller)
                        (((unsupported)) 0)
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((((unsupported)) ((xargs)) (0)).add (((unsupported)) ((xargs)) (1)))))
                            xbar.write
                              [xself xf]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xf)))
                            xbaz.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((unsupported)) ((((unsupported)) ((xkwds)) ("name"))) ((((unsupported)) ((xkwds)) ("self"))))))
                        xa.write (((xA)) 0)
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)))))
                            seq
                              xf.write (((xmethodcaller)) ("bar"))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((xmethodcaller)) ("foo") (1) (2))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((unsupported)) ((xmethodcaller)) ("bar") (5))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf2)))) ((((xrepr)) ((xf)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
                              xf.write (((unsupported)) ((xmethodcaller)) ("baz") ("eggs") ("spam"))
                              xf2.write ((((xself).xcopy)) ((xf)) ((xproto)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xf2)) ((xa)))) ((((xf)) ((xa)))))
            (((unsupported)) ((xOperatorPickleTestCase)) (((xunittest).xTestCase)))
              seq
                xmodule.write (xpy_operator)
                xmodule2.write (xpy_operator)
            (((unsupported)) ((xOperatorPickleTestCase)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_operator)) ("requires _operator"))))
              seq
                xmodule.write (xpy_operator)
                xmodule2.write (xc_operator)
            (((unsupported)) ((xOperatorPickleTestCase)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_operator)) ("requires _operator"))))
              seq
                xmodule.write (xc_operator)
                xmodule2.write (xpy_operator)
            (((unsupported)) ((xOperatorPickleTestCase)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_operator)) ("requires _operator"))))
              seq
                xmodule.write (xc_operator)
                xmodule2.write (xc_operator)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)