memory > xk
memory > xAlwaysEqual
memory > xt
memory > xrange
memory > xb
memory > xBadCmp
memory > xsys
memory > xslice
memory > xiter
memory > xunittest
memory > xC2
memory > xAttributeError
memory > xC3
memory > xstep
memory > xpickle
memory > xlist
memory > xRuntimeError
memory > xIX
memory > xenumerate
memory > xIN
memory > xValueError
memory > xIndexError
memory > xStopIteration
memory > xstart
memory > xproto
memory > xbase
memory > xreversed
memory > xtype
memory > xrepr
memory > xint
memory > xException
memory > xOverflowError
memory > xBadExc
memory > xr
memory > xx
memory > xend
memory > xI
memory > xi
memory > xM
memory > xtuple
memory > xitertools
memory > xC1
memory > xy
memory > xhash
memory > xnext
memory > xmap
memory > xjiggle
memory > xobject
memory > xj
memory > xlen
memory > xTypeError
memory > x__name__
memory > xa
[] > test_range
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_large_exhausted_iterator_pickling
        memory > xpyrange
        memory > xpyrange_reversed
        memory > xtest_index
        memory > xtest_reverse_iteration
        memory > xtest_exhausted_iterator_pickling
        memory > xassert_iterators_equal
        memory > xtest_issue11845
        memory > xtest_comparison
        memory > xtest_strided_limits
        memory > xtest_range_iterators
        memory > xtest_types
        memory > xtest_range
        memory > xtest_user_index_method
        memory > xtest_repr
        memory > xassert_attrs
        memory > xtest_pickling
        memory > xtest_count
        memory > xtest_large_range
        memory > xtest_odd_bug
        memory > xtest_contains
        memory > xtest_large_operands
        memory > xtest_iterator_pickling
        memory > xtest_attributes
        memory > xtest_invalid_invocation
        memory > xtest_empty
        memory > xtest_range_iterators_invocation
        memory > xtest_slice
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xpyrange.write
              [xstart xstop xstep]
                seq > @
                  ((((unsupported)) (((xstart).sub (xstop))) ((xstep))).less 0).if
                    seq
                      (((unsupported)) ((xstop)) ((((xstart).sub (xstop)).mod (xstep))))
                      while.
                        ((xstart).neq (xstop))
                        [unused]
                          seq > @
                            seq
                              (((unsupported)) ((xstart)))
                              (((unsupported)) ((xstart)) ((xstep)))
            xpyrange_reversed.write
              [xstart xstop xstep]
                seq > @
                  seq
                    (((unsupported)) ((xstop)) ((((xstart).sub (xstop)).mod (xstep))))
                    (((unsupported)) ((((xpyrange)) (((xstop).sub (xstep))) (((xstart).sub (xstep))) (((xstep).neg)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xassert_iterators_equal.write
                  [xself xxs xys xtest_id xlimit]
                    memory > xpairs
                    memory > xsentinel
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xlimit)) ("None: is there a None literal in the EO language?")).if
                          seq
                            xxs.write ((((xitertools).xislice)) ((xxs)) ((xlimit)))
                            xys.write ((((xitertools).xislice)) ((xys)) ((xlimit)))
                        xsentinel.write (((xobject)) 0)
                        xpairs.write (((unsupported)) (((xitertools).xzip_longest)) ((xxs)) ((xys)) ((xsentinel)))
                        (((unsupported)) ((((unsupported)) ((xi)) ((((unsupported)) ((xx)) ((xy)))))) ((((xenumerate)) ((xpairs)))))
                          ((xx).eq (xy)).if
                            (((unsupported)) 0)
                            ((xx).eq (xsentinel)).if
                              bogusForceDataize.write ((((xself).xfail)) (((("{}: iterator ended unexpectedly at position {}; expected {}".xformat)) ((xtest_id)) ((xi)) ((xy)))))
                              ((xy).eq (xsentinel)).if
                                bogusForceDataize.write ((((xself).xfail)) (((("{}: unexpected excess element {} at position {}".xformat)) ((xtest_id)) ((xx)) ((xi)))))
                                bogusForceDataize.write ((((xself).xfail)) (((("{}: wrong element at position {}; expected {}, got {}".xformat)) ((xtest_id)) ((xi)) ((xy)) ((xx)))))
                xtest_range.write
                  [xself]
                    memory > xc
                    memory > xseq
                    memory > xb
                    memory > xr
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (3))))) ((((unsupported)) (0) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (1) (5))))) ((((unsupported)) (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (0))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) ((3.neg)))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (1) (10) (3))))) ((((unsupported)) (1) (4) (7))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (5) ((5.neg)) ((3.neg)))))) ((((unsupported)) (5) (2) ((1.neg)) ((4.neg)))))
                        xa.write 10
                        xb.write 100
                        xc.write 50
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) ((xa)) (((xa).add 2)))))) ((((unsupported)) ((xa)) (((xa).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (((xa).add 2)) ((xa)) ((1.neg)))))) ((((unsupported)) (((xa).add 2)) (((xa).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (((xa).add 4)) ((xa)) ((2.neg)))))) ((((unsupported)) (((xa).add 4)) (((xa).add 2)))))
                        xseq.write (((xlist)) ((((xrange)) ((xa)) ((xb)) ((xc)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        xseq.write (((xlist)) ((((xrange)) ((xb)) ((xa)) (((xc).neg)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xb)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xa)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        xseq.write (((xlist)) ((((xrange)) (((xa).neg)) (((xb).neg)) (((xc).neg)))))
                        bogusForceDataize.write ((((xself).xassertIn)) (((xa).neg)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (((xb).neg)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (1) (2) (3) (4))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xrange)) (1) (2) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (2) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (1) (2.0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (1) (2) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (42) ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xrange)) (0) (((xsys).xmaxsize)) ((((xsys).xmaxsize).sub 1)))))) (2))
                        xr.write (((xrange)) ((((xsys).xmaxsize).neg)) (((xsys).xmaxsize)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xr)))) (((xsys).xmaxsize)))
                xtest_large_operands.write
                  [xself]
                    memory > xc
                    memory > xseq
                    memory > xb
                    memory > xx
                    memory > xa
                    seq > @
                      seq
                        xx.write (((xrange)) ((((unsupported)) (10) (20))) (((((unsupported)) (10) (20)).add 10)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xx)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xlist)) ((xx)))))) (4))
                        xx.write (((xrange)) (((((unsupported)) (10) (20)).add 10)) ((((unsupported)) (10) (20))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xx)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xlist)) ((xx)))))) (0))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xx)))
                        xx.write (((xrange)) ((((unsupported)) (10) (20))) (((((unsupported)) (10) (20)).add 10)) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xx)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xlist)) ((xx)))))) (0))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((xx)))
                        xx.write (((xrange)) (((((unsupported)) (10) (20)).add 10)) ((((unsupported)) (10) (20))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xx)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xlist)) ((xx)))))) (4))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xx)))
                        (((unsupported)) ((xx)) ((((unsupported)) ((((xrange)) (((((unsupported)) (2) (100)).neg)))) ((((xrange)) (0) (((((unsupported)) (2) (100)).neg)))) ((((xrange)) (0) ((((unsupported)) (2) (100))) ((1.neg)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xx)))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((xx)))
                        xa.write (((xint)) ((10.mul ((xsys).xmaxsize))))
                        xb.write (((xint)) ((100.mul ((xsys).xmaxsize))))
                        xc.write (((xint)) ((50.mul ((xsys).xmaxsize))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) ((xa)) (((xa).add 2)))))) ((((unsupported)) ((xa)) (((xa).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (((xa).add 2)) ((xa)) ((1.neg)))))) ((((unsupported)) (((xa).add 2)) (((xa).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) (((xa).add 4)) ((xa)) ((2.neg)))))) ((((unsupported)) (((xa).add 4)) (((xa).add 2)))))
                        xseq.write (((xlist)) ((((xrange)) ((xa)) ((xb)) ((xc)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) (0))) ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) ((1.neg)))) (((xa).add (xc))))
                        xseq.write (((xlist)) ((((xrange)) ((xb)) ((xa)) (((xc).neg)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xb)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xa)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) (0))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) ((1.neg)))) (((xb).sub (xc))))
                        xseq.write (((xlist)) ((((xrange)) (((xa).neg)) (((xb).neg)) (((xc).neg)))))
                        bogusForceDataize.write ((((xself).xassertIn)) (((xa).neg)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (((xb).neg)) ((xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xseq)))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) (0))) (((xa).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xseq)) ((1.neg)))) ((((xa).neg).sub (xc))))
                xtest_large_range.write
                  [xself]
                    memory > xc
                    memory > xb
                    memory > xexpected_len
                    memory > xx
                    memory > x_range_len
                    memory > xidx
                    memory > xa
                    seq > @
                      seq
                        x_range_len.write
                          [xx]
                            memory > xlength
                            memory > xstep
                            seq > @
                              seq
                                (((unsupported)) ((xOverflowError)))
                                  xlength.write (((xlen)) ((xx)))
                                  seq
                                    xstep.write ((((unsupported)) ((xx)) (1)).sub (((unsupported)) ((xx)) (0)))
                                    xlength.write (1.add (((unsupported)) (((((unsupported)) ((xx)) ((1.neg))).sub (((unsupported)) ((xx)) (0)))) ((xstep))))
                                (((unsupported)) ((xlength)))
                        xa.write (((xsys).xmaxsize).neg)
                        xb.write ((xsys).xmaxsize)
                        xexpected_len.write ((xb).sub (xa))
                        xx.write (((xrange)) ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xlen)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((x_range_len)) ((xx)))) ((xexpected_len)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) (0))) ((xa)))
                        xidx.write (((xsys).xmaxsize).add 1)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) ((xidx)))) (((xa).add (xidx))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xx)) ((((unsupported)) ((xidx)) (((xidx).add 1)))))) (0))) (((xa).add (xidx))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((((xexpected_len).neg).sub 1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((xexpected_len)))
                        xa.write 0
                        xb.write (2.mul ((xsys).xmaxsize))
                        xexpected_len.write ((xb).sub (xa))
                        xx.write (((xrange)) ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xlen)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((x_range_len)) ((xx)))) ((xexpected_len)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) (0))) ((xa)))
                        xidx.write (((xsys).xmaxsize).add 1)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) ((xidx)))) (((xa).add (xidx))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xx)) ((((unsupported)) ((xidx)) (((xidx).add 1)))))) (0))) (((xa).add (xidx))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((((xexpected_len).neg).sub 1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((xexpected_len)))
                        xa.write 0
                        xb.write (((unsupported)) (((xsys).xmaxsize)) (10))
                        xc.write (2.mul ((xsys).xmaxsize))
                        xexpected_len.write (1.add (((unsupported)) (((xb).sub (xa))) ((xc))))
                        xx.write (((xrange)) ((xa)) ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xlen)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((x_range_len)) ((xx)))) ((xexpected_len)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) (0))) ((xa)))
                        xidx.write (((xsys).xmaxsize).add 1)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) ((xidx)))) (((xa).add ((xidx).mul (xc)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xx)) ((((unsupported)) ((xidx)) (((xidx).add 1)))))) (0))) (((xa).add ((xidx).mul (xc)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((((xexpected_len).neg).sub 1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((xexpected_len)))
                        xa.write (((unsupported)) (((xsys).xmaxsize)) (10))
                        xb.write 0
                        xc.write ((2.neg).mul ((xsys).xmaxsize))
                        xexpected_len.write (1.add (((unsupported)) (((xb).sub (xa))) ((xc))))
                        xx.write (((xrange)) ((xa)) ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xa)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((xb)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xlen)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((x_range_len)) ((xx)))) ((xexpected_len)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) (0))) ((xa)))
                        xidx.write (((xsys).xmaxsize).add 1)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xx)) ((xidx)))) (((xa).add ((xidx).mul (xc)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xx)) ((((unsupported)) ((xidx)) (((xidx).add 1)))))) (0))) (((xa).add ((xidx).mul (xc)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((((xexpected_len).neg).sub 1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                          (((unsupported)) ((xx)) ((xexpected_len)))
                xtest_invalid_invocation.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (1) (2) (3) (4))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xrange)) (1) (2) (0))
                        xa.write (((xint)) ((10.mul ((xsys).xmaxsize))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xrange)) ((xa)) (((xa).add 1)) ((((xint)) (0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (42) ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (0.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (0) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (0.0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0) (0.0) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0.0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) (0.0) (0.0) (1.0))
                xtest_index.write
                  [xself]
                    memory > xalways_equal
                    memory > x__eq__
                    memory > xu
                    memory > xa
                    seq > @
                      seq
                        xu.write (((xrange)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xindex)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xindex)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xu).xindex)) (2))
                        xu.write (((xrange)) ((2.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xcount)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xu).xindex)) (0))) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xu).xindex)))
                        (((unsupported)) ((xException)))
                        (((unsupported)) 0)
                          x__eq__.write
                            [xself xother]
                              seq > @
                                seq
                                  ((xother).eq 2).if
                                    (((unsupported)) ((((xBadExc)) 0)))
                                  (((unsupported)) (FALSE))
                        xa.write (((xrange)) (4))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xBadExc)) (((xa).xindex)) ((((xBadCmp)) 0)))
                        xa.write (((xrange)) ((2.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xindex)) (0))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (1) (10) (3)).xindex)) (4))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (1) ((10.neg)) ((3.neg))).xindex)) ((5.neg)))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) ((((unsupported)) (10) (20)))).xindex)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) ((((unsupported)) (10) (20)))).xindex)) (((((unsupported)) (10) (20)).sub 1)))) (((((unsupported)) (10) (20)).sub 1)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((((xrange)) (1) ((((unsupported)) (2) (100))) (2)).xindex)) ((((unsupported)) (2) (87))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (1) ((((unsupported)) (2) (100))) (2)).xindex)) (((((unsupported)) (2) (87)).add 1)))) ((((unsupported)) (2) (86))))
                        (((unsupported)) ((xobject)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (TRUE))
                        xalways_equal.write (((xAlwaysEqual)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (10)).xindex)) ((xalways_equal)))) (0))
                xtest_user_index_method.write
                  [xself]
                    memory > xsmallnum
                    memory > x__index__
                    memory > xbignum
                    memory > x__init__
                    seq > @
                      seq
                        xbignum.write (2.mul ((xsys).xmaxsize))
                        xsmallnum.write 42
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xn]
                                seq > @
                                  (((unsupported)) (((xself).xn)) ((((xint)) ((xn)))))
                            x__index__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) ((((xI)) ((xbignum)))) ((((xI)) (((xbignum).add 1)))))))) ((((unsupported)) ((xbignum)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xrange)) ((((xI)) ((xsmallnum)))) ((((xI)) (((xsmallnum).add 1)))))))) ((((unsupported)) ((xsmallnum)))))
                        (((unsupported)) 0)
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xRuntimeError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) ((xrange)) ((((xIX)) 0)))
                        (((unsupported)) 0)
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)) ("not a number"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrange)) ((((xIN)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xrange)) (10))) ((((unsupported)) ((((xI)) (5))))))) ((((xrange)) (5))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((((xrange)) (0) (10))) ((((unsupported)) ((((xIX)) 0)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((((xrange)) (0) (10))) ((((unsupported)) ((((xIN)) 0)))))
                xtest_count.write
                  [xself]
                    memory > xalways_equal
                    memory > x__eq__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xcount)) ((1.neg)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xcount)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xcount)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xcount)) (2))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xcount)) (3))) (0))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((((xrange)) (3)).xcount)) ((1.neg)))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) (((((((xrange)) (3)).xcount)) (1))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) ((((unsupported)) (10) (20)))).xcount)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) ((((unsupported)) (10) (20)))).xcount)) ((((unsupported)) (10) (20))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (3)).xindex)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (1) ((((unsupported)) (2) (100))) (2)).xcount)) ((((unsupported)) (2) (87))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (1) ((((unsupported)) (2) (100))) (2)).xcount)) (((((unsupported)) (2) (87)).add 1)))) (1))
                        (((unsupported)) ((xobject)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (TRUE))
                        xalways_equal.write (((xAlwaysEqual)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xrange)) (10)).xcount)) ((xalways_equal)))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((xrange)) (((xsys).xmaxsize)) ((((xsys).xmaxsize).add 10)))))) (10))
                xtest_repr.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xrange)) (1))))) ("range(0, 1)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xrange)) (1) (2))))) ("range(1, 2)"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((xrange)) (1) (2) (3))))) ("range(1, 2, 3)"))
                xtest_pickling.write
                  [xself]
                    memory > xr
                    memory > xtestcases
                    seq > @
                      seq
                        xtestcases.write (((unsupported)) ((((unsupported)) (13))) ((((unsupported)) (0) (11))) ((((unsupported)) ((22.neg)) (10))) ((((unsupported)) (20) (3) ((1.neg)))) ((((unsupported)) (13) (21) (3))) ((((unsupported)) ((2.neg)) (2) (2))) ((((unsupported)) ((((unsupported)) (2) (65))) (((((unsupported)) (2) (65)).add 2)))))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((xt)) ((xtestcases)))
                            (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)) ((xt)))))
                              seq
                                xr.write (((xrange)) ((((unsupported)) ((xt)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) (((((xpickle).xloads)) (((((xpickle).xdumps)) ((xr)) ((xproto)))))))) ((((xlist)) ((xr)))))
                xtest_iterator_pickling.write
                  [xself]
                    memory > xd
                    memory > xdata
                    memory > xit
                    memory > xitorg
                    memory > xtestcases
                    seq > @
                      seq
                        xtestcases.write (((unsupported)) ((((unsupported)) (13))) ((((unsupported)) (0) (11))) ((((unsupported)) ((22.neg)) (10))) ((((unsupported)) (20) (3) ((1.neg)))) ((((unsupported)) (13) (21) (3))) ((((unsupported)) ((2.neg)) (2) (2))) ((((unsupported)) ((((unsupported)) (2) (65))) (((((unsupported)) (2) (65)).add 2)))))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          (((unsupported)) ((xt)) ((xtestcases)))
                            seq
                              (((unsupported)) ((xit)) ((xitorg)) ((((xiter)) ((((xrange)) ((((unsupported)) ((xt)))))))))
                              xdata.write (((xlist)) ((((xrange)) ((((unsupported)) ((xt)))))))
                              xd.write ((((xpickle).xdumps)) ((xit)) ((xproto)))
                              xit.write ((((xpickle).xloads)) ((xd)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((xitorg)))) ((((xtype)) ((xit)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((xdata)))
                              xit.write ((((xpickle).xloads)) ((xd)))
                              (((unsupported)) ((xStopIteration)))
                                bogusForceDataize.write (((xnext)) ((xit)))
                                (((unsupported)) 0)
                              xd.write ((((xpickle).xdumps)) ((xit)) ((xproto)))
                              xit.write ((((xpickle).xloads)) ((xd)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) ((xdata)) ((((unsupported)) (1))))))
                xtest_exhausted_iterator_pickling.write
                  [xself]
                    memory > xd
                    memory > xr
                    memory > xi
                    memory > xi2
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        seq
                          xr.write (((xrange)) ((((unsupported)) (2) (65))) (((((unsupported)) (2) (65)).add 2)))
                          xi.write (((xiter)) ((xr)))
                          while.
                            TRUE
                            [unused]
                              seq > @
                                seq
                                  xr.write (((xnext)) ((xi)))
                                  ((xr).eq ((((unsupported)) (2) (65)).add 1)).if
                                    (((unsupported)) 0)
                          xd.write ((((xpickle).xdumps)) ((xi)) ((xproto)))
                          xi2.write ((((xpickle).xloads)) ((xd)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xi)))) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xi2)))) ((((unsupported)) 0)))
                xtest_large_exhausted_iterator_pickling.write
                  [xself]
                    memory > xd
                    memory > xr
                    memory > xi
                    memory > xi2
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        seq
                          xr.write (((xrange)) (20))
                          xi.write (((xiter)) ((xr)))
                          while.
                            TRUE
                            [unused]
                              seq > @
                                seq
                                  xr.write (((xnext)) ((xi)))
                                  ((xr).eq 19).if
                                    (((unsupported)) 0)
                          xd.write ((((xpickle).xdumps)) ((xi)) ((xproto)))
                          xi2.write ((((xpickle).xloads)) ((xd)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xi)))) ((((unsupported)) 0)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xi2)))) ((((unsupported)) 0)))
                xtest_odd_bug.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                        bogusForceDataize.write (((xrange)) ((((unsupported)) 0)) (1) ((1.neg)))
                xtest_types.write
                  [xself]
                    memory > x__int__
                    memory > x__index__
                    memory > x__eq__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIn)) (1.0) ((((xrange)) (3))))
                        bogusForceDataize.write ((((xself).xassertIn)) (TRUE) ((((xrange)) (3))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((1.add (((unsupported)) 0))) ((((xrange)) (3))))
                        (((unsupported)) 0)
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xC1)) 0)) ((((xrange)) (3))))
                        (((unsupported)) 0)
                          seq
                            x__int__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (1))
                            x__index__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (1))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((((xC2)) 0)) ((((xrange)) (3))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xint)) ((((xC2)) 0)))) ((((xrange)) (3))))
                        (((unsupported)) ((xint)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xC3)) (11))) ((((xrange)) (10))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xC3)) (11))) ((((xlist)) ((((xrange)) (10))))))
                xtest_strided_limits.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xrange)) (0) (101) (2))
                        bogusForceDataize.write ((((xself).xassertIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (2) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (99) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (100) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (101) ((xr)))
                        xr.write (((xrange)) (0) ((20.neg)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((19.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((20.neg)) ((xr)))
                        xr.write (((xrange)) (0) ((20.neg)) ((2.neg)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((18.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((19.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((20.neg)) ((xr)))
                xtest_empty.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xrange)) (0))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (1) ((xr)))
                        xr.write (((xrange)) (0) ((10.neg)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (1) ((xr)))
                xtest_range_iterators.write
                  [xself]
                    memory > xtest_ranges
                    memory > xlimits
                    memory > xiter2
                    memory > xiter1
                    memory > xtest_id
                    seq > @
                      seq
                        xlimits.write (((unsupported)) (((xbase).add (xjiggle))) ((xM)) ((((unsupported)) ((((unsupported)) (2) (32))) ((((unsupported)) (2) (64))))) ((xbase)) ((((unsupported)) (((xM).neg)) ((((unsupported)) (((xM).neg)) (2))) (0) ((((unsupported)) ((xM)) (2))) ((xM)))) ((xjiggle)) ((((unsupported)) ((2.neg)) ((1.neg)) (0) (1) (2))))
                        xtest_ranges.write (((unsupported)) ((((unsupported)) ((xstart)) ((xend)) ((xstep)))) ((xstart)) ((xlimits)) ((xend)) ((xlimits)) ((xstep)) ((((unsupported)) (((((unsupported)) (2) (63)).neg)) (((((unsupported)) (2) (31)).neg)) ((2.neg)) ((1.neg)) (1) (2))))
                        (((unsupported)) ((((unsupported)) ((xstart)) ((xend)) ((xstep)))) ((xtest_ranges)))
                          seq
                            xiter1.write (((xrange)) ((xstart)) ((xend)) ((xstep)))
                            xiter2.write (((xpyrange)) ((xstart)) ((xend)) ((xstep)))
                            xtest_id.write ((("range({}, {}, {})".xformat)) ((xstart)) ((xend)) ((xstep)))
                            (((unsupported)) (((xself).xassert_iterators_equal)) ((xiter1)) ((xiter2)) ((xtest_id)) (100))
                            xiter1.write (((xreversed)) ((((xrange)) ((xstart)) ((xend)) ((xstep)))))
                            xiter2.write (((xpyrange_reversed)) ((xstart)) ((xend)) ((xstep)))
                            xtest_id.write ((("reversed(range({}, {}, {}))".xformat)) ((xstart)) ((xend)) ((xstep)))
                            (((unsupported)) (((xself).xassert_iterators_equal)) ((xiter1)) ((xiter2)) ((xtest_id)) (100))
                xtest_range_iterators_invocation.write
                  [xself]
                    memory > xlong_rangeiter_type
                    memory > xrangeiter_type
                    seq > @
                      seq
                        xrangeiter_type.write (((xtype)) ((((xiter)) ((((xrange)) (0))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xrangeiter_type)) (1) (3) (1))
                        xlong_rangeiter_type.write (((xtype)) ((((xiter)) ((((xrange)) ((((unsupported)) (1) (1000))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xlong_rangeiter_type)) (1) (3) (1))
                xtest_slice.write
                  [xself]
                    memory > xcheck
                    seq > @
                      seq
                        xcheck.write
                          [xstart xstop xstep]
                            memory > xi
                            seq > @
                              (((unsupported)) 0)
                                xi.write (((xslice)) ((xstart)) ((xstop)) ((xstep)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((unsupported)) ((xr)) ((xi)))))) ((((unsupported)) ((((xlist)) ((xr)))) ((xi)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((unsupported)) ((xr)) ((xi)))))) ((((xlen)) ((((unsupported)) ((((xlist)) ((xr)))) ((xi)))))))
                        (((unsupported)) ((xr)) ((((unsupported)) ((((xrange)) (10))) ((((xrange)) (0))) ((((xrange)) (1) (9) (3))) ((((xrange)) (8) (0) ((3.neg)))) ((((xrange)) ((((xsys).xmaxsize).add 1)) ((((xsys).xmaxsize).add 10)))))))
                          seq
                            bogusForceDataize.write (((xcheck)) (0) (2))
                            bogusForceDataize.write (((xcheck)) (0) (20))
                            bogusForceDataize.write (((xcheck)) (1) (2))
                            bogusForceDataize.write (((xcheck)) (20) (30))
                            bogusForceDataize.write (((xcheck)) ((30.neg)) ((20.neg)))
                            bogusForceDataize.write (((xcheck)) ((1.neg)) (100) (2))
                            bogusForceDataize.write (((xcheck)) (0) ((1.neg)))
                            bogusForceDataize.write (((xcheck)) ((1.neg)) ((3.neg)) ((1.neg)))
                xtest_contains.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xrange)) (10))
                        bogusForceDataize.write ((((xself).xassertIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (5.0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (5.1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("") ((xr)))
                        xr.write (((xrange)) (9) ((1.neg)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (5.0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (5.1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("") ((xr)))
                        xr.write (((xrange)) (0) (10) (2))
                        bogusForceDataize.write ((((xself).xassertIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (5.0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (5.1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("") ((xr)))
                        xr.write (((xrange)) (9) ((1.neg)) ((2.neg)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) (5.0) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (5.1) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ((1.neg)) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) (10) ((xr)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("") ((xr)))
                xtest_reverse_iteration.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xr)) ((((unsupported)) ((((xrange)) (10))) ((((xrange)) (0))) ((((xrange)) (1) (9) (3))) ((((xrange)) (8) (0) ((3.neg)))) ((((xrange)) ((((xsys).xmaxsize).add 1)) ((((xsys).xmaxsize).add 10)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xreversed)) ((xr)))))) ((((unsupported)) ((((xlist)) ((xr)))) ((((unsupported)) ((1.neg)))))))
                xtest_issue11845.write
                  [xself]
                    memory > xr
                    memory > xvalues
                    seq > @
                      seq
                        xr.write (((xrange)) ((((unsupported)) (((((((xslice)) (1) (18) (2)).xindices)) (20))))))
                        xvalues.write (((unsupported)) ("None: is there a None literal in the EO language?") (0) (1) ((1.neg)) (2) ((2.neg)) (5) ((5.neg)) (19) ((19.neg)) (20) ((20.neg)) (21) ((21.neg)) (30) ((30.neg)) (99) ((99.neg)))
                        (((unsupported)) ((xi)) ((xvalues)))
                          (((unsupported)) ((xj)) ((xvalues)))
                            (((unsupported)) ((xk)) (((xvalues).sub (((unsupported)) (0)))))
                              (((unsupported)) ((xr)) ((((unsupported)) ((xi)) ((xj)) ((xk)))))
                xtest_comparison.write
                  [xself]
                    memory > xtest_ranges
                    memory > xranges_ne
                    memory > xtest_tuples
                    memory > xranges_eq
                    memory > xtuples_eq
                    seq > @
                      seq
                        xtest_ranges.write (((unsupported)) ((((xrange)) (0))) ((((xrange)) (0) ((1.neg)))) ((((xrange)) (1) (1) (3))) ((((xrange)) (1))) ((((xrange)) (5) (6))) ((((xrange)) (5) (6) (2))) ((((xrange)) (5) (7) (2))) ((((xrange)) (2))) ((((xrange)) (0) (4) (2))) ((((xrange)) (0) (5) (2))) ((((xrange)) (0) (6) (2))))
                        xtest_tuples.write (((xlist)) ((((xmap)) ((xtuple)) ((xtest_ranges)))))
                        xranges_eq.write (((unsupported)) (((xa).eq (xb))) ((xa)) ((xtest_ranges)) ((xb)) ((xtest_ranges)))
                        xtuples_eq.write (((unsupported)) (((xa).eq (xb))) ((xa)) ((xtest_tuples)) ((xb)) ((xtest_tuples)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xranges_eq)) ((xtuples_eq)))
                        xranges_ne.write (((unsupported)) (((xa).neq (xb))) ((xa)) ((xtest_ranges)) ((xb)) ((xtest_ranges)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xranges_ne)) ((((unsupported)) (((xx).not)) ((xx)) ((xranges_eq)))))
                        (((unsupported)) ((xa)) ((xtest_ranges)))
                          (((unsupported)) ((xb)) ((xtest_ranges)))
                            ((xa).eq (xb)).if
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((xa)))) ((((xhash)) ((xb)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xrange)) (0)).eq (((unsupported)) 0))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) 0).eq (((xrange)) (0)))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xrange)) (2)).eq (((unsupported)) (0) (1)))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrange)) (0) (((((unsupported)) (2) (100)).sub 1)) (2))) ((((xrange)) (0) ((((unsupported)) (2) (100))) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((((xrange)) (0) (((((unsupported)) (2) (100)).sub 1)) (2))))) ((((xhash)) ((((xrange)) (0) ((((unsupported)) (2) (100))) (2))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xrange)) (0) ((((unsupported)) (2) (100))) (2))) ((((xrange)) (0) (((((unsupported)) (2) (100)).add 1)) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xrange)) ((((unsupported)) (2) (200))) (((((unsupported)) (2) (201)).sub (((unsupported)) (2) (99)))) ((((unsupported)) (2) (100))))) ((((xrange)) ((((unsupported)) (2) (200))) ((((unsupported)) (2) (201))) ((((unsupported)) (2) (100))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhash)) ((((xrange)) ((((unsupported)) (2) (200))) (((((unsupported)) (2) (201)).sub (((unsupported)) (2) (99)))) ((((unsupported)) (2) (100))))))) ((((xhash)) ((((xrange)) ((((unsupported)) (2) (200))) ((((unsupported)) (2) (201))) ((((unsupported)) (2) (100))))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xrange)) ((((unsupported)) (2) (200))) ((((unsupported)) (2) (201))) ((((unsupported)) (2) (100))))) ((((xrange)) ((((unsupported)) (2) (200))) (((((unsupported)) (2) (201)).add 1)) ((((unsupported)) (2) (100))))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                xtest_attributes.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (0))) (0) (0) (1))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (10))) (0) (10) (1))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) ((10.neg)))) (0) ((10.neg)) (1))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (0) (10) (1))) (0) (10) (1))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (0) (10) (3))) (0) (10) (3))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (10) (0) ((1.neg)))) (10) (0) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassert_attrs)) ((((xrange)) (10) (0) ((3.neg)))) (10) (0) ((3.neg)))
                xassert_attrs.write
                  [xself xrangeobj xstart xstop xstep]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xrangeobj).xstart)) ((xstart)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xrangeobj).xstop)) ((xstop)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xrangeobj).xstep)) ((xstep)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xrangeobj).xstart)) (0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xrangeobj).xstop)) (10))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) (((xrangeobj).xstep)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xrangeobj).xstart)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xrangeobj).xstop)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          (((unsupported)) ((((unsupported)) (((xrangeobj).xstep)))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)