memory > xlist
memory > xBadLengthHint
memory > xTestInvariantWithoutMutations
memory > xreversed
memory > xi
memory > xiter
memory > xunittest
memory > xnext
memory > xobject
memory > xdict
memory > x__name__
memory > xRuntimeError
memory > xrepeat
memory > xTestTemporarilyImmutable
memory > xBadLen
memory > xdeque
memory > xrange
memory > xNoneLengthHint
memory > xbytearray
memory > xStopIteration
memory > xlength_hint
memory > xset
memory > xtuple
memory > xNotImplemented
[] > test_iterlen
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_issue1242657
        memory > x__iter__
        memory > xtest_immutable_during_iteration
        memory > x__len__
        memory > xtest_invariant
        memory > xn
        memory > xtest_mutation
        memory > x__length_hint__
        memory > xsetUp
        memory > xtest_invalid_hint
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xn.write 10
            (((unsupported)) 0)
              xtest_invariant.write
                [xself]
                  memory > xit
                  seq > @
                    seq
                      xit.write ((xself).xit)
                      (((unsupported)) ((xi)) ((((xreversed)) ((((xrange)) (1) (((xn).add 1)))))))
                        seq
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) ((xi)))
                          bogusForceDataize.write (((xnext)) ((xit)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xStopIteration)) ((xnext)) ((xit)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
            (((unsupported)) ((xTestInvariantWithoutMutations)))
              xtest_immutable_during_iteration.write
                [xself]
                  memory > xit
                  seq > @
                    seq
                      xit.write ((xself).xit)
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) ((xn)))
                      bogusForceDataize.write (((xnext)) ((xit)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (((xn).sub 1)))
                      bogusForceDataize.write ((((xself).xmutate)) 0)
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) ((xnext)) ((xit)))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  seq > @
                    (((unsupported)) (((xself).xit)) ((((xrepeat)) ("None: is there a None literal in the EO language?") ((xn)))))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  seq > @
                    (((unsupported)) (((xself).xit)) ((((xiter)) ((((xrange)) ((xn)))))))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  seq > @
                    (((unsupported)) (((xself).xit)) ((((xreversed)) ((((xrange)) ((xn)))))))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  seq > @
                    (((unsupported)) (((xself).xit)) ((((xiter)) ((((xtuple)) ((((xrange)) ((xn)))))))))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write (((xdeque)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xiter)) ((xd)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpop)))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write (((xdeque)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xreversed)) ((xd)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpop)))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write ((((xdict).xfromkeys)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xiter)) ((xd)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpopitem)))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write ((((xdict).xfromkeys)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xiter)) (((((xd).xitems)) 0)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpopitem)))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write ((((xdict).xfromkeys)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xiter)) (((((xd).xvalues)) 0)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpopitem)))
            (((unsupported)) ((xTestTemporarilyImmutable)) (((xunittest).xTestCase)))
              xsetUp.write
                [xself]
                  memory > xd
                  seq > @
                    seq
                      xd.write (((xset)) ((((xrange)) ((xn)))))
                      (((unsupported)) (((xself).xit)) ((((xiter)) ((xd)))))
                      (((unsupported)) (((xself).xmutate)) (((xd).xpop)))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xit)) ((((xiter)) ((((xrange)) ((xn)))))))
                xtest_mutation.write
                  [xself]
                    memory > xd
                    memory > xit
                    seq > @
                      seq
                        xd.write (((xlist)) ((((xrange)) ((xn)))))
                        xit.write (((xiter)) ((xd)))
                        bogusForceDataize.write (((xnext)) ((xit)))
                        bogusForceDataize.write (((xnext)) ((xit)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (((xn).sub 2)))
                        bogusForceDataize.write ((((xd).xappend)) ((xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (((xn).sub 1)))
                        (((unsupported)) ((((unsupported)) ((xd)) ((((unsupported)) (1))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xd).xextend)) ((((xrange)) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
            (((unsupported)) ((xTestInvariantWithoutMutations)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xit)) ((((xreversed)) ((((xrange)) ((xn)))))))
                xtest_mutation.write
                  [xself]
                    memory > xd
                    memory > xit
                    seq > @
                      seq
                        xd.write (((xlist)) ((((xrange)) ((xn)))))
                        xit.write (((xreversed)) ((xd)))
                        bogusForceDataize.write (((xnext)) ((xit)))
                        bogusForceDataize.write (((xnext)) ((xit)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (((xn).sub 2)))
                        bogusForceDataize.write ((((xd).xappend)) ((xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (((xn).sub 2)))
                        (((unsupported)) ((((unsupported)) ((xd)) ((((unsupported)) (1))))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((xit)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xd).xextend)) ((((xrange)) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlength_hint)) ((xit)))) (0))
            (((unsupported)) ((xobject)))
              seq
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xiter)) ((((xrange)) (10))))))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xRuntimeError)) ("hello"))))
            (((unsupported)) ((xobject)))
              seq
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xiter)) ((((xrange)) (10))))))
                x__length_hint__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xRuntimeError)) ("hello"))))
            (((unsupported)) ((xobject)))
              seq
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xiter)) ((((xrange)) (10))))))
                x__length_hint__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xNotImplemented)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_issue1242657.write
                  [xself]
                    memory > xb
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) ((xlist)) ((((xBadLen)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) ((xlist)) ((((xBadLengthHint)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((((unsupported)) 0).xextend)) ((((xBadLen)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((((unsupported)) 0).xextend)) ((((xBadLengthHint)) 0)))
                        xb.write (((xbytearray)) ((((xrange)) (10))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((xb).xextend)) ((((xBadLen)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((xb).xextend)) ((((xBadLengthHint)) 0)))
                xtest_invalid_hint.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xNoneLengthHint)) 0)))) ((((xlist)) ((((xrange)) (10))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)