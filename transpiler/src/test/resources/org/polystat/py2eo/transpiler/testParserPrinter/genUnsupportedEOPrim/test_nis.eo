memory > xk
memory > xValueError
memory > xstr
memory > xmsg
memory > xsupport
memory > xnismap
memory > xv
memory > xunittest
memory > x__name__
[] > test_nis
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_maps
        memory > xnis
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            xnis.write ((((xsupport).ximport_module)) ("nis"))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_maps.write
                [xself]
                  memory > xdone
                  memory > xmaps
                  memory > xmapping
                  seq > @
                    seq
                      (((unsupported)) (((xnis).xerror)))
                        xmaps.write ((((xnis).xmaps)) 0)
                        bogusForceDataize.write ((((xself).xskipTest)) ((((xstr)) ((xmsg)))))
                      (((unsupported)) ((xValueError)))
                        bogusForceDataize.write ((((xmaps).xremove)) ("passwd.adjunct.byname"))
                      xdone.write 0
                      (((unsupported)) ((xnismap)) ((xmaps)))
                        seq
                          xmapping.write ((((xnis).xcat)) ((xnismap)))
                          (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xmapping).xitems)) 0)))
                            seq
                              ((xk).not).if
                                (((unsupported)) 0)
                              (((((xnis).xmatch)) ((xk)) ((xnismap))).neq (xv)).if
                                bogusForceDataize.write ((((xself).xfail)) (("NIS match failed for key `%s' in map `%s'".mod (((unsupported)) ((xk)) ((xnismap))))))
                                seq
                                  xdone.write 1
                                  (((unsupported)) 0)
                          (xdone).if
                            (((unsupported)) 0)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)