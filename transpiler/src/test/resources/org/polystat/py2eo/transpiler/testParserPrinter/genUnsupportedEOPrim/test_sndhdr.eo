memory > xrange
memory > xunittest
memory > xsndhdr
memory > x__name__
memory > xexpected
memory > xpickle
memory > xproto
memory > xfindfile
[] > test_sndhdr
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_data
        memory > xtest_pickleable
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_data.write
                  [xself]
                    memory > xwhat
                    memory > xfilename
                    seq > @
                      (((unsupported)) ((((unsupported)) ((xfilename)) ((xexpected)))) ((((unsupported)) ((((unsupported)) ("sndhdr.8svx") ((((unsupported)) ("8svx") (0) (1) (0) (8))))) ((((unsupported)) ("sndhdr.aifc") ((((unsupported)) ("aifc") (44100) (2) (5) (16))))) ((((unsupported)) ("sndhdr.aiff") ((((unsupported)) ("aiff") (44100) (2) (5) (16))))) ((((unsupported)) ("sndhdr.au") ((((unsupported)) ("au") (44100) (2) (5.0) (16))))) ((((unsupported)) ("sndhdr.hcom") ((((unsupported)) ("hcom") (22050.0) (1) ((1.neg)) (8))))) ((((unsupported)) ("sndhdr.sndt") ((((unsupported)) ("sndt") (44100) (1) (5) (8))))) ((((unsupported)) ("sndhdr.voc") ((((unsupported)) ("voc") (0) (1) ((1.neg)) (8))))) ((((unsupported)) ("sndhdr.wav") ((((unsupported)) ("wav") (44100) (2) (5) (16))))))))
                        seq
                          xfilename.write (((unsupported)) ((xfindfile)) ((xfilename)) ("sndhdrdata"))
                          xwhat.write ((((xsndhdr).xwhat)) ((xfilename)))
                          bogusForceDataize.write ((((xself).xassertNotEqual)) ((xwhat)) ("None: is there a None literal in the EO language?") ((xfilename)))
                          bogusForceDataize.write ((((xself).xassertSequenceEqual)) ((xwhat)) ((xexpected)))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xwhat).xfiletype)) ((((unsupported)) ((xexpected)) (0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xwhat).xframerate)) ((((unsupported)) ((xexpected)) (1))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xwhat).xnchannels)) ((((unsupported)) ((xexpected)) (2))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xwhat).xnframes)) ((((unsupported)) ((xexpected)) (3))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xwhat).xsampwidth)) ((((unsupported)) ((xexpected)) (4))))
                xtest_pickleable.write
                  [xself]
                    memory > xwhat
                    memory > xdump
                    memory > xfilename
                    seq > @
                      seq
                        xfilename.write (((unsupported)) ((xfindfile)) ("sndhdr.aifc") ("sndhdrdata"))
                        xwhat.write ((((xsndhdr).xwhat)) ((xfilename)))
                        (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                          seq
                            xdump.write ((((xpickle).xdumps)) ((xwhat)) ((xproto)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xpickle).xloads)) ((xdump)))) ((xwhat)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)