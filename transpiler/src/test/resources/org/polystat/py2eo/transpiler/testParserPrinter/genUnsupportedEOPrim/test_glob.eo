memory > xcan_symlink
memory > xparts
memory > xstr
memory > xfile
memory > xrange
memory > xbase
memory > xtype
memory > xr
memory > xbytes
memory > xsorted
memory > xcreate_empty_file
memory > xkwargs
memory > xskip_unless_symlink
memory > xtuples
memory > xlist
memory > xset
memory > xit
memory > xx
memory > xi
memory > xTESTFN
memory > xos
memory > xshutil
memory > xunittest
memory > xnext
memory > xmap
memory > xj
memory > xlen
memory > xchange_cwd
memory > x__name__
[] > test_glob
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_glob_directory_names
        memory > xtest_escape_windows
        memory > xtest_glob_nested_directory
        memory > xtest_glob_magic_in_drive
        memory > xtest_glob_one_directory
        memory > xjoins
        memory > xsetUp
        memory > xglob
        memory > xmktemp
        memory > xtest_escape
        memory > xassertSequencesEqual_noorder
        memory > xtearDown
        memory > xrglob
        memory > xtest_glob_bytes_directory_with_trailing_slash
        memory > xtest_glob_literal
        memory > xtest_glob_broken_symlinks
        memory > xnorm
        memory > xtest_glob_many_open_files
        memory > xtest_selflink
        memory > xtest_glob_directory_with_trailing_slash
        memory > xtest_recursive_glob
        memory > xcheck_escape
        memory > xtest_glob_symlinks
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xnorm.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((((xos).xpath).xnormpath)) ((((((xos).xpath).xjoin)) (((xself).xtempdir)) ((((unsupported)) ((xparts)))))))))
                xjoins.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((((((xos).xpath).xjoin)) (((xself).xtempdir)) ((((unsupported)) ((xparts)))))) ((xparts)) ((xtuples)))))
                xmktemp.write
                  [xself]
                    memory > xfilename
                    seq > @
                      (((unsupported)) 0)
                        xfilename.write ((((xself).xnorm)) ((((unsupported)) ((xparts)))))
                        (((unsupported)) ((((unsupported)) ((xbase)) ((xfile)))) ((((((xos).xpath).xsplit)) ((xfilename)))))
                        ((((((xos).xpath).xexists)) ((xbase))).not).if
                          bogusForceDataize.write ((((xos).xmakedirs)) ((xbase)))
                        bogusForceDataize.write (((xcreate_empty_file)) ((xfilename)))
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xtempdir)) (((xTESTFN).add "_dir")))
                        bogusForceDataize.write ((((xself).xmktemp)) ("a") ("D"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("aab") ("F"))
                        bogusForceDataize.write ((((xself).xmktemp)) (".aa") ("G"))
                        bogusForceDataize.write ((((xself).xmktemp)) (".bb") ("H"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("aaa") ("zzzF"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("ZZZ"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("EF"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("a") ("bcd") ("EF"))
                        bogusForceDataize.write ((((xself).xmktemp)) ("a") ("bcd") ("efg") ("ha"))
                        (((xcan_symlink)) 0).if
                          seq
                            bogusForceDataize.write ((((xos).xsymlink)) (((((xself).xnorm)) ("broken"))) (((((xself).xnorm)) ("sym1"))))
                            bogusForceDataize.write ((((xos).xsymlink)) ("broken") (((((xself).xnorm)) ("sym2"))))
                            bogusForceDataize.write ((((xos).xsymlink)) ((((((xos).xpath).xjoin)) ("a") ("bcd"))) (((((xself).xnorm)) ("sym3"))))
                xtearDown.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xshutil).xrmtree)) (((xself).xtempdir)))
                xglob.write
                  [xself]
                    memory > xbres
                    memory > xpattern
                    memory > xp
                    memory > xres
                    seq > @
                      (((unsupported)) 0)
                        ((((xlen)) ((xparts))).eq 1).if
                          xpattern.write (((unsupported)) ((xparts)) (0))
                          xpattern.write (((((xos).xpath).xjoin)) ((((unsupported)) ((xparts)))))
                        xp.write (((((xos).xpath).xjoin)) (((xself).xtempdir)) ((xpattern)))
                        xres.write ((((xglob).xglob)) ((xp)) ((((unsupported)) ((xkwargs)))))
                        bogusForceDataize.write ((((xself).xassertCountEqual)) (((((xglob).xiglob)) ((xp)) ((((unsupported)) ((xkwargs)))))) ((xres)))
                        xbres.write (((unsupported)) (((((xos).xfsencode)) ((xx)))) ((xx)) ((xres)))
                        bogusForceDataize.write ((((xself).xassertCountEqual)) (((((xglob).xglob)) (((((xos).xfsencode)) ((xp)))) ((((unsupported)) ((xkwargs)))))) ((xbres)))
                        bogusForceDataize.write ((((xself).xassertCountEqual)) (((((xglob).xiglob)) (((((xos).xfsencode)) ((xp)))) ((((unsupported)) ((xkwargs)))))) ((xbres)))
                        (((unsupported)) ((xres)))
                xassertSequencesEqual_noorder.write
                  [xself xl1 xl2]
                    seq > @
                      seq
                        xl1.write (((xlist)) ((xl1)))
                        xl2.write (((xlist)) ((xl2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xset)) ((xl1)))) ((((xset)) ((xl2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((xl1)))) ((((xsorted)) ((xl2)))))
                xtest_glob_literal.write
                  [xself]
                    memory > xeq
                    memory > xres
                    seq > @
                      seq
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a"))) ((((unsupported)) (((((xself).xnorm)) ("a"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a") ("D"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("D"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("aab"))) ((((unsupported)) (((((xself).xnorm)) ("aab"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("zymurgy"))) ((((unsupported)) 0)))
                        xres.write ((((xglob).xglob)) ("*"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xtype)) ((xr)))) ((xr)) ((xres)))) ((((unsupported)) ((xstr)))))
                        xres.write ((((xglob).xglob)) ((((((xos).xpath).xjoin)) (((xos).xcurdir)) ("*"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xtype)) ((xr)))) ((xr)) ((xres)))) ((((unsupported)) ((xstr)))))
                        xres.write ((((xglob).xglob)) ("*"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xtype)) ((xr)))) ((xr)) ((xres)))) ((((unsupported)) ((xbytes)))))
                        xres.write ((((xglob).xglob)) ((((((xos).xpath).xjoin)) (((((xos).xfsencode)) (((xos).xcurdir)))) ("*"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xtype)) ((xr)))) ((xr)) ((xres)))) ((((unsupported)) ((xbytes)))))
                xtest_glob_one_directory.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a*"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) ("a") ("aab") ("aaa"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("*a"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) ("a") ("aaa"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) (".*"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) (".aa") (".bb"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("?aa"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) ("aaa"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("aa?"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) ("aaa") ("aab"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("aa[ab]"))) ((((xmap)) (((xself).xnorm)) ((((unsupported)) ("aaa") ("aab"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("*q"))) ((((unsupported)) 0)))
                xtest_glob_nested_directory.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        ((((((xos).xpath).xnormcase)) ("abCD")).eq "abCD").if
                          bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a") ("bcd") ("E*"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("bcd") ("EF"))))))
                          bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a") ("bcd") ("E*"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("bcd") ("EF"))) (((((xself).xnorm)) ("a") ("bcd") ("efg"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a") ("bcd") ("*g"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("bcd") ("efg"))))))
                xtest_glob_directory_names.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("*") ("D"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("D"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("*") ("*a"))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("a") ("*") ("*") ("*a"))) ((((unsupported)) (((((xself).xnorm)) ("a") ("bcd") ("efg") ("ha"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("?a?") ("*F"))) ((((unsupported)) (((((xself).xnorm)) ("aaa") ("zzzF"))) (((((xself).xnorm)) ("aab") ("F"))))))
                xtest_glob_directory_with_trailing_slash.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write ((((xglob).xglob)) ((((((xself).xnorm)) ("Z*Z")).add ((xos).xsep))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((unsupported)) 0)))
                        xres.write ((((xglob).xglob)) ((((((xself).xnorm)) ("ZZZ")).add ((xos).xsep))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((unsupported)) 0)))
                        xres.write ((((xglob).xglob)) ((((((xself).xnorm)) ("aa*")).add ((xos).xsep))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xres)))) (2))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xset)) ((xres)))) ((((unsupported)) ((((unsupported)) (((((xself).xnorm)) ("aaa"))) (((((xself).xnorm)) ("aab"))))) ((((unsupported)) ((((((xself).xnorm)) ("aaa")).add ((xos).xsep))) ((((((xself).xnorm)) ("aab")).add ((xos).xsep))))))))
                xtest_glob_bytes_directory_with_trailing_slash.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write ((((xglob).xglob)) (((((xos).xfsencode)) ((((((xself).xnorm)) ("Z*Z")).add ((xos).xsep))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((unsupported)) 0)))
                        xres.write ((((xglob).xglob)) (((((xos).xfsencode)) ((((((xself).xnorm)) ("ZZZ")).add ((xos).xsep))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xres)) ((((unsupported)) 0)))
                        xres.write ((((xglob).xglob)) (((((xos).xfsencode)) ((((((xself).xnorm)) ("aa*")).add ((xos).xsep))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xres)))) (2))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xset)) ((xres)))) ((((unsupported)) ((((unsupported)) (((((xos).xfsencode)) (((((xself).xnorm)) ("aaa"))))) (((((xos).xfsencode)) (((((xself).xnorm)) ("aab"))))))) ((((unsupported)) (((((xos).xfsencode)) ((((((xself).xnorm)) ("aaa")).add ((xos).xsep))))) (((((xos).xfsencode)) ((((((xself).xnorm)) ("aab")).add ((xos).xsep))))))))))
                xtest_glob_symlinks.write
                  [xself]
                    memory > xeq
                    seq > @
                      (((unsupported)) 0)
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("sym3"))) ((((unsupported)) (((((xself).xnorm)) ("sym3"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("sym3") ("*"))) ((((unsupported)) (((((xself).xnorm)) ("sym3") ("EF"))) (((((xself).xnorm)) ("sym3") ("efg"))))))
                        bogusForceDataize.write ((((xself).xassertIn)) (((((xself).xglob)) (("sym3".add ((xos).xsep))))) ((((unsupported)) ((((unsupported)) (((((xself).xnorm)) ("sym3"))))) ((((unsupported)) ((((((xself).xnorm)) ("sym3")).add ((xos).xsep))))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("*") ("*F"))) ((((unsupported)) (((((xself).xnorm)) ("aaa") ("zzzF"))) (((((xself).xnorm)) ("aab") ("F"))) (((((xself).xnorm)) ("sym3") ("EF"))))))
                xtest_glob_broken_symlinks.write
                  [xself]
                    memory > xeq
                    seq > @
                      (((unsupported)) 0)
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("sym*"))) ((((unsupported)) (((((xself).xnorm)) ("sym1"))) (((((xself).xnorm)) ("sym2"))) (((((xself).xnorm)) ("sym3"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("sym1"))) ((((unsupported)) (((((xself).xnorm)) ("sym1"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xglob)) ("sym2"))) ((((unsupported)) (((((xself).xnorm)) ("sym2"))))))
                xtest_glob_magic_in_drive.write
                  [xself]
                    memory > xeq
                    seq > @
                      (((unsupported)) 0)
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ("*:"))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ("*:"))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ("?:"))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ("?:"))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xglob).xglob)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                xcheck_escape.write
                  [xself xarg xexpected]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xglob).xescape)) ((xarg)))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xglob).xescape)) (((((xos).xfsencode)) ((xarg)))))) (((((xos).xfsencode)) ((xexpected)))))
                xtest_escape.write
                  [xself]
                    memory > xcheck
                    seq > @
                      seq
                        xcheck.write ((xself).xcheck_escape)
                        bogusForceDataize.write (((xcheck)) ("abc") ("abc"))
                        bogusForceDataize.write (((xcheck)) ("[") ("[[]"))
                        bogusForceDataize.write (((xcheck)) ("?") ("[?]"))
                        bogusForceDataize.write (((xcheck)) ("*") ("[*]"))
                        bogusForceDataize.write (((xcheck)) ("[[_/*?*/_]]") ("[[][[]_/[*][?][*]/_]]"))
                        bogusForceDataize.write (((xcheck)) ("/[[_/*?*/_]]/") ("/[[][[]_/[*][?][*]/_]]/"))
                xtest_escape_windows.write
                  [xself]
                    memory > xcheck
                    seq > @
                      (((unsupported)) 0)
                        xcheck.write ((xself).xcheck_escape)
                        bogusForceDataize.write (((xcheck)) ("?:?") ("?:[?]"))
                        bogusForceDataize.write (((xcheck)) ("*:*") ("*:[*]"))
                        bogusForceDataize.write (((xcheck)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcheck)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xcheck)) ("//?/c:/?") ("//?/c:/[?]"))
                        bogusForceDataize.write (((xcheck)) ("//*/*/*") ("//*/*/[*]"))
                xrglob.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) (((xself).xglob)) ((((unsupported)) ((xparts)))) (TRUE) ((((unsupported)) ((xkwargs)))))))
                xtest_recursive_glob.write
                  [xself]
                    memory > xjoin
                    memory > xeq
                    memory > xdirs
                    memory > xfull
                    memory > xexpect
                    seq > @
                      seq
                        xeq.write ((xself).xassertSequencesEqual_noorder)
                        xfull.write (((unsupported)) ((((unsupported)) ("EF"))) ((((unsupported)) ("ZZZ"))) ((((unsupported)) ("a"))) ((((unsupported)) ("a") ("D"))) ((((unsupported)) ("a") ("bcd"))) ((((unsupported)) ("a") ("bcd") ("EF"))) ((((unsupported)) ("a") ("bcd") ("efg"))) ((((unsupported)) ("a") ("bcd") ("efg") ("ha"))) ((((unsupported)) ("aaa"))) ((((unsupported)) ("aaa") ("zzzF"))) ((((unsupported)) ("aab"))) ((((unsupported)) ("aab") ("F"))))
                        (((xcan_symlink)) 0).if
                          (((unsupported)) ((xfull)) ((((unsupported)) ((((unsupported)) ("sym1"))) ((((unsupported)) ("sym2"))) ((((unsupported)) ("sym3"))) ((((unsupported)) ("sym3") ("EF"))) ((((unsupported)) ("sym3") ("efg"))) ((((unsupported)) ("sym3") ("efg") ("ha"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**"))) (((((xself).xjoins)) ((((unsupported)) (""))) ((((unsupported)) ((xfull)))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) (((xos).xcurdir)) ("**"))) (((((xself).xjoins)) ((((unsupported)) (((xos).xcurdir)) (""))) ((((unsupported)) ((((unsupported)) (((((unsupported)) (((xos).xcurdir))).add (xi))) ((xi)) ((xfull)))))))))
                        xdirs.write (((unsupported)) ((((unsupported)) ("a") (""))) ((((unsupported)) ("a") ("bcd") (""))) ((((unsupported)) ("a") ("bcd") ("efg") (""))) ((((unsupported)) ("aaa") (""))) ((((unsupported)) ("aab") (""))))
                        (((xcan_symlink)) 0).if
                          (((unsupported)) ((xdirs)) ((((unsupported)) ((((unsupported)) ("sym3") (""))) ((((unsupported)) ("sym3") ("efg") (""))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**") (""))) (((((xself).xjoins)) ((((unsupported)) (""))) ((((unsupported)) ((xdirs)))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("a") ("**"))) (((((xself).xjoins)) ((((unsupported)) ("a") (""))) ((((unsupported)) ("a") ("D"))) ((((unsupported)) ("a") ("bcd"))) ((((unsupported)) ("a") ("bcd") ("EF"))) ((((unsupported)) ("a") ("bcd") ("efg"))) ((((unsupported)) ("a") ("bcd") ("efg") ("ha"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("a**"))) (((((xself).xjoins)) ((((unsupported)) ("a"))) ((((unsupported)) ("aaa"))) ((((unsupported)) ("aab"))))))
                        xexpect.write (((unsupported)) ((((unsupported)) ("a") ("bcd") ("EF"))) ((((unsupported)) ("EF"))))
                        (((xcan_symlink)) 0).if
                          (((unsupported)) ((xexpect)) ((((unsupported)) ((((unsupported)) ("sym3") ("EF"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**") ("EF"))) (((((xself).xjoins)) ((((unsupported)) ((xexpect)))))))
                        xexpect.write (((unsupported)) ((((unsupported)) ("a") ("bcd") ("EF"))) ((((unsupported)) ("aaa") ("zzzF"))) ((((unsupported)) ("aab") ("F"))) ((((unsupported)) ("EF"))))
                        (((xcan_symlink)) 0).if
                          (((unsupported)) ((xexpect)) ((((unsupported)) ((((unsupported)) ("sym3") ("EF"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**") ("*F"))) (((((xself).xjoins)) ((((unsupported)) ((xexpect)))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**") ("*F") (""))) ((((unsupported)) 0)))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("**") ("bcd") ("*"))) (((((xself).xjoins)) ((((unsupported)) ("a") ("bcd") ("EF"))) ((((unsupported)) ("a") ("bcd") ("efg"))))))
                        bogusForceDataize.write (((xeq)) (((((xself).xrglob)) ("a") ("**") ("bcd"))) (((((xself).xjoins)) ((((unsupported)) ("a") ("bcd"))))))
                        (((unsupported)) ((((xchange_cwd)) (((xself).xtempdir)))))
                          seq
                            xjoin.write (((xos).xpath).xjoin)
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ("**") (TRUE))) ((((unsupported)) ((((xjoin)) ((((unsupported)) ((xi)))))) ((xi)) ((xfull)))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) ("**") (""))) (TRUE))) ((((unsupported)) ((((xjoin)) ((((unsupported)) ((xi)))))) ((xi)) ((xdirs)))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) ("**") ("*"))) (TRUE))) ((((unsupported)) ((((xjoin)) ((((unsupported)) ((xi)))))) ((xi)) ((xfull)))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) (((xos).xcurdir)) ("**"))) (TRUE))) (((((unsupported)) ((((xjoin)) (((xos).xcurdir)) ("")))).add (((unsupported)) ((((xjoin)) (((xos).xcurdir)) ((((unsupported)) ((xi)))))) ((xi)) ((xfull))))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) (((xos).xcurdir)) ("**") (""))) (TRUE))) (((((unsupported)) ((((xjoin)) (((xos).xcurdir)) ("")))).add (((unsupported)) ((((xjoin)) (((xos).xcurdir)) ((((unsupported)) ((xi)))))) ((xi)) ((xdirs))))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) (((xos).xcurdir)) ("**") ("*"))) (TRUE))) ((((unsupported)) ((((xjoin)) (((xos).xcurdir)) ((((unsupported)) ((xi)))))) ((xi)) ((xfull)))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) ("**") ("zz*F"))) (TRUE))) ((((unsupported)) ((((xjoin)) ("aaa") ("zzzF"))))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ("**zz*F") (TRUE))) ((((unsupported)) 0)))
                            xexpect.write (((unsupported)) ((((xjoin)) ("a") ("bcd") ("EF"))) ("EF"))
                            (((xcan_symlink)) 0).if
                              (((unsupported)) ((xexpect)) ((((unsupported)) ((((xjoin)) ("sym3") ("EF"))))))
                            bogusForceDataize.write (((xeq)) ((((unsupported)) (((xglob).xglob)) ((((xjoin)) ("**") ("EF"))) (TRUE))) ((xexpect)))
                xtest_glob_many_open_files.write
                  [xself]
                    memory > xiters
                    memory > xbase
                    memory > xp
                    memory > xpattern
                    memory > xdepth
                    seq > @
                      seq
                        xdepth.write 30
                        xbase.write (((((xos).xpath).xjoin)) (((xself).xtempdir)) ("deep"))
                        xp.write (((((xos).xpath).xjoin)) ((xbase)) ((((unsupported)) (((((unsupported)) ("d")).mul (xdepth))))))
                        bogusForceDataize.write ((((xos).xmakedirs)) ((xp)))
                        xpattern.write (((((xos).xpath).xjoin)) ((xbase)) ((((unsupported)) (((((unsupported)) ("*")).mul (xdepth))))))
                        xiters.write (((unsupported)) ((((unsupported)) (((xglob).xiglob)) ((xpattern)) (TRUE))) ((xj)) ((((xrange)) (100))))
                        (((unsupported)) ((xit)) ((xiters)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) ((xp)))
                        xpattern.write (((((xos).xpath).xjoin)) ((xbase)) ("**") ("d"))
                        xiters.write (((unsupported)) ((((unsupported)) (((xglob).xiglob)) ((xpattern)) (TRUE))) ((xj)) ((((xrange)) (100))))
                        xp.write (xbase)
                        (((unsupported)) ((xi)) ((((xrange)) ((xdepth)))))
                          seq
                            xp.write (((((xos).xpath).xjoin)) ((xp)) ("d"))
                            (((unsupported)) ((xit)) ((xiters)))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xnext)) ((xit)))) ((xp)))
            (((unsupported)) (((xunittest).xTestCase)) ((xskip_unless_symlink)))
              xtest_selflink.write
                [xself]
                  memory > xtempdir
                  memory > xdepth
                  memory > xpath
                  memory > xresults
                  seq > @
                    seq
                      xtempdir.write ((xTESTFN).add "_dir")
                      bogusForceDataize.write ((((xos).xmakedirs)) ((xtempdir)))
                      bogusForceDataize.write ((((xself).xaddCleanup)) (((xshutil).xrmtree)) ((xtempdir)))
                      (((unsupported)) ((((xchange_cwd)) ((xtempdir)))))
                        seq
                          bogusForceDataize.write ((((xos).xmakedirs)) ("dir"))
                          bogusForceDataize.write (((xcreate_empty_file)) ((((((xos).xpath).xjoin)) ("dir") ("file"))))
                          bogusForceDataize.write ((((xos).xsymlink)) (((xos).xcurdir)) ((((((xos).xpath).xjoin)) ("dir") ("link"))))
                          xresults.write (((unsupported)) (((xglob).xglob)) ("**") (TRUE))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xresults)))) ((((xlen)) ((((xset)) ((xresults)))))))
                          xresults.write (((xset)) ((xresults)))
                          xdepth.write 0
                          while.
                            (xresults)
                            [unused]
                              seq > @
                                seq
                                  xpath.write (((((xos).xpath).xjoin)) ((((unsupported)) (((((unsupported)) ("dir")).add ((((unsupported)) ("link")).mul (xdepth)))))))
                                  bogusForceDataize.write ((((xself).xassertIn)) ((xpath)) ((xresults)))
                                  bogusForceDataize.write ((((xresults).xremove)) ((xpath)))
                                  ((xresults).not).if
                                    (((unsupported)) 0)
                                  xpath.write (((((xos).xpath).xjoin)) ((xpath)) ("file"))
                                  bogusForceDataize.write ((((xself).xassertIn)) ((xpath)) ((xresults)))
                                  bogusForceDataize.write ((((xresults).xremove)) ((xpath)))
                                  (((unsupported)) ((xdepth)) (1))
                          xresults.write (((unsupported)) (((xglob).xglob)) ((((((xos).xpath).xjoin)) ("**") ("file"))) (TRUE))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xresults)))) ((((xlen)) ((((xset)) ((xresults)))))))
                          xresults.write (((xset)) ((xresults)))
                          xdepth.write 0
                          while.
                            (xresults)
                            [unused]
                              seq > @
                                seq
                                  xpath.write (((((xos).xpath).xjoin)) ((((unsupported)) ((((((unsupported)) ("dir")).add ((((unsupported)) ("link")).mul (xdepth))).add (((unsupported)) ("file")))))))
                                  bogusForceDataize.write ((((xself).xassertIn)) ((xpath)) ((xresults)))
                                  bogusForceDataize.write ((((xresults).xremove)) ((xpath)))
                                  (((unsupported)) ((xdepth)) (1))
                          xresults.write (((unsupported)) (((xglob).xglob)) ((((((xos).xpath).xjoin)) ("**") (""))) (TRUE))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xresults)))) ((((xlen)) ((((xset)) ((xresults)))))))
                          xresults.write (((xset)) ((xresults)))
                          xdepth.write 0
                          while.
                            (xresults)
                            [unused]
                              seq > @
                                seq
                                  xpath.write (((((xos).xpath).xjoin)) ((((unsupported)) ((((((unsupported)) ("dir")).add ((((unsupported)) ("link")).mul (xdepth))).add (((unsupported)) ("")))))))
                                  bogusForceDataize.write ((((xself).xassertIn)) ((xpath)) ((xresults)))
                                  bogusForceDataize.write ((((xresults).xremove)) ((xpath)))
                                  (((unsupported)) ((xdepth)) (1))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)