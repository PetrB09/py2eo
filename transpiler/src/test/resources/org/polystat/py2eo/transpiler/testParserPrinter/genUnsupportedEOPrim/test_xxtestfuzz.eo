memory > xtest
memory > xunittest
memory > xfaulthandler
memory > x__name__
[] > test_xxtestfuzz
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_sample_input_smoke_test
        memory > x_xxtestfuzz
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            x_xxtestfuzz.write (((((xtest).xsupport).ximport_module)) ("_xxtestfuzz"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                unsupported
                xtest_sample_input_smoke_test.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) (""))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("0"))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("{"))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) (" "))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("x"))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("1"))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("AAAAAAA"))
                        bogusForceDataize.write ((((x_xxtestfuzz).xrun)) ("AAAAAA0"))
            ((x__name__).eq "__main__").if
              seq
                bogusForceDataize.write ((((xfaulthandler).xenable)) 0)
                bogusForceDataize.write ((((xunittest).xmain)) 0)