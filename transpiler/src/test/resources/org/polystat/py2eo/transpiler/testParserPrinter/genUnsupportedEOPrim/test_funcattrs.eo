memory > xtypes
memory > xdelattr
memory > xstr
memory > xexec
memory > xfunc
memory > xnum_two
memory > xUserDict
memory > xtime
memory > xF
memory > xfloat
memory > xdir
memory > xid
memory > xnum_one
memory > xAttributeError
memory > xLocalClass
memory > xValueError
memory > xFuncAttrsTest
memory > xprint
memory > xtype
memory > xUnboundLocalError
memory > xglobals
memory > xbytes
memory > xtuple
memory > xsetattr
memory > xunittest
memory > xinner_global_function
memory > xstaticmethod
memory > xNameError
memory > xlen
memory > xdict
memory > xclassmethod
memory > xTypeError
memory > x__name__
[] > test_funcattrs
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest___func__
        memory > xtest___globals__
        memory > xtest_comparison
        memory > xcannot_set_attr
        memory > xcell
        memory > xtest___code__
        memory > xempty_cell
        memory > xtest___name__
        memory > xtest___func___non_method
        memory > xglobal_function
        memory > xtest_func_default_args
        memory > xtest_func_as_dict_key
        memory > xtest_duplicate_function_equality
        memory > xtest_set_attr
        memory > xtest___self__
        memory > xtest___class__
        memory > xtest___qualname__
        memory > xtest_delete_unknown_attr
        memory > xtest_empty_cell
        memory > xtest_unassigned_dict
        memory > xtest_set_docstring_attr
        memory > xtest_blank_func_defaults
        memory > xtest_delete___dict__
        memory > xsetUp
        memory > xtest_builtin__qualname__
        memory > xtest_module
        memory > xtest_unset_attr
        memory > xtest_copying___code__
        memory > xtest_setting_dict_to_valid
        memory > xtest_dir_includes_correct_attrs
        memory > xtest___closure__
        memory > xtest_delete_docstring
        memory > xtest_set_cell
        memory > xtest_cell_new
        memory > xtest_func_attribute
        memory > xtest_setting_dict_to_invalid
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            xglobal_function.write
              []
                memory > xinner_function
                seq > @
                  seq
                    xinner_function.write
                      []
                        memory > xinner_global_function
                        seq > @
                          seq
                            (((unsupported)) 0)
                            (((unsupported)) 0)
                            xinner_global_function.write
                              []
                                memory > xinner_function2
                                seq > @
                                  seq
                                    xinner_function2.write
                                      []
                                        seq > @
                                    (((unsupported)) ((xinner_function2)))
                            (((unsupported)) ((xLocalClass)))
                    (((unsupported)) ((((unsupported)) ((xinner_function)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                          xa.write
                            [xself]
                              seq > @
                        xb.write
                          []
                            seq > @
                              (((unsupported)) (3))
                        (((unsupported)) (((xself).xfi)) ((((xF)) 0)))
                        (((unsupported)) (((xself).xF)) ((xF)))
                        (((unsupported)) (((xself).xb)) ((xb)))
                xcannot_set_attr.write
                  [xself xobj xname xvalue xexceptions]
                    seq > @
                      seq
                        (((unsupported)) ((xexceptions)))
                          bogusForceDataize.write (((xsetattr)) ((xobj)) ((xname)) ((xvalue)))
                          bogusForceDataize.write ((((xself).xfail)) (("shouldn't be able to set %s to %r".mod (((unsupported)) ((xname)) ((xvalue))))))
                        (((unsupported)) ((xexceptions)))
                          bogusForceDataize.write (((xdelattr)) ((xobj)) ((xname)))
                          bogusForceDataize.write ((((xself).xfail)) (("shouldn't be able to del %s".mod (xname))))
            (((unsupported)) ((xFuncAttrsTest)))
              seq
                xtest_module.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__module__)) ((x__name__)))
                xtest_dir_includes_correct_attrs.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xself).xb).xknown_attr)) (7))
                        bogusForceDataize.write ((((xself).xassertIn)) ("known_attr") ((((xdir)) (((xself).xb)))) ("set attributes not in dir listing of method"))
                        (((unsupported)) (((((xself).xF).xa).xknown_attr)) (7))
                        bogusForceDataize.write ((((xself).xassertIn)) ("known_attr") ((((xdir)) ((((xself).xfi).xa)))) ("set attribute on function implementations, should show up in next dir"))
                xtest_duplicate_function_equality.write
                  [xself]
                    memory > xduplicate
                    seq > @
                      seq
                        xduplicate.write
                          []
                            seq > @
                              seq
                                unsupported
                                (((unsupported)) (3))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xself).xb)) ((xduplicate)))
                xtest_copying___code__.write
                  [xself]
                    memory > xtest
                    seq > @
                      seq
                        xtest.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtest)) 0)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) (((xtest).x__code__)) ((((xself).xb).x__code__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtest)) 0)) (3))
                xtest___globals__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xself).xb).x__globals__)) ((((xglobals)) 0)))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) (((xself).xb)) ("__globals__") (2) ((((unsupported)) ((xAttributeError)) ((xTypeError)))))
                xtest___closure__.write
                  [xself]
                    memory > xc
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        xa.write 12
                        xf.write
                          []
                            seq > @
                              bogusForceDataize.write (((xprint)) ((xa)))
                        xc.write ((xf).x__closure__)
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xc)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xc)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((unsupported)) ((xc)) (0)).x__class__).x__name__)) ("cell"))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((xf)) ("__closure__") ((xc)) ((xAttributeError)))
                xtest_cell_new.write
                  [xself]
                    memory > xcell_obj
                    memory > xmsg
                    seq > @
                      seq
                        xcell_obj.write ((((xtypes).xCellType)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xcell_obj).xcell_contents)) (1))
                        xcell_obj.write ((((xtypes).xCellType)) 0)
                        xmsg.write "shouldn't be able to read an empty cell"
                        (((unsupported)) ((((unsupported)) (((xself).xassertRaises)) ((xValueError)) ((xmsg)))))
                          unsupported
                xtest_empty_cell.write
                  [xself]
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              bogusForceDataize.write (((xprint)) ((xa)))
                        (((unsupported)) ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to read an empty cell"))
                        xa.write 12
                xtest_set_cell.write
                  [xself]
                    memory > xc
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        xa.write 12
                        xf.write
                          []
                            seq > @
                              (((unsupported)) ((xa)))
                        xc.write ((xf).x__closure__)
                        (((unsupported)) (((((unsupported)) ((xc)) (0)).xcell_contents)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xc)) (0)).xcell_contents)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) 0)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) (9))
                        (((unsupported)) ((((unsupported)) (((((unsupported)) ((xc)) (0)).xcell_contents)))))
                        (((unsupported)) ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("shouldn't be able to read an empty cell"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xNameError)))))
                          bogusForceDataize.write (((xf)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xUnboundLocalError)))))
                          bogusForceDataize.write (((xprint)) ((xa)))
                xtest___name__.write
                  [xself]
                    memory > xs
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__name__)) ("b"))
                        (((unsupported)) ((((xself).xb).x__name__)) ("c"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__name__)) ("c"))
                        (((unsupported)) ((((xself).xb).x__name__)) ("d"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__name__)) ("d"))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) (((xself).xb)) ("__name__") (7) ((xTypeError)))
                        xs.write "def f(): passnf.__name__"
                        bogusForceDataize.write (((xexec)) ((xs)) ((((unsupported)) ("__builtins__") ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xfi).xa).x__name__)) ("a"))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xa)) ("__name__") ("a") ((xAttributeError)))
                xtest___qualname__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__qualname__)) ("FuncAttrsTest.setUp.<locals>.b"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xFuncAttrsTest).xsetUp).x__qualname__)) ("FuncAttrsTest.setUp"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xglobal_function).x__qualname__)) ("global_function"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xglobal_function)) 0).x__qualname__)) ("global_function.<locals>.<lambda>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((xglobal_function)) 0)) 0).x__qualname__)) ("global_function.<locals>.inner_function"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((((((xglobal_function)) 0)) 0)) 0).x__qualname__)) ("global_function.<locals>.inner_function.<locals>.LocalClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xinner_global_function).x__qualname__)) ("inner_global_function"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xinner_global_function)) 0).x__qualname__)) ("inner_global_function.<locals>.inner_function2"))
                        (((unsupported)) ((((xself).xb).x__qualname__)) ("c"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__qualname__)) ("c"))
                        (((unsupported)) ((((xself).xb).x__qualname__)) ("d"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__qualname__)) ("d"))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) (((xself).xb)) ("__qualname__") (7) ((xTypeError)))
                xtest___code__.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xb
                    memory > xe
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xnum_one)) ((xnum_two)))) ((((unsupported)) (7) (8))))
                        xa.write
                          []
                            seq > @
                        xb.write
                          []
                            seq > @
                              (((unsupported)) (12))
                        xc.write
                          []
                            seq > @
                              (((unsupported)) ((xnum_one)))
                        xd.write
                          []
                            seq > @
                              (((unsupported)) ((xnum_two)))
                        xe.write
                          []
                            seq > @
                              (((unsupported)) ((((unsupported)) ((xnum_one)) ((xnum_two)))))
                        (((unsupported)) ((xfunc)) ((((unsupported)) ((xa)) ((xb)) ((xc)) ((xd)) ((xe)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((xfunc).x__code__)))) (((xtypes).xCodeType)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xc)) 0)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xd)) 0)) (8))
                        (((unsupported)) (((xd).x__code__)) (((xc).x__code__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).x__code__)) (((xd).x__code__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xc)) 0)) (7))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) (((xb).x__code__)) (((xc).x__code__)))
                          bogusForceDataize.write ((((xself).xfail)) ("__code__ with different numbers of free vars should not be possible"))
                        (((unsupported)) ((xValueError)))
                          (((unsupported)) (((xe).x__code__)) (((xd).x__code__)))
                          bogusForceDataize.write ((((xself).xfail)) ("__code__ with different numbers of free vars should not be possible"))
                xtest_blank_func_defaults.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__defaults__)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((((unsupported)) ((((xself).xb).x__defaults__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__defaults__)) ("None: is there a None literal in the EO language?"))
                xtest_func_default_args.write
                  [xself]
                    memory > xfirst_func
                    memory > xsecond_func
                    seq > @
                      seq
                        xfirst_func.write
                          [xa xb]
                            seq > @
                              (((unsupported)) (((xa).add (xb))))
                        xsecond_func.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((xa).add (xb))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xfirst_func).x__defaults__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xsecond_func).x__defaults__)) ((((unsupported)) (1) (2))))
                        (((unsupported)) (((xfirst_func).x__defaults__)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xfirst_func).x__defaults__)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfirst_func)) 0)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfirst_func)) (3))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfirst_func)) (3) (5))) (8))
                        (((unsupported)) ((((unsupported)) (((xsecond_func).x__defaults__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xsecond_func).x__defaults__)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write (((xsecond_func)) 0)
                          bogusForceDataize.write ((((xself).xfail)) ("__defaults__ does not update; deleting it does not remove requirement"))
            (((unsupported)) ((xFuncAttrsTest)))
              seq
                xtest___class__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xfi).xa).x__self__).x__class__)) (((xself).xF)))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xa)) ("__class__") (((xself).xF)) ((xTypeError)))
                xtest___func__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xfi).xa).x__func__)) ((((xself).xF).xa)))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xa)) ("__func__") ((((xself).xF).xa)) ((xAttributeError)))
                xtest___self__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xfi).xa).x__self__)) (((xself).xfi)))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xa)) ("__self__") (((xself).xfi)) ((xAttributeError)))
                xtest___func___non_method.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xself).xfi).xid)) (((((xtypes).xMethodType)) ((xid)) (((xself).xfi)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xfi).xid)) 0)) ((((xid)) (((xself).xfi)))))
                        (((unsupported)) ((xAttributeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("using unknown attributes should raise AttributeError"))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xid)) ("unknown_attr") (2) ((xAttributeError)))
            (((unsupported)) ((xFuncAttrsTest)))
              seq
                xtest_set_attr.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xself).xb).xknown_attr)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).xknown_attr)) (7))
                        (((unsupported)) ((xAttributeError)))
                          (((unsupported)) (((((xself).xfi).xa).xknown_attr)) (7))
                          bogusForceDataize.write ((((xself).xfail)) ("setting attributes on methods should raise error"))
                xtest_delete_unknown_attr.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xAttributeError)))
                        (((unsupported)) ((((unsupported)) ((((xself).xb).xunknown_attr)))))
                        bogusForceDataize.write ((((xself).xfail)) ("deleting unknown attribute should raise TypeError"))
                xtest_unset_attr.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xfunc)) ((((unsupported)) (((xself).xb)) ((((xself).xfi).xa)))))
                        (((unsupported)) ((xAttributeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)) ("using unknown attributes should raise AttributeError"))
            (((unsupported)) ((xFuncAttrsTest)))
              seq
                xtest_setting_dict_to_invalid.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) (((xself).xb)) ("__dict__") ("None: is there a None literal in the EO language?") ((xTypeError)))
                        (((unsupported)) 0)
                        xd.write (((xUserDict)) ((((unsupported)) ("known_attr") (7))))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) (((((xself).xfi).xa).x__func__)) ("__dict__") ((xd)) ((xTypeError)))
                xtest_setting_dict_to_valid.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write (((unsupported)) ("known_attr") (7))
                        (((unsupported)) ((((xself).xb).x__dict__)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xd)) ((((xself).xb).x__dict__)))
                        (((unsupported)) (((((xself).xF).xa).x__dict__)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xd)) ((((((xself).xfi).xa).x__func__).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((xd)) (((((xself).xfi).xa).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).xknown_attr)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xb).x__dict__)) ("known_attr"))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xfi).xa).x__func__).xknown_attr)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xfi).xa).xknown_attr)) (7))
                xtest_delete___dict__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xTypeError)))
                        (((unsupported)) ((((unsupported)) ((((xself).xb).x__dict__)))))
                        bogusForceDataize.write ((((xself).xfail)) ("deleting function dictionary should raise TypeError"))
                xtest_unassigned_dict.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__dict__)) ((((unsupported)) 0)))
                xtest_func_as_dict_key.write
                  [xself]
                    memory > xd
                    memory > xvalue
                    seq > @
                      seq
                        xvalue.write "Some string"
                        xd.write (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xd)) (((xself).xb)))) ((xvalue)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xd)) (((xself).xb)))) ((xvalue)))
            (((unsupported)) ((xFuncAttrsTest)))
              seq
                xtest_set_docstring_attr.write
                  [xself]
                    memory > xdocstr
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__doc__)) ("None: is there a None literal in the EO language?"))
                        xdocstr.write "A test method that does nothing"
                        (((unsupported)) ((((xself).xb).x__doc__)) ((xdocstr)))
                        (((unsupported)) (((((xself).xF).xa).x__doc__)) ((xdocstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__doc__)) ((xdocstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xfi).xa).x__doc__)) ((xdocstr)))
                        bogusForceDataize.write ((((xself).xcannot_set_attr)) ((((xself).xfi).xa)) ("__doc__") ((xdocstr)) ((xAttributeError)))
                xtest_delete_docstring.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xself).xb).x__doc__)) ("The docstring"))
                        (((unsupported)) ((((unsupported)) ((((xself).xb).x__doc__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xself).xb).x__doc__)) ("None: is there a None literal in the EO language?"))
            xcell.write
              [xvalue]
                memory > xf
                memory > xa
                seq > @
                  seq
                    unsupported
                    xf.write
                      []
                        seq > @
                          bogusForceDataize.write (((xprint)) ((xa)))
                    xa.write (xvalue)
                    (((unsupported)) ((((unsupported)) (((xf).x__closure__)) (0))))
            xempty_cell.write
              [xempty]
                memory > xf
                memory > xa
                seq > @
                  (((unsupported)) 0)
                    unsupported
                    xf.write
                      []
                        seq > @
                          bogusForceDataize.write (((xprint)) ((xa)))
                    ((xempty).not).if
                      xa.write 1729
                    (((unsupported)) ((((unsupported)) (((xf).x__closure__)) (0))))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_comparison.write
                [xself]
                  seq > @
                    seq
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xcell)) (2)).less (((xcell)) (3)))))
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xempty_cell)) 0).less (((xcell)) ("saturday")))))
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xempty_cell)) 0).eq (((xempty_cell)) 0))))
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xcell)) ((36.neg))).eq (((xcell)) ((36.0.neg))))))
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xcell)) (TRUE)).greater (((xempty_cell)) 0))))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_func_attribute.write
                [xself]
                  memory > xs
                  memory > xc
                  memory > xf
                  seq > @
                    seq
                      xf.write
                        []
                          seq > @
                      xc.write (((xclassmethod)) ((xf)))
                      bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xc).x__func__)) ((xf)))))
                      xs.write (((xstaticmethod)) ((xf)))
                      bogusForceDataize.write ((((xself).xassertTrue)) ((((unsupported)) (((xs).x__func__)) ((xf)))))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_builtin__qualname__.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)) 0)
                      bogusForceDataize.write ((((xself).xassertEqual)) (((xlen).x__qualname__)) ("len"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xtime).xtime).x__qualname__)) ("time"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xdict).xfromkeys).x__qualname__)) ("dict.fromkeys"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xfloat).x__getformat__).x__qualname__)) ("float.__getformat__"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr).xmaketrans).x__qualname__)) ("str.maketrans"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xbytes).xmaketrans).x__qualname__)) ("bytes.maketrans"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((((unsupported)) (1) (2) (3)).xappend).x__qualname__)) ("list.append"))
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((((unsupported)) ("foo") ("bar")).xpop).x__qualname__)) ("dict.pop"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)