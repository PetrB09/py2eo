memory > xk
memory > xarg_real
memory > xTestFloor
memory > xrun_unittest
memory > xplatform
memory > xv2
memory > xexp_real
memory > xflags
memory > xbin
memory > xexpected
memory > xshuffle
memory > xlist
memory > xdecimal
memory > xTestNoCeil
memory > xenumerate
memory > xulp_tol
memory > xIsCloseTests
memory > xpx
memory > xv1
memory > xValueError
memory > xfunc
memory > xrange
memory > xmath
memory > xqx
memory > xDocFileSuite
memory > xb
memory > xvalue
memory > xlhs
memory > xT
memory > xbytearray
memory > xTestNoTrunc
memory > xcase
memory > xe1
memory > xfn
memory > xfr
memory > xmax
memory > xrhs
memory > xeexp
memory > xrandom
memory > xopen
memory > xreversed
memory > xMathTests
memory > xany
memory > xtype
memory > xFraction
memory > xint
memory > xemant
memory > xOverflowError
memory > xsum
memory > xx
memory > xi
memory > xfx
memory > xF
memory > xstruct
memory > xarg
memory > xTestNoFloor
memory > xs
memory > xsupport
memory > xsys
memory > xbool
memory > xgauss
memory > xm
memory > xtuple
memory > xe2
memory > xexp
memory > xfloat
memory > xfloat_info
memory > xar
memory > xexp_imag
memory > xargs
memory > xitertools
memory > xos
memory > xx_hex
memory > xei
memory > xabs_tol
memory > xgetattr
memory > xexpected_hex
memory > xid
memory > xfy
memory > xmant
memory > xTestTrunc
memory > xiter
memory > xe
memory > x__file__
memory > xDecimal
memory > xelem
memory > xzip
memory > xunittest
memory > xy
memory > xMyIndexable
memory > xmap
memory > xn
memory > xobject
memory > xarg_imag
memory > xIntSubclass
memory > xkwargs
memory > xabs
memory > xIntegerLike
memory > xline
memory > xlen
memory > xy_hex
memory > xTestCeil
memory > xj
memory > xisinstance
memory > xfp
memory > xai
memory > xTypeError
memory > x__name__
memory > xa
[] > test_math
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtestAsin
        memory > xtest_eight_decimal_places
        memory > xtestAtan2
        memory > xeps
        memory > xtestFmod
        memory > xtest_near_zero
        memory > xtest_zero_tolerance
        memory > xtestLog
        memory > xtestIsinf
        memory > xtestLog1p
        memory > xtest_inf_constant
        memory > xtestSqrt
        memory > xtestFactorialNonIntegers
        memory > xFLOAT_MIN
        memory > x__index__
        memory > xassertAllClose
        memory > xtestCos
        memory > xtestCopysign
        memory > xtestHypot
        memory > xtest_exceptions
        memory > xtestRemainder
        memory > xmath_testcases
        memory > xtestFsum
        memory > xtest_decimals
        memory > xtestCeil
        memory > xtestAcos
        memory > xfile
        memory > xFLOAT_MAX
        memory > xtestPerm
        memory > xtestIsfinite
        memory > xtestRadians
        memory > xtest_main
        memory > xtestFactorialHugeInputs
        memory > xparse_mtestfile
        memory > xassertAllNotClose
        memory > xtest_dir
        memory > xtest_trunc
        memory > xulp_abs_check
        memory > xtest_issue39871
        memory > xtestIsqrt
        memory > xtest_asymmetry
        memory > xNINF
        memory > xtest_identical
        memory > xtest_integers
        memory > xtestAtan
        memory > xtest_inf_ninf_nan
        memory > xulp
        memory > xtestAtanh
        memory > xtest_fractions
        memory > xisclose
        memory > xtestLog10
        memory > xtest_identical_infinite
        memory > xtestSin
        memory > xtestTanhSign
        memory > xpartial_product
        memory > xassertIsNotClose
        memory > xtestAcosh
        memory > xtest_negative_tolerances
        memory > xtestLdexp
        memory > xftest
        memory > xcount_set_bits
        memory > xtestModf
        memory > xtestLog2Exact
        memory > xtest_testfile
        memory > xtestFabs
        memory > xHAVE_DOUBLE_ROUNDING
        memory > xtestGcd
        memory > xtestPow
        memory > xtestIsnan
        memory > xtestLog2
        memory > xtest_mtestfile
        memory > xtestDist
        memory > xtestFloor
        memory > xtestTanh
        memory > xparse_testfile
        memory > x__init__
        memory > xtestAsinh
        memory > xassertIsNaN
        memory > xtestFactorial
        memory > xtestTan
        memory > xtestConstants
        memory > xto_ulps
        memory > xtestExp
        memory > xtest_prod
        memory > xtestCosh
        memory > xtestComb
        memory > xINF
        memory > xtestFrexp
        memory > xtestDegrees
        memory > xtest_nan_constant
        memory > xpy_factorial
        memory > xtest_file
        memory > xtestSinh
        memory > xNAN
        memory > xresult_check
        memory > xassertIsClose
        seq > @
          seq
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xeps.write (((unsupported)) 0)
            xNAN.write (((xfloat)) ("nan"))
            xINF.write (((xfloat)) ("inf"))
            xNINF.write (((xfloat)) ("-inf"))
            xFLOAT_MAX.write (((xsys).xfloat_info).xmax)
            xFLOAT_MIN.write (((xsys).xfloat_info).xmin)
            (((unsupported)) ((((unsupported)) ((xx)) ((xy)))) ((((unsupported)) ((((unsupported)) 0)) (2.9999))))
            xHAVE_DOUBLE_ROUNDING.write (((xx).add (xy)).eq ((((unsupported)) 0).add 4))
            ((x__name__).eq "__main__").if
              xfile.write (((unsupported)) (((xsys).xargv)) (0))
              xfile.write (x__file__)
            xtest_dir.write ((((((xos).xpath).xdirname)) ((xfile))).or ((xos).xcurdir))
            xmath_testcases.write (((((xos).xpath).xjoin)) ((xtest_dir)) ("math_testcases.txt"))
            xtest_file.write (((((xos).xpath).xjoin)) ((xtest_dir)) ("cmath_testcases.txt"))
            xto_ulps.write
              [xx]
                memory > xn
                seq > @
                  seq
                    (((unsupported)) 0)
                    xn.write (((unsupported)) (((((xstruct).xunpack)) ("<q") (((((xstruct).xpack)) ("<d") ((xx)))))) (0))
                    ((xn).less 0).if
                      xn.write (((xn).add (((unsupported)) (2) (63))).neg)
                    (((unsupported)) ((xn)))
            xulp.write
              [xx]
                memory > xn
                memory > xx_prev
                memory > xx_next
                seq > @
                  seq
                    (((unsupported)) 0)
                    xx.write (((xabs)) ((((xfloat)) ((xx)))))
                    (((((xmath).xisnan)) ((xx))).or ((((xmath).xisinf)) ((xx)))).if
                      (((unsupported)) ((xx)))
                    xn.write (((unsupported)) (((((xstruct).xunpack)) ("<q") (((((xstruct).xpack)) ("<d") ((xx)))))) (0))
                    xx_next.write (((unsupported)) (((((xstruct).xunpack)) ("<d") (((((xstruct).xpack)) ("<q") (((xn).add 1)))))) (0))
                    ((((xmath).xisinf)) ((xx_next))).if
                      seq
                        xx_prev.write (((unsupported)) (((((xstruct).xunpack)) ("<d") (((((xstruct).xpack)) ("<q") (((xn).sub 1)))))) (0))
                        (((unsupported)) (((xx).sub (xx_prev))))
                      (((unsupported)) (((xx_next).sub (xx))))
            xcount_set_bits.write
              [xn]
                seq > @
                  seq
                    unsupported
                    (((unsupported)) (((xn).if (1.add (((xcount_set_bits)) (((xn).and ((xn).sub 1))))) 0)))
            xpartial_product.write
              [xstart xstop]
                memory > xnumfactors
                memory > xmid
                seq > @
                  seq
                    (((unsupported)) 0)
                    xnumfactors.write (((unsupported)) (((xstop).sub (xstart))) (1))
                    ((xnumfactors).not).if
                      (((unsupported)) (1))
                      ((xnumfactors).eq 1).if
                        (((unsupported)) ((xstart)))
                        seq
                          xmid.write (((xstart).add (xnumfactors)).or 1)
                          (((unsupported)) (((((xpartial_product)) ((xstart)) ((xmid))).mul (((xpartial_product)) ((xmid)) ((xstop))))))
            xpy_factorial.write
              [xn]
                memory > xinner
                memory > xouter
                seq > @
                  seq
                    (((unsupported)) 0)
                    (((unsupported)) ((xinner)) ((xouter)) (1))
                    (((unsupported)) ((xi)) ((((xreversed)) ((((xrange)) (((((xn).xbit_length)) 0)))))))
                      seq
                        (((unsupported)) ((xinner)) ((((xpartial_product)) ((((((unsupported)) ((xn)) (((xi).add 1))).add 1).or 1)) ((((((unsupported)) ((xn)) ((xi))).add 1).or 1)))))
                        (((unsupported)) ((xouter)) ((xinner)))
                    (((unsupported)) ((((unsupported)) ((xouter)) (((xn).sub (((xcount_set_bits)) ((xn))))))))
            xulp_abs_check.write
              [xexpected xgot xulp_tol xabs_tol]
                memory > xulp_error
                memory > xabs_error
                memory > xfmt
                seq > @
                  seq
                    (((unsupported)) 0)
                    xulp_error.write (((xabs)) (((((xto_ulps)) ((xexpected))).sub (((xto_ulps)) ((xgot))))))
                    xabs_error.write (((xabs)) (((xexpected).sub (xgot))))
                    (((xabs_error).leq (xabs_tol)).or ((xulp_error).leq (xulp_tol))).if
                      (((unsupported)) ("None: is there a None literal in the EO language?"))
                      seq
                        xfmt.write "error = {:.3g} ({:d} ulps); permitted error = {:.3g} or {:d} ulps"
                        (((unsupported)) (((((xfmt).xformat)) ((xabs_error)) ((xulp_error)) ((xabs_tol)) ((xulp_tol)))))
            xparse_mtestfile.write
              [xfname]
                memory > xexp
                memory > xrhs_pieces
                memory > xflags
                memory > xline
                seq > @
                  seq
                    (((unsupported)) 0)
                    (((unsupported)) ((((xopen)) ((xfname)))) ((xfp)))
                      (((unsupported)) ((xline)) ((xfp)))
                        seq
                          (((unsupported)) ("--") ((xline))).if
                            xline.write (((unsupported)) ((xline)) ((((unsupported)) (((((xline).xindex)) ("--"))))))
                          (((((xline).xstrip)) 0).not).if
                            (((unsupported)) 0)
                          (((unsupported)) ((((unsupported)) ((xlhs)) ((xrhs)))) (((((xline).xsplit)) ("->"))))
                          (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((xarg)))) (((((xlhs).xsplit)) 0)))
                          xrhs_pieces.write ((((xrhs).xsplit)) 0)
                          xexp.write (((unsupported)) ((xrhs_pieces)) (0))
                          xflags.write (((unsupported)) ((xrhs_pieces)) ((((unsupported)) (1))))
                          (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((((xfloat)) ((xarg)))) ((((xfloat)) ((xexp)))) ((xflags)))))
            xparse_testfile.write
              [xfname]
                memory > xrhs_pieces
                memory > xflags
                seq > @
                  seq
                    (((unsupported)) 0)
                    (((unsupported)) ((((xopen)) ((xfname)))) ((xfp)))
                      (((unsupported)) ((xline)) ((xfp)))
                        seq
                          (((((xline).xstartswith)) ("--")).or (((((xline).xstrip)) 0).not)).if
                            (((unsupported)) 0)
                          (((unsupported)) ((((unsupported)) ((xlhs)) ((xrhs)))) (((((xline).xsplit)) ("->"))))
                          (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((xarg_real)) ((xarg_imag)))) (((((xlhs).xsplit)) 0)))
                          xrhs_pieces.write ((((xrhs).xsplit)) 0)
                          (((unsupported)) ((((unsupported)) ((xexp_real)) ((xexp_imag)))) ((((unsupported)) ((((unsupported)) ((xrhs_pieces)) (0))) ((((unsupported)) ((xrhs_pieces)) (1))))))
                          xflags.write (((unsupported)) ((xrhs_pieces)) ((((unsupported)) (2))))
                          (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((((xfloat)) ((xarg_real)))) ((((xfloat)) ((xarg_imag)))) ((((xfloat)) ((xexp_real)))) ((((xfloat)) ((xexp_imag)))) ((xflags)))))
            xresult_check.write
              [xexpected xgot xulp_tol xabs_tol]
                memory > xfail_fmt
                memory > xfailure
                memory > xfail_msg
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) 0)
                    ((xgot).eq (xexpected)).if
                      (((unsupported)) ("None: is there a None literal in the EO language?"))
                    xfailure.write "not equal"
                    ((((xisinstance)) ((xexpected)) ((xfloat))).and (((xisinstance)) ((xgot)) ((xint)))).if
                      xgot.write (((xfloat)) ((xgot)))
                      ((((xisinstance)) ((xgot)) ((xfloat))).and (((xisinstance)) ((xexpected)) ((xint)))).if
                        xexpected.write (((xfloat)) ((xexpected)))
                    ((((xisinstance)) ((xexpected)) ((xfloat))).and (((xisinstance)) ((xgot)) ((xfloat)))).if
                      (((((xmath).xisnan)) ((xexpected))).and ((((xmath).xisnan)) ((xgot)))).if
                        xfailure.write "None: is there a None literal in the EO language?"
                        (((((xmath).xisinf)) ((xexpected))).or ((((xmath).xisinf)) ((xgot)))).if
                          xfailure.write (((xulp_abs_check)) ((xexpected)) ((xgot)) ((xulp_tol)) ((xabs_tol)))
                    (((unsupported)) ((xfailure)) ("None: is there a None literal in the EO language?")).if
                      seq
                        xfail_fmt.write "expected {!r}, got {!r}"
                        xfail_msg.write ((((xfail_fmt).xformat)) ((xexpected)) ((xgot)))
                        (((unsupported)) ((xfail_msg)) ((((" ({})".xformat)) ((xfailure)))))
                        (((unsupported)) ((xfail_msg)))
                      (((unsupported)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) ((xint)))
            (((unsupported)) ((xobject)))
              seq
                x__init__.write
                  [xself xvalue]
                    seq > @
                      (((unsupported)) (((xself).xvalue)) ((xvalue)))
                x__index__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xvalue)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xftest.write
                  [xself xname xgot xexpected xulp_tol xabs_tol]
                    memory > xfailure
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xfailure.write (((xresult_check)) ((xexpected)) ((xgot)) ((xulp_tol)) ((xabs_tol)))
                        (((unsupported)) ((xfailure)) ("None: is there a None literal in the EO language?")).if
                          bogusForceDataize.write ((((xself).xfail)) (((("{}: {}".xformat)) ((xname)) ((xfailure)))))
                xtestConstants.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xftest)) ("pi") (((xmath).xpi)) (3.141592653589793238462643))
                        bogusForceDataize.write ((((xself).xftest)) ("e") (((xmath).xe)) (2.718281828459045235360287))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xmath).xtau)) ((2.mul ((xmath).xpi))))
                xtestAcos.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xacos)))
                        bogusForceDataize.write ((((xself).xftest)) ("acos(-1)") (((((xmath).xacos)) ((1.neg)))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xftest)) ("acos(0)") (((((xmath).xacos)) (0))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("acos(1)") (((((xmath).xacos)) (1))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacos)) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacos)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacos)) ((1.add (xeps))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacos)) (((1.neg).sub (xeps))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xacos)) ((xNAN)))))))
                xtestAcosh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xacosh)))
                        bogusForceDataize.write ((((xself).xftest)) ("acosh(1)") (((((xmath).xacosh)) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("acosh(2)") (((((xmath).xacosh)) (2))) (1.3169578969248168))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacosh)) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacosh)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xacosh)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xacosh)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xacosh)) ((xNAN)))))))
                xtestAsin.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xasin)))
                        bogusForceDataize.write ((((xself).xftest)) ("asin(-1)") (((((xmath).xasin)) ((1.neg)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("asin(0)") (((((xmath).xasin)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("asin(1)") (((((xmath).xasin)) (1))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xasin)) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xasin)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xasin)) ((1.add (xeps))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xasin)) (((1.neg).sub (xeps))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xasin)) ((xNAN)))))))
                xtestAsinh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xasinh)))
                        bogusForceDataize.write ((((xself).xftest)) ("asinh(0)") (((((xmath).xasinh)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("asinh(1)") (((((xmath).xasinh)) (1))) (0.88137358701954305))
                        bogusForceDataize.write ((((xself).xftest)) ("asinh(-1)") (((((xmath).xasinh)) ((1.neg)))) ((0.88137358701954305.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xasinh)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xasinh)) ((xNINF)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xasinh)) ((xNAN)))))))
                xtestAtan.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xatan)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan(-1)") (((((xmath).xatan)) ((1.neg)))) (((((xmath).xpi).neg).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan(0)") (((((xmath).xatan)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("atan(1)") (((((xmath).xatan)) (1))) ((((xmath).xpi).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan(inf)") (((((xmath).xatan)) ((xINF)))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan(-inf)") (((((xmath).xatan)) ((xNINF)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan)) ((xNAN)))))))
                xtestAtanh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xatan)))
                        bogusForceDataize.write ((((xself).xftest)) ("atanh(0)") (((((xmath).xatanh)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("atanh(0.5)") (((((xmath).xatanh)) (0.5))) (0.54930614433405489))
                        bogusForceDataize.write ((((xself).xftest)) ("atanh(-0.5)") (((((xmath).xatanh)) ((0.5.neg)))) ((0.54930614433405489.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xatanh)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xatanh)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xatanh)) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xatanh)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatanh)) ((xNAN)))))))
                xtestAtan2.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xatan2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-1, 0)") (((((xmath).xatan2)) ((1.neg)) (0))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-1, 1)") (((((xmath).xatan2)) ((1.neg)) (1))) (((((xmath).xpi).neg).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(0, 1)") (((((xmath).xatan2)) (0) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(1, 1)") (((((xmath).xatan2)) (1) (1))) ((((xmath).xpi).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(1, 0)") (((((xmath).xatan2)) (1) (0))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(0., -inf)") (((((xmath).xatan2)) ((((unsupported)) 0)) ((xNINF)))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(0., -2.3)") (((((xmath).xatan2)) ((((unsupported)) 0)) ((2.3.neg)))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(0., -0.)") (((((xmath).xatan2)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) ((((unsupported)) 0)) (2.3))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) ((((unsupported)) 0)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((((unsupported)) 0)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-0., -inf)") (((((xmath).xatan2)) (((((unsupported)) 0).neg)) ((xNINF)))) ((((xmath).xpi).neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-0., -2.3)") (((((xmath).xatan2)) (((((unsupported)) 0).neg)) ((2.3.neg)))) ((((xmath).xpi).neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-0., -0.)") (((((xmath).xatan2)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) ((((xmath).xpi).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) (((((unsupported)) 0).neg)) (2.3))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) (((((unsupported)) 0).neg)) ((xINF)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) (((((unsupported)) 0).neg)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, -inf)") (((((xmath).xatan2)) ((xINF)) ((xNINF)))) (((((xmath).xpi).mul 3).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, -2.3)") (((((xmath).xatan2)) ((xINF)) ((2.3.neg)))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, -0.)") (((((xmath).xatan2)) ((xINF)) ((0.0.neg)))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, 0.)") (((((xmath).xatan2)) ((xINF)) (0.0))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, 2.3)") (((((xmath).xatan2)) ((xINF)) (2.3))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(inf, inf)") (((((xmath).xatan2)) ((xINF)) ((xINF)))) ((((xmath).xpi).div 4)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xINF)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, -inf)") (((((xmath).xatan2)) ((xNINF)) ((xNINF)))) ((((((xmath).xpi).neg).mul 3).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, -2.3)") (((((xmath).xatan2)) ((xNINF)) ((2.3.neg)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, -0.)") (((((xmath).xatan2)) ((xNINF)) ((0.0.neg)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, 0.)") (((((xmath).xatan2)) ((xNINF)) (0.0))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, 2.3)") (((((xmath).xatan2)) ((xNINF)) (2.3))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-inf, inf)") (((((xmath).xatan2)) ((xNINF)) ((xINF)))) (((((xmath).xpi).neg).div 4)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNINF)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(2.3, -inf)") (((((xmath).xatan2)) (2.3) ((xNINF)))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(2.3, -0.)") (((((xmath).xatan2)) (2.3) (((((unsupported)) 0).neg)))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(2.3, 0.)") (((((xmath).xatan2)) (2.3) ((((unsupported)) 0)))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) (2.3) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) (2.3) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-2.3, -inf)") (((((xmath).xatan2)) ((2.3.neg)) ((xNINF)))) ((((xmath).xpi).neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-2.3, -0.)") (((((xmath).xatan2)) ((2.3.neg)) (((((unsupported)) 0).neg)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("atan2(-2.3, 0.)") (((((xmath).xatan2)) ((2.3.neg)) ((((unsupported)) 0)))) (((((xmath).xpi).neg).div 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xatan2)) ((2.3.neg)) ((xINF)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((2.3.neg)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) ((xNINF)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) ((2.3.neg)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) (((((unsupported)) 0).neg)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) (2.3))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) ((xINF)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xatan2)) ((xNAN)) ((xNAN)))))))
                xtestCeil.write
                  [xself]
                    memory > xt
                    memory > x__ceil__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xceil)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xint)) ((((xtype)) (((((xmath).xceil)) (0.5))))))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(0.5)") (((((xmath).xceil)) (0.5))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(1.0)") (((((xmath).xceil)) (1.0))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(1.5)") (((((xmath).xceil)) (1.5))) (2))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(-0.5)") (((((xmath).xceil)) ((0.5.neg)))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(-1.0)") (((((xmath).xceil)) ((1.0.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(-1.5)") (((((xmath).xceil)) ((1.5.neg)))) ((1.neg)))
                        (((unsupported)) 0)
                          x__ceil__.write
                            [xself]
                              seq > @
                                (((unsupported)) (42))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xftest)) ("ceil(TestCeil())") (((((xmath).xceil)) ((((xTestCeil)) 0)))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xceil)) ((((xTestNoCeil)) 0)))
                        xt.write (((xTestNoCeil)) 0)
                        (((unsupported)) (((xt).x__ceil__)) ((((unsupported)) ((xargs)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xceil)) ((xt)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xceil)) ((xt)) (0))
                xtestCopysign.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) (1) (42))) (1.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) (42))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) ((42.neg)))) ((1.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) (3) ((((unsupported)) 0)))) (3.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) ((4.0.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xcopysign)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xINF)) ((((unsupported)) 0)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xINF)) (((((unsupported)) 0).neg)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xNINF)) ((((unsupported)) 0)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xNINF)) (((((unsupported)) 0).neg)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) ((xNINF)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xINF)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xINF)) ((xNINF)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xNINF)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((xNINF)) ((xNINF)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcopysign)) ((xNAN)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcopysign)) ((xNAN)) ((xINF)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcopysign)) ((xNAN)) ((xNINF)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcopysign)) ((xNAN)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) (((((xmath).xcopysign)) ((xINF)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xabs)) (((((xmath).xcopysign)) ((((unsupported)) 0)) ((xNAN)))))) ((((unsupported)) 0)))
                xtestCos.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xcos)))
                        (((unsupported)) (((xself).xftest)) ("cos(-pi/2)") (((((xmath).xcos)) (((((xmath).xpi).neg).div 2)))) (0) ((((xulp)) (1))))
                        bogusForceDataize.write ((((xself).xftest)) ("cos(0)") (((((xmath).xcos)) (0))) (1))
                        (((unsupported)) (((xself).xftest)) ("cos(pi/2)") (((((xmath).xcos)) ((((xmath).xpi).div 2)))) (0) ((((xulp)) (1))))
                        bogusForceDataize.write ((((xself).xftest)) ("cos(pi)") (((((xmath).xcos)) (((xmath).xpi)))) ((1.neg)))
                        (((unsupported)) ((xValueError)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcos)) ((xINF)))))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcos)) ((xNINF)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xcos)) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xcos)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcos)) ((xNAN)))))))
                xtestCosh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xcosh)))
                        bogusForceDataize.write ((((xself).xftest)) ("cosh(0)") (((((xmath).xcosh)) (0))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("cosh(2)-2*cosh(1)**2") ((((((xmath).xcosh)) (2)).sub (2.mul (((unsupported)) (((((xmath).xcosh)) (1))) (2))))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcosh)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcosh)) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xcosh)) ((xNAN)))))))
                xtestDegrees.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xdegrees)))
                        bogusForceDataize.write ((((xself).xftest)) ("degrees(pi)") (((((xmath).xdegrees)) (((xmath).xpi)))) (180.0))
                        bogusForceDataize.write ((((xself).xftest)) ("degrees(pi/2)") (((((xmath).xdegrees)) ((((xmath).xpi).div 2)))) (90.0))
                        bogusForceDataize.write ((((xself).xftest)) ("degrees(-pi/4)") (((((xmath).xdegrees)) (((((xmath).xpi).neg).div 4)))) ((45.0.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("degrees(0)") (((((xmath).xdegrees)) (0))) (0))
                xtestExp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xexp)))
                        bogusForceDataize.write ((((xself).xftest)) ("exp(-1)") (((((xmath).xexp)) ((1.neg)))) ((1.div ((xmath).xe))))
                        bogusForceDataize.write ((((xself).xftest)) ("exp(0)") (((((xmath).xexp)) (0))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("exp(1)") (((((xmath).xexp)) (1))) (((xmath).xe)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xexp)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xexp)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xexp)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xexp)) (1000000))
                xtestFabs.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfabs)))
                        bogusForceDataize.write ((((xself).xftest)) ("fabs(-1)") (((((xmath).xfabs)) ((1.neg)))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("fabs(0)") (((((xmath).xfabs)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("fabs(1)") (((((xmath).xfabs)) (1))) (1))
                xtestFactorial.write
                  [xself]
                    memory > xtotal
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfactorial)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfactorial)) (0.0))) (1))
                        xtotal.write 1
                        (((unsupported)) ((xi)) ((((xrange)) (1) (1000))))
                          seq
                            (((unsupported)) ((xtotal)) ((xi)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfactorial)) ((xi)))) ((xtotal)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfactorial)) ((((xfloat)) ((xi)))))) ((xtotal)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfactorial)) ((xi)))) ((((xpy_factorial)) ((xi)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfactorial)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfactorial)) ((1.0.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfactorial)) (((((unsupported)) (10) (100)).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfactorial)) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfactorial)) (((xmath).xpi)))
                xtestFactorialNonIntegers.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfactorial)) (((((xdecimal).xDecimal)) (5.2))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfactorial)) ("5"))
                xtestFactorialHugeInputs.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xfactorial)) ((((unsupported)) (10) (100))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xfactorial)) ((((unsupported)) 0)))
                xtestFloor.write
                  [xself]
                    memory > xt
                    memory > x__floor__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfloor)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xint)) ((((xtype)) (((((xmath).xfloor)) (0.5))))))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(0.5)") (((((xmath).xfloor)) (0.5))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(1.0)") (((((xmath).xfloor)) (1.0))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(1.5)") (((((xmath).xfloor)) (1.5))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(-0.5)") (((((xmath).xfloor)) ((0.5.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(-1.0)") (((((xmath).xfloor)) ((1.0.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(-1.5)") (((((xmath).xfloor)) ((1.5.neg)))) ((2.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(1.23e167)") (((((xmath).xfloor)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xftest)) ("floor(-1.23e167)") (((((xmath).xfloor)) (((((unsupported)) 0).neg)))) (((((unsupported)) 0).neg)))
                        (((unsupported)) 0)
                          x__floor__.write
                            [xself]
                              seq > @
                                (((unsupported)) (42))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xftest)) ("floor(TestFloor())") (((((xmath).xfloor)) ((((xTestFloor)) 0)))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfloor)) ((((xTestNoFloor)) 0)))
                        xt.write (((xTestNoFloor)) 0)
                        (((unsupported)) (((xt).x__floor__)) ((((unsupported)) ((xargs)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfloor)) ((xt)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfloor)) ((xt)) (0))
                xtestFmod.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfmod)))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(10, 1)") (((((xmath).xfmod)) (10) (1))) (0.0))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(10, 0.5)") (((((xmath).xfmod)) (10) (0.5))) (0.0))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(10, 1.5)") (((((xmath).xfmod)) (10) (1.5))) (1.0))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(-10, 1)") (((((xmath).xfmod)) ((10.neg)) (1))) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(-10, 0.5)") (((((xmath).xfmod)) ((10.neg)) (0.5))) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("fmod(-10, 1.5)") (((((xmath).xfmod)) ((10.neg)) (1.5))) ((1.0.neg)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xfmod)) ((xNAN)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xfmod)) ((((unsupported)) 0)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xfmod)) ((xNAN)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfmod)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfmod)) ((xINF)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfmod)) ((xNINF)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xfmod)) ((xINF)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) (3.0) ((xINF)))) (3.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) ((3.0.neg)) ((xINF)))) ((3.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) (3.0) ((xNINF)))) (3.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) ((3.0.neg)) ((xNINF)))) ((3.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) (0.0) (3.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xfmod)) (0.0) ((xNINF)))) (0.0))
                xtestFrexp.write
                  [xself]
                    memory > xtestfrexp
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xfrexp)))
                        xtestfrexp.write
                          [xname xresult xexpected]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((((unsupported)) ((xmant)) ((xexp)))) ((((unsupported)) ((xemant)) ((xeexp)))))) ((((unsupported)) ((xresult)) ((xexpected)))))
                                (((((xabs)) (((xmant).sub (xemant)))).greater (xeps)).or ((xexp).neq (xeexp))).if
                                  bogusForceDataize.write ((((xself).xfail)) (("%s returned %r, expected %r".mod (((unsupported)) ((xname)) ((xresult)) ((xexpected))))))
                        bogusForceDataize.write (((xtestfrexp)) ("frexp(-1)") (((((xmath).xfrexp)) ((1.neg)))) ((((unsupported)) ((0.5.neg)) (1))))
                        bogusForceDataize.write (((xtestfrexp)) ("frexp(0)") (((((xmath).xfrexp)) (0))) ((((unsupported)) (0) (0))))
                        bogusForceDataize.write (((xtestfrexp)) ("frexp(1)") (((((xmath).xfrexp)) (1))) ((((unsupported)) (0.5) (1))))
                        bogusForceDataize.write (((xtestfrexp)) ("frexp(2)") (((((xmath).xfrexp)) (2))) ((((unsupported)) (0.5) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((xmath).xfrexp)) ((xINF)))) (0))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((((xmath).xfrexp)) ((xNINF)))) (0))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((unsupported)) (((((xmath).xfrexp)) ((xNAN)))) (0))))))
                xtestFsum.write
                  [xself]
                    memory > xmant_dig
                    memory > xvals
                    memory > xactual
                    memory > xs
                    memory > xtest_values
                    memory > xetiny
                    memory > xmsum
                    memory > xterms
                    memory > xv
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xmant_dig.write ((xfloat_info).xmant_dig)
                        xetiny.write (((xfloat_info).xmin_exp).sub (xmant_dig))
                        xmsum.write
                          [xiterable]
                            memory > xh
                            memory > xtmant
                            memory > xtexp
                            memory > xtail
                            seq > @
                              seq
                                (((unsupported)) 0)
                                (((unsupported)) ((((unsupported)) ((xtmant)) ((xtexp)))) ((((unsupported)) (0) (0))))
                                (((unsupported)) ((xx)) ((xiterable)))
                                  seq
                                    (((unsupported)) ((((unsupported)) ((xmant)) ((xexp)))) (((((xmath).xfrexp)) ((xx)))))
                                    (((unsupported)) ((((unsupported)) ((xmant)) ((xexp)))) ((((unsupported)) ((((xint)) (((((xmath).xldexp)) ((xmant)) ((xmant_dig)))))) (((xexp).sub (xmant_dig))))))
                                    ((xtexp).greater (xexp)).if
                                      seq
                                        (((unsupported)) ((xtmant)) (((xtexp).sub (xexp))))
                                        xtexp.write (xexp)
                                      (((unsupported)) ((xmant)) (((xexp).sub (xtexp))))
                                    (((unsupported)) ((xtmant)) ((xmant)))
                                xtail.write (((xmax)) ((((((xlen)) ((((xbin)) ((((xabs)) ((xtmant))))))).sub 2).sub (xmant_dig))) (((xetiny).sub (xtexp))))
                                ((xtail).greater 0).if
                                  seq
                                    xh.write (((unsupported)) (1) (((xtail).sub 1)))
                                    xtmant.write ((((unsupported)) ((xtmant)) ((2.mul (xh)))).add (((xbool)) ((((xtmant).and (xh)).and ((xtmant).and ((3.mul (xh)).sub 1))))))
                                    (((unsupported)) ((xtexp)) ((xtail)))
                                (((unsupported)) (((((xmath).xldexp)) ((xtmant)) ((xtexp)))))
                        xtest_values.write (((unsupported)) ((((unsupported)) ((((unsupported)) 0)) (0.0))) ((((unsupported)) ((((unsupported)) (0.0))) (0.0))) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)) (1.0) (((((unsupported)) 0).neg)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((1.0.neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) ((((unsupported)) (2.0) (53))) ((0.5.neg)) (((((unsupported)) (2.0) ((54.neg))).neg)))) (((((unsupported)) (2.0) (53)).sub 1.0)))) ((((unsupported)) ((((unsupported)) ((((unsupported)) (2.0) (53))) (1.0) ((((unsupported)) (2.0) ((100.neg)))))) (((((unsupported)) (2.0) (53)).add 2.0)))) ((((unsupported)) ((((unsupported)) (((((unsupported)) (2.0) (53)).add 10.0)) (1.0) ((((unsupported)) (2.0) ((100.neg)))))) (((((unsupported)) (2.0) (53)).add 12.0)))) ((((unsupported)) ((((unsupported)) (((((unsupported)) (2.0) (53)).sub 4.0)) (0.5) ((((unsupported)) (2.0) ((54.neg)))))) (((((unsupported)) (2.0) (53)).sub 3.0)))) ((((unsupported)) ((((unsupported)) (((((unsupported)) 0).div (xn))) ((xn)) ((((xrange)) (1) (1001))))) (((((xfloat).xfromhex)) ("0x1.df11f45f4e61ap+2"))))) ((((unsupported)) ((((unsupported)) (((((unsupported)) (((((unsupported)) 0).neg)) ((xn))).div (xn))) ((xn)) ((((xrange)) (1) (1001))))) (((((xfloat).xfromhex)) ("-0x1.62a2af1bd3624p-1"))))) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))) (10000000000000002.0))) ((((unsupported)) ((((unsupported)) (((((unsupported)) 0).sub (((unsupported)) 0))) (((((unsupported)) 0).sub (((unsupported)) ((((unsupported)) 0)) ((53.neg))))) ((((((unsupported)) 0).sub (((unsupported)) 0)).neg)) ((((((unsupported)) 0).sub (((unsupported)) ((((unsupported)) 0)) ((53.neg)))).neg)))) (0.0))) ((((unsupported)) (((((unsupported)) ((((((unsupported)) ((((unsupported)) 0)) ((xn))).sub (((unsupported)) ((((unsupported)) 0)) (((xn).add 50)))).add (((unsupported)) ((((unsupported)) 0)) (((xn).add 52))))) ((xn)) ((((xrange)) ((1074.neg)) (972) (2)))).add (((unsupported)) (((((unsupported)) ((((unsupported)) 0)) (1022)).neg))))) (((((xfloat).xfromhex)) ("0x1.5555555555555p+970"))))))
                        xterms.write (((unsupported)) ((((unsupported)) (1.7) ((xi)))) ((xi)) ((((xrange)) (1001))))
                        bogusForceDataize.write ((((xtest_values).xappend)) ((((unsupported)) (((((unsupported)) (((((unsupported)) ((xterms)) (((xi).add 1))).sub (((unsupported)) ((xterms)) ((xi))))) ((xi)) ((((xrange)) (1000)))).add (((unsupported)) (((((unsupported)) ((xterms)) (1000)).neg))))) (((((unsupported)) ((xterms)) (0)).neg)))))
                        (((unsupported)) ((((unsupported)) ((xi)) ((((unsupported)) ((xvals)) ((xexpected)))))) ((((xenumerate)) ((xtest_values)))))
                          seq
                            (((unsupported)) ((xOverflowError)) ((xValueError)))
                              xactual.write ((((xmath).xfsum)) ((xvals)))
                              bogusForceDataize.write ((((xself).xfail)) (("test %d failed: got OverflowError, expected %r for math.fsum(%.100r)".mod (((unsupported)) ((xi)) ((xexpected)) ((xvals))))))
                              bogusForceDataize.write ((((xself).xfail)) (("test %d failed: got ValueError, expected %r for math.fsum(%.100r)".mod (((unsupported)) ((xi)) ((xexpected)) ((xvals))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xactual)) ((xexpected)))
                        seq
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                        (((unsupported)) ((xj)) ((((xrange)) (1000))))
                          seq
                            xvals.write ((((unsupported)) (7) ((((unsupported)) 0)) ((7.neg)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)) ((((unsupported)) 0))).mul 10)
                            xs.write 0
                            (((unsupported)) ((xi)) ((((xrange)) (200))))
                              seq
                                xv.write ((((unsupported)) ((((xgauss)) (0) ((((xrandom)) 0)))) (7)).sub (xs))
                                (((unsupported)) ((xs)) ((xv)))
                                bogusForceDataize.write ((((xvals).xappend)) ((xv)))
                            bogusForceDataize.write (((xshuffle)) ((xvals)))
                            xs.write (((xmsum)) ((xvals)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xmsum)) ((xvals)))) (((((xmath).xfsum)) ((xvals)))))
                xtestGcd.write
                  [xself]
                    memory > xc
                    memory > xb
                    memory > xx
                    memory > xy
                    memory > xgcd
                    memory > xa
                    seq > @
                      seq
                        xgcd.write ((xmath).xgcd)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (0) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (1) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((1.neg)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (0) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (0) ((1.neg)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (7) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (7) ((1.neg)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((23.neg)) (15))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (120) (84))) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (84) ((120.neg)))) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((((unsupported)) 0)) ((((unsupported)) 0)))) (32))
                        xc.write 652560
                        xx.write (((unsupported)) 0)
                        xy.write (((unsupported)) 0)
                        xa.write ((xx).mul (xc))
                        xb.write ((xy).mul (xc))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xa)) ((xb)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xb)) ((xa)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xa).neg)) ((xb)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xb)) (((xa).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xa)) (((xb).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xb).neg)) ((xa)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xa).neg)) (((xb).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xb).neg)) (((xa).neg)))) ((xc)))
                        xc.write (((unsupported)) 0)
                        xa.write ((xx).mul (xc))
                        xb.write ((xy).mul (xc))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xa)) ((xb)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xb)) ((xa)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xa).neg)) ((xb)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xb)) (((xa).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((xa)) (((xb).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xb).neg)) ((xa)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xa).neg)) (((xb).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) (((xb).neg)) (((xa).neg)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgcd)) (120.0) (84))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgcd)) (120) (84.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgcd)) ((((xMyIndexable)) (120))) ((((xMyIndexable)) (84))))) (12))
                xtestHypot.write
                  [xself]
                    memory > xhypot
                    memory > xfourthmax
                    memory > xint_too_big_for_float
                    memory > xargs
                    memory > xscale
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                        xhypot.write ((xmath).xhypot)
                        xargs.write (((unsupported)) (((xmath).xe)) (((xmath).xpi)) (((((xmath).xsqrt)) (2.0))) (((((xmath).xgamma)) (3.5))) (((((xmath).xsin)) (2.1))))
                        (((unsupported)) ((xi)) ((((xrange)) (((((xlen)) ((xargs))).add 1)))))
                          bogusForceDataize.write ((((xself).xassertAlmostEqual)) ((((xhypot)) ((((unsupported)) ((((unsupported)) ((xargs)) ((((unsupported)) ((xi)))))))))) (((((xmath).xsqrt)) ((((xsum)) ((((unsupported)) ((((unsupported)) ((xs)) (2))) ((xs)) ((((unsupported)) ((xargs)) ((((unsupported)) ((xi)))))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (12.0) (5.0))) (13.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (12) (5))) (13))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((((xDecimal)) (12))) ((((xDecimal)) (5))))) (13))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((((xFraction)) (12) (32))) ((((xFraction)) (5) (32))))) ((((xFraction)) (13) (32))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((((xbool)) (1))) ((((xbool)) (0))) ((((xbool)) (1))) ((((xbool)) (1))))) (((((xmath).xsqrt)) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (0.0) (0.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((10.5.neg)))) (10.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) 0)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1.0) (((((xmath).xcopysign)) (1.0) ((((xhypot)) ((0.0.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (1.5) (1.5) (0.5))) ((((xhypot)) (1.5) (0.5) (1.5))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xhypot)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xhypot)) (1.1) ("string") (2.2))
                        xint_too_big_for_float.write (((unsupported)) (10) (((((xsys).xfloat_info).xmax_10_exp).add 5)))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xValueError)) ((xOverflowError)))))))
                          bogusForceDataize.write (((xhypot)) (1) ((xint_too_big_for_float)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (0) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (10) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((10.neg)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((xNAN)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((xINF)) ((xNAN)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((xNINF)) ((xNAN)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((xNAN)) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (((xINF).neg)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (((xINF).neg)) (((xINF).neg)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) (10) (((xINF).neg)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) (0) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) ((xNAN)) (10))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) (10) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) ((xNAN)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xhypot)) ((xNAN)))))))
                        xfourthmax.write ((xFLOAT_MAX).div 4.0)
                        (((unsupported)) ((xn)) ((((xrange)) (32))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xhypot)) ((((unsupported)) (((((unsupported)) ((xfourthmax))).mul (xn))))))) (((xfourthmax).mul ((((xmath).xsqrt)) ((xn))))))
                        (((unsupported)) ((xexp)) ((((xrange)) (32))))
                          seq
                            xscale.write ((xFLOAT_MIN).div (((unsupported)) (2.0) ((xexp))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xhypot)) ((4.mul (xscale))) ((3.mul (xscale))))) ((5.mul (xscale))))
                xtestDist.write
                  [xself]
                    memory > xD
                    memory > xvalues
                    memory > xsqrt
                    memory > xq
                    memory > xdiffs
                    memory > xfourthmax
                    memory > xp
                    memory > xint_too_big_for_float
                    memory > xscale
                    memory > xdist
                    memory > xF
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                        xdist.write ((xmath).xdist)
                        xsqrt.write ((xmath).xsqrt)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (1.0) (2.0) (3.0))) ((((unsupported)) (4.0) (2.0) ((1.0.neg)))))) (5.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (4) (2) ((1.neg)))))) (5.0))
                        (((unsupported)) ((xi)) ((((xrange)) (9))))
                          (((unsupported)) ((xj)) ((((xrange)) (5))))
                            seq
                              xp.write (((xtuple)) ((((unsupported)) (((((xrandom).xuniform)) ((5.neg)) (5))) ((xk)) ((((xrange)) ((xi)))))))
                              xq.write (((xtuple)) ((((unsupported)) (((((xrandom).xuniform)) ((5.neg)) (5))) ((xk)) ((((xrange)) ((xi)))))))
                              bogusForceDataize.write ((((xself).xassertAlmostEqual)) ((((xdist)) ((xp)) ((xq)))) ((((xsqrt)) ((((xsum)) ((((unsupported)) ((((unsupported)) (((xpx).sub (xqx))) (2.0))) ((((unsupported)) ((xpx)) ((xqx)))) ((((xzip)) ((xp)) ((xq)))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (1.0) (2.0) (3.0))) ((((unsupported)) (4.0) (2.0) ((1.0.neg)))))) (5.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((xiter)) ((((unsupported)) (1.0) (2.0) (3.0))))) ((((xiter)) ((((unsupported)) (4.0) (2.0) ((1.0.neg)))))))) (5.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (14.0) (1.0))) ((((unsupported)) (2.0) ((4.0.neg)))))) (13.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (14) (1))) ((((unsupported)) (2) ((4.neg)))))) (13))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) ((((xD)) (14))) ((((xD)) (1))))) ((((unsupported)) ((((xD)) (2))) ((((xD)) ((4.neg)))))))) ((((xD)) (13))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) ((((xF)) (14) (32))) ((((xF)) (1) (32))))) ((((unsupported)) ((((xF)) (2) (32))) ((((xF)) ((4.neg)) (32))))))) ((((xF)) (13) (32))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (TRUE) (TRUE) (FALSE) (TRUE) (FALSE))) ((((unsupported)) (TRUE) (FALSE) (TRUE) (TRUE) (FALSE))))) ((((xsqrt)) (2.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (13.25) (12.5) ((3.25.neg)))) ((((unsupported)) (13.25) (12.5) ((3.25.neg)))))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) 0)) ((((unsupported)) 0)))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1.0) (((((xmath).xcopysign)) (1.0) ((((xdist)) ((((unsupported)) ((0.0.neg)))) ((((unsupported)) (0.0))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (1.0) (((((xmath).xcopysign)) (1.0) ((((xdist)) ((((unsupported)) (0.0))) ((((unsupported)) ((0.0.neg)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) (1.5) (1.5) (0.5))) ((((unsupported)) (0) (0) (0))))) ((((xdist)) ((((unsupported)) (1.5) (0.5) (1.5))) ((((unsupported)) (0) (0) (0))))))
                        (((unsupported)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((xT)) ((((unsupported)) (1) (2) (3))))) ((((unsupported)) (4) (2) ((1.neg)))))) (5.0))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xdist)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (4) (5) (6))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (4) (5) (6))) ((((unsupported)) (7) (8) (9))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdist)) (1) (2))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1.1) ("string") (2.2))) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1) (2) (3) (4))) ((((unsupported)) (5) (6) (7))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) (4) (5) (6) (7))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xdist)) ("abc") ("xyz"))
                        xint_too_big_for_float.write (((unsupported)) (10) (((((xsys).xfloat_info).xmax_10_exp).add 5)))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xValueError)) ((xOverflowError)))))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (1) ((xint_too_big_for_float)))) ((((unsupported)) (2) (3))))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xValueError)) ((xOverflowError)))))))
                          bogusForceDataize.write (((xdist)) ((((unsupported)) (2) (3))) ((((unsupported)) (1) ((xint_too_big_for_float)))))
                        (((unsupported)) ((xi)) ((((xrange)) (20))))
                          seq
                            (((unsupported)) ((((unsupported)) ((xp)) ((xq)))) ((((unsupported)) (((((xrandom).xrandom)) 0)) (((((xrandom).xrandom)) 0)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((((unsupported)) ((xp)))) ((((unsupported)) ((xq)))))) ((((xabs)) (((xp).sub (xq))))))
                        xvalues.write (((unsupported)) ((xNINF)) ((10.5.neg)) ((0.0.neg)) (0.0) (10.5) ((xINF)) ((xNAN)))
                        (((unsupported)) ((xp)) ((((unsupported)) (((xitertools).xproduct)) ((xvalues)) (3))))
                          (((unsupported)) ((xq)) ((((unsupported)) (((xitertools).xproduct)) ((xvalues)) (3))))
                            seq
                              xdiffs.write (((unsupported)) (((xpx).sub (xqx))) ((((unsupported)) ((xpx)) ((xqx)))) ((((xzip)) ((xp)) ((xq)))))
                              (((xany)) ((((xmap)) (((xmath).xisinf)) ((xdiffs))))).if
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((xp)) ((xq)))) ((xINF)))
                                (((xany)) ((((xmap)) (((xmath).xisnan)) ((xdiffs))))).if
                                  bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xdist)) ((xp)) ((xq)))))))
                        xfourthmax.write ((xFLOAT_MAX).div 4.0)
                        (((unsupported)) ((xn)) ((((xrange)) (32))))
                          seq
                            xp.write ((((unsupported)) ((xfourthmax))).mul (xn))
                            xq.write ((((unsupported)) (0.0)).mul (xn))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((xp)) ((xq)))) (((xfourthmax).mul ((((xmath).xsqrt)) ((xn))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xdist)) ((xq)) ((xp)))) (((xfourthmax).mul ((((xmath).xsqrt)) ((xn))))))
                        (((unsupported)) ((xexp)) ((((xrange)) (32))))
                          seq
                            xscale.write ((xFLOAT_MIN).div (((unsupported)) (2.0) ((xexp))))
                            xp.write (((unsupported)) ((4.mul (xscale))) ((3.mul (xscale))))
                            xq.write (((unsupported)) (0.0) (0.0))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xdist)) ((xp)) ((xq)))) ((5.mul (xscale))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xdist)) ((xq)) ((xp)))) ((5.mul (xscale))))
                xtestIsqrt.write
                  [xself]
                    memory > x__index__
                    memory > xs
                    memory > xbad_values
                    memory > x__init__
                    memory > xtest_values
                    seq > @
                      seq
                        xtest_values.write ((((((xlist)) ((((xrange)) (1000)))).add (((xlist)) ((((xrange)) (((((unsupported)) (10) (6)).sub 1000)) (((((unsupported)) (10) (6)).add 1000)))))).add (((unsupported)) (((((unsupported)) (2) ((xe))).add (xi))) ((xe)) ((((xrange)) (60) (200))) ((xi)) ((((xrange)) ((40.neg)) (40))))).add (((unsupported)) ((((unsupported)) (3) (9999))) ((((unsupported)) (10) (5001)))))
                        (((unsupported)) ((xvalue)) ((xtest_values)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xvalue)))))
                            seq
                              xs.write ((((xmath).xisqrt)) ((xvalue)))
                              bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs)))) ((xint)))
                              bogusForceDataize.write ((((xself).xassertLessEqual)) (((xs).mul (xs))) ((xvalue)))
                              bogusForceDataize.write ((((xself).xassertLess)) ((xvalue)) ((((xs).add 1).mul ((xs).add 1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xmath).xisqrt)) ((1.neg)))
                        xs.write ((((xmath).xisqrt)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs)))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) (1))
                        xs.write ((((xmath).xisqrt)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs)))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) (0))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__index__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)))
                        xs.write ((((xmath).xisqrt)) ((((xIntegerLike)) (1729))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xs)))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) (41))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          bogusForceDataize.write ((((xmath).xisqrt)) ((((xIntegerLike)) ((3.neg)))))
                        xbad_values.write (((unsupported)) (3.5) ("a string") (((((xdecimal).xDecimal)) ("3.5"))) ((((unsupported)) 0)) (100.0) ((4.0.neg)))
                        (((unsupported)) ((xvalue)) ((xbad_values)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xvalue)))))
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              bogusForceDataize.write ((((xmath).xisqrt)) ((xvalue)))
                xtestLdexp.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xldexp)))
                        bogusForceDataize.write ((((xself).xftest)) ("ldexp(0,1)") (((((xmath).xldexp)) (0) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("ldexp(1,1)") (((((xmath).xldexp)) (1) (1))) (2))
                        bogusForceDataize.write ((((xself).xftest)) ("ldexp(1,-1)") (((((xmath).xldexp)) (1) ((1.neg)))) (0.5))
                        bogusForceDataize.write ((((xself).xftest)) ("ldexp(-1,1)") (((((xmath).xldexp)) ((1.neg)) (1))) ((2.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xldexp)) ((((unsupported)) 0)) (1000000))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xldexp)) (((((unsupported)) 0).neg)) (1000000))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((((unsupported)) 0)) ((1000000.neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) (((((unsupported)) 0).neg)) ((1000000.neg)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xINF)) (30))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xNINF)) ((213.neg)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xldexp)) ((xNAN)) (0))))))
                        (((unsupported)) ((xn)) ((((unsupported)) ((((unsupported)) (10) (5))) ((((unsupported)) (10) (10))) ((((unsupported)) (10) (20))) ((((unsupported)) (10) (40))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xINF)) (((xn).neg)))) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xNINF)) (((xn).neg)))) ((xNINF)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((((unsupported)) 0)) (((xn).neg)))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) (((((unsupported)) 0).neg)) (((xn).neg)))) (((((unsupported)) 0).neg)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((((unsupported)) 0)) (((xn).neg)))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) (((((unsupported)) 0).neg)) (((xn).neg)))) (((((unsupported)) 0).neg)))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xldexp)) ((xNAN)) (((xn).neg)))))))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xldexp)) ((((unsupported)) 0)) ((xn)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) (((xmath).xldexp)) (((((unsupported)) 0).neg)) ((xn)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((((unsupported)) 0)) ((xn)))) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) (((((unsupported)) 0).neg)) ((xn)))) (((((unsupported)) 0).neg)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xINF)) ((xn)))) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xldexp)) ((xNINF)) ((xn)))) ((xNINF)))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xldexp)) ((xNAN)) ((xn)))))))
                xtestLog.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xlog)))
                        bogusForceDataize.write ((((xself).xftest)) ("log(1/e)") (((((xmath).xlog)) ((1.div ((xmath).xe))))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("log(1)") (((((xmath).xlog)) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("log(e)") (((((xmath).xlog)) (((xmath).xe)))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("log(32,2)") (((((xmath).xlog)) (32) (2))) (5))
                        bogusForceDataize.write ((((xself).xftest)) ("log(10**40, 10)") (((((xmath).xlog)) ((((unsupported)) (10) (40))) (10))) (40))
                        bogusForceDataize.write ((((xself).xftest)) ("log(10**40, 10**20)") (((((xmath).xlog)) ((((unsupported)) (10) (40))) ((((unsupported)) (10) (20))))) (2))
                        bogusForceDataize.write ((((xself).xftest)) ("log(10**1000)") (((((xmath).xlog)) ((((unsupported)) (10) (1000))))) (2302.5850929940457))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog)) ((1.5.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog)) (((((unsupported)) (10) (1000)).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xlog)) ((xNAN)))))))
                xtestLog1p.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xlog1p)))
                        (((unsupported)) ((xn)) ((((unsupported)) (2) ((((unsupported)) (2) (90))) ((((unsupported)) (2) (300))))))
                          bogusForceDataize.write ((((xself).xassertAlmostEqual)) (((((xmath).xlog1p)) ((xn)))) (((((xmath).xlog1p)) ((((xfloat)) ((xn)))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog1p)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog1p)) ((xINF)))) ((xINF)))
                xtestLog2.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xlog2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) (1))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) (2))) (1.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) (4))) (2.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) ((((unsupported)) (2) (1023))))) (1023.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) ((((unsupported)) (2) (1024))))) (1024.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog2)) ((((unsupported)) (2) (2000))))) (2000.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog2)) ((1.5.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog2)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xlog2)) ((xNAN)))))))
                xtestLog2Exact.write
                  [xself]
                    memory > xactual
                    memory > xexpected
                    seq > @
                      (((unsupported)) 0)
                        xactual.write (((unsupported)) (((((xmath).xlog2)) (((((xmath).xldexp)) (1.0) ((xn)))))) ((xn)) ((((xrange)) ((1074.neg)) (1024))))
                        xexpected.write (((unsupported)) ((((xfloat)) ((xn)))) ((xn)) ((((xrange)) ((1074.neg)) (1024))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xactual)) ((xexpected)))
                xtestLog10.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xlog10)))
                        bogusForceDataize.write ((((xself).xftest)) ("log10(0.1)") (((((xmath).xlog10)) (0.1))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("log10(1)") (((((xmath).xlog10)) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("log10(10)") (((((xmath).xlog10)) (10))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("log10(10**1000)") (((((xmath).xlog10)) ((((unsupported)) (10) (1000))))) (1000.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog10)) ((1.5.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog10)) (((((unsupported)) (10) (1000)).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xlog10)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xlog)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xlog10)) ((xNAN)))))))
                xtestModf.write
                  [xself]
                    memory > xmodf_nan
                    memory > xtestmodf
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xmodf)))
                        xtestmodf.write
                          [xname xresult xexpected]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((((unsupported)) ((xv1)) ((xv2)))) ((((unsupported)) ((xe1)) ((xe2)))))) ((((unsupported)) ((xresult)) ((xexpected)))))
                                (((((xabs)) (((xv1).sub (xe1)))).greater (xeps)).or (((xabs)) (((xv2).sub (xe2))))).if
                                  bogusForceDataize.write ((((xself).xfail)) (("%s returned %r, expected %r".mod (((unsupported)) ((xname)) ((xresult)) ((xexpected))))))
                        bogusForceDataize.write (((xtestmodf)) ("modf(1.5)") (((((xmath).xmodf)) (1.5))) ((((unsupported)) (0.5) (1.0))))
                        bogusForceDataize.write (((xtestmodf)) ("modf(-1.5)") (((((xmath).xmodf)) ((1.5.neg)))) ((((unsupported)) ((0.5.neg)) ((1.0.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xmodf)) ((xINF)))) ((((unsupported)) (0.0) ((xINF)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xmodf)) ((xNINF)))) ((((unsupported)) ((0.0.neg)) ((xNINF)))))
                        xmodf_nan.write ((((xmath).xmodf)) ((xNAN)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((unsupported)) ((xmodf_nan)) (0))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((unsupported)) ((xmodf_nan)) (1))))))
                xtestPow.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xpow)))
                        bogusForceDataize.write ((((xself).xftest)) ("pow(0,1)") (((((xmath).xpow)) (0) (1))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("pow(1,0)") (((((xmath).xpow)) (1) (0))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("pow(2,1)") (((((xmath).xpow)) (2) (1))) (2))
                        bogusForceDataize.write ((((xself).xftest)) ("pow(2,-1)") (((((xmath).xpow)) (2) ((1.neg)))) (0.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) (1))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) (1))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) ((xNAN)) (1))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) (2) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) (0) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1) ((xNAN)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (2.3))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((((unsupported)) 0)) ((2.3.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((((unsupported)) 0)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) ((((unsupported)) 0)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((((unsupported)) 0)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) (2.3))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((((unsupported)) 0)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((2.3.neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xINF)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) ((xINF)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) (2.3))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) ((2.3.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((((unsupported)) 0)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) (2.3))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((((unsupported)) 0)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((2.3.neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) (((((unsupported)) 0).neg)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNINF)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) ((xNINF)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) (2.3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) ((2.3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xpow)) (((((unsupported)) 0).neg)) ((xNAN)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (2.3))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((2.3.neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((((unsupported)) 0)) ((xNAN)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (2.3) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((2.3.neg)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNAN)) ((((unsupported)) 0)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (2.3) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((2.3.neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((xNAN)) (((((unsupported)) 0).neg)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) (2.3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) (((((unsupported)) 0).neg)) ((3.1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1.9) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1.1) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (0.9) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (0.1) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((0.1.neg)) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((0.9.neg)) ((xNINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((1.1.neg)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((1.9.neg)) ((xNINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1.9) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (1.1) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (0.9) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) (0.1) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((0.1.neg)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((0.9.neg)) ((xINF)))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((1.1.neg)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xpow)) ((1.9.neg)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**3.") (((((xmath).xpow)) ((2.0.neg)) (3.0))) ((8.0.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**2.") (((((xmath).xpow)) ((2.0.neg)) (2.0))) (4.0))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**1.") (((((xmath).xpow)) ((2.0.neg)) (1.0))) ((2.0.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**0.") (((((xmath).xpow)) ((2.0.neg)) (0.0))) (1.0))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**-0.") (((((xmath).xpow)) ((2.0.neg)) ((0.0.neg)))) (1.0))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**-1.") (((((xmath).xpow)) ((2.0.neg)) ((1.0.neg)))) ((0.5.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**-2.") (((((xmath).xpow)) ((2.0.neg)) ((2.0.neg)))) (0.25))
                        bogusForceDataize.write ((((xself).xftest)) ("(-2.)**-3.") (((((xmath).xpow)) ((2.0.neg)) ((3.0.neg)))) ((0.125.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((2.0.neg)) ((0.5.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xpow)) ((2.0.neg)) (0.5))
                xtestRadians.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xradians)))
                        bogusForceDataize.write ((((xself).xftest)) ("radians(180)") (((((xmath).xradians)) (180))) (((xmath).xpi)))
                        bogusForceDataize.write ((((xself).xftest)) ("radians(90)") (((((xmath).xradians)) (90))) ((((xmath).xpi).div 2)))
                        bogusForceDataize.write ((((xself).xftest)) ("radians(-45)") (((((xmath).xradians)) ((45.neg)))) (((((xmath).xpi).neg).div 4)))
                        bogusForceDataize.write ((((xself).xftest)) ("radians(0)") (((((xmath).xradians)) (0))) (0))
                xtestRemainder.write
                  [xself]
                    memory > xexpected
                    memory > xactual
                    memory > xx
                    memory > xtiny
                    memory > xvalidate_spec
                    memory > xtestcases
                    memory > xy
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        xvalidate_spec.write
                          [xx xy xr]
                            memory > xn
                            seq > @
                              seq
                                (((unsupported)) 0)
                                (((unsupported)) ((((unsupported)) ((xfx)) ((xfy)) ((xfr)))) ((((unsupported)) ((((xFraction)) ((xx)))) ((((xFraction)) ((xy)))) ((((xFraction)) ((xr)))))))
                                bogusForceDataize.write ((((xself).xassertLessEqual)) ((((xabs)) ((xfr)))) ((((xabs)) (((xfy).div 2)))))
                                xn.write (((xfx).sub (xfr)).div (xfy))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xn)) ((((xint)) ((xn)))))
                                ((((xabs)) ((xfr))).eq (((xabs)) (((xfy).div 2)))).if
                                  bogusForceDataize.write ((((xself).xassertEqual)) (((xn).div 2)) ((((xint)) (((xn).div 2)))))
                        xtestcases.write (((unsupported)) ("-4.0 1 -0.0") ("-3.8 1  0.8") ("-3.0 1 -0.0") ("-2.8 1 -0.8") ("-2.0 1 -0.0") ("-1.8 1  0.8") ("-1.0 1 -0.0") ("-0.8 1 -0.8") ("-0.0 1 -0.0") (" 0.0 1  0.0") (" 0.8 1  0.8") (" 1.0 1  0.0") (" 1.8 1 -0.8") (" 2.0 1  0.0") (" 2.8 1  0.8") (" 3.0 1  0.0") (" 3.8 1 -0.8") (" 4.0 1  0.0") ("0x0.0p+0 0x1.921fb54442d18p+2 0x0.0p+0") ("0x1.921fb54442d18p+0 0x1.921fb54442d18p+2  0x1.921fb54442d18p+0") ("0x1.921fb54442d17p+1 0x1.921fb54442d18p+2  0x1.921fb54442d17p+1") ("0x1.921fb54442d18p+1 0x1.921fb54442d18p+2  0x1.921fb54442d18p+1") ("0x1.921fb54442d19p+1 0x1.921fb54442d18p+2 -0x1.921fb54442d17p+1") ("0x1.921fb54442d17p+2 0x1.921fb54442d18p+2 -0x0.0000000000001p+2") ("0x1.921fb54442d18p+2 0x1.921fb54442d18p+2  0x0p0") ("0x1.921fb54442d19p+2 0x1.921fb54442d18p+2  0x0.0000000000001p+2") ("0x1.2d97c7f3321d1p+3 0x1.921fb54442d18p+2  0x1.921fb54442d14p+1") ("0x1.2d97c7f3321d2p+3 0x1.921fb54442d18p+2 -0x1.921fb54442d18p+1") ("0x1.2d97c7f3321d3p+3 0x1.921fb54442d18p+2 -0x1.921fb54442d14p+1") ("0x1.921fb54442d17p+3 0x1.921fb54442d18p+2 -0x0.0000000000001p+3") ("0x1.921fb54442d18p+3 0x1.921fb54442d18p+2  0x0p0") ("0x1.921fb54442d19p+3 0x1.921fb54442d18p+2  0x0.0000000000001p+3") ("0x1.f6a7a2955385dp+3 0x1.921fb54442d18p+2  0x1.921fb54442d14p+1") ("0x1.f6a7a2955385ep+3 0x1.921fb54442d18p+2  0x1.921fb54442d18p+1") ("0x1.f6a7a2955385fp+3 0x1.921fb54442d18p+2 -0x1.921fb54442d14p+1") ("0x1.1475cc9eedf00p+5 0x1.921fb54442d18p+2  0x1.921fb54442d10p+1") ("0x1.1475cc9eedf01p+5 0x1.921fb54442d18p+2 -0x1.921fb54442d10p+1") (" 1  0.c  0.4") ("-1  0.c -0.4") (" 1 -0.c  0.4") ("-1 -0.c -0.4") (" 1.4  0.c -0.4") ("-1.4  0.c  0.4") (" 1.4 -0.c -0.4") ("-1.4 -0.c  0.4") ("0x1.dp+1023 0x1.4p+1023  0x0.9p+1023") ("0x1.ep+1023 0x1.4p+1023 -0x0.ap+1023") ("0x1.fp+1023 0x1.4p+1023 -0x0.9p+1023"))
                        (((unsupported)) ((xcase)) ((xtestcases)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xcase)))))
                            seq
                              (((unsupported)) ((((unsupported)) ((xx_hex)) ((xy_hex)) ((xexpected_hex)))) (((((xcase).xsplit)) 0)))
                              xx.write ((((xfloat).xfromhex)) ((xx_hex)))
                              xy.write ((((xfloat).xfromhex)) ((xy_hex)))
                              xexpected.write ((((xfloat).xfromhex)) ((xexpected_hex)))
                              bogusForceDataize.write (((xvalidate_spec)) ((xx)) ((xy)) ((xexpected)))
                              xactual.write ((((xmath).xremainder)) ((xx)) ((xy)))
                              bogusForceDataize.write ((((xself).xassertEqual)) (((((xactual).xhex)) 0)) (((((xexpected).xhex)) 0)))
                        xtiny.write ((((xfloat).xfromhex)) ("1p-1074"))
                        (((unsupported)) ((xn)) ((((xrange)) ((25.neg)) (25))))
                          seq
                            ((xn).eq 0).if
                              (((unsupported)) 0)
                            xy.write ((xn).mul (xtiny))
                            (((unsupported)) ((xm)) ((((xrange)) (100))))
                              seq
                                xx.write ((xm).mul (xtiny))
                                xactual.write ((((xmath).xremainder)) ((xx)) ((xy)))
                                bogusForceDataize.write (((xvalidate_spec)) ((xx)) ((xy)) ((xactual)))
                                xactual.write ((((xmath).xremainder)) (((xx).neg)) ((xy)))
                                bogusForceDataize.write (((xvalidate_spec)) (((xx).neg)) ((xy)) ((xactual)))
                        (((unsupported)) ((xvalue)) ((((unsupported)) ((xNAN)) (0.0) ((0.0.neg)) (2.0) ((2.3.neg)) ((xNINF)) ((xINF)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsNaN)) (((((xmath).xremainder)) ((xNAN)) ((xvalue)))))
                            bogusForceDataize.write ((((xself).xassertIsNaN)) (((((xmath).xremainder)) ((xvalue)) ((xNAN)))))
                        (((unsupported)) ((xvalue)) ((((unsupported)) ((2.3.neg)) ((0.0.neg)) (0.0) (2.3))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xremainder)) ((xvalue)) ((xINF)))) ((xvalue)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xremainder)) ((xvalue)) ((xNINF)))) ((xvalue)))
                        (((unsupported)) ((xvalue)) ((((unsupported)) ((xNINF)) ((2.3.neg)) ((0.0.neg)) (0.0) (2.3) ((xINF)))))
                          seq
                            (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                              bogusForceDataize.write ((((xmath).xremainder)) ((xINF)) ((xvalue)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                              bogusForceDataize.write ((((xmath).xremainder)) ((xNINF)) ((xvalue)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                              bogusForceDataize.write ((((xmath).xremainder)) ((xvalue)) (0.0))
                            (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                              bogusForceDataize.write ((((xmath).xremainder)) ((xvalue)) ((0.0.neg)))
                xtestSin.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xsin)))
                        bogusForceDataize.write ((((xself).xftest)) ("sin(0)") (((((xmath).xsin)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("sin(pi/2)") (((((xmath).xsin)) ((((xmath).xpi).div 2)))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("sin(-pi/2)") (((((xmath).xsin)) (((((xmath).xpi).neg).div 2)))) ((1.neg)))
                        (((unsupported)) ((xValueError)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xsin)) ((xINF)))))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xsin)) ((xNINF)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xsin)) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xsin)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xsin)) ((xNAN)))))))
                xtestSinh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xsinh)))
                        bogusForceDataize.write ((((xself).xftest)) ("sinh(0)") (((((xmath).xsinh)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("sinh(1)**2-cosh(1)**2") (((((unsupported)) (((((xmath).xsinh)) (1))) (2)).sub (((unsupported)) (((((xmath).xcosh)) (1))) (2)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xftest)) ("sinh(1)+sinh(-1)") ((((((xmath).xsinh)) (1)).add ((((xmath).xsinh)) ((1.neg))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xsinh)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xsinh)) ((xNINF)))) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xsinh)) ((xNAN)))))))
                xtestSqrt.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xsqrt)))
                        bogusForceDataize.write ((((xself).xftest)) ("sqrt(0)") (((((xmath).xsqrt)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("sqrt(1)") (((((xmath).xsqrt)) (1))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("sqrt(4)") (((((xmath).xsqrt)) (4))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xsqrt)) ((xINF)))) ((xINF)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xsqrt)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xsqrt)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xsqrt)) ((xNAN)))))))
                xtestTan.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xtan)))
                        bogusForceDataize.write ((((xself).xftest)) ("tan(0)") (((((xmath).xtan)) (0))) (0))
                        bogusForceDataize.write ((((xself).xftest)) ("tan(pi/4)") (((((xmath).xtan)) ((((xmath).xpi).div 4)))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("tan(-pi/4)") (((((xmath).xtan)) (((((xmath).xpi).neg).div 4)))) ((1.neg)))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xtan)) ((xINF)))))))
                            bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xtan)) ((xNINF)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xtan)) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xmath).xtan)) ((xNINF)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xtan)) ((xNAN)))))))
                xtestTanh.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xtanh)))
                        bogusForceDataize.write ((((xself).xftest)) ("tanh(0)") (((((xmath).xtanh)) (0))) (0))
                        (((unsupported)) (((xself).xftest)) ("tanh(1)+tanh(-1)") ((((((xmath).xtanh)) (1)).add ((((xmath).xtanh)) ((1.neg))))) (0) ((((xulp)) (1))))
                        bogusForceDataize.write ((((xself).xftest)) ("tanh(inf)") (((((xmath).xtanh)) ((xINF)))) (1))
                        bogusForceDataize.write ((((xself).xftest)) ("tanh(-inf)") (((((xmath).xtanh)) ((xNINF)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xmath).xtanh)) ((xNAN)))))))
                xtestTanhSign.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtanh)) (((((unsupported)) 0).neg)))) (((((unsupported)) 0).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) ((((unsupported)) 0)) (((((xmath).xtanh)) (((((unsupported)) 0).neg)))))) (((((xmath).xcopysign)) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))))
                xtest_trunc.write
                  [xself]
                    memory > x__trunc__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((1.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((((xmath).xtrunc)) (1))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) (((((xmath).xtrunc)) (1.5))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) (1.5))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((1.5.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) (1.999999))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((1.999999.neg)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((0.999999.neg)))) ((0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((100.999.neg)))) ((100.neg)))
                        (((unsupported)) ((xobject)))
                          x__trunc__.write
                            [xself]
                              seq > @
                                (((unsupported)) (23))
                        (((unsupported)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xtrunc)) ((((xTestTrunc)) 0)))) (23))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xtrunc)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xtrunc)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xmath).xtrunc)) ((((xTestNoTrunc)) 0)))
                xtestIsfinite.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisfinite)) (0.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisfinite)) ((0.0.neg)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisfinite)) (1.0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisfinite)) ((1.0.neg)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisfinite)) ((((xfloat)) ("nan"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisfinite)) ((((xfloat)) ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisfinite)) ((((xfloat)) ("-inf"))))))
                xtestIsnan.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xfloat)) ("nan"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) ((((xfloat)) ("-nan"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((((xfloat)) ("inf")).mul (((unsupported)) 0))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisnan)) ((((xfloat)) ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisnan)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisnan)) ((((unsupported)) 0)))))
                xtestIsinf.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) ((((xfloat)) ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) ((((xfloat)) ("-inf"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) (((((unsupported)) 0).neg)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisinf)) ((((xfloat)) ("nan"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisinf)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xmath).xisinf)) ((((unsupported)) 0)))))
                xtest_nan_constant.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisnan)) (((xmath).xnan)))))
                xtest_inf_constant.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xmath).xisinf)) (((xmath).xinf)))))
                        bogusForceDataize.write ((((xself).xassertGreater)) (((xmath).xinf)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xmath).xinf)) ((((xfloat)) ("inf"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmath).xinf).neg)) ((((xfloat)) ("-inf"))))
                xtest_exceptions.write
                  [xself]
                    memory > xx
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                          xx.write ((((xmath).xexp)) ((1000000000.neg)))
                          bogusForceDataize.write ((((xself).xfail)) ("underflowing exp() should not have raised an exception"))
                        ((xx).neq 0).if
                          bogusForceDataize.write ((((xself).xfail)) ("underflowing exp() should have returned 0"))
                        (((unsupported)) ((xOverflowError)))
                          xx.write ((((xmath).xexp)) (1000000000))
                          bogusForceDataize.write ((((xself).xfail)) ("overflowing exp() didn't trigger OverflowError"))
                        (((unsupported)) ((xValueError)))
                          xx.write ((((xmath).xsqrt)) ((1.0.neg)))
                          bogusForceDataize.write ((((xself).xfail)) ("sqrt(-1) didn't raise ValueError"))
                xtest_testfile.write
                  [xself]
                    memory > xSKIP_ON_TIGER
                    memory > xmsg
                    memory > xfailure
                    memory > xversion_txt
                    memory > xfail_fmt
                    memory > xfailures
                    memory > xfunc
                    memory > xer
                    memory > xresult
                    memory > xosx_version
                    seq > @
                      (((unsupported)) 0)
                        xSKIP_ON_TIGER.write (((unsupported)) ("tan0064"))
                        xosx_version.write "None: is there a None literal in the EO language?"
                        (((xsys).xplatform).eq "darwin").if
                          seq
                            xversion_txt.write (((unsupported)) (((((xplatform).xmac_ver)) 0)) (0))
                            (((unsupported)) ((xValueError)))
                              xosx_version.write (((xtuple)) ((((xmap)) ((xint)) (((((xversion_txt).xsplit)) ("."))))))
                        xfail_fmt.write "{}: {}({!r}): {}"
                        xfailures.write (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((xar)) ((xai)) ((xer)) ((xei)) ((xflags)))) ((((xparse_testfile)) ((xtest_file)))))
                          seq
                            (((xai).neq 0.0).or ((xei).neq 0.0)).if
                              (((unsupported)) 0)
                            (((unsupported)) ((xfn)) ((((unsupported)) ("rect") ("polar")))).if
                              (((unsupported)) 0)
                            ((((unsupported)) ((xosx_version)) ("None: is there a None literal in the EO language?")).and ((xosx_version).less (((unsupported)) (10) (5)))).if
                              (((unsupported)) ((xid)) ((xSKIP_ON_TIGER))).if
                                (((unsupported)) 0)
                            xfunc.write (((xgetattr)) ((xmath)) ((xfn)))
                            ((((unsupported)) ("invalid") ((xflags))).or (((unsupported)) ("divide-by-zero") ((xflags)))).if
                              xer.write "ValueError"
                              (((unsupported)) ("overflow") ((xflags))).if
                                xer.write "OverflowError"
                            (((unsupported)) ((xValueError)) ((xOverflowError)))
                              xresult.write (((xfunc)) ((xar)))
                              xresult.write "ValueError"
                              xresult.write "OverflowError"
                            (((unsupported)) ((((unsupported)) ((xulp_tol)) ((xabs_tol)))) ((((unsupported)) (5) (0.0))))
                            xfailure.write (((xresult_check)) ((xer)) ((xresult)) ((xulp_tol)) ((xabs_tol)))
                            (((unsupported)) ((xfailure)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)) 0)
                            xmsg.write ((((xfail_fmt).xformat)) ((xid)) ((xfn)) ((xar)) ((xfailure)))
                            bogusForceDataize.write ((((xfailures).xappend)) ((xmsg)))
                        (xfailures).if
                          bogusForceDataize.write ((((xself).xfail)) (("Failures in test_testfile:n  ".add ((("n  ".xjoin)) ((xfailures))))))
                xtest_mtestfile.write
                  [xself]
                    memory > xexpected
                    memory > xulp_tol
                    memory > xgot
                    memory > xfunc
                    memory > xmsg
                    memory > xfailure
                    memory > xabs_tol
                    memory > xfail_fmt
                    memory > xfailures
                    seq > @
                      (((unsupported)) 0)
                        xfail_fmt.write "{}: {}({!r}): {}"
                        xfailures.write (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xid)) ((xfn)) ((xarg)) ((xexpected)) ((xflags)))) ((((xparse_mtestfile)) ((xmath_testcases)))))
                          seq
                            xfunc.write (((xgetattr)) ((xmath)) ((xfn)))
                            ((((unsupported)) ("invalid") ((xflags))).or (((unsupported)) ("divide-by-zero") ((xflags)))).if
                              xexpected.write "ValueError"
                              (((unsupported)) ("overflow") ((xflags))).if
                                xexpected.write "OverflowError"
                            (((unsupported)) ((xValueError)) ((xOverflowError)))
                              xgot.write (((xfunc)) ((xarg)))
                              xgot.write "ValueError"
                              xgot.write "OverflowError"
                            (((unsupported)) ((((unsupported)) ((xulp_tol)) ((xabs_tol)))) ((((unsupported)) (5) (0.0))))
                            ((xfn).eq "gamma").if
                              xulp_tol.write 20
                              ((xfn).eq "lgamma").if
                                xabs_tol.write (((unsupported)) 0)
                                (((xfn).eq "erfc").and ((xarg).geq 0.0)).if
                                  ((xarg).less 1.0).if
                                    xulp_tol.write 10
                                    ((xarg).less 10.0).if
                                      xulp_tol.write 100
                                      xulp_tol.write 1000
                            xfailure.write (((xresult_check)) ((xexpected)) ((xgot)) ((xulp_tol)) ((xabs_tol)))
                            (((unsupported)) ((xfailure)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)) 0)
                            xmsg.write ((((xfail_fmt).xformat)) ((xid)) ((xfn)) ((xarg)) ((xfailure)))
                            bogusForceDataize.write ((((xfailures).xappend)) ((xmsg)))
                        (xfailures).if
                          bogusForceDataize.write ((((xself).xfail)) (("Failures in test_mtestfile:n  ".add ((("n  ".xjoin)) ((xfailures))))))
                xtest_prod.write
                  [xself]
                    memory > xprod
                    memory > x_naive_prod
                    memory > xvalues
                    memory > xiterable
                    seq > @
                      seq
                        xprod.write ((xmath).xprod)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) 0)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xprod)) ((((unsupported)) 0)) (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((xlist)) ((((xrange)) (2) (8))))))) (5040))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((xiter)) ((((xlist)) ((((xrange)) (2) (8))))))))) (5040))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xprod)) ((((xrange)) (1) (10))) (10))) (3628800))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (2) (3) (4) (5))))) (120))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1.0) (2.0) (3.0) (4.0) (5.0))))) (120.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (2) (3) (4.0) (5.0))))) (120.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1.0) (2.0) (3.0) (4) (5))))) (120.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (1) ((((unsupported)) (2) (32))) (1) (1))))) ((((unsupported)) (2) (32))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1.0) (1.0) ((((unsupported)) (2) (32))) (1) (1))))) ((((xfloat)) ((((unsupported)) (2) (32))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ("a") ("b") ("c"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ("a") ("b") ("c"))) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ("a") ("c"))) (""))
                        xvalues.write (((unsupported)) ((((xbytearray)) ("a"))) ((((xbytearray)) ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((xvalues)) ((((xbytearray)) (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) (2))) ((((unsupported)) (3))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ((((unsupported)) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) (((((unsupported)) ((((unsupported)) (2) (3)))).mul 2)) ((((unsupported)) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xprod)) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) (2))) ((((unsupported)) (3))))) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xprod)) ((((unsupported)) (10) (20))) ((((unsupported)) (30) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (0) (1) (2) (3))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (0) (2) (3))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (2) (3) (0))))) (0))
                        x_naive_prod.write
                          [xiterable xstart]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xelem)) ((xiterable)))
                                  (((unsupported)) ((xstart)) ((xelem)))
                                (((unsupported)) ((xstart)))
                        xiterable.write (((xrange)) (1) (10000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((xiterable)))) ((((x_naive_prod)) ((xiterable)))))
                        xiterable.write (((xrange)) ((10000.neg)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((xiterable)))) ((((x_naive_prod)) ((xiterable)))))
                        xiterable.write (((xrange)) ((1000.neg)) (1000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((xiterable)))) (0))
                        xiterable.write (((unsupported)) ((((xfloat)) ((xx)))) ((xx)) ((((xrange)) (1) (1000))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((xiterable)))) ((((x_naive_prod)) ((xiterable)))))
                        xiterable.write (((unsupported)) ((((xfloat)) ((xx)))) ((xx)) ((((xrange)) ((1000.neg)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((xiterable)))) ((((x_naive_prod)) ((xiterable)))))
                        xiterable.write (((unsupported)) ((((xfloat)) ((xx)))) ((xx)) ((((xrange)) ((1000.neg)) (1000))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((xiterable)))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (2) (3) ((((xfloat)) ("nan"))) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (0) ((((xfloat)) ("nan"))) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) ((((xfloat)) ("nan"))) (0) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) ((((xfloat)) ("inf"))) ((((xfloat)) ("nan"))) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) ((((xfloat)) ("-inf"))) ((((xfloat)) ("nan"))) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) ((((xfloat)) ("nan"))) ((((xfloat)) ("inf"))) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) ((((xfloat)) ("nan"))) ((((xfloat)) ("-inf"))) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (2) (3) ((((xfloat)) ("inf"))) ((3.neg)) (4))))) ((((xfloat)) ("-inf"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xprod)) ((((unsupported)) (1) (2) (3) ((((xfloat)) ("-inf"))) ((3.neg)) (4))))) ((((xfloat)) ("inf"))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (2) (0) ((((xfloat)) ("inf"))) ((3.neg)) (4))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (2) (0) ((((xfloat)) ("-inf"))) ((3.neg)) (4))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (2) (3) ((((xfloat)) ("inf"))) ((3.neg)) (0) (3))))))
                        bogusForceDataize.write ((((xself).xassertIsNaN)) ((((xprod)) ((((unsupported)) (1) (2) (3) ((((xfloat)) ("-inf"))) ((3.neg)) (0) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xprod)) ((((unsupported)) (1) (2) (3) (4) (5) (6))))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xprod)) ((((unsupported)) (1) (2.0) (3) (4) (5) (6))))))) ((xfloat)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xprod)) ((((xrange)) (1) (10000))))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((unsupported)) ((xprod)) ((((xrange)) (1) (10000))) (1.0))))) ((xfloat)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xprod)) ((((unsupported)) (1) (((((xdecimal).xDecimal)) (2.0))) (3) (4) (5) (6))))))) (((xdecimal).xDecimal)))
                xtestPerm.write
                  [xself]
                    memory > xn
                    memory > xperm
                    memory > xfactorial
                    seq > @
                      seq
                        xperm.write ((xmath).xperm)
                        xfactorial.write ((xmath).xfactorial)
                        (((unsupported)) ((xn)) ((((xrange)) (100))))
                          (((unsupported)) ((xk)) ((((xrange)) (((xn).add 1)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) ((xk)))) ((((unsupported)) ((((xfactorial)) ((xn)))) ((((xfactorial)) (((xn).sub (xk))))))))
                        (((unsupported)) ((xn)) ((((xrange)) (1) (100))))
                          (((unsupported)) ((xk)) ((((xrange)) (1) ((xn)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) ((xk)))) ((((((xperm)) (((xn).sub 1)) (((xk).sub 1))).mul (xk)).add (((xperm)) (((xn).sub 1)) ((xk))))))
                        (((unsupported)) ((xn)) ((((xrange)) (1) (100))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) (0))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) (1))) ((xn)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) ((xn)))) ((((xfactorial)) ((xn)))))
                        (((unsupported)) ((xn)) ((((xrange)) (20))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)))) ((((xfactorial)) ((xn)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) ("None: is there a None literal in the EO language?"))) ((((xfactorial)) ((xn)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (10) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (10) (((((xdecimal).xDecimal)) (1.0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (10) ("1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (10.0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (((((xdecimal).xDecimal)) (10.0))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) ("10") (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)) (10) (1) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xperm)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xperm)) ((1.neg)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xperm)) (((((unsupported)) (2) (1000)).neg)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xperm)) (1) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xperm)) (1) (((((unsupported)) (2) (1000)).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) (1) (2))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) (1) ((((unsupported)) (2) (1000))))) (0))
                        xn.write (((unsupported)) (2) (1000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) (1))) ((xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) (2))) (((xn).mul ((xn).sub 1))))
                        (((unsupported)) (((xsupport).xcheck_impl_detail)) (TRUE)).if
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xperm)) ((xn)) ((xn)))
                        (((unsupported)) ((((unsupported)) ((xn)) ((xk)))) ((((unsupported)) ((((unsupported)) (TRUE) (TRUE))) ((((unsupported)) (TRUE) (FALSE))) ((((unsupported)) (FALSE) (FALSE))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((xn)) ((xk)))) (1))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xperm)) ((xn)) ((xk)))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((((xIntSubclass)) (5))) ((((xIntSubclass)) (2))))) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xperm)) ((((xMyIndexable)) (5))) ((((xMyIndexable)) (2))))) (20))
                        (((unsupported)) ((xk)) ((((xrange)) (3))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xperm)) ((((xIntSubclass)) (5))) ((((xIntSubclass)) ((xk)))))))) ((xint)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xperm)) ((((xMyIndexable)) (5))) ((((xMyIndexable)) ((xk)))))))) ((xint)))
                xtestComb.write
                  [xself]
                    memory > xn
                    memory > xfactorial
                    memory > xcomb
                    seq > @
                      seq
                        xcomb.write ((xmath).xcomb)
                        xfactorial.write ((xmath).xfactorial)
                        (((unsupported)) ((xn)) ((((xrange)) (100))))
                          (((unsupported)) ((xk)) ((((xrange)) (((xn).add 1)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xk)))) ((((unsupported)) ((((xfactorial)) ((xn)))) (((((xfactorial)) ((xk))).mul (((xfactorial)) (((xn).sub (xk)))))))))
                        (((unsupported)) ((xn)) ((((xrange)) (1) (100))))
                          (((unsupported)) ((xk)) ((((xrange)) (1) ((xn)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xk)))) (((((xcomb)) (((xn).sub 1)) (((xk).sub 1))).add (((xcomb)) (((xn).sub 1)) ((xk))))))
                        (((unsupported)) ((xn)) ((((xrange)) (100))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (0))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xn)))) (1))
                        (((unsupported)) ((xn)) ((((xrange)) (1) (100))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (1))) ((xn)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (((xn).sub 1)))) ((xn)))
                        (((unsupported)) ((xn)) ((((xrange)) (100))))
                          (((unsupported)) ((xk)) ((((xrange)) ((((unsupported)) ((xn)) (2))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xk)))) ((((xcomb)) ((xn)) (((xn).sub (xk))))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10) (1.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10) (((((xdecimal).xDecimal)) (1.0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10) ("1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10.0) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (((((xdecimal).xDecimal)) (10.0))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) ("10") (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)) (10) (1) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xcomb)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xcomb)) ((1.neg)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xcomb)) (((((unsupported)) (2) (1000)).neg)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xcomb)) (1) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xcomb)) (1) (((((unsupported)) (2) (1000)).neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) (1) (2))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) (1) ((((unsupported)) (2) (1000))))) (0))
                        xn.write (((unsupported)) (2) (1000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (0))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (1))) ((xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (2))) ((((unsupported)) (((xn).mul ((xn).sub 1))) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xn)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (((xn).sub 1)))) ((xn)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) (((xn).sub 2)))) ((((unsupported)) (((xn).mul ((xn).sub 1))) (2))))
                        (((unsupported)) (((xsupport).xcheck_impl_detail)) (TRUE)).if
                          bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xcomb)) ((xn)) ((((unsupported)) ((xn)) (2))))
                        (((unsupported)) ((((unsupported)) ((xn)) ((xk)))) ((((unsupported)) ((((unsupported)) (TRUE) (TRUE))) ((((unsupported)) (TRUE) (FALSE))) ((((unsupported)) (FALSE) (FALSE))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((xn)) ((xk)))) (1))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xcomb)) ((xn)) ((xk)))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((((xIntSubclass)) (5))) ((((xIntSubclass)) (2))))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xcomb)) ((((xMyIndexable)) (5))) ((((xMyIndexable)) (2))))) (10))
                        (((unsupported)) ((xk)) ((((xrange)) (3))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xcomb)) ((((xIntSubclass)) (5))) ((((xIntSubclass)) ((xk)))))))) ((xint)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((xcomb)) ((((xMyIndexable)) (5))) ((((xMyIndexable)) ((xk)))))))) ((xint)))
                xtest_issue39871.write
                  [xself]
                    memory > xy
                    memory > x__float__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__float__.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)) (((xself).xconverted)) (TRUE))
                                  unsupported
                        (((unsupported)) ((xfunc)) ((((unsupported)) (((xmath).xatan2)) (((xmath).xcopysign)) (((xmath).xremainder)))))
                          seq
                            xy.write (((xF)) 0)
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              bogusForceDataize.write (((xfunc)) ("not a number") ((xy)))
                            bogusForceDataize.write ((((xself).xassertFalse)) ((((xgetattr)) ((xy)) ("converted") (FALSE))))
                xassertIsNaN.write
                  [xself xvalue]
                    seq > @
                      (((((xmath).xisnan)) ((xvalue))).not).if
                        bogusForceDataize.write ((((xself).xfail)) (((("Expected a NaN, got {!r}.".xformat)) ((xvalue)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xisclose.write ((xmath).xisclose)
                xassertIsClose.write
                  [xself xa xb]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xassertTrue)) (((((xself).xisclose)) ((xa)) ((xb)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))) (("%s and %s should be close!".mod (((unsupported)) ((xa)) ((xb))))))
                xassertIsNotClose.write
                  [xself xa xb]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((xself).xassertFalse)) (((((xself).xisclose)) ((xa)) ((xb)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))) (("%s and %s should not be close!".mod (((unsupported)) ((xa)) ((xb))))))
                xassertAllClose.write
                  [xself xexamples]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((xexamples)))
                          bogusForceDataize.write ((((xself).xassertIsClose)) ((xa)) ((xb)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                xassertAllNotClose.write
                  [xself xexamples]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xa)) ((xb)))) ((xexamples)))
                          bogusForceDataize.write ((((xself).xassertIsNotClose)) ((xa)) ((xb)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                xtest_negative_tolerances.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          (((unsupported)) (((xself).xassertIsClose)) (1) (1) (((((unsupported)) 0).neg)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          (((unsupported)) (((xself).xassertIsClose)) (1) (1) ((((unsupported)) 0)) (((((unsupported)) 0).neg)))
                xtest_identical.write
                  [xself]
                    memory > xidentical_examples
                    seq > @
                      seq
                        xidentical_examples.write (((unsupported)) ((((unsupported)) (2.0) (2.0))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) (12345) (12345.0))) ((((unsupported)) (0.0) ((0.0.neg)))) ((((unsupported)) (345678) (345678))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xidentical_examples)) (0.0) (0.0))
                xtest_eight_decimal_places.write
                  [xself]
                    memory > xeight_decimal_places_examples
                    seq > @
                      seq
                        xeight_decimal_places_examples.write (((unsupported)) ((((unsupported)) ((((unsupported)) 0)) (((((unsupported)) 0).add 1)))) ((((unsupported)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))) ((((unsupported)) (1.12345678) (1.12345679))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xeight_decimal_places_examples)) ((((unsupported)) 0)))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xeight_decimal_places_examples)) ((((unsupported)) 0)))
                xtest_near_zero.write
                  [xself]
                    memory > xnear_zero_examples
                    seq > @
                      seq
                        xnear_zero_examples.write (((unsupported)) ((((unsupported)) ((((unsupported)) 0)) (0.0))) ((((unsupported)) (((((unsupported)) 0).neg)) (0.0))) ((((unsupported)) (((((unsupported)) 0).neg)) (0.0))))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xnear_zero_examples)) (0.9))
                        (((unsupported)) (((xself).xassertAllClose)) ((xnear_zero_examples)) ((((unsupported)) 0)))
                xtest_identical_infinite.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIsClose)) ((xINF)) ((xINF)))
                        (((unsupported)) (((xself).xassertIsClose)) ((xINF)) ((xINF)) (0.0))
                        bogusForceDataize.write ((((xself).xassertIsClose)) ((xNINF)) ((xNINF)))
                        (((unsupported)) (((xself).xassertIsClose)) ((xNINF)) ((xNINF)) (0.0))
                xtest_inf_ninf_nan.write
                  [xself]
                    memory > xnot_close_examples
                    seq > @
                      seq
                        xnot_close_examples.write (((unsupported)) ((((unsupported)) ((xNAN)) ((xNAN)))) ((((unsupported)) ((xNAN)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)) ((xNAN)))) ((((unsupported)) ((xINF)) ((xNAN)))) ((((unsupported)) ((xNAN)) ((xINF)))) ((((unsupported)) ((xINF)) ((xNINF)))) ((((unsupported)) ((xINF)) (1.0))) ((((unsupported)) (1.0) ((xINF)))) ((((unsupported)) ((xINF)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)) ((xINF)))))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xnot_close_examples)) (0.999999999999999))
                xtest_zero_tolerance.write
                  [xself]
                    memory > xzero_tolerance_close_examples
                    memory > xzero_tolerance_not_close_examples
                    seq > @
                      seq
                        xzero_tolerance_close_examples.write (((unsupported)) ((((unsupported)) (1.0) (1.0))) ((((unsupported)) ((3.4.neg)) ((3.4.neg)))) ((((unsupported)) (((((unsupported)) 0).neg)) (((((unsupported)) 0).neg)))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xzero_tolerance_close_examples)) (0.0))
                        xzero_tolerance_not_close_examples.write (((unsupported)) ((((unsupported)) (1.0) (1.000000000000001))) ((((unsupported)) (0.99999999999999) (1.0))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xzero_tolerance_not_close_examples)) (0.0))
                xtest_asymmetry.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xassertAllClose)) ((((unsupported)) ((((unsupported)) (9) (10))) ((((unsupported)) (10) (9))))) (0.1))
                xtest_integers.write
                  [xself]
                    memory > xinteger_examples
                    seq > @
                      seq
                        xinteger_examples.write (((unsupported)) ((((unsupported)) (100000001) (100000000))) ((((unsupported)) (123456789) (123456788))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xinteger_examples)) ((((unsupported)) 0)))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xinteger_examples)) ((((unsupported)) 0)))
                xtest_decimals.write
                  [xself]
                    memory > xdecimal_examples
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xdecimal_examples.write (((unsupported)) ((((unsupported)) ((((xDecimal)) ("1.00000001"))) ((((xDecimal)) ("1.0"))))) ((((unsupported)) ((((xDecimal)) ("1.00000001e-20"))) ((((xDecimal)) ("1.0e-20"))))) ((((unsupported)) ((((xDecimal)) ("1.00000001e-100"))) ((((xDecimal)) ("1.0e-100"))))) ((((unsupported)) ((((xDecimal)) ("1.00000001e20"))) ((((xDecimal)) ("1.0e20"))))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xdecimal_examples)) ((((unsupported)) 0)))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xdecimal_examples)) ((((unsupported)) 0)))
                xtest_fractions.write
                  [xself]
                    memory > xfraction_examples
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xfraction_examples.write (((unsupported)) ((((unsupported)) (((((xFraction)) (1) (100000000)).add 1)) ((((xFraction)) (1))))) ((((unsupported)) ((((xFraction)) (100000001))) ((((xFraction)) (100000000))))) ((((unsupported)) ((((xFraction)) (((((unsupported)) (10) (8)).add 1)) ((((unsupported)) (10) (28))))) ((((xFraction)) (1) ((((unsupported)) (10) (20))))))))
                        (((unsupported)) (((xself).xassertAllClose)) ((xfraction_examples)) ((((unsupported)) 0)))
                        (((unsupported)) (((xself).xassertAllNotClose)) ((xfraction_examples)) ((((unsupported)) 0)))
            xtest_main.write
              []
                memory > xsuite
                seq > @
                  seq
                    (((unsupported)) 0)
                    xsuite.write ((((xunittest).xTestSuite)) 0)
                    bogusForceDataize.write ((((xsuite).xaddTest)) (((((xunittest).xmakeSuite)) ((xMathTests)))))
                    bogusForceDataize.write ((((xsuite).xaddTest)) (((((xunittest).xmakeSuite)) ((xIsCloseTests)))))
                    bogusForceDataize.write ((((xsuite).xaddTest)) ((((xDocFileSuite)) ("ieee754.txt"))))
                    bogusForceDataize.write (((xrun_unittest)) ((xsuite)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)) 0)