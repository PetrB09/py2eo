memory > xassert_python_failure
memory > xrun_unittest
memory > xtimer
memory > xenumerate
memory > xlocals
memory > xprofile
memory > xtestfunc
memory > xopen
memory > xf
memory > xsys
memory > xglobals
memory > xunlink
memory > xgetattr
memory > xassert_python_ok
memory > xProfileTest
memory > xtmpdir
memory > xtemp_dir
memory > xprint
memory > xstmt
memory > xi
memory > xTESTFN
memory > xos
memory > xpstats
memory > x__file__
memory > xStringIO
memory > xunified_diff
memory > xunittest
memory > xline
memory > xmethodname
memory > xmethod
memory > xchange_cwd
memory > x__name__
[] > test_profile
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xmethodnames
        memory > xtest_cprofile
        memory > xtest_run_profile_as_module
        memory > xregenerate_expected_output
        memory > xprofilermodule
        memory > xexpected_max_output
        memory > xtest_run
        memory > xtest_calling_conventions
        memory > x_ProfileOutput
        memory > xprofilerclass
        memory > xtest_main
        memory > xtest_runctx
        memory > xdo_profiling
        memory > xget_expected_output
        memory > xmain
        memory > xtest_output_file_when_changing_directory
        memory > xtearDown
        memory > xsilent
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xprofilerclass.write ((xprofile).xProfile)
                xprofilermodule.write (xprofile)
                xmethodnames.write (((unsupported)) ("print_stats") ("print_callers") ("print_callees"))
                xexpected_max_output.write ":0(max)"
                xtearDown.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((xunlink)) ((xTESTFN)))
                xget_expected_output.write
                  [xself]
                    seq > @
                      (((unsupported)) ((x_ProfileOutput)))
                xdo_profiling.write
                  [xcls]
                    memory > xprof
                    memory > xstats
                    memory > xoutput
                    memory > xstart_timer
                    memory > xs
                    memory > xmod_name
                    memory > xresults
                    seq > @
                      (((unsupported)) 0)
                        xresults.write (((unsupported)) 0)
                        xprof.write ((((xcls).xprofilerclass)) ((xtimer)) (0.001))
                        xstart_timer.write (((xtimer)) 0)
                        bogusForceDataize.write ((((xprof).xrunctx)) ("testfunc()") ((((xglobals)) 0)) ((((xlocals)) 0)))
                        bogusForceDataize.write ((((xresults).xappend)) (((((xtimer)) 0).sub (xstart_timer))))
                        (((unsupported)) ((xmethodname)) (((xcls).xmethodnames)))
                          seq
                            xs.write (((xStringIO)) 0)
                            xstats.write (((unsupported)) (((xpstats).xStats)) ((xprof)) ((xs)))
                            bogusForceDataize.write (((((((xstats).xstrip_dirs)) 0).xsort_stats)) ("stdname"))
                            bogusForceDataize.write (((((xgetattr)) ((xstats)) ((xmethodname)))) 0)
                            xoutput.write (((((((xs).xgetvalue)) 0).xsplitlines)) 0)
                            xmod_name.write (((unsupported)) ((((((xtestfunc).x__module__).xrsplit)) (".") (1))) (1))
                            xoutput.write (((unsupported)) (((((xline).xrstrip)) 0)) ((xline)) ((xoutput)) ((((unsupported)) ((xmod_name)) ((xline)))))
                            bogusForceDataize.write ((((xresults).xappend)) (((("n".xjoin)) ((xoutput)))))
                        (((unsupported)) ((xresults)))
                xtest_cprofile.write
                  [xself]
                    memory > xexpected
                    memory > xfail
                    memory > xb
                    memory > xresults
                    memory > xa
                    seq > @
                      seq
                        xresults.write ((((xself).xdo_profiling)) 0)
                        xexpected.write ((((xself).xget_expected_output)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xresults)) (0))) (1000))
                        xfail.write (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xi)) ((xmethod)))) ((((xenumerate)) (((xself).xmethodnames)))))
                          seq
                            xa.write (((unsupported)) ((xexpected)) ((xmethod)))
                            xb.write (((unsupported)) ((xresults)) (((xi).add 1)))
                            ((xa).neq (xb)).if
                              seq
                                bogusForceDataize.write ((((xfail).xappend)) ("nStats.{method} output for {self.profilerclass.__name__} does not fit expectation:"))
                                bogusForceDataize.write ((((xfail).xextend)) ((((unsupported)) ((xunified_diff)) (((((xa).xsplit)) ("n"))) (((((xb).xsplit)) ("n"))) (""))))
                        (xfail).if
                          bogusForceDataize.write ((((xself).xfail)) (((("n".xjoin)) ((xfail)))))
                xtest_calling_conventions.write
                  [xself]
                    memory > xprof
                    memory > xstats
                    memory > xs
                    memory > xres
                    memory > xstmts
                    seq > @
                      seq
                        xstmts.write (((unsupported)) ("max([0])") ("max([0], key=int)") ("max([0], **dict(key=int))") ("max(*([0],))") ("max(*([0],), key=int)") ("max(*([0],), **dict(key=int))"))
                        (((unsupported)) ((xstmt)) ((xstmts)))
                          seq
                            xs.write (((xStringIO)) 0)
                            xprof.write ((((xself).xprofilerclass)) ((xtimer)) (0.001))
                            bogusForceDataize.write ((((xprof).xrunctx)) ((xstmt)) ((((xglobals)) 0)) ((((xlocals)) 0)))
                            xstats.write (((unsupported)) (((xpstats).xStats)) ((xprof)) ((xs)))
                            bogusForceDataize.write ((((xstats).xprint_stats)) 0)
                            xres.write ((((xs).xgetvalue)) 0)
                            bogusForceDataize.write ((((xself).xassertIn)) (((xself).xexpected_max_output)) ((xres)) (((("Profiling {0!r} didn't report max:n{1}".xformat)) ((xstmt)) ((xres)))))
                xtest_run.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xsilent)) 0)))
                          bogusForceDataize.write (((((xself).xprofilermodule).xrun)) ("int('1')"))
                        (((unsupported)) ((((xself).xprofilermodule).xrun)) ("int('1')") ((xTESTFN)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((xos).xpath).xexists)) ((xTESTFN)))))
                xtest_runctx.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((xsilent)) 0)))
                          bogusForceDataize.write (((((xself).xprofilermodule).xrunctx)) ("testfunc()") ((((xglobals)) 0)) ((((xlocals)) 0)))
                        (((unsupported)) ((((xself).xprofilermodule).xrunctx)) ("testfunc()") ((((xglobals)) 0)) ((((xlocals)) 0)) ((xTESTFN)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((xos).xpath).xexists)) ((xTESTFN)))))
                xtest_run_profile_as_module.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((xassert_python_failure)) ("-m") ((((xself).xprofilermodule).x__name__)) ("-m"))
                        bogusForceDataize.write (((xassert_python_failure)) ("-m") ((((xself).xprofilermodule).x__name__)) ("-m") ("random_module_xyz"))
                        bogusForceDataize.write (((xassert_python_ok)) ("-m") ((((xself).xprofilermodule).x__name__)) ("-m") ("timeit") ("-n") ("1"))
                xtest_output_file_when_changing_directory.write
                  [xself]
                    seq > @
                      (((unsupported)) ((((xtemp_dir)) 0)) ((xtmpdir)) ((((xchange_cwd)) ((xtmpdir)))))
                        seq
                          bogusForceDataize.write ((((xos).xmkdir)) ("dest"))
                          (((unsupported)) ((((xopen)) ("demo.py") ("w"))) ((xf)))
                            bogusForceDataize.write ((((xf).xwrite)) ("import os; os.chdir(\"dest\")"))
                          bogusForceDataize.write (((xassert_python_ok)) ("-m") ((((xself).xprofilermodule).x__name__)) ("-o") ("out.pstats") ("demo.py"))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((((xos).xpath).xexists)) ("out.pstats"))))
            xregenerate_expected_output.write
              [xfilename xcls]
                memory > xnewfile
                memory > xresults
                seq > @
                  seq
                    xfilename.write ((((xfilename).xrstrip)) ("co"))
                    bogusForceDataize.write (((xprint)) (("Regenerating %s...".mod (xfilename))))
                    xresults.write ((((xcls).xdo_profiling)) 0)
                    xnewfile.write (((unsupported)) 0)
                    (((unsupported)) ((((xopen)) ((xfilename)) ("r"))) ((xf)))
                      (((unsupported)) ((xline)) ((xf)))
                        seq
                          bogusForceDataize.write ((((xnewfile).xappend)) ((xline)))
                          ((((xline).xstartswith)) ("#--cut")).if
                            (((unsupported)) 0)
                    (((unsupported)) ((((xopen)) ((xfilename)) ("w"))) ((xf)))
                      seq
                        bogusForceDataize.write ((((xf).xwritelines)) ((xnewfile)))
                        bogusForceDataize.write ((((xf).xwrite)) ("_ProfileOutput = {}n"))
                        (((unsupported)) ((((unsupported)) ((xi)) ((xmethod)))) ((((xenumerate)) (((xcls).xmethodnames)))))
                          bogusForceDataize.write ((((xf).xwrite)) (((((unsupported)) 0).mod (((unsupported)) ((xmethod)) ((((unsupported)) ((xresults)) (((xi).add 1))))))))
                        bogusForceDataize.write ((((xf).xwrite)) ("nif __name__ == \"__main__\":n    main()n"))
            xsilent.write
              []
                memory > xstdout
                seq > @
                  (((unsupported)) 0)
                    xstdout.write ((xsys).xstdout)
                    (((unsupported)) 0)
                      seq
                        (((unsupported)) (((xsys).xstdout)) ((((xStringIO)) 0)))
                        (((unsupported)) 0)
                      (((unsupported)) (((xsys).xstdout)) ((xstdout)))
            xtest_main.write
              []
                seq > @
                  bogusForceDataize.write (((xrun_unittest)) ((xProfileTest)))
            xmain.write
              []
                seq > @
                  (((unsupported)) ("-r") (((xsys).xargv))).if
                    bogusForceDataize.write (((xtest_main)) 0)
                    bogusForceDataize.write (((xregenerate_expected_output)) ((x__file__)) ((xProfileTest)))
            x_ProfileOutput.write (((unsupported)) 0)
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_stats"))) ((((unsupported)) 0)))
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_callers"))) ((((unsupported)) 0)))
            (((unsupported)) ((((unsupported)) ((x_ProfileOutput)) ("print_callees"))) ((((unsupported)) 0)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xmain)) 0)