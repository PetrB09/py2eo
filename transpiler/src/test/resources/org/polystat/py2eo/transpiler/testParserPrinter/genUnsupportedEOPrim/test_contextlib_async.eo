memory > xk
memory > xNoneAenter
memory > xException
memory > xx
memory > xsuper
memory > xargs
memory > xe
memory > xkwargs
memory > xSyncAsyncExitStack
memory > xAsyncExitStack
memory > xAttributeError
memory > xstack
memory > xRuntimeError
memory > xTestBaseExitStack
memory > xstop_exc
memory > xNoneAexit
memory > xValueError
memory > xexc_details
memory > xDefaultEnter
memory > xcontext
memory > xZeroDivisionError
memory > xExitCM
memory > xIndexError
memory > xStopIteration
memory > xKeyError
memory > xAbstractAsyncContextManager
memory > xStopAsyncIteration
memory > xreversed
memory > xkw
memory > xtype
memory > xkwds
memory > xissubclass
memory > xDeprecationWarning
memory > xMissingAexit
memory > xval
memory > xv
memory > xSyntaxError
memory > xtarget
memory > xsetattr
memory > xunittest
memory > xex
memory > xexc
memory > xwrapper
memory > xobject
memory > xTestCM
memory > xManagerFromScratch
memory > xdict
memory > xTypeError
memory > x__name__
memory > xasyncio
[] > test_contextlib_async
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xexit_stack
        memory > xtest_async_callback
        memory > xtest_contextmanager_trap_no_yield
        memory > xtest_contextmanager_except
        memory > xtest_contextmanager_doc_attrib
        memory > xsetUp
        memory > xtest_enter
        memory > x__exit__
        memory > xtest_contextmanager_non_normalised
        memory > xtest_contextmanager_except_stopiter
        memory > xtest_exit_is_abstract
        memory > xtest_contextmanager_trap_second_yield
        memory > x_create_contextmanager_attribs
        memory > x_async_test
        memory > xtest_contextmanager_attribs
        memory > xtest_keywords
        memory > xclose
        memory > xtest_contextmanager_no_reraise
        memory > xtest_structural_subclassing
        memory > xtest_contextmanager_trap_yield_after_throw
        memory > xtest_async_gen_propagates_generator_exit
        memory > xtest_async_exit_exception_chaining
        memory > xtest_async_push
        memory > x__enter__
        memory > xtest_contextmanager_finally
        memory > xtest_contextmanager_wrap_runtimeerror
        memory > xrun_coroutine
        memory > xtest_contextmanager_plain
        memory > xtest_instance_docstring_given_cm_docstring
        memory > xtest_async_enter_context
        seq > @
          seq
            (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            x_async_test.write
              [xfunc]
                memory > xwrapper
                seq > @
                  seq
                    unsupported
                    xwrapper.write
                      []
                        memory > xloop
                        memory > xcoro
                        seq > @
                          (((unsupported)) 0)
                            xcoro.write (((xfunc)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                            xloop.write ((((xasyncio).xnew_event_loop)) 0)
                            bogusForceDataize.write ((((xasyncio).xset_event_loop)) ((xloop)))
                            (((unsupported)) 0)
                              (((unsupported)) (((((xloop).xrun_until_complete)) ((xcoro)))))
                              seq
                                bogusForceDataize.write ((((xloop).xclose)) 0)
                                bogusForceDataize.write ((((xasyncio).xset_event_loop_policy)) ("None: is there a None literal in the EO language?"))
                    (((unsupported)) ((xwrapper)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_enter.write
                  [xself]
                    memory > xmanager
                    memory > x__aexit__
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xAbstractAsyncContextManager)))
                          x__aexit__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((((xsuper)) 0).x__aexit__)) ((((unsupported)) ((xargs)))))))
                        xmanager.write (((xDefaultEnter)) 0)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((((xmanager).x__aenter__)) 0)))) ((xmanager)))
                        (((unsupported)) ((xmanager)) ((xcontext)))
                          bogusForceDataize.write ((((xself).xassertIs)) ((xmanager)) ((xcontext)))
                xtest_async_gen_propagates_generator_exit.write
                  [xself]
                    memory > xret
                    memory > xgen
                    memory > xexc
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xctx.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        xgen.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xctx)) 0)))
                                  (((unsupported)) (11))
                        xret.write (((unsupported)) 0)
                        xexc.write (((xValueError)) (22))
                        (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                          (((unsupported)) ((((xctx)) 0)))
                            (((unsupported)) ((xval)) ((((xgen)) 0)))
                              seq
                                bogusForceDataize.write ((((xret).xappend)) ((xval)))
                                (((unsupported)) ((xexc)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (11))))
                xtest_exit_is_abstract.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xAbstractAsyncContextManager)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xMissingAexit)) 0)
                xtest_structural_subclassing.write
                  [xself]
                    memory > x__aenter__
                    memory > x__aexit__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__aenter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xself)))
                            x__aexit__.write
                              [xself xexc_type xexc_value xtraceback]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xManagerFromScratch)) ((xAbstractAsyncContextManager)))))
                        (((unsupported)) ((xAbstractAsyncContextManager)))
                          x__aexit__.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((((((xsuper)) 0).x__aexit__)) ((((unsupported)) ((xargs)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xissubclass)) ((xDefaultEnter)) ((xAbstractAsyncContextManager)))))
                        (((unsupported)) ((xManagerFromScratch)))
                          x__aenter__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xNoneAenter)) ((xAbstractAsyncContextManager)))))
                        (((unsupported)) ((xManagerFromScratch)))
                          x__aexit__.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xissubclass)) ((xNoneAexit)) ((xAbstractAsyncContextManager)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_contextmanager_plain.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) (42))
                                bogusForceDataize.write ((((xstate).xappend)) (999))
                        (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                            bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_finally.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) 0)
                                  (((unsupported)) (42))
                                  bogusForceDataize.write ((((xstate).xappend)) (999))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                            seq
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                              bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                              (((unsupported)) ((((xZeroDivisionError)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_no_reraise.write
                  [xself]
                    memory > xwhee
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xwhee.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        xctx.write (((xwhee)) 0)
                        (((unsupported)) (((((xctx).x__aenter__)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((unsupported)) (((((xctx).x__aexit__)) ((xTypeError)) ((((xTypeError)) ("foo"))) ("None: is there a None literal in the EO language?"))))))
                xtest_contextmanager_trap_yield_after_throw.write
                  [xself]
                    memory > xwhoo
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xwhoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                  (((unsupported)) 0)
                                  (((unsupported)) 0)
                        xctx.write (((xwhoo)) 0)
                        (((unsupported)) (((((xctx).x__aenter__)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) (((((xctx).x__aexit__)) ((xTypeError)) ((((xTypeError)) ("foo"))) ("None: is there a None literal in the EO language?"))))
                xtest_contextmanager_trap_no_yield.write
                  [xself]
                    memory > xwhoo
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xwhoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                FALSE.if
                                  (((unsupported)) 0)
                        xctx.write (((xwhoo)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) (((((xctx).x__aenter__)) 0)))
                xtest_contextmanager_trap_second_yield.write
                  [xself]
                    memory > xwhoo
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xwhoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) 0)
                        xctx.write (((xwhoo)) 0)
                        (((unsupported)) (((((xctx).x__aenter__)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) (((((xctx).x__aexit__)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_contextmanager_non_normalised.write
                  [xself]
                    memory > xwhoo
                    memory > xctx
                    seq > @
                      (((unsupported)) 0)
                        xwhoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xRuntimeError)))
                                  (((unsupported)) 0)
                                  (((unsupported)) ((xSyntaxError)))
                        xctx.write (((xwhoo)) 0)
                        (((unsupported)) (((((xctx).x__aenter__)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))))
                          (((unsupported)) (((((xctx).x__aexit__)) ((xRuntimeError)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                xtest_contextmanager_except.write
                  [xself]
                    memory > xstate
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xstate.write (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xstate).xappend)) (1))
                                (((unsupported)) ((xZeroDivisionError)))
                                  (((unsupported)) (42))
                                  seq
                                    bogusForceDataize.write ((((xstate).xappend)) ((((unsupported)) (((xe).xargs)) (0))))
                                    bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                        (((unsupported)) ((((xwoohoo)) 0)) ((xx)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xx)) (42))
                            bogusForceDataize.write ((((xstate).xappend)) ((xx)))
                            (((unsupported)) ((((xZeroDivisionError)) (999))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xstate)) ((((unsupported)) (1) (42) (999))))
                xtest_contextmanager_except_stopiter.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                        (((unsupported)) ((xstop_exc)) ((((unsupported)) ((((xStopIteration)) ("spam"))) ((((xStopAsyncIteration)) ("ham"))))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((((xtype)) ((xstop_exc)))))))
                            (((unsupported)) ((xException)))
                              (((unsupported)) ((((xwoohoo)) 0)))
                                (((unsupported)) ((xstop_exc)))
                              bogusForceDataize.write ((((xself).xassertIs)) ((xex)) ((xstop_exc)))
                              bogusForceDataize.write ((((xself).xfail)) ("{stop_exc} was suppressed"))
                xtest_contextmanager_wrap_runtimeerror.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xwoohoo.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xException)))
                                  (((unsupported)) 0)
                                  (((unsupported)) ((((xRuntimeError)) ("caught {exc}"))) ((xexc)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))))
                          (((unsupported)) ((((xwoohoo)) 0)))
                            unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xStopAsyncIteration)))))
                          (((unsupported)) ((((xwoohoo)) 0)))
                            (((unsupported)) ((xStopAsyncIteration)))
                x_create_contextmanager_attribs.write
                  [xself]
                    memory > xbaz
                    memory > xattribs
                    seq > @
                      seq
                        xattribs.write
                          []
                            memory > xdecorate
                            seq > @
                              (((unsupported)) 0)
                                xdecorate.write
                                  [xfunc]
                                    seq > @
                                      seq
                                        (((unsupported)) ((((unsupported)) ((xk)) ((xv)))) (((((xkw).xitems)) 0)))
                                          bogusForceDataize.write (((xsetattr)) ((xfunc)) ((xk)) ((xv)))
                                        (((unsupported)) ((xfunc)))
                                (((unsupported)) ((xdecorate)))
                        xbaz.write
                          [xspam]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                (((unsupported)) 0)
                        (((unsupported)) ((xbaz)))
                xtest_contextmanager_attribs.write
                  [xself]
                    memory > xbaz
                    seq > @
                      seq
                        xbaz.write ((((xself).x_create_contextmanager_attribs)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__name__)) ("baz"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).xfoo)) ("bar"))
                xtest_contextmanager_doc_attrib.write
                  [xself]
                    memory > xbaz
                    seq > @
                      (((unsupported)) 0)
                        xbaz.write ((((xself).x_create_contextmanager_attribs)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__doc__)) ("Whee!"))
                xtest_instance_docstring_given_cm_docstring.write
                  [xself]
                    memory > xbaz
                    seq > @
                      (((unsupported)) 0)
                        xbaz.write ((((((xself).x_create_contextmanager_attribs)) 0)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xbaz).x__doc__)) ("Whee!"))
                        (((unsupported)) ((xbaz)))
                xtest_keywords.write
                  [xself]
                    memory > xwoohoo
                    seq > @
                      (((unsupported)) 0)
                        xwoohoo.write
                          [xself xfunc xargs xkwds]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((unsupported)) ((xself)) ((xfunc)) ((xargs)) ((xkwds)))))
                        (((unsupported)) ((((unsupported)) ((xwoohoo)) (11) (22) (33) (44))) ((xtarget)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((xtarget)) ((((unsupported)) (11) (22) (33) (44))))
            (((unsupported)) ((xTestBaseExitStack)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) ((xAsyncExitStack)))
                  seq
                    xrun_coroutine.write
                      [xcoro]
                        memory > xcontext
                        memory > xexc
                        memory > xloop
                        memory > xf
                        seq > @
                          (((unsupported)) 0)
                            xloop.write ((((xasyncio).xget_event_loop)) 0)
                            xf.write ((((xasyncio).xensure_future)) ((xcoro)))
                            bogusForceDataize.write ((((xf).xadd_done_callback)) ((((unsupported)) (((((xloop).xstop)) 0)))))
                            bogusForceDataize.write ((((xloop).xrun_forever)) 0)
                            xexc.write ((((xf).xexception)) 0)
                            ((xexc).not).if
                              (((unsupported)) (((((xf).xresult)) 0)))
                              seq
                                xcontext.write ((xexc).x__context__)
                                (((unsupported)) 0)
                                  (((unsupported)) ((xexc)))
                                  seq
                                    (((unsupported)) (((xexc).x__context__)) ((xcontext)))
                                    (((unsupported)) ((xexc)))
                    xclose.write
                      [xself]
                        seq > @
                          (((unsupported)) (((((xself).xrun_coroutine)) (((((xself).xaclose)) 0)))))
                    x__enter__.write
                      [xself]
                        seq > @
                          (((unsupported)) (((((xself).xrun_coroutine)) (((((xself).x__aenter__)) 0)))))
                    x__exit__.write
                      [xself]
                        seq > @
                          (((unsupported)) 0)
                            (((unsupported)) (((((xself).xrun_coroutine)) (((((xself).x__aexit__)) ((((unsupported)) ((xexc_details)))))))))
                xexit_stack.write (xSyncAsyncExitStack)
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xloop)) (((((xasyncio).xnew_event_loop)) 0)))
                        bogusForceDataize.write ((((xasyncio).xset_event_loop)) (((xself).xloop)))
                        bogusForceDataize.write ((((xself).xaddCleanup)) ((((xself).xloop).xclose)))
                        bogusForceDataize.write ((((xself).xaddCleanup)) (((xasyncio).xset_event_loop_policy)) ("None: is there a None literal in the EO language?"))
                xtest_async_callback.write
                  [xself]
                    memory > xexpected
                    memory > xresult
                    memory > x_exit
                    memory > xf
                    seq > @
                      (((unsupported)) 0)
                        xexpected.write (((unsupported)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ((xdict)) (1))))) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (1))))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ((xdict)) (1))))))
                        xresult.write (((unsupported)) 0)
                        x_exit.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                bogusForceDataize.write ((((xresult).xappend)) ((((unsupported)) ((xargs)) ((xkwds)))))
                        (((unsupported)) ((((xAsyncExitStack)) 0)) ((xstack)))
                          seq
                            (((unsupported)) ((((unsupported)) ((xargs)) ((xkwds)))) ((((xreversed)) ((xexpected)))))
                              seq
                                ((xargs).and (xkwds)).if
                                  xf.write ((((xstack).xpush_async_callback)) ((x_exit)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwds)))))
                                  (xargs).if
                                    xf.write ((((xstack).xpush_async_callback)) ((x_exit)) ((((unsupported)) ((xargs)))))
                                    (xkwds).if
                                      xf.write ((((xstack).xpush_async_callback)) ((x_exit)) ((((unsupported)) ((xkwds)))))
                                      xf.write ((((xstack).xpush_async_callback)) ((x_exit)))
                                bogusForceDataize.write ((((xself).xassertIs)) ((xf)) ((x_exit)))
                            (((unsupported)) ((xwrapper)) (((xstack).x_exit_callbacks)))
                              seq
                                bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((xwrapper)) (1)).x__wrapped__)) ((x_exit)))
                                bogusForceDataize.write ((((xself).xassertNotEqual)) (((((unsupported)) ((xwrapper)) (1)).x__name__)) (((x_exit).x__name__)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) (((((unsupported)) ((xwrapper)) (1)).x__doc__)) (((x_exit).x__doc__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((xexpected)))
                        xresult.write (((unsupported)) 0)
                        (((unsupported)) ((((xAsyncExitStack)) 0)) ((xstack)))
                          seq
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              (((unsupported)) (((xstack).xpush_async_callback)) (1))
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              (((unsupported)) ((((xself).xexit_stack).xpush_async_callback)) (2))
                            (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                              (((unsupported)) (((xstack).xpush_async_callback)) ((x_exit)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("arg") (3))))))))
                xtest_async_push.write
                  [xself]
                    memory > xcm
                    memory > x_expect_ok
                    memory > xexc_raised
                    memory > x__aenter__
                    memory > x__aexit__
                    memory > x_expect_exc
                    memory > x__init__
                    memory > x_suppress_exc
                    seq > @
                      (((unsupported)) 0)
                        xexc_raised.write (xZeroDivisionError)
                        x_expect_exc.write
                          [xexc_type xexc xexc_tb]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIs)) ((xexc_type)) ((xexc_raised)))
                        x_suppress_exc.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (TRUE))
                        x_expect_ok.write
                          [xexc_type xexc xexc_tb]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc_type)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc)))
                                bogusForceDataize.write ((((xself).xassertIsNone)) ((xexc_tb)))
                        (((unsupported)) ((xobject)))
                          seq
                            x__init__.write
                              [xself xcheck_exc]
                                seq > @
                                  (((unsupported)) (((xself).xcheck_exc)) ((xcheck_exc)))
                            x__aenter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xself).xfail)) ("Should not be called!"))
                            x__aexit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((((xself).xcheck_exc)) ((((unsupported)) ((xexc_details)))))))
                        (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                          seq
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((x_expect_ok)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_ok)))
                            xcm.write (((xExitCM)) ((x_expect_ok)))
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((xcm)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((x_suppress_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_suppress_exc)))
                            xcm.write (((xExitCM)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((xcm)))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_exc)))
                            bogusForceDataize.write ((((xstack).xpush_async_exit)) ((x_expect_exc)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1))) ((x_expect_exc)))
                            unsupported
                xtest_async_enter_context.write
                  [xself]
                    memory > xcm
                    memory > x__aenter__
                    memory > x__aexit__
                    memory > x_exit
                    memory > xresult
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xobject)))
                          seq
                            x__aenter__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (1))
                            x__aexit__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (3))
                        xresult.write (((unsupported)) 0)
                        xcm.write (((xTestCM)) 0)
                        (((unsupported)) ((((xAsyncExitStack)) 0)) ((xstack)))
                          seq
                            x_exit.write
                              []
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((xresult).xappend)) (4))
                            bogusForceDataize.write ((((xself).xassertIsNotNone)) ((x_exit)))
                            (((unsupported)) (((((xstack).xenter_async_context)) ((xcm)))))
                            bogusForceDataize.write ((((xself).xassertIs)) (((((unsupported)) ((((unsupported)) (((xstack).x_exit_callbacks)) ((1.neg)))) (1)).x__self__)) ((xcm)))
                            bogusForceDataize.write ((((xresult).xappend)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xresult)) ((((unsupported)) (1) (2) (3) (4))))
                xtest_async_exit_exception_chaining.write
                  [xself]
                    memory > xinner_exc
                    memory > xsaved_details
                    memory > xsuppress_exc
                    memory > xraise_exc
                    seq > @
                      (((unsupported)) 0)
                        xraise_exc.write
                          [xexc]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xexc)))
                        xsaved_details.write "None: is there a None literal in the EO language?"
                        xsuppress_exc.write
                          []
                            memory > xsaved_details
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                xsaved_details.write (xexc_details)
                                (((unsupported)) (TRUE))
                        (((unsupported)) ((xIndexError)))
                          (((unsupported)) (((((xself).xexit_stack)) 0)) ((xstack)))
                            seq
                              bogusForceDataize.write ((((xstack).xpush_async_callback)) ((xraise_exc)) ((xIndexError)))
                              bogusForceDataize.write ((((xstack).xpush_async_callback)) ((xraise_exc)) ((xKeyError)))
                              bogusForceDataize.write ((((xstack).xpush_async_callback)) ((xraise_exc)) ((xAttributeError)))
                              bogusForceDataize.write ((((xstack).xpush_async_exit)) ((xsuppress_exc)))
                              bogusForceDataize.write ((((xstack).xpush_async_callback)) ((xraise_exc)) ((xValueError)))
                              unsupported
                          seq
                            bogusForceDataize.write ((((xself).xassertIsInstance)) (((xexc).x__context__)) ((xKeyError)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)) ((((xexc).x__context__).x__context__)) ((xAttributeError)))
                            bogusForceDataize.write ((((xself).xassertIsNone)) (((((xexc).x__context__).x__context__).x__context__)))
                          bogusForceDataize.write ((((xself).xfail)) ("Expected IndexError, but no exception was raised"))
                        xinner_exc.write (((unsupported)) ((xsaved_details)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) ((xinner_exc)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xinner_exc).x__context__)) ((xZeroDivisionError)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)