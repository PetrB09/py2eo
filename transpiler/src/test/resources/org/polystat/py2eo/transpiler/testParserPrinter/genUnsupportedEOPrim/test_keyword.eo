memory > xexec
memory > xkeyword
memory > xsorted
memory > xSyntaxError
memory > xsetattr
memory > xunittest
memory > x__name__
memory > xkey
[] > test_keyword
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_uppercase_true_is_not_a_keyword
        memory > xtest_keywords_are_sorted
        memory > xtest_true_is_a_keyword
        memory > xtest_none_value_is_not_a_keyword
        memory > xtest_changing_the_kwlist_does_not_affect_iskeyword
        memory > xtest_all_keywords_fail_to_be_used_as_names
        memory > xtest_async_and_await_are_keywords
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_true_is_a_keyword.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)) (((((xkeyword).xiskeyword)) ("True"))))
                xtest_uppercase_true_is_not_a_keyword.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertFalse)) (((((xkeyword).xiskeyword)) ("TRUE"))))
                xtest_none_value_is_not_a_keyword.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertFalse)) (((((xkeyword).xiskeyword)) ("None: is there a None literal in the EO language?"))))
                xtest_changing_the_kwlist_does_not_affect_iskeyword.write
                  [xself]
                    memory > xoldlist
                    seq > @
                      seq
                        xoldlist.write ((xkeyword).xkwlist)
                        bogusForceDataize.write ((((xself).xaddCleanup)) ((xsetattr)) ((xkeyword)) ("kwlist") ((xoldlist)))
                        (((unsupported)) (((xkeyword).xkwlist)) ((((unsupported)) ("its") ("all") ("eggs") ("beans") ("and") ("a") ("slice"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xkeyword).xiskeyword)) ("eggs"))))
                xtest_all_keywords_fail_to_be_used_as_names.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xkey)) (((xkeyword).xkwlist)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))))
                          bogusForceDataize.write (((xexec)) ("{key} = 42"))
                xtest_async_and_await_are_keywords.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIn)) ("async") (((xkeyword).xkwlist)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("await") (((xkeyword).xkwlist)))
                xtest_keywords_are_sorted.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertListEqual)) ((((xsorted)) (((xkeyword).xkwlist)))) (((xkeyword).xkwlist)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)