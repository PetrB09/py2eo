memory > xplatform
memory > xImportError
memory > ximportlib
memory > xprint
memory > x__name__
memory > xsupport
memory > xsys
memory > xname
memory > xunittest
[] > test_sundry
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_untested_modules_can_be_imported
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_untested_modules_can_be_imported.write
                [xself]
                  memory > xuntested
                  seq > @
                    seq
                      xuntested.write (((unsupported)) ("encodings") ("formatter"))
                      (((unsupported)) ((((unsupported)) (((xsupport).xcheck_warnings)) (TRUE))))
                        seq
                          (((unsupported)) ((xname)) ((xuntested)))
                            (((unsupported)) (((xunittest).xSkipTest)))
                              bogusForceDataize.write ((((xsupport).ximport_module)) (((("test.test_{}".xformat)) ((xname)))))
                              bogusForceDataize.write ((((ximportlib).ximport_module)) ((xname)))
                              bogusForceDataize.write ((((xself).xfail)) (((("{} has tests even though test_sundry claims otherwise".xformat)) ((xname)))))
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          ((((((xsys).xplatform).xstartswith)) ("win")).and (((((xplatform).xwin32_is_iot)) 0).not)).if
                            (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) 0)
                          (((unsupported)) ((xImportError)))
                            (((unsupported)) 0)
                            ((xsupport).xverbose).if
                              bogusForceDataize.write (((xprint)) ("skipping tty"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)