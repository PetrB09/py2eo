memory > xBadInt
memory > xtuple
memory > xFloat
memory > xgetargs_D
memory > xFloatSubclass
memory > xgetargs_w_star
memory > xgetargs_d
memory > xgetargs_et_hash
memory > xBadComplex2
memory > xULONG_MAX
memory > xcomplex
memory > xLONG_MIN
memory > xc
memory > xPY_SSIZE_T_MIN
memory > xUINT_MAX
memory > xComplexSubclass
memory > xgetargs_keyword_only
memory > xBadFloat
memory > xlocals
memory > xINT_MAX
memory > xFLT_MIN
memory > xseq
memory > xBadIndex2
memory > xgetargs_z_star
memory > xgetargs_H
memory > xValueError
memory > xgetargs_keywords
memory > xLONG_MAX
memory > xgetargs_c
memory > xBadFloat2
memory > xgetargs_C
memory > xstr
memory > xgetargs_h
memory > xc2
memory > xget_kwargs
memory > xgetargs_I
memory > xBadIndex
memory > xgetargs_y_hash
memory > xBadFloat3
memory > xrange
memory > xmath
memory > xUCHAR_MAX
memory > xgetargs_tuple
memory > xgetargs_p
memory > xgetargs_u_hash
memory > xSHRT_MAX
memory > xgetargs_L
memory > xNotImplementedError
memory > xbytearray
memory > xINT_MIN
memory > xgetargs_z_hash
memory > xgetargs_l
memory > xgetargs_i
memory > xDictSubclass
memory > xgetargs_b
memory > xgetargs_B
memory > xerr
memory > xgetargs_s_hash
memory > xgetargs_es_hash
memory > xParadox
memory > xInt
memory > xgetargs_u
memory > xgetargs_Y
memory > xgetargs_f
memory > xIndex
memory > xtype
memory > xstring
memory > xTupleSubclass
memory > xDBL_MIN
memory > xint
memory > xget_args
memory > xUSHRT_MAX
memory > xPY_SSIZE_T_MAX
memory > xgetargs_U
memory > xOverflowError
memory > xgetargs_y_star
memory > xx
memory > xi
memory > xgetargs_es
memory > xFloatSubclass2
memory > xsupport
memory > xsys
memory > xDeprecationWarning
memory > xfloat
memory > xgetargs_y
memory > xchr
memory > xBadComplex3
memory > xComplex
memory > xLookupError
memory > xdir
memory > xSystemError
memory > xIndexIntSubclass
memory > xgetattr
memory > xDBL_MAX
memory > xUnicodeEncodeError
memory > xe
memory > xgetargs_et
memory > xBadInt2
memory > xgetargs_z
memory > xname
memory > xunittest
memory > xgetargs_k
memory > xFLT_MAX
memory > xmap
memory > xgetargs_K
memory > xSHRT_MIN
memory > xgetargs_Z
memory > xIntSubclass
memory > xmemoryview
memory > xgetargs_n
memory > xgetargs_Z_hash
memory > xBadComplex
memory > xBadInt3
memory > xgetargs_s_star
memory > xComplexSubclass2
memory > xdict
memory > xgetargs_s
memory > x__name__
memory > xgetargs_S
memory > xTypeError
memory > xBadIndex3
[] > test_getargs2
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__complex__
        memory > xtest_f_rounding
        memory > xtest_required_args
        memory > xLARGE
        memory > xtest_b
        memory > xtest_mixed_args
        memory > xtest_keyword_args
        memory > xtest_es_hash
        memory > xtest_bad_use
        memory > xtest_u
        memory > xtest_positional_only
        memory > xtest_s_hash
        memory > xtest_c
        memory > x__index__
        memory > xtest_optional_args
        memory > xtest_C
        memory > xtest_z_hash
        memory > xtest_p
        memory > xtest_tuple
        memory > xVERY_LARGE
        memory > xtest_skipitem
        memory > xtest_U
        memory > xtest_u_hash
        memory > x_testcapi
        memory > xtest_parse_tuple_and_keywords
        memory > xtest
        memory > xtest_w_star
        memory > xtest_D
        memory > xtest_d
        memory > xtest_I
        memory > xtest_args
        memory > xtest_z
        memory > xtest_i
        memory > xtest_et
        memory > xtest_too_many_args
        memory > xtest_Z
        memory > xtest_skipitem_with_suffix
        memory > xtest_empty_keyword
        memory > xULLONG_MAX
        memory > xtest_kwargs
        memory > xtest_surrogate_keyword
        memory > xtest_L
        memory > xLLONG_MAX
        memory > xtest_l
        memory > xDBL_MAX_EXP
        memory > xtest_positional_args
        memory > xtest_s_star
        memory > xtest_y_hash
        memory > xtest_es
        memory > xtest_Y
        memory > xtest_y
        memory > xtest_f
        memory > xtest_invalid_keyword
        memory > xassertEqualWithSign
        memory > xgetargs
        memory > xtest_k
        memory > xtest_Z_hash
        memory > xtest_et_hash
        memory > xtest_B
        memory > xtest_n
        memory > xtest_K
        memory > xtest_H
        memory > xtest_h
        memory > xtest_z_star
        memory > xINF
        memory > xtest_y_star
        memory > x__float__
        memory > xtest_S
        memory > x__bool__
        memory > xtest_s
        memory > x__int__
        memory > xLLONG_MIN
        memory > xNAN
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            x_testcapi.write ((((xsupport).ximport_module)) ("_testcapi"))
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
            xLARGE.write 2147483647
            xVERY_LARGE.write (((unsupported)) 0)
            seq
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
              (((unsupported)) 0)
            xDBL_MAX_EXP.write (((xsys).xfloat_info).xmax_exp)
            xINF.write (((xfloat)) ("inf"))
            xNAN.write (((xfloat)) ("nan"))
            xLLONG_MAX.write ((((unsupported)) (2) (63)).sub 1)
            xLLONG_MIN.write ((((unsupported)) (2) (63)).neg)
            xULLONG_MAX.write ((((unsupported)) (2) (64)).sub 1)
            (((unsupported)) 0)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)) (99))
            (((unsupported)) ((xint)))
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)) (99))
            (((unsupported)) 0)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)) (1.0))
            (((unsupported)) 0)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)) (TRUE))
            (((unsupported)) ((xint)))
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)) (TRUE))
            (((unsupported)) 0)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)) (99))
            (((unsupported)) ((xint)))
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)) (99))
            (((unsupported)) 0)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)) (1.0))
            (((unsupported)) 0)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)) (TRUE))
            (((unsupported)) ((xint)))
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)) (TRUE))
            (((unsupported)) 0)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)) (4.25))
            (((unsupported)) ((xfloat)))
            (((unsupported)) ((xfloat)))
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)) (4.25))
            (((unsupported)) 0)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)) (687))
            (((unsupported)) 0)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)) ((((xFloatSubclass)) (4.25))))
            (((unsupported)) ((xfloat)))
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)) ((((xFloatSubclass)) (4.25))))
            (((unsupported)) 0)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)) ((4.25.add (((unsupported)) 0))))
            (((unsupported)) ((xcomplex)))
            (((unsupported)) ((xcomplex)))
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)) ((4.25.add (((unsupported)) 0))))
            (((unsupported)) 0)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)) (1.25))
            (((unsupported)) 0)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)) ((((xComplexSubclass)) ((4.25.add (((unsupported)) 0))))))
            (((unsupported)) ((xcomplex)))
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)) ((((xComplexSubclass)) ((4.25.add (((unsupported)) 0))))))
            (((unsupported)) ((xtuple)))
            (((unsupported)) ((xdict)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_b.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_b)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_b)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_b)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_b)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_b)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_b)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_b)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_b)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_b)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_b)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_b)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_b)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_b)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUCHAR_MAX)) ((((xgetargs_b)) ((xUCHAR_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_b)) (((xUCHAR_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_b)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_b)) ((xVERY_LARGE)))
                xtest_B.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_B)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_B)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_B)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_B)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_B)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_B)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_B)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUCHAR_MAX)) ((((xgetargs_B)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUCHAR_MAX)) ((((xgetargs_B)) ((xUCHAR_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_B)) (((xUCHAR_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_B)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xUCHAR_MAX).and (xVERY_LARGE))) ((((xgetargs_B)) ((xVERY_LARGE)))))
                xtest_H.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_H)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_H)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_H)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_H)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_H)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_H)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_H)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUSHRT_MAX)) ((((xgetargs_H)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUSHRT_MAX)) ((((xgetargs_H)) ((xUSHRT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_H)) (((xUSHRT_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_H)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xVERY_LARGE).and (xUSHRT_MAX))) ((((xgetargs_H)) ((xVERY_LARGE)))))
                xtest_I.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_I)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_I)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_I)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_I)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_I)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_I)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_I)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUINT_MAX)) ((((xgetargs_I)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xUINT_MAX)) ((((xgetargs_I)) ((xUINT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_I)) (((xUINT_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_I)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xVERY_LARGE).and (xUINT_MAX))) ((((xgetargs_I)) ((xVERY_LARGE)))))
                xtest_k.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xIndex)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xBadIndex)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xBadIndex2)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) ((((xBadIndex3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xBadInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_k)) ((((xBadInt2)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xULONG_MAX)) ((((xgetargs_k)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xULONG_MAX)) ((((xgetargs_k)) ((xULONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_k)) (((xULONG_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_k)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xVERY_LARGE).and (xULONG_MAX))) ((((xgetargs_k)) ((xVERY_LARGE)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_h.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_h)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_h)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_h)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_h)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_h)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_h)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_h)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_h)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_h)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_h)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_h)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_h)) (((xSHRT_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xSHRT_MIN)) ((((xgetargs_h)) ((xSHRT_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xSHRT_MAX)) ((((xgetargs_h)) ((xSHRT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_h)) (((xSHRT_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_h)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_h)) ((xVERY_LARGE)))
                xtest_i.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_i)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_i)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_i)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_i)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_i)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_i)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_i)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_i)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_i)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_i)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_i)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_i)) (((xINT_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xINT_MIN)) ((((xgetargs_i)) ((xINT_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xINT_MAX)) ((((xgetargs_i)) ((xINT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_i)) (((xINT_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_i)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_i)) ((xVERY_LARGE)))
                xtest_l.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_l)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_l)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_l)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_l)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_l)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_l)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_l)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_l)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_l)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_l)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_l)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_l)) (((xLONG_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xLONG_MIN)) ((((xgetargs_l)) ((xLONG_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xLONG_MAX)) ((((xgetargs_l)) ((xLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_l)) (((xLONG_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_l)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_l)) ((xVERY_LARGE)))
                xtest_n.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_n)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_n)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_n)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_n)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_n)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_n)) ((((xBadIndex3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_n)) ((((xInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_n)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_n)) ((((xBadInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_n)) ((((xBadInt2)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_n)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_n)) (((xPY_SSIZE_T_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xPY_SSIZE_T_MIN)) ((((xgetargs_n)) ((xPY_SSIZE_T_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xPY_SSIZE_T_MAX)) ((((xgetargs_n)) ((xPY_SSIZE_T_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_n)) (((xPY_SSIZE_T_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_n)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_n)) ((xVERY_LARGE)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_L.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_L)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_L)) ("Hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_L)) ((((xIndex)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_L)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_L)) ((((xBadIndex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_L)) ((((xBadIndex2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_L)) ((((xBadIndex3)) 0)))))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (99) ((((xgetargs_L)) ((((xInt)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_L)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_L)) ((((xBadInt)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_L)) ((((xBadInt2)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_L)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_L)) (((xLLONG_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xLLONG_MIN)) ((((xgetargs_L)) ((xLLONG_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xLLONG_MAX)) ((((xgetargs_L)) ((xLLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_L)) (((xLLONG_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_L)) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_L)) ((xVERY_LARGE)))
                xtest_K.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xIndex)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) ((((xIndexIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xBadIndex)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xBadIndex2)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) ((((xBadIndex3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) ((((xIntSubclass)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xBadInt)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_K)) ((((xBadInt2)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) ((((xBadInt3)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xULLONG_MAX)) ((((xgetargs_K)) ((xULLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_K)) (((xULLONG_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (42) ((((xgetargs_K)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xVERY_LARGE).and (xULLONG_MAX))) ((((xgetargs_K)) ((xVERY_LARGE)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xassertEqualWithSign.write
                  [xself xactual xexpected]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xactual)) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xmath).xcopysign)) (1) ((xactual)))) (((((xmath).xcopysign)) (1) ((xexpected)))))
                xtest_f.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) (4.25))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) (4))) (4.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_f)) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xFloat)) 0)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xFloatSubclass)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xFloatSubclass2)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_f)) ((((xBadFloat)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xBadFloat2)) 0)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xBadFloat3)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((xIndex)) 0)))) (99.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_f)) ((((xInt)) 0)))
                        (((unsupported)) ((xx)) ((((unsupported)) ((xFLT_MIN)) (((xFLT_MIN).neg)) ((xFLT_MAX)) (((xFLT_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((xx)))) ((xx)))
                        ((xFLT_MAX).less (xDBL_MAX)).if
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((xDBL_MAX)))) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) (((xDBL_MAX).neg)))) (((xINF).neg)))
                        ((xFLT_MIN).greater (xDBL_MIN)).if
                          seq
                            bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_f)) ((xDBL_MIN)))) (0.0))
                            bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_f)) (((xDBL_MIN).neg)))) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_f)) (0.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_f)) ((0.0.neg)))) ((0.0.neg)))
                        xr.write (((xgetargs_f)) ((xNAN)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xr)) ((xr)))
                xtest_f_rounding.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) ((((unsupported)) 0)))) ((xFLT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_f)) (((((unsupported)) 0).neg)))) (((xFLT_MAX).neg)))
                xtest_d.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) (4.25))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) (4))) (4.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_d)) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xFloat)) 0)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xFloatSubclass)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xFloatSubclass2)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_d)) ((((xBadFloat)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xBadFloat2)) 0)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xBadFloat3)) (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((((xIndex)) 0)))) (99.0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_d)) ((((xInt)) 0)))
                        (((unsupported)) ((xx)) ((((unsupported)) ((xDBL_MIN)) (((xDBL_MIN).neg)) ((xDBL_MAX)) (((xDBL_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_d)) ((xx)))) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_d)) ((((unsupported)) (1) ((xDBL_MAX_EXP)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xOverflowError)) ((xgetargs_d)) ((((unsupported)) ((1.neg)) ((xDBL_MAX_EXP)))))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_d)) (0.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) ((((xgetargs_d)) ((0.0.neg)))) ((0.0.neg)))
                        xr.write (((xgetargs_d)) ((xNAN)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((xr)) ((xr)))
                xtest_D.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((4.25.add (((unsupported)) 0))))) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) (4.25))) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) (4))) ((4.0.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xComplex)) 0)))) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xComplexSubclass)) ((7.5.add (((unsupported)) 0))))))) ((7.5.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xComplexSubclass2)) ((7.5.add (((unsupported)) 0))))))) ((7.5.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_D)) ((((xBadComplex)) 0)))
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xBadComplex2)) 0)))) ((4.25.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xBadComplex3)) ((7.5.add (((unsupported)) 0))))))) ((7.5.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((((xIndex)) 0)))) ((99.0.add (((unsupported)) 0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_D)) ((((xInt)) 0)))
                        (((unsupported)) ((xx)) ((((unsupported)) ((xDBL_MIN)) (((xDBL_MIN).neg)) ((xDBL_MAX)) (((xDBL_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          seq
                            xc.write (((xcomplex)) ((xx)) (1.0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((xc)))) ((xc)))
                            xc.write (((xcomplex)) (1.0) ((xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_D)) ((xc)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) (((((xgetargs_D)) ((((xcomplex)) (0.0) (1.0)))).xreal)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) (((((xgetargs_D)) ((((xcomplex)) ((0.0.neg)) (1.0)))).xreal)) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) (((((xgetargs_D)) ((((xcomplex)) (1.0) (0.0)))).ximag)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)) (((((xgetargs_D)) ((((xcomplex)) (1.0) ((0.0.neg))))).ximag)) ((0.0.neg)))
            (((unsupported)) 0)
              seq
                unsupported
                x__bool__.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xNotImplementedError)))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_p.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)) 0)
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) (FALSE))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) ("None: is there a None literal in the EO language?"))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) (0))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) (0.0))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) ((((unsupported)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) (""))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) ((((unsupported)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) ((((unsupported)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (0) ((((xgetargs_p)) ((((unsupported)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) (TRUE))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) (1))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) (1.0))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) ((((unsupported)) 0)))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) ("x"))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) ((((unsupported)) (1))))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) ((((unsupported)) (1))))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) ((((unsupported)) (1) (2))))))
                      bogusForceDataize.write ((((xself).xassertEqual)) (1) ((((xgetargs_p)) (((xunittest).xTestCase)))))
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xNotImplementedError)) ((xgetargs_p)) ((((xParadox)) 0)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_args.write
                  [xself]
                    memory > xret
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xret.write (((xget_args)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xtuple)))
                        xret.write (((xget_args)) (1) ((((unsupported)) ((((unsupported)) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xtuple)))
                        xret.write (((xget_args)) ((((unsupported)) ((((unsupported)) (1) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xtuple)))
                        xret.write (((xget_args)) ((((unsupported)) ((((xTupleSubclass)) ((((unsupported)) (1) (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xtuple)))
                        xret.write (((xget_args)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ((xret)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xtype)) ((xret)))) ((((unsupported)) ((xtuple)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        xret.write (((xget_args)) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xret)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xtype)) ((xret)))) ((((unsupported)) ((xtuple)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                xtest_tuple.write
                  [xself]
                    memory > xret
                    memory > x__getitem__
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xret.write (((xgetargs_tuple)) (1) ((((unsupported)) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) (1) (2) (3))))
                        (((unsupported)) 0)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (2))
                            x__getitem__.write
                              [xself xn]
                                seq > @
                                  (((unsupported)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_tuple)) (1) ((((xseq)) 0)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_kwargs.write
                  [xself]
                    memory > xret
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xret.write (((unsupported)) ((xget_kwargs)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) ("a") (1) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xdict)))
                        xret.write (((unsupported)) ((xget_kwargs)) (1) ((((unsupported)) ((((unsupported)) ("b") (2) ("c") (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) ("a") (1) ("b") (2) ("c") (3))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xdict)))
                        xret.write (((xget_kwargs)) ((((unsupported)) ((((xDictSubclass)) ((((unsupported)) ("a") (1) ("b") (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xret)) ((((unsupported)) ("a") (1) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((xret)))) ((xdict)))
                        xret.write (((xget_kwargs)) 0)
                        bogusForceDataize.write ((((xself).xassertIn)) ((xret)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xtype)) ((xret)))) ((((unsupported)) ((xdict)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                        xret.write (((xget_kwargs)) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((xret)) ((((unsupported)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xtype)) ((xret)))) ((((unsupported)) ((xdict)) ((((xtype)) ("None: is there a None literal in the EO language?"))))))
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (4) ((((unsupported)) (5) (6))))) ((((unsupported)) (7) (8) (9))) (10))) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (4) ((((unsupported)) (5) (6))))) ((((unsupported)) (7) (8) (9))) (10))) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_keyword_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (4) ((((unsupported)) (5) (6))))) ((((unsupported)) (7) (8) (9))) (10))) ((((unsupported)) (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) (10))) ((((unsupported)) (1) (2) (3) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) (10))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xTypeError)))
                        (((unsupported)) ((xgetargs_keywords)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xerr)))) ("function missing required argument 'arg2' (pos 2)"))
                        bogusForceDataize.write ((((xself).xfail)) ("TypeError should have been raised"))
                xtest_too_many_args.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xTypeError)))
                        bogusForceDataize.write (((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (4) ((((unsupported)) (5) (6))))) ((((unsupported)) (7) (8) (9))) (10) (111))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xerr)))) ("function takes at most 5 arguments (6 given)"))
                        bogusForceDataize.write ((((xself).xfail)) ("TypeError should have been raised"))
                xtest_invalid_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xTypeError)))
                        (((unsupported)) ((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) (10) (666))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xerr)))) ("'arg666' is an invalid keyword argument for this function"))
                        bogusForceDataize.write ((((xself).xfail)) ("TypeError should have been raised"))
                xtest_surrogate_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xTypeError)))
                        bogusForceDataize.write (((xgetargs_keywords)) ((((unsupported)) (1) (2))) (3) ((((unsupported)) (4) ((((unsupported)) (5) (6))))) ((((unsupported)) (7) (8) (9))) ((((unsupported)) ((((unsupported)) ("uDC80") (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((xerr)))) ("'udc80' is an invalid keyword argument for this function"))
                        bogusForceDataize.write ((((xself).xfail)) ("TypeError should have been raised"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_keyword_only)) (1) (2))) ((((unsupported)) (1) (2) ((1.neg)))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keyword_only)) (1) (2) (3))) ((((unsupported)) (1) (2) (3))))
                xtest_keyword_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keyword_only)) (1) (2) (3))) ((((unsupported)) (1) (2) (3))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keyword_only)) (1) (2))) ((((unsupported)) (1) (2) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keyword_only)) (1) (3))) ((((unsupported)) (1) ((1.neg)) (3))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_keyword_only)) (1))) ((((unsupported)) (1) ((1.neg)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xgetargs_keyword_only)) (1))) ((((unsupported)) (1) ((1.neg)) ((1.neg)))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function missing required argument 'required' (pos 1)"))))
                          (((unsupported)) ((xgetargs_keyword_only)) (2))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function missing required argument 'required' (pos 1)"))))
                          (((unsupported)) ((xgetargs_keyword_only)) (3))
                xtest_too_many_args.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at most 2 positional arguments (3 given)"))))
                          bogusForceDataize.write (((xgetargs_keyword_only)) (1) (2) (3))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at most 3 arguments (4 given)"))))
                          (((unsupported)) ((xgetargs_keyword_only)) (1) (2) (3) (5))
                xtest_invalid_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("'monster' is an invalid keyword argument for this function"))))
                        (((unsupported)) ((xgetargs_keyword_only)) (1) (2) (666))
                xtest_surrogate_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("'udc80' is an invalid keyword argument for this function"))))
                        bogusForceDataize.write (((xgetargs_keyword_only)) (1) (2) ((((unsupported)) ((((unsupported)) ("uDC80") (10))))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xgetargs)) (1) (2) (3))) ((((unsupported)) (1) (2) (3))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xself).xgetargs)) (1) (2) (3))) ((((unsupported)) (1) (2) (3))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xgetargs)) (1) (2))) ((((unsupported)) (1) (2) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xself).xgetargs)) (1) (3))) ((((unsupported)) (1) ((1.neg)) (3))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xgetargs)) (1))) ((((unsupported)) (1) ((1.neg)) ((1.neg)))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write ((((xself).xgetargs)) 0)
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          (((unsupported)) (((xself).xgetargs)) (3))
                xtest_empty_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("'' is an invalid keyword argument for this function"))))
                        bogusForceDataize.write ((((xself).xgetargs)) (1) (2) ((((unsupported)) ((((unsupported)) ("") (666))))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_c.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_c)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_c)) ("a"))) (97))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_c)) ((((xbytearray)) ("a"))))) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_c)) ((((xmemoryview)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_c)) ("s"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_c)) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_c)) ("None: is there a None literal in the EO language?"))
                xtest_y.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_y)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y)) ("None: is there a None literal in the EO language?"))
                xtest_y_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_star)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_star)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_star)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_star)) ((((xbytearray)) ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_star)) ((((xmemoryview)) ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_star)) ("None: is there a None literal in the EO language?"))
                xtest_y_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_hash)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_hash)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_y_hash)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_hash)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_hash)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_y_hash)) ("None: is there a None literal in the EO language?"))
                xtest_w_star.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_w_star)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_w_star)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_w_star)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_w_star)) ((((xmemoryview)) ("bytes"))))
                        xbuf.write (((xbytearray)) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_w_star)) ((xbuf)))) ("[ytearra]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("[ytearra]"))))
                        xbuf.write (((xbytearray)) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_w_star)) ((((xmemoryview)) ((xbuf)))))) ("[emoryvie]"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("[emoryvie]"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_w_star)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_C.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_C)) ("a"))) (97))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_C)) ("u20ac"))) (8364))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_C)) ("U0001f40d"))) (128013))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) ("a"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) ((((xbytearray)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) ((((xmemoryview)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_C)) ("None: is there a None literal in the EO language?"))
                xtest_s.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_s)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s)) ("None: is there a None literal in the EO language?"))
                xtest_s_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_star)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_star)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_star)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_star)) ((((xbytearray)) ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_star)) ((((xmemoryview)) ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s_star)) ("None: is there a None literal in the EO language?"))
                xtest_s_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_hash)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_hash)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_s_hash)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s_hash)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s_hash)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_s_hash)) ("None: is there a None literal in the EO language?"))
                xtest_z.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_z)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_z)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_z)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_z)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xgetargs_z)) ("None: is there a None literal in the EO language?"))))
                xtest_z_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_star)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_star)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_star)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_star)) ((((xbytearray)) ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_star)) ((((xmemoryview)) ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xgetargs_z_star)) ("None: is there a None literal in the EO language?"))))
                xtest_z_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_hash)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_hash)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_z_hash)) ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_z_hash)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_z_hash)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xgetargs_z_hash)) ("None: is there a None literal in the EO language?"))))
                xtest_es.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es)) ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeEncodeError)) ((xgetargs_es)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xLookupError)) ((xgetargs_es)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es)) ("bytes") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es)) ((((xbytearray)) ("bytearray"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es)) ((((xmemoryview)) ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es)) ("nul:0") ("latin1"))
                xtest_et.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et)) ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeEncodeError)) ((xgetargs_et)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xLookupError)) ((xgetargs_et)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et)) ("bytes") ("latin1"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et)) ((((xbytearray)) ("bytearray"))) ("latin1"))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et)) ((((xmemoryview)) ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et)) ("nul:0") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et)) ("nul:0") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et)) ((((xbytearray)) ("nul:0"))) ("latin1"))
                xtest_es_hash.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es_hash)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es_hash)) ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeEncodeError)) ((xgetargs_es_hash)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xLookupError)) ((xgetargs_es_hash)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es_hash)) ("bytes") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es_hash)) ((((xbytearray)) ("bytearray"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es_hash)) ((((xmemoryview)) ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_es_hash)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es_hash)) ("nul:0") ("latin1"))) ("nul:0"))
                        xbuf.write (((xbytearray)) (("x".mul 8)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("abcxe9x00xxx"))))
                        xbuf.write (((xbytearray)) (("x".mul 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("abcxe9x00"))))
                        xbuf.write (((xbytearray)) (("x".mul 4)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) (("x".mul 4)))))
                        xbuf.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))
                xtest_et_hash.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xUnicodeEncodeError)) ((xgetargs_et_hash)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xLookupError)) ((xgetargs_et_hash)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("bytes") ("latin1"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ((((xbytearray)) ("bytearray"))) ("latin1"))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et_hash)) ((((xmemoryview)) ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_et_hash)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("nul:0") ("latin1"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("nul:0") ("latin1"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ((((xbytearray)) ("nul:0"))) ("latin1"))) ("nul:0"))
                        xbuf.write (((xbytearray)) (("x".mul 8)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("abcxe9x00xxx"))))
                        xbuf.write (((xbytearray)) (("x".mul 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) ("abcxe9x00"))))
                        xbuf.write (((xbytearray)) (("x".mul 4)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xbuf)) ((((xbytearray)) (("x".mul 4)))))
                        xbuf.write (((xbytearray)) 0)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))
                xtest_u.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_u)) ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_u)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u)) ("None: is there a None literal in the EO language?"))
                xtest_u_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_u_hash)) ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_u_hash)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u_hash)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u_hash)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u_hash)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_u_hash)) ("None: is there a None literal in the EO language?"))
                xtest_Z.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_Z)) ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) ((xgetargs_Z)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xgetargs_Z)) ("None: is there a None literal in the EO language?"))))
                xtest_Z_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_Z_hash)) ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetargs_Z_hash)) ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z_hash)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z_hash)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Z_hash)) ((((xmemoryview)) ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)) ((((xgetargs_Z_hash)) ("None: is there a None literal in the EO language?"))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_S.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xobj.write "bytes"
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetargs_S)) ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_S)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_S)) ("str"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_S)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_S)) ((((xmemoryview)) ((xobj)))))
                xtest_Y.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xobj.write (((xbytearray)) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetargs_Y)) ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Y)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Y)) ("str"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Y)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_Y)) ((((xmemoryview)) ((xobj)))))
                xtest_U.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xobj.write "str"
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xgetargs_U)) ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_U)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_U)) ((((xbytearray)) ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xgetargs_U)) ("None: is there a None literal in the EO language?"))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest.write
                [xself]
                  seq > @
                    bogusForceDataize.write ((((xself).xassertEqual)) (((((x_testcapi).xargparsing)) ("Hello") ("World"))) (1))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_skipitem.write
                  [xself]
                    memory > xc
                    memory > xwhen_skipped
                    memory > xoptional_format
                    memory > xs
                    memory > xkeywords
                    memory > xwhen_not_skipped
                    memory > xempty_tuple
                    memory > xmessage
                    memory > xtuple_1
                    memory > xformat
                    memory > xdict_b
                    seq > @
                      seq
                        (((unsupported)) 0)
                        xempty_tuple.write (((unsupported)) 0)
                        xtuple_1.write (((unsupported)) (0))
                        xdict_b.write (((unsupported)) ("b") (1))
                        xkeywords.write (((unsupported)) ("a") ("b"))
                        (((unsupported)) ((xi)) ((((xrange)) (32) (127))))
                          seq
                            xc.write (((xchr)) ((xi)))
                            (((unsupported)) ((xc)) ("()e|$")).if
                              (((unsupported)) 0)
                            xformat.write ((xc).add "i")
                            (((unsupported)) ((xSystemError)) ((xTypeError)))
                              seq
                                bogusForceDataize.write ((((x_testcapi).xparse_tuple_and_keywords)) ((xtuple_1)) ((xdict_b)) ((xformat)) ((xkeywords)))
                                xwhen_not_skipped.write FALSE
                              seq
                                xs.write "argument 1 (impossible<bad format char>)"
                                xwhen_not_skipped.write ((((xstr)) ((xe))).eq (xs))
                              xwhen_not_skipped.write FALSE
                            xoptional_format.write ("|".add (xformat))
                            (((unsupported)) ((xSystemError)))
                              seq
                                bogusForceDataize.write ((((x_testcapi).xparse_tuple_and_keywords)) ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                xwhen_skipped.write FALSE
                              seq
                                xs.write ((("impossible<bad format char>: '{}'".xformat)) ((xformat)))
                                xwhen_skipped.write ((((xstr)) ((xe))).eq (xs))
                            xmessage.write ((("test_skipitem_parity: detected mismatch between convertsimple and skipitem for format unit '{}' ({}), not skipped {}, skipped {}".xformat)) ((xc)) ((xi)) ((xwhen_skipped)) ((xwhen_not_skipped)))
                            bogusForceDataize.write ((((xself).xassertIs)) ((xwhen_skipped)) ((xwhen_not_skipped)) ((xmessage)))
                xtest_skipitem_with_suffix.write
                  [xself]
                    memory > xsupported
                    memory > xparse
                    memory > xf
                    memory > xoptional_format
                    memory > xkeywords
                    memory > xdict_b
                    memory > xempty_tuple
                    memory > xtuple_1
                    seq > @
                      seq
                        xparse.write ((x_testcapi).xparse_tuple_and_keywords)
                        xempty_tuple.write (((unsupported)) 0)
                        xtuple_1.write (((unsupported)) (0))
                        xdict_b.write (((unsupported)) ("b") (1))
                        xkeywords.write (((unsupported)) ("a") ("b"))
                        xsupported.write (((unsupported)) ("s#") ("s*") ("z#") ("z*") ("u#") ("Z#") ("y#") ("y*") ("w#") ("w*"))
                        (((unsupported)) ((xc)) (((xstring).xascii_letters)))
                          (((unsupported)) ((xc2)) ("#*"))
                            seq
                              xf.write ((xc).add (xc2))
                              (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xf)))))
                                seq
                                  xoptional_format.write (("|".add (xf)).add "i")
                                  (((unsupported)) ((xf)) ((xsupported))).if
                                    bogusForceDataize.write (((xparse)) ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                    (((unsupported)) (((((xself).xassertRaisesRegex)) ((xSystemError)) ("impossible<bad format char>"))))
                                      bogusForceDataize.write (((xparse)) ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                        (((unsupported)) ((xc)) ((((xmap)) ((xchr)) ((((xrange)) (32) (128))))))
                          seq
                            xf.write ("e".add (xc))
                            xoptional_format.write (("|".add (xf)).add "i")
                            (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xf)))))
                              (((unsupported)) ((xc)) ("st")).if
                                bogusForceDataize.write (((xparse)) ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                (((unsupported)) (((((xself).xassertRaisesRegex)) ((xSystemError)) ("impossible<bad format char>"))))
                                  bogusForceDataize.write (((xparse)) ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_parse_tuple_and_keywords.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) (42) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("") (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("") (((((unsupported)) ("")).mul 42)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("") ((((unsupported)) (42))))
                xtest_bad_use.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("||O") ((((unsupported)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)) ("|O|O") ((((unsupported)) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1))) ("$$O") ((((unsupported)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1) ("b") (2))) ("$O$O") ((((unsupported)) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1))) ("$|O") ((((unsupported)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1) ("b") (2))) ("$O|O") ((((unsupported)) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("|O") ((((unsupported)) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("|OO") ((((unsupported)) ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("|$O") ((((unsupported)) (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("|OO") ((((unsupported)) ("a") (""))))
                xtest_positional_only.write
                  [xself]
                    memory > xparse
                    seq > @
                      seq
                        xparse.write ((x_testcapi).xparse_tuple_and_keywords)
                        bogusForceDataize.write (((xparse)) ((((unsupported)) (1) (2) (3))) ((((unsupported)) 0)) ("OOO") ((((unsupported)) ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)) ((((unsupported)) (1) (2))) ((((unsupported)) ("a") (3))) ("OOO") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at least 2 positional arguments (1 given)"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) ("a") (3))) ("OOO") ((((unsupported)) ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("O|OO") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("O|OO") ((((unsupported)) ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)) ((((unsupported)) (1) (2))) ((((unsupported)) ("a") (3))) ("OO$O") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes exactly 2 positional arguments (1 given)"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) ("a") (3))) ("OO$O") ((((unsupported)) ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("O|O$O") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("O|O$O") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xSystemError)) ("Empty parameter name after $"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("O|$OO") ((((unsupported)) ("") ("") ("a"))))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xSystemError)) ("Empty keyword"))))
                          bogusForceDataize.write (((xparse)) ((((unsupported)) (1))) ((((unsupported)) 0)) ("O|OO") ((((unsupported)) ("") ("a") (""))))
            (((unsupported)) (((xunittest).xTestCase)))
              bogusForceDataize.write ((((((xlocals)) 0).xupdate)) ((((unsupported)) ((((unsupported)) ((xname)) ((((xgetattr)) ((x_testcapi)) ((xname)))))) ((xname)) ((((xdir)) ((x_testcapi)))) ((((((xname).xstartswith)) ("test_")).and ((((xname).xendswith)) ("_code")))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)