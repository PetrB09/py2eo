"Test correct treatment of hex/oct constants.\n\nThis is complex because of changes due to PEP 237.\n" # 1:0-1:102
import xunittest # 6:7-6:14
e252 = xunittest.xTestCase # 8:20-8:36
class xTestHexOctBin(e252): # 9:0-142:-1
    def xtest_hex_baseline(xself): # 10:4-31:3
        e0 = xself.xassertEqual # 12:8-12:23
        lhs0 = 0  # 12:25-12:27
        lhs1 = 0  # 12:30-12:32
        e1 = e0(lhs0, lhs1) # 12:8-12:33
        e2 = xself.xassertEqual # 13:8-13:23
        lhs3 = 1  # 13:25-13:27
        lhs4 = 1  # 13:30-13:32
        e3 = e2(lhs3, lhs4) # 13:8-13:33
        e4 = xself.xassertEqual # 14:8-14:23
        lhs6 = 81985529216486895  # 14:25-14:41
        lhs7 = 81985529216486895  # 14:44-14:60
        e5 = e4(lhs6, lhs7) # 14:8-14:61
        e6 = xself.xassertEqual # 16:8-16:23
        lhs9 = 0  # 16:25-16:27
        lhs10 = 0  # 16:30-16:30
        e7 = e6(lhs9, lhs10) # 16:8-16:31
        e8 = xself.xassertEqual # 17:8-17:23
        lhs12 = 16  # 17:25-17:28
        lhs13 = 16  # 17:31-17:32
        e9 = e8(lhs12, lhs13) # 17:8-17:33
        e10 = xself.xassertEqual # 18:8-18:23
        lhs15 = 2147483647  # 18:25-18:34
        lhs16 = 2147483647  # 18:37-18:46
        e11 = e10(lhs15, lhs16) # 18:8-18:47
        e12 = xself.xassertEqual # 19:8-19:23
        lhs18 = 9223372036854775807  # 19:25-19:42
        lhs19 = 9223372036854775807  # 19:45-19:63
        e13 = e12(lhs18, lhs19) # 19:8-19:64
        e14 = xself.xassertEqual # 21:8-21:23
        e15 = (-0 ) # 21:25-21:30
        lhs21 = 0  # 21:33-21:33
        e16 = e14(e15, lhs21) # 21:8-21:34
        e17 = xself.xassertEqual # 22:8-22:23
        e18 = (-16 ) # 22:25-22:31
        e19 = (-16 ) # 22:34-22:36
        e20 = e17(e18, e19) # 22:8-22:37
        e21 = xself.xassertEqual # 23:8-23:23
        e22 = (-2147483647 ) # 23:25-23:37
        e23 = (-2147483647 ) # 23:40-23:50
        e24 = e21(e22, e23) # 23:8-23:51
        e25 = xself.xassertEqual # 24:8-24:23
        e26 = (-9223372036854775807 ) # 24:25-24:45
        e27 = (-9223372036854775807 ) # 24:48-24:67
        e28 = e25(e26, e27) # 24:8-24:68
        e29 = xself.xassertEqual # 26:8-26:23
        e30 = (-0 ) # 26:25-26:28
        lhs26 = 0  # 26:31-26:31
        e31 = e29(e30, lhs26) # 26:8-26:32
        e32 = xself.xassertEqual # 27:8-27:23
        e33 = (-16 ) # 27:25-27:29
        e34 = (-16 ) # 27:32-27:34
        e35 = e32(e33, e34) # 27:8-27:35
        e36 = xself.xassertEqual # 28:8-28:23
        e37 = (-2147483647 ) # 28:25-28:35
        e38 = (-2147483647 ) # 28:38-28:48
        e39 = e36(e37, e38) # 28:8-28:49
        e40 = xself.xassertEqual # 29:8-29:23
        e41 = (-9223372036854775807 ) # 29:25-29:43
        e42 = (-9223372036854775807 ) # 29:46-29:65
        e43 = e40(e41, e42) # 29:8-29:66
    def xtest_hex_unsigned(xself): # 31:4-54:3
        e44 = xself.xassertEqual # 33:8-33:23
        lhs31 = 2147483648  # 33:25-33:34
        lhs32 = 2147483648  # 33:37-33:46
        e45 = e44(lhs31, lhs32) # 33:8-33:47
        e46 = xself.xassertEqual # 34:8-34:23
        lhs34 = 4294967295  # 34:25-34:34
        lhs35 = 4294967295  # 34:37-34:46
        e47 = e46(lhs34, lhs35) # 34:8-34:47
        e48 = xself.xassertEqual # 36:8-36:23
        e49 = (-2147483648 ) # 36:25-36:37
        e50 = (-2147483648 ) # 36:40-36:50
        e51 = e48(e49, e50) # 36:8-36:51
        e52 = xself.xassertEqual # 37:8-37:23
        e53 = (-4294967295 ) # 37:25-37:37
        e54 = (-4294967295 ) # 37:40-37:50
        e55 = e52(e53, e54) # 37:8-37:51
        e56 = xself.xassertEqual # 40:8-40:23
        e57 = (-2147483648 ) # 40:25-40:35
        e58 = (-2147483648 ) # 40:38-40:48
        e59 = e56(e57, e58) # 40:8-40:49
        e60 = xself.xassertEqual # 41:8-41:23
        e61 = (-4294967295 ) # 41:25-41:35
        e62 = (-4294967295 ) # 41:38-41:48
        e63 = e60(e61, e62) # 41:8-41:49
        e64 = xself.xassertEqual # 44:8-44:23
        lhs41 = 9223372036854775808  # 44:25-44:42
        lhs42 = 9223372036854775808  # 44:45-44:63
        e65 = e64(lhs41, lhs42) # 44:8-44:64
        e66 = xself.xassertEqual # 45:8-45:23
        lhs44 = 18446744073709551615  # 45:25-45:42
        lhs45 = 18446744073709551615  # 45:45-45:64
        e67 = e66(lhs44, lhs45) # 45:8-45:65
        e68 = xself.xassertEqual # 47:8-47:23
        e69 = (-9223372036854775808 ) # 47:25-47:45
        e70 = (-9223372036854775808 ) # 47:48-47:67
        e71 = e68(e69, e70) # 47:8-47:68
        e72 = xself.xassertEqual # 48:8-48:23
        e73 = (-18446744073709551615 ) # 48:25-48:45
        e74 = (-18446744073709551615 ) # 48:48-48:68
        e75 = e72(e73, e74) # 48:8-48:69
        e76 = xself.xassertEqual # 51:8-51:23
        e77 = (-9223372036854775808 ) # 51:25-51:43
        e78 = (-9223372036854775808 ) # 51:46-51:65
        e79 = e76(e77, e78) # 51:8-51:66
        e80 = xself.xassertEqual # 52:8-52:23
        e81 = (-18446744073709551615 ) # 52:25-52:43
        e82 = (-18446744073709551615 ) # 52:46-52:66
        e83 = e80(e81, e82) # 52:8-52:67
    def xtest_oct_baseline(xself): # 54:4-75:3
        e84 = xself.xassertEqual # 56:8-56:23
        lhs51 = 0  # 56:25-56:27
        lhs52 = 0  # 56:30-56:32
        e85 = e84(lhs51, lhs52) # 56:8-56:33
        e86 = xself.xassertEqual # 57:8-57:23
        lhs54 = 1  # 57:25-57:27
        lhs55 = 1  # 57:30-57:32
        e87 = e86(lhs54, lhs55) # 57:8-57:33
        e88 = xself.xassertEqual # 58:8-58:23
        lhs57 = 342391  # 58:25-58:33
        lhs58 = 342391  # 58:36-58:44
        e89 = e88(lhs57, lhs58) # 58:8-58:45
        e90 = xself.xassertEqual # 60:8-60:23
        lhs60 = 0  # 60:25-60:27
        lhs61 = 0  # 60:30-60:30
        e91 = e90(lhs60, lhs61) # 60:8-60:31
        e92 = xself.xassertEqual # 61:8-61:23
        lhs63 = 16  # 61:25-61:28
        lhs64 = 16  # 61:31-61:32
        e93 = e92(lhs63, lhs64) # 61:8-61:33
        e94 = xself.xassertEqual # 62:8-62:23
        lhs66 = 2147483647  # 62:25-62:37
        lhs67 = 2147483647  # 62:40-62:49
        e95 = e94(lhs66, lhs67) # 62:8-62:50
        e96 = xself.xassertEqual # 63:8-63:23
        lhs69 = 9223372036854775807  # 63:25-63:47
        lhs70 = 9223372036854775807  # 63:50-63:68
        e97 = e96(lhs69, lhs70) # 63:8-63:69
        e98 = xself.xassertEqual # 65:8-65:23
        e99 = (-0 ) # 65:25-65:30
        lhs72 = 0  # 65:33-65:33
        e100 = e98(e99, lhs72) # 65:8-65:34
        e101 = xself.xassertEqual # 66:8-66:23
        e102 = (-16 ) # 66:25-66:31
        e103 = (-16 ) # 66:34-66:36
        e104 = e101(e102, e103) # 66:8-66:37
        e105 = xself.xassertEqual # 67:8-67:23
        e106 = (-2147483647 ) # 67:25-67:40
        e107 = (-2147483647 ) # 67:43-67:53
        e108 = e105(e106, e107) # 67:8-67:54
        e109 = xself.xassertEqual # 68:8-68:23
        e110 = (-9223372036854775807 ) # 68:25-68:50
        e111 = (-9223372036854775807 ) # 68:53-68:72
        e112 = e109(e110, e111) # 68:8-68:73
        e113 = xself.xassertEqual # 70:8-70:23
        e114 = (-0 ) # 70:25-70:28
        lhs77 = 0  # 70:31-70:31
        e115 = e113(e114, lhs77) # 70:8-70:32
        e116 = xself.xassertEqual # 71:8-71:23
        e117 = (-16 ) # 71:25-71:29
        e118 = (-16 ) # 71:32-71:34
        e119 = e116(e117, e118) # 71:8-71:35
        e120 = xself.xassertEqual # 72:8-72:23
        e121 = (-2147483647 ) # 72:25-72:38
        e122 = (-2147483647 ) # 72:41-72:51
        e123 = e120(e121, e122) # 72:8-72:52
        e124 = xself.xassertEqual # 73:8-73:23
        e125 = (-9223372036854775807 ) # 73:25-73:48
        e126 = (-9223372036854775807 ) # 73:51-73:70
        e127 = e124(e125, e126) # 73:8-73:71
    def xtest_oct_unsigned(xself): # 75:4-98:3
        e128 = xself.xassertEqual # 77:8-77:23
        lhs82 = 2147483648  # 77:25-77:37
        lhs83 = 2147483648  # 77:40-77:49
        e129 = e128(lhs82, lhs83) # 77:8-77:50
        e130 = xself.xassertEqual # 78:8-78:23
        lhs85 = 4294967295  # 78:25-78:37
        lhs86 = 4294967295  # 78:40-78:49
        e131 = e130(lhs85, lhs86) # 78:8-78:50
        e132 = xself.xassertEqual # 80:8-80:23
        e133 = (-2147483648 ) # 80:25-80:40
        e134 = (-2147483648 ) # 80:43-80:53
        e135 = e132(e133, e134) # 80:8-80:54
        e136 = xself.xassertEqual # 81:8-81:23
        e137 = (-4294967295 ) # 81:25-81:40
        e138 = (-4294967295 ) # 81:43-81:53
        e139 = e136(e137, e138) # 81:8-81:54
        e140 = xself.xassertEqual # 84:8-84:23
        e141 = (-2147483648 ) # 84:25-84:38
        e142 = (-2147483648 ) # 84:41-84:51
        e143 = e140(e141, e142) # 84:8-84:52
        e144 = xself.xassertEqual # 85:8-85:23
        e145 = (-4294967295 ) # 85:25-85:38
        e146 = (-4294967295 ) # 85:41-85:51
        e147 = e144(e145, e146) # 85:8-85:52
        e148 = xself.xassertEqual # 88:8-88:23
        lhs92 = 9223372036854775808  # 88:25-88:48
        lhs93 = 9223372036854775808  # 88:51-88:69
        e149 = e148(lhs92, lhs93) # 88:8-88:70
        e150 = xself.xassertEqual # 89:8-89:23
        lhs95 = 18446744073709551615  # 89:25-89:48
        lhs96 = 18446744073709551615  # 89:51-89:70
        e151 = e150(lhs95, lhs96) # 89:8-89:71
        e152 = xself.xassertEqual # 91:8-91:23
        e153 = (-9223372036854775808 ) # 91:25-91:51
        e154 = (-9223372036854775808 ) # 91:54-91:73
        e155 = e152(e153, e154) # 91:8-91:74
        e156 = xself.xassertEqual # 92:8-92:23
        e157 = (-18446744073709551615 ) # 92:25-92:51
        e158 = (-18446744073709551615 ) # 92:54-92:74
        e159 = e156(e157, e158) # 92:8-92:75
        e160 = xself.xassertEqual # 95:8-95:23
        e161 = (-9223372036854775808 ) # 95:25-95:49
        e162 = (-9223372036854775808 ) # 95:52-95:71
        e163 = e160(e161, e162) # 95:8-95:72
        e164 = xself.xassertEqual # 96:8-96:23
        e165 = (-18446744073709551615 ) # 96:25-96:49
        e166 = (-18446744073709551615 ) # 96:52-96:72
        e167 = e164(e165, e166) # 96:8-96:73
    def xtest_bin_baseline(xself): # 98:4-119:3
        e168 = xself.xassertEqual # 100:8-100:23
        lhs102 = 0  # 100:25-100:27
        lhs103 = 0  # 100:30-100:32
        e169 = e168(lhs102, lhs103) # 100:8-100:33
        e170 = xself.xassertEqual # 101:8-101:23
        lhs105 = 1  # 101:25-101:27
        lhs106 = 1  # 101:30-101:32
        e171 = e170(lhs105, lhs106) # 101:8-101:33
        e172 = xself.xassertEqual # 102:8-102:23
        lhs108 = 1365  # 102:25-102:37
        lhs109 = 1365  # 102:40-102:52
        e173 = e172(lhs108, lhs109) # 102:8-102:53
        e174 = xself.xassertEqual # 104:8-104:23
        lhs111 = 0  # 104:25-104:27
        lhs112 = 0  # 104:30-104:30
        e175 = e174(lhs111, lhs112) # 104:8-104:31
        e176 = xself.xassertEqual # 105:8-105:23
        lhs114 = 16  # 105:25-105:31
        lhs115 = 16  # 105:34-105:35
        e177 = e176(lhs114, lhs115) # 105:8-105:36
        e178 = xself.xassertEqual # 106:8-106:23
        lhs117 = 2147483647  # 106:25-106:57
        lhs118 = 2147483647  # 106:60-106:69
        e179 = e178(lhs117, lhs118) # 106:8-106:70
        e180 = xself.xassertEqual # 107:8-107:23
        lhs120 = 9223372036854775807  # 107:25-107:89
        lhs121 = 9223372036854775807  # 107:92-107:110
        e181 = e180(lhs120, lhs121) # 107:8-107:111
        e182 = xself.xassertEqual # 109:8-109:23
        e183 = (-0 ) # 109:25-109:30
        lhs123 = 0  # 109:33-109:33
        e184 = e182(e183, lhs123) # 109:8-109:34
        e185 = xself.xassertEqual # 110:8-110:23
        e186 = (-16 ) # 110:25-110:34
        e187 = (-16 ) # 110:37-110:39
        e188 = e185(e186, e187) # 110:8-110:40
        e189 = xself.xassertEqual # 111:8-111:23
        e190 = (-2147483647 ) # 111:25-111:60
        e191 = (-2147483647 ) # 111:63-111:73
        e192 = e189(e190, e191) # 111:8-111:74
        e193 = xself.xassertEqual # 112:8-112:23
        e194 = (-9223372036854775807 ) # 112:25-112:92
        e195 = (-9223372036854775807 ) # 112:95-112:114
        e196 = e193(e194, e195) # 112:8-112:115
        e197 = xself.xassertEqual # 114:8-114:23
        e198 = (-0 ) # 114:25-114:28
        lhs128 = 0  # 114:31-114:31
        e199 = e197(e198, lhs128) # 114:8-114:32
        e200 = xself.xassertEqual # 115:8-115:23
        e201 = (-16 ) # 115:25-115:32
        e202 = (-16 ) # 115:35-115:37
        e203 = e200(e201, e202) # 115:8-115:38
        e204 = xself.xassertEqual # 116:8-116:23
        e205 = (-2147483647 ) # 116:25-116:58
        e206 = (-2147483647 ) # 116:61-116:71
        e207 = e204(e205, e206) # 116:8-116:72
        e208 = xself.xassertEqual # 117:8-117:23
        e209 = (-9223372036854775807 ) # 117:25-117:90
        e210 = (-9223372036854775807 ) # 117:93-117:112
        e211 = e208(e209, e210) # 117:8-117:113
    def xtest_bin_unsigned(xself): # 119:4-142:-1
        e212 = xself.xassertEqual # 121:8-121:23
        lhs133 = 2147483648  # 121:25-121:58
        lhs134 = 2147483648  # 121:61-121:70
        e213 = e212(lhs133, lhs134) # 121:8-121:71
        e214 = xself.xassertEqual # 122:8-122:23
        lhs136 = 4294967295  # 122:25-122:58
        lhs137 = 4294967295  # 122:61-122:70
        e215 = e214(lhs136, lhs137) # 122:8-122:71
        e216 = xself.xassertEqual # 124:8-124:23
        e217 = (-2147483648 ) # 124:25-124:61
        e218 = (-2147483648 ) # 124:64-124:74
        e219 = e216(e217, e218) # 124:8-124:75
        e220 = xself.xassertEqual # 125:8-125:23
        e221 = (-4294967295 ) # 125:25-125:61
        e222 = (-4294967295 ) # 125:64-125:74
        e223 = e220(e221, e222) # 125:8-125:75
        e224 = xself.xassertEqual # 128:8-128:23
        e225 = (-2147483648 ) # 128:25-128:59
        e226 = (-2147483648 ) # 128:62-128:72
        e227 = e224(e225, e226) # 128:8-128:73
        e228 = xself.xassertEqual # 129:8-129:23
        e229 = (-4294967295 ) # 129:25-129:59
        e230 = (-4294967295 ) # 129:62-129:72
        e231 = e228(e229, e230) # 129:8-129:73
        e232 = xself.xassertEqual # 132:8-132:23
        lhs143 = 9223372036854775808  # 132:25-132:90
        lhs144 = 9223372036854775808  # 132:93-132:111
        e233 = e232(lhs143, lhs144) # 132:8-132:112
        e234 = xself.xassertEqual # 133:8-133:23
        lhs146 = 18446744073709551615  # 133:25-133:90
        lhs147 = 18446744073709551615  # 133:93-133:112
        e235 = e234(lhs146, lhs147) # 133:8-133:113
        e236 = xself.xassertEqual # 135:8-135:23
        e237 = (-9223372036854775808 ) # 135:25-135:93
        e238 = (-9223372036854775808 ) # 135:96-135:115
        e239 = e236(e237, e238) # 135:8-135:116
        e240 = xself.xassertEqual # 136:8-136:23
        e241 = (-18446744073709551615 ) # 136:25-136:93
        e242 = (-18446744073709551615 ) # 136:96-136:116
        e243 = e240(e241, e242) # 136:8-136:117
        e244 = xself.xassertEqual # 139:8-139:23
        e245 = (-9223372036854775808 ) # 139:25-139:91
        e246 = (-9223372036854775808 ) # 139:94-139:113
        e247 = e244(e245, e246) # 139:8-139:114
        e248 = xself.xassertEqual # 140:8-140:23
        e249 = (-18446744073709551615 ) # 140:25-140:91
        e250 = (-18446744073709551615 ) # 140:94-140:114
        e251 = e248(e249, e250) # 140:8-140:115
e255 = (x__name__ == "__main__") # 142:3-142:24
if (e255): # 142:26-144:-1 
    e253 = xunittest.xmain # 143:4-143:16
    e254 = e253() # 143:4-143:18
else: # 142:0-144:-1
    pass # 142:0-144:-1