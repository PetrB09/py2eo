memory > xlist
memory > xstr
memory > xB
memory > xFoo
memory > xint
memory > xx
memory > xbuiltins
memory > xsorted
memory > xdir
memory > xrlcompleter
memory > xunittest
memory > xA
memory > xdict
memory > xpatch
memory > xCompleteMe
memory > xTypeError
memory > x__name__
[] > test_rlcompleter
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_attr_matches
        memory > xsetUp
        memory > xtest_uncreated_attr
        memory > x_ham
        memory > xtest_namespace
        memory > xtest_duplicate_globals
        memory > xspam
        memory > xtest_excessive_getattr
        memory > xtest_global_matches
        memory > xtest_complete
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
              seq
                unsupported
                xspam.write 1
                x_ham.write 2
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xstdcompleter)) (((((xrlcompleter).xCompleter)) 0)))
                        (((unsupported)) (((xself).xcompleter)) (((((xrlcompleter).xCompleter)) ((((unsupported)) ((xdict)) ((xint)) ((xstr)) ((xCompleteMe)))))))
                        bogusForceDataize.write (((((xself).xstdcompleter).xcomplete)) ("") (0))
                xtest_namespace.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xdict)))
                        (((unsupported)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xself).xstdcompleter).xuse_main_ns)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xself).xcompleter).xuse_main_ns)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((((xrlcompleter).xCompleter)) ((((xA)) 0))).xuse_main_ns)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xrlcompleter).xCompleter)) ((((xB)) ((((unsupported)) (1))))))
                xtest_global_matches.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((((((xself).xstdcompleter).xglobal_matches)) ("di"))))) ((((unsupported)) (((xx).add "(")) ((xx)) ((((xdir)) ((xbuiltins)))) (((((xx).xstartswith)) ("di"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsorted)) ((((((xself).xstdcompleter).xglobal_matches)) ("st"))))) ((((unsupported)) (((xx).add "(")) ((xx)) ((((xdir)) ((xbuiltins)))) (((((xx).xstartswith)) ("st"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xglobal_matches)) ("akaksajadhak"))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xglobal_matches)) ("CompleteM"))) ((((unsupported)) ("CompleteMe("))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xglobal_matches)) ("eg"))) ((((unsupported)) ("egg("))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xglobal_matches)) ("CompleteM"))) ((((unsupported)) ("CompleteMe("))))
                xtest_attr_matches.write
                  [xself]
                    memory > xexpected
                    memory > xmatches
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xattr_matches)) ("str.s"))) ((((unsupported)) (((("str.{}(".xformat)) ((xx)))) ((xx)) ((((xdir)) ((xstr)))) (((((xx).xstartswith)) ("s"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xattr_matches)) ("tuple.foospamegg"))) ((((unsupported)) 0)))
                        xexpected.write (((xsorted)) ((((unsupported)) (("None.%s%s".mod (((unsupported)) ((xx)) ((((xx).neq "__doc__").if "(" ""))))) ((xx)) ((((xdir)) ("None: is there a None literal in the EO language?"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xattr_matches)) ("None."))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xattr_matches)) ("None._"))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xstdcompleter).xattr_matches)) ("None.__"))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("CompleteMe.sp"))) ((((unsupported)) ("CompleteMe.spam"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("Completeme.egg"))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("CompleteMe."))) ((((unsupported)) ("CompleteMe.mro(") ("CompleteMe.spam"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("CompleteMe._"))) ((((unsupported)) ("CompleteMe._ham"))))
                        xmatches.write (((((xself).xcompleter).xattr_matches)) ("CompleteMe.__"))
                        (((unsupported)) ((xx)) ((xmatches)))
                          bogusForceDataize.write ((((xself).xassertTrue)) (((((xx).xstartswith)) ("CompleteMe.__"))) ((xx)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("CompleteMe.__name__") ((xmatches)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("CompleteMe.__new__(") ((xmatches)))
                        (((unsupported)) ((((unsupported)) (((xpatch).xobject)) ((xCompleteMe)) ("me") ((xCompleteMe)) (TRUE))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("CompleteMe.me.me.sp"))) ((((unsupported)) ("CompleteMe.me.me.spam"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xcompleter).xattr_matches)) ("egg.s"))) ((((unsupported)) (((("egg.{}(".xformat)) ((xx)))) ((xx)) ((((xdir)) ((xstr)))) (((((xx).xstartswith)) ("s"))))))
                xtest_excessive_getattr.write
                  [xself]
                    memory > xcalls
                    memory > xcompleter
                    memory > xf
                    memory > xbar
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xcalls.write 0
                            xbar.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xcalls)) (1))
                                    (((unsupported)) ("None: is there a None literal in the EO language?"))
                        xf.write (((xFoo)) 0)
                        xcompleter.write ((((xrlcompleter).xCompleter)) ((((unsupported)) ((xdict)) ((xf)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("f.b") (0))) ("f.bar"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xcalls)) (1))
                xtest_uncreated_attr.write
                  [xself]
                    memory > xcompleter
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          x__slots__.write (((unsupported)) ("bar"))
                        xcompleter.write ((((xrlcompleter).xCompleter)) ((((unsupported)) ((xdict)) ((((xFoo)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("f.") (0))) ("f.bar"))
                xtest_complete.write
                  [xself]
                    memory > xcompleter
                    seq > @
                      (((unsupported)) 0)
                        xcompleter.write ((((xrlcompleter).xCompleter)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("") (0))) ("t"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("a") (0))) ("and "))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("a") (1))) ("as "))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("as") (2))) ("assert "))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("an") (0))) ("and "))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("pa") (0))) ("pass"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("Fa") (0))) ("False"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("el") (0))) ("elif "))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("el") (1))) ("else"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("tr") (0))) ("try:"))
                xtest_duplicate_globals.write
                  [xself]
                    memory > xcompleter
                    memory > xnamespace
                    seq > @
                      seq
                        xnamespace.write (((unsupported)) ("False") ("None: is there a None literal in the EO language?") ("assert") ("None: is there a None literal in the EO language?") ("try") ((((unsupported)) ("None: is there a None literal in the EO language?"))) ("memoryview") ("None: is there a None literal in the EO language?") ("Ellipsis") ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                        xcompleter.write ((((xrlcompleter).xCompleter)) ((xnamespace)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("False") (0))) ("False"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xcompleter).xcomplete)) ("False") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("assert") (0))) ("assert "))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xcompleter).xcomplete)) ("assert") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("try") (0))) ("try:"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xcompleter).xcomplete)) ("try") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("memoryview") (0))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xcompleter).xcomplete)) ("memoryview") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xcompleter).xcomplete)) ("Ellipsis") (0))) ("Ellipsis("))
                        bogusForceDataize.write ((((xself).xassertIsNone)) (((((xcompleter).xcomplete)) ("Ellipsis") (1))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)