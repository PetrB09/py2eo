memory > xclient
memory > xValueError
memory > xecho_client
memory > xsocket
memory > xecho_server
memory > xbytearray
memory > xl
memory > xtime
memory > xasynchat
memory > xunittest
memory > xasyncore
memory > xmemoryview
memory > xlen
memory > xthreading
memory > xevent
memory > xerrno
memory > xTestAsynchat
memory > xerror
memory > xconn
memory > xs
memory > xsupport
memory > xsys
memory > xBlockingIOError
memory > xTypeError
memory > x__name__
[] > test_asynchat
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xcollect_incoming_data
        memory > xline_terminator_check
        memory > xnumeric_terminator_check
        memory > xtest_blockingioerror
        memory > xtest_line_terminator3
        memory > xsetUp
        memory > xTIMEOUT
        memory > xrun
        memory > xtest_numeric_terminator1
        memory > xtest_line_terminator1
        memory > xtest_empty_line
        memory > xusepoll
        memory > xSERVER_QUIT
        memory > xtest_none_terminator
        memory > xfound_terminator
        memory > xchunk_size
        memory > xtest_numeric_terminator2
        memory > xstart_echo_server
        memory > xtest_close_when_done
        memory > xtest_push
        memory > x__init__
        memory > xtest_disallow_negative_terminator
        memory > xHOST
        memory > xtest_line_terminator2
        memory > xtest_find_prefix_at_end
        memory > xtest_simple_producer
        memory > xtearDown
        memory > xtest_string_producer
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xHOST.write ((xsupport).xHOST)
            xSERVER_QUIT.write "QUITn"
            xTIMEOUT.write 3.0
            (((unsupported)) (((xthreading).xThread)))
              seq
                xchunk_size.write 1
                x__init__.write
                  [xself xevent]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xthreading).xThread).x__init__)) ((xself)))
                        (((unsupported)) (((xself).xevent)) ((xevent)))
                        (((unsupported)) (((xself).xsock)) (((((xsocket).xsocket)) (((xsocket).xAF_INET)) (((xsocket).xSOCK_STREAM)))))
                        (((unsupported)) (((xself).xport)) (((((xsupport).xbind_port)) (((xself).xsock)))))
                        (((unsupported)) (((xself).xstart_resend_event)) ("None: is there a None literal in the EO language?"))
                xrun.write
                  [xself]
                    memory > xn
                    memory > xdata
                    seq > @
                      seq
                        bogusForceDataize.write (((((xself).xsock).xlisten)) 0)
                        bogusForceDataize.write (((((xself).xevent).xset)) 0)
                        (((unsupported)) ((((unsupported)) ((xconn)) ((xclient)))) ((((((xself).xsock).xaccept)) 0)))
                        (((unsupported)) (((xself).xbuffer)) (""))
                        while.
                          (((unsupported)) ((xSERVER_QUIT)) (((xself).xbuffer)))
                          [unused]
                            seq > @
                              seq
                                xdata.write ((((xconn).xrecv)) (1))
                                ((xdata).not).if
                                  (((unsupported)) 0)
                                (((unsupported)) (((xself).xbuffer)) ((((xself).xbuffer).add (xdata))))
                        (((unsupported)) (((xself).xbuffer)) ((((((xself).xbuffer).xreplace)) ((xSERVER_QUIT)) (""))))
                        ((xself).xstart_resend_event).if
                          bogusForceDataize.write (((((xself).xstart_resend_event).xwait)) 0)
                        (((unsupported)) 0)
                          while.
                            ((xself).xbuffer)
                            [unused]
                              seq > @
                                seq
                                  xn.write ((((xconn).xsend)) ((((unsupported)) (((xself).xbuffer)) ((((unsupported)) (((xself).xchunk_size)))))))
                                  bogusForceDataize.write ((((xtime).xsleep)) (0.001))
                                  (((unsupported)) (((xself).xbuffer)) ((((unsupported)) (((xself).xbuffer)) ((((unsupported)) ((xn)))))))
                        bogusForceDataize.write ((((xconn).xclose)) 0)
                        bogusForceDataize.write (((((xself).xsock).xclose)) 0)
            (((unsupported)) (((xasynchat).xasync_chat)))
              seq
                x__init__.write
                  [xself xterminator xserver_port]
                    memory > xhandle_expt
                    memory > xhandle_connect
                    seq > @
                      seq
                        bogusForceDataize.write (((((xasynchat).xasync_chat).x__init__)) ((xself)))
                        (((unsupported)) (((xself).xcontents)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xcreate_socket)) (((xsocket).xAF_INET)) (((xsocket).xSOCK_STREAM)))
                        bogusForceDataize.write ((((xself).xconnect)) ((((unsupported)) ((xHOST)) ((xserver_port)))))
                        bogusForceDataize.write ((((xself).xset_terminator)) ((xterminator)))
                        (((unsupported)) (((xself).xbuffer)) (""))
                        xhandle_connect.write
                          [xself]
                            seq > @
                        (((xsys).xplatform).eq "darwin").if
                          xhandle_expt.write
                            [xself]
                              seq > @
                xcollect_incoming_data.write
                  [xself xdata]
                    seq > @
                      (((unsupported)) (((xself).xbuffer)) ((xdata)))
                xfound_terminator.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xself).xcontents).xappend)) (((xself).xbuffer)))
                        (((unsupported)) (((xself).xbuffer)) (""))
            xstart_echo_server.write
              []
                memory > xs
                memory > xevent
                seq > @
                  seq
                    xevent.write ((((xthreading).xEvent)) 0)
                    xs.write (((xecho_server)) ((xevent)))
                    bogusForceDataize.write ((((xs).xstart)) 0)
                    bogusForceDataize.write ((((xevent).xwait)) 0)
                    bogusForceDataize.write ((((xevent).xclear)) 0)
                    bogusForceDataize.write ((((xtime).xsleep)) (0.01))
                    (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xusepoll.write FALSE
                xsetUp.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).x_threads)) (((((xsupport).xthreading_setup)) 0)))
                xtearDown.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xsupport).xthreading_cleanup)) ((((unsupported)) (((xself).x_threads)))))
                xline_terminator_check.write
                  [xself xterm xserver_chunk]
                    memory > xs
                    memory > xc
                    memory > xevent
                    seq > @
                      seq
                        xevent.write ((((xthreading).xEvent)) 0)
                        xs.write (((xecho_server)) ((xevent)))
                        (((unsupported)) (((xs).xchunk_size)) ((xserver_chunk)))
                        bogusForceDataize.write ((((xs).xstart)) 0)
                        bogusForceDataize.write ((((xevent).xwait)) 0)
                        bogusForceDataize.write ((((xevent).xclear)) 0)
                        bogusForceDataize.write ((((xtime).xsleep)) (0.01))
                        xc.write (((xecho_client)) ((xterm)) (((xs).xport)))
                        bogusForceDataize.write ((((xc).xpush)) ("hello "))
                        bogusForceDataize.write ((((xc).xpush)) (("world".add (xterm))))
                        bogusForceDataize.write ((((xc).xpush)) (("I'm not dead yet!".add (xterm))))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ("hello world") ("I'm not dead yet!"))))
                xtest_line_terminator1.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xl)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xline_terminator_check)) ("n") ((xl)))
                xtest_line_terminator2.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xl)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xline_terminator_check)) ("rn") ((xl)))
                xtest_line_terminator3.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xl)) ((((unsupported)) (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xline_terminator_check)) ("qqq") ((xl)))
                xnumeric_terminator_check.write
                  [xself xtermlen]
                    memory > xc
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ((xtermlen)) (((xs).xport)))
                        xdata.write "hello world, I'm not dead yet!n"
                        bogusForceDataize.write ((((xc).xpush)) ((xdata)))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ((((unsupported)) ((xdata)) ((((unsupported)) ((xtermlen)))))))))
                xtest_numeric_terminator1.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xnumeric_terminator_check)) (1))
                xtest_numeric_terminator2.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xnumeric_terminator_check)) (6))
                xtest_none_terminator.write
                  [xself]
                    memory > xc
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ("None: is there a None literal in the EO language?") (((xs).xport)))
                        xdata.write "hello world, I'm not dead yet!n"
                        bogusForceDataize.write ((((xc).xpush)) ((xdata)))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xbuffer)) ((xdata)))
                xtest_simple_producer.write
                  [xself]
                    memory > xc
                    memory > xp
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ("n") (((xs).xport)))
                        xdata.write "hello worldnI'm not dead yet!n"
                        xp.write (((unsupported)) (((xasynchat).xsimple_producer)) (((xdata).add (xSERVER_QUIT))) (8))
                        bogusForceDataize.write ((((xc).xpush_with_producer)) ((xp)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ("hello world") ("I'm not dead yet!"))))
                xtest_string_producer.write
                  [xself]
                    memory > xc
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ("n") (((xs).xport)))
                        xdata.write "hello worldnI'm not dead yet!n"
                        bogusForceDataize.write ((((xc).xpush_with_producer)) (((xdata).add (xSERVER_QUIT))))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ("hello world") ("I'm not dead yet!"))))
                xtest_empty_line.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ("n") (((xs).xport)))
                        bogusForceDataize.write ((((xc).xpush)) ("hello worldnnI'm not dead yet!n"))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ("hello world") ("") ("I'm not dead yet!"))))
                xtest_close_when_done.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        (((unsupported)) (((xs).xstart_resend_event)) (((((xthreading).xEvent)) 0)))
                        xc.write (((xecho_client)) ("n") (((xs).xport)))
                        bogusForceDataize.write ((((xc).xpush)) ("hello worldnI'm not dead yet!n"))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        bogusForceDataize.write ((((xc).xclose_when_done)) 0)
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        bogusForceDataize.write (((((xs).xstart_resend_event).xset)) 0)
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertGreater)) ((((xlen)) (((xs).xbuffer)))) (0))
                xtest_push.write
                  [xself]
                    memory > xc
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xs)) ((xevent)))) ((((xstart_echo_server)) 0)))
                        xc.write (((xecho_client)) ("n") (((xs).xport)))
                        xdata.write "bytesn"
                        bogusForceDataize.write ((((xc).xpush)) ((xdata)))
                        bogusForceDataize.write ((((xc).xpush)) ((((xbytearray)) ((xdata)))))
                        bogusForceDataize.write ((((xc).xpush)) ((((xmemoryview)) ((xdata)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xc).xpush)) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xc).xpush)) ("unicode"))
                        bogusForceDataize.write ((((xc).xpush)) ((xSERVER_QUIT)))
                        (((unsupported)) (((xasyncore).xloop)) (((xself).xusepoll)) (300) ((((unsupported)) 0)))
                        (((unsupported)) (((xsupport).xjoin_thread)) ((xs)) ((xTIMEOUT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xc).xcontents)) ((((unsupported)) ("bytes") ("bytes") ("bytes"))))
            (((unsupported)) ((xTestAsynchat)))
              xusepoll.write TRUE
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_blockingioerror.write
                [xself]
                  memory > xdispatcher
                  memory > xsock
                  seq > @
                    seq
                      xsock.write (((((xunittest).xmock).xMock)) 0)
                      (((unsupported)) ((((xsock).xrecv).xside_effect)) ((((xBlockingIOError)) (((xerrno).xEAGAIN)))))
                      xdispatcher.write ((((xasynchat).xasync_chat)) 0)
                      bogusForceDataize.write ((((xdispatcher).xset_socket)) ((xsock)))
                      bogusForceDataize.write ((((xself).xaddCleanup)) (((xdispatcher).xdel_channel)))
                      (((unsupported)) (((((((xunittest).xmock).xpatch).xobject)) ((xdispatcher)) ("handle_error"))) ((xerror)))
                        bogusForceDataize.write ((((xdispatcher).xhandle_read)) 0)
                      bogusForceDataize.write ((((xself).xassertFalse)) (((xerror).xcalled)))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_find_prefix_at_end.write
                [xself]
                  seq > @
                    seq
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xasynchat).xfind_prefix_at_end)) ("qwertyr") ("rn"))) (1))
                      bogusForceDataize.write ((((xself).xassertEqual)) (((((xasynchat).xfind_prefix_at_end)) ("qwertydkjf") ("rn"))) (0))
            (((unsupported)) (((xunittest).xTestCase)))
              xtest_disallow_negative_terminator.write
                [xself]
                  memory > xclient
                  seq > @
                    seq
                      xclient.write ((((xasynchat).xasync_chat)) 0)
                      bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xclient).xset_terminator)) ((1.neg)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)