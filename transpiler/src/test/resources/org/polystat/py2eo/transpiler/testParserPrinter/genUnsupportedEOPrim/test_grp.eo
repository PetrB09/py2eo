memory > xlist
memory > xValueError
memory > xstr
memory > xg
memory > xrange
memory > xmem
memory > xIndexError
memory > xKeyError
memory > xp
memory > xint
memory > xi
memory > xsupport
memory > xe
memory > xn
memory > xlen
memory > xDeprecationWarning
memory > xfloat
memory > xchr
memory > xord
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_grp
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_values_extended
        memory > xtest_noninteger_gid
        memory > xtest_errors
        memory > xtest_values
        memory > xcheck_value
        memory > xgrp
        seq > @
          seq
            unsupported
            (((unsupported)) 0)
            (((unsupported)) 0)
            xgrp.write ((((xsupport).ximport_module)) ("grp"))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xcheck_value.write
                  [xself xvalue]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xvalue)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xvalue)) (0))) (((xvalue).xgr_name)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xvalue).xgr_name)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xvalue)) (1))) (((xvalue).xgr_passwd)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xvalue).xgr_passwd)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xvalue)) (2))) (((xvalue).xgr_gid)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xvalue).xgr_gid)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xvalue)) (3))) (((xvalue).xgr_mem)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)) (((xvalue).xgr_mem)) ((xlist)))
                xtest_values.write
                  [xself]
                    memory > xentries
                    seq > @
                      seq
                        xentries.write ((((xgrp).xgetgrall)) 0)
                        (((unsupported)) ((xe)) ((xentries)))
                          bogusForceDataize.write ((((xself).xcheck_value)) ((xe)))
                xtest_values_extended.write
                  [xself]
                    memory > xname
                    memory > xe2
                    memory > xentries
                    seq > @
                      seq
                        xentries.write ((((xgrp).xgetgrall)) 0)
                        ((((xlen)) ((xentries))).greater 1000).if
                          bogusForceDataize.write ((((xself).xskipTest)) ("huge group file, extended test skipped"))
                        (((unsupported)) ((xe)) ((xentries)))
                          seq
                            xe2.write ((((xgrp).xgetgrgid)) (((xe).xgr_gid)))
                            bogusForceDataize.write ((((xself).xcheck_value)) ((xe2)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xe2).xgr_gid)) (((xe).xgr_gid)))
                            xname.write ((xe).xgr_name)
                            (((((xname).xstartswith)) ("+")).or ((((xname).xstartswith)) ("-"))).if
                              (((unsupported)) 0)
                            xe2.write ((((xgrp).xgetgrnam)) ((xname)))
                            bogusForceDataize.write ((((xself).xcheck_value)) ((xe2)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((((xe2).xgr_name).xlower)) 0)) (((((xname).xlower)) 0)))
                xtest_errors.write
                  [xself]
                    memory > xfakename
                    memory > xbynames
                    memory > xchars
                    memory > xfakegid
                    memory > xbygids
                    memory > xnamei
                    memory > xallnames
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xgrp).xgetgrgid)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xgrp).xgetgrnam)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xgrp).xgetgrall)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xgrp).xgetgrnam)) ("ax00b"))
                        xbynames.write (((unsupported)) 0)
                        xbygids.write (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xn)) ((xp)) ((xg)) ((xmem)))) (((((xgrp).xgetgrall)) 0)))
                          seq
                            (((xn).not).or ((xn).eq "+")).if
                              (((unsupported)) 0)
                            (((unsupported)) ((((unsupported)) ((xbynames)) ((xn)))) ((xg)))
                            (((unsupported)) ((((unsupported)) ((xbygids)) ((xg)))) ((xn)))
                        xallnames.write (((xlist)) (((((xbynames).xkeys)) 0)))
                        xnamei.write 0
                        xfakename.write (((unsupported)) ((xallnames)) ((xnamei)))
                        while.
                          (((unsupported)) ((xfakename)) ((xbynames)))
                          [unused]
                            seq > @
                              seq
                                xchars.write (((xlist)) ((xfakename)))
                                (((unsupported)) ((xi)) ((((xrange)) ((((xlen)) ((xchars)))))))
                                  ((((unsupported)) ((xchars)) ((xi))).eq "z").if
                                    seq
                                      (((unsupported)) ((((unsupported)) ((xchars)) ((xi)))) ("A"))
                                      (((unsupported)) 0)
                                    ((((unsupported)) ((xchars)) ((xi))).eq "Z").if
                                      (((unsupported)) 0)
                                      seq
                                        (((unsupported)) ((((unsupported)) ((xchars)) ((xi)))) ((((xchr)) (((((xord)) ((((unsupported)) ((xchars)) ((xi))))).add 1)))))
                                        (((unsupported)) 0)
                                  seq
                                    xnamei.write ((xnamei).add 1)
                                    (((unsupported)) ((xIndexError)))
                                      xfakename.write (((unsupported)) ((xallnames)) ((xnamei)))
                                      (((unsupported)) 0)
                                xfakename.write ((("".xjoin)) ((xchars)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xgrp).xgetgrnam)) ((xfakename)))
                        xfakegid.write 4127
                        while.
                          (((unsupported)) ((xfakegid)) ((xbygids)))
                          [unused]
                            seq > @
                              xfakegid.write (((xfakegid).mul 3).mod 65536)
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xKeyError)) (((xgrp).xgetgrgid)) ((xfakegid)))
                xtest_noninteger_gid.write
                  [xself]
                    memory > xgid
                    memory > xentries
                    seq > @
                      seq
                        xentries.write ((((xgrp).xgetgrall)) 0)
                        ((xentries).not).if
                          bogusForceDataize.write ((((xself).xskipTest)) ("no groups"))
                        xgid.write (((unsupported)) ((((unsupported)) ((xentries)) (0))) (2))
                        bogusForceDataize.write ((((xself).xassertWarns)) ((xDeprecationWarning)) (((xgrp).xgetgrgid)) ((((xfloat)) ((xgid)))))
                        bogusForceDataize.write ((((xself).xassertWarns)) ((xDeprecationWarning)) (((xgrp).xgetgrgid)) ((((xstr)) ((xgid)))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)