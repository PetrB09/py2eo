memory > xmultibytecodec_support
memory > xunittest
memory > x__name__
[] > test_codecencodings_hk
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xencoding
        memory > xtstring
        memory > xcodectests
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "big5hkscs"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)) ("big5hkscs"))
                xcodectests.write (((unsupported)) ((((unsupported)) ("abcx80x80xc1xc4") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)) ("abcxc8") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)) ("abcx80x80xc1xc4") ("replace") ("abcufffdufffdu8b10"))) ((((unsupported)) ("abcx80x80xc1xc4xc8") ("replace") ("abcufffdufffdu8b10ufffd"))) ((((unsupported)) ("abcx80x80xc1xc4") ("ignore") ("abcu8b10"))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)