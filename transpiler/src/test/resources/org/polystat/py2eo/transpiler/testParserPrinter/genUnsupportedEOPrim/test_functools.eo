memory > xhits
memory > xcm
memory > xk
memory > xthreading
memory > xD
memory > xComparatorNotImplemented
memory > xC
memory > xcopy
memory > xTestFailingIter
memory > xU
memory > xCachedCostItem
memory > xTestPartialC
memory > xAttributeError
memory > xargs1
memory > xBadTuple
memory > xpickle
memory > xlist
memory > xnumber
memory > xRuntimeError
memory > xO
memory > xenumerate
memory > xCachedCostItemWithSlots
memory > xkw2
memory > xempty
memory > xCPartialSubclass
memory > xValueError
memory > xgot
memory > xabc
memory > xPyPartialSubclass
memory > xfrozenset
memory > xproxy
memory > xQ
memory > xre_one
memory > xstr
memory > xOrderable_LT
memory > xMyTuple
memory > xSquares
memory > xImplementsLessThan
memory > xkw1
memory > xB
memory > xTestReduce
memory > xfunc
memory > xpermutations
memory > xS
memory > xrange
memory > xMetaA
memory > xvalue
memory > xZeroDivisionError
memory > xkwargs_repr
memory > xT
memory > xcollections
memory > xIndexError
memory > x_
memory > xchoice
memory > xUserDict
memory > xproto
memory > xSequenceClass
memory > xP
memory > xmax
memory > xabcs
memory > xBadCmp
memory > xFoo
memory > xcallable
memory > xTracingDict
memory > xkw
memory > xtype
memory > xTestPartialPy
memory > xf
memory > xset
memory > xrepr
memory > xint
memory > xmaxsize
memory > xMyMeta
memory > xX
memory > xhasattr
memory > xOptionallyCachedCostItem
memory > xtime
memory > xDoubleEq
memory > xx
memory > xi
memory > xR
memory > xTestUpdateWrapper
memory > xImplementsLessThanEqualTo
memory > xbuiltins
memory > xsuper
memory > xImplementsGreaterThan
memory > xsupport
memory > xsys
memory > xTestPartial
memory > xAA
memory > xMyClass
memory > xm
memory > xtuple
memory > xNotImplemented
memory > xargs2
memory > xRecursionError
memory > xsorted
memory > xDeprecationWarning
memory > xBadSeq
memory > xTestLRU
memory > xargs
memory > xobj
memory > xMutatesYourDict
memory > xmisses
memory > xweakref
memory > xgetattr
memory > xv
memory > xV
memory > xadd
memory > xvars
memory > xImplementsGreaterThanEqualTo
memory > xTestCmpToKey
memory > xctx
memory > xre_three
memory > xsetattr
memory > xattr
memory > xname
memory > xunittest
memory > xCachedCostItemWait
memory > xstaticmethod
memory > xBadSequence
memory > xy
memory > xhash
memory > xMyDict
memory > xmap
memory > xwrapper
memory > xexc
memory > xhaystack
memory > xn
memory > xobject
memory > xA
memory > xAbstract
memory > xReferenceError
memory > xhex
memory > xkwargs
memory > xisinstance
memory > xre_two
memory > xcurrsize
memory > xfunctools
memory > xlen
memory > xdict
memory > xclassmethod
memory > xTypeError
memory > x__name__
memory > xkey
[] > test_functools
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_lru_with_keyword_args
        memory > xtest_kwargs_copy
        memory > xtest_lru_with_exceptions
        memory > xtest_no_update
        memory > xtest_obj_field
        memory > xtest_simple_overloads
        memory > x_cost
        memory > xtest_lru_method
        memory > xtest_nested_partial_with_attribute
        memory > xtest_reuse_different_names
        memory > xcapture
        memory > xstatic
        memory > xpositional
        memory > xtest_no_operations_defined
        memory > xtest_keyword
        memory > x__eq__
        memory > xtest_weakref
        memory > xtest_method_register
        memory > xtest_lru_bug_36650
        memory > xtest_kw_combinations
        memory > xtest_register_abc
        memory > xtest_positional
        memory > xtest_bound_method_introspection
        memory > xtest_lru_cache_threaded
        memory > xtest_total_ordering_gt
        memory > xtest_set_name_not_called
        memory > xtest_pickle
        memory > xcmp_to_key
        memory > xtest_unbound_method_retrieval
        memory > xcached_func
        memory > xtest_positional_only
        memory > xdecimal
        memory > xtest_builtin_update
        memory > xtest_wrapping_attributes
        memory > xtest_lru_hash_only_once
        memory > xcached_staticmeth
        memory > xtest_access_from_class
        memory > xtest_need_for_rlock
        memory > xtest_lru_reentrancy_with_len
        memory > xtest_descriptors
        memory > xtest_iterator_usage
        memory > xover_partial
        memory > xtest_lru_with_types
        memory > xtest_c3_abc
        memory > xtest_sort_int
        memory > xtest_total_ordering_le
        memory > xtest_mro
        memory > xtest_manually_adding_non_string_keyword
        memory > xtest_cache_invalidation
        memory > xc_functools
        memory > xtest_lru_bug_35780
        memory > xtest_lru_cache_decoration
        memory > xnothing
        memory > xtest_recursive_pickle
        memory > xtest_annotations
        memory > xtest_hash
        memory > xtest_doc
        memory > xcached_meth
        memory > xtest_cached
        memory > xtest_lru_star_arg_handling
        memory > xtest_invalid_registrations
        memory > xtest_repr
        memory > xtest_keystr_replaces_value
        memory > xtest_no_side_effects
        memory > xtest_total_ordering_lt
        memory > xtest_selective_update
        memory > xtest_total_ordering_ge
        memory > xboth
        memory > xtest_over_partial
        memory > xtest_bad_cmp
        memory > xtest_abstractmethod_register
        memory > xtest_overriding_keywords
        memory > xtest_setstate_errors
        memory > xget_cost
        memory > xspec_keywords
        memory > x__lt__
        memory > xtest_deepcopy
        memory > xtest_cached_attribute_name_differs_from_func_name
        memory > xtest_invalid_positional_argument
        memory > xtest_lru_cache_threaded2
        memory > xtest_c_classes
        memory > xpy_functools
        memory > x__exit__
        memory > xtest_with_bound_and_unbound_methods
        memory > xtest_abstract
        memory > xtest_threaded
        memory > xpy_cached_func
        memory > xtest_lru_with_keyword_args_maxsize_none
        memory > x__slots__
        memory > xtest_type_error_when_not_implemented
        memory > xtest_error_propagation
        memory > xtest_copy
        memory > x__enter__
        memory > xtest_recursive_repr
        memory > xmodule
        memory > xtest_sort_int_str
        memory > x_default_update
        memory > xtest_cmp_to_key_arguments
        memory > xkeywords
        memory > xtest_nested
        memory > xtest_attributes_unwritable
        memory > xtest_immutable_dict
        memory > xc_cached_func
        memory > xcost
        memory > xtest_lru_with_maxsize_none
        memory > xtest_classmethod_register
        memory > xtest_reduce
        memory > xcls
        memory > xtest_setstate_refcount
        memory > xtest_setstate_subclasses
        memory > xtest_lru_no_args
        memory > xcheck_wrapper
        memory > xtest_lru_cache_threaded3
        memory > x__add__
        memory > xtest_arg_combinations
        memory > xsignature
        memory > xtest_setstate
        memory > xtest_default_update
        memory > xtest_mro_conflicts
        memory > xtest_object_with_slots
        memory > x__init__
        memory > xtest_missing_attributes
        memory > xtest_default_update_doc
        memory > xtest_total_ordering_no_overwrite
        memory > xcached_cost
        memory > xtest_callable_register
        memory > xtest_argument_checking
        memory > xpartial
        memory > xtest_compose_mro
        memory > xtest_false_meta
        memory > xtest_type_ann_register
        memory > xtest_reuse_same_name
        memory > xtest_attributes
        memory > xtest_lru_type_error
        memory > xtest_invalid_args
        memory > xtest_nested_optimization
        memory > xtest_staticmethod_register
        memory > xtest_lru
        memory > xtest_protection_of_callers_dict_argument
        memory > xnested
        memory > xtest_lru_with_maxsize_negative
        memory > xreduce
        memory > xtest_cmp_to_key
        memory > xtest_basic_examples
        memory > xtest_kwargs_order
        memory > xreplaced_module
        memory > xtest_register_decorator
        memory > xa
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xpy_functools.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("functools") ((((unsupported)) ("_functools"))))
            xc_functools.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("functools") ((((unsupported)) ("_functools"))))
            xdecimal.write (((unsupported)) (((xsupport).ximport_fresh_module)) ("decimal") ((((unsupported)) ("_decimal"))))
            xreplaced_module.write
              [xname xreplacement]
                memory > xoriginal_module
                seq > @
                  (((unsupported)) 0)
                    xoriginal_module.write (((unsupported)) (((xsys).xmodules)) ((xname)))
                    (((unsupported)) ((((unsupported)) (((xsys).xmodules)) ((xname)))) ((xreplacement)))
                    (((unsupported)) 0)
                      (((unsupported)) 0)
                      (((unsupported)) ((((unsupported)) (((xsys).xmodules)) ((xname)))) ((xoriginal_module)))
            xcapture.write
              []
                seq > @
                  (((unsupported)) 0)
                    unsupported
                    (((unsupported)) ((((unsupported)) ((xargs)) ((xkw)))))
            xsignature.write
              [xpart]
                seq > @
                  seq
                    unsupported
                    (((unsupported)) ((((unsupported)) (((xpart).xfunc)) (((xpart).xargs)) (((xpart).xkeywords)) (((xpart).x__dict__)))))
            (((unsupported)) ((xtuple)))
            (((unsupported)) ((xtuple)))
              x__add__.write
                [xself xother]
                  seq > @
                    (((unsupported)) (((((xlist)) ((xself))).add (((xlist)) ((xother))))))
            (((unsupported)) ((xdict)))
            (((unsupported)) 0)
              seq
                xtest_basic_examples.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) (1) (2) (10) (20))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xcallable)) ((xp)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) (3) (4) (30) (40))) ((((unsupported)) ((((unsupported)) (1) (2) (3) (4))) ((((unsupported)) ((xdict)) (10) (30) (40))))))
                        xp.write ((((xself).xpartial)) ((xmap)) ((((unsupported)) (((xx).mul 10)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xp)) ((((unsupported)) (1) (2) (3) (4))))))) ((((unsupported)) (10) (20) (30) (40))))
                xtest_attributes.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) (1) (2) (10) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xfunc)) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xargs)) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xkeywords)) ((((unsupported)) ((xdict)) (10) (20))))
                xtest_argument_checking.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xpartial)))
                        (((unsupported)) ((xTypeError)))
                          bogusForceDataize.write ((((((xself).xpartial)) (2))) 0)
                          bogusForceDataize.write ((((xself).xfail)) ("First arg not checked for callability"))
                xtest_protection_of_callers_dict_argument.write
                  [xself]
                    memory > xd
                    memory > xfunc
                    memory > xp
                    seq > @
                      seq
                        xfunc.write
                          [xa xb]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xa)))
                        xd.write (((unsupported)) ("a") (3))
                        xp.write (((unsupported)) (((xself).xpartial)) ((xfunc)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) ((((unsupported)) ((xd)))))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ("a") (3))))
                        (((unsupported)) ((xp)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xd)) ((((unsupported)) ("a") (3))))
                xtest_kwargs_copy.write
                  [xself]
                    memory > xd
                    memory > xp
                    seq > @
                      seq
                        xd.write (((unsupported)) ("a") (3))
                        xp.write ((((xself).xpartial)) ((xcapture)) ((((unsupported)) ((xd)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (3))))))
                        (((unsupported)) ((((unsupported)) ((xd)) ("a"))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (3))))))
                xtest_arg_combinations.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) (1) (2))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))))
                        xp.write ((((xself).xpartial)) ((xcapture)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) (3) (4))) ((((unsupported)) ((((unsupported)) (1) (2) (3) (4))) ((((unsupported)) 0)))))
                xtest_kw_combinations.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xkeywords)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) (1))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1))))))
                        xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp).xkeywords)) ((((unsupported)) ("a") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) (2))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (1) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xp)) (3) (2))) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) ("a") (3) ("b") (2))))))
                xtest_positional.write
                  [xself]
                    memory > xexpected
                    memory > xp
                    seq > @
                      (((unsupported)) ((xargs)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) (0))) ((((unsupported)) (0) (1))) ((((unsupported)) (0) (1) (2))) ((((unsupported)) (0) (1) (2) (3))))))
                        seq
                          xp.write ((((xself).xpartial)) ((xcapture)) ((((unsupported)) ((xargs)))))
                          xexpected.write ((xargs).add (((unsupported)) ("x")))
                          (((unsupported)) ((((unsupported)) ((xgot)) ((xempty)))) ((((xp)) ("x"))))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xexpected).eq (xgot)).and ((xempty).eq (((unsupported)) 0)))))
                xtest_keyword.write
                  [xself]
                    memory > xexpected
                    memory > xp
                    seq > @
                      (((unsupported)) ((xa)) ((((unsupported)) ("a") (0) ("None: is there a None literal in the EO language?") (3.5))))
                        seq
                          xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) ((xa)))
                          xexpected.write (((unsupported)) ("a") ((xa)) ("x") ("None: is there a None literal in the EO language?"))
                          (((unsupported)) ((((unsupported)) ((xempty)) ((xgot)))) ((((unsupported)) ((xp)) ("None: is there a None literal in the EO language?"))))
                          bogusForceDataize.write ((((xself).xassertTrue)) ((((xexpected).eq (xgot)).and ((xempty).eq (((unsupported)) 0)))))
                xtest_no_side_effects.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) (0) (1))
                        (((unsupported)) ((((unsupported)) ((xargs1)) ((xkw1)))) ((((unsupported)) ((xp)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xargs1).eq (((unsupported)) (0) (1))).and ((xkw1).eq (((unsupported)) ("a") (1) ("b") (2))))))
                        (((unsupported)) ((((unsupported)) ((xargs2)) ((xkw2)))) ((((xp)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xargs2).eq (((unsupported)) (0))).and ((xkw2).eq (((unsupported)) ("a") (1))))))
                xtest_error_propagation.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx xy]
                            seq > @
                              unsupported
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((((xself).xpartial)) ((xf)) (1) (0))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((((xself).xpartial)) ((xf)) (1))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) (((((xself).xpartial)) ((xf)))) (1) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xZeroDivisionError)) ((((unsupported)) (((xself).xpartial)) ((xf)) (0))) (1))
                xtest_weakref.write
                  [xself]
                    memory > xp
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)) (((xself).xpartial)) ((xint)) (16))
                        xp.write (((xproxy)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xf).xfunc)) (((xp).xfunc)))
                        xf.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xReferenceError)) ((xgetattr)) ((xp)) ("func"))
                xtest_with_bound_and_unbound_methods.write
                  [xself]
                    memory > xjoin
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xlist)) ((((xmap)) ((xstr)) ((((xrange)) (10))))))
                        xjoin.write ((((xself).xpartial)) (((xstr).xjoin)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xjoin)) ((xdata)))) ("0123456789"))
                        xjoin.write ((((xself).xpartial)) (("".xjoin)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xjoin)) ((xdata)))) ("0123456789"))
                xtest_nested_optimization.write
                  [xself]
                    memory > xpartial
                    memory > xinner
                    memory > xnested
                    memory > xflat
                    seq > @
                      seq
                        xpartial.write ((xself).xpartial)
                        xinner.write (((xpartial)) ((xsignature)) ("asdf"))
                        xnested.write (((unsupported)) ((xpartial)) ((xinner)) (TRUE))
                        xflat.write (((unsupported)) ((xpartial)) ((xsignature)) ("asdf") (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xnested)))) ((((xsignature)) ((xflat)))))
                xtest_nested_partial_with_attribute.write
                  [xself]
                    memory > xpartial
                    memory > xp
                    memory > xfoo
                    memory > xp2
                    seq > @
                      seq
                        xpartial.write ((xself).xpartial)
                        xfoo.write
                          [xbar]
                            seq > @
                              (((unsupported)) ((xbar)))
                        xp.write (((xpartial)) ((xfoo)) ("first"))
                        xp2.write (((xpartial)) ((xp)) ("second"))
                        (((unsupported)) (((xp2).xnew_attr)) ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xp2).xnew_attr)) ("spam"))
                xtest_repr.write
                  [xself]
                    memory > xf
                    memory > xargs
                    memory > xname
                    memory > xkwargs
                    memory > xargs_repr
                    memory > xkwargs_reprs
                    seq > @
                      seq
                        xargs.write (((unsupported)) ((((xobject)) 0)) ((((xobject)) 0)))
                        xargs_repr.write (((", ".xjoin)) ((((unsupported)) ((((xrepr)) ((xa)))) ((xa)) ((xargs)))))
                        xkwargs.write (((unsupported)) ("a") ((((xobject)) 0)) ("b") ((((xobject)) 0)))
                        xkwargs_reprs.write (((unsupported)) (((("a={a!r}, b={b!r}".xformat_map)) ((xkwargs)))) (((("b={b!r}, a={a!r}".xformat_map)) ((xkwargs)))))
                        (((unsupported)) (((xself).xpartial)) ((((unsupported)) (((xc_functools).xpartial)) (((xpy_functools).xpartial))))).if
                          xname.write "functools.partial"
                          xname.write (((xself).xpartial).x__name__)
                        xf.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("{name}({capture!r})") ((((xrepr)) ((xf)))))
                        xf.write ((((xself).xpartial)) ((xcapture)) ((((unsupported)) ((xargs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ("{name}({capture!r}, {args_repr})") ((((xrepr)) ((xf)))))
                        xf.write ((((xself).xpartial)) ((xcapture)) ((((unsupported)) ((xkwargs)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xrepr)) ((xf)))) ((((unsupported)) ("{name}({capture!r}, {kwargs_repr})") ((xkwargs_repr)) ((xkwargs_reprs)))))
                        xf.write ((((xself).xpartial)) ((xcapture)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xrepr)) ((xf)))) ((((unsupported)) ("{name}({capture!r}, {args_repr}, {kwargs_repr})") ((xkwargs_repr)) ((xkwargs_reprs)))))
                xtest_recursive_repr.write
                  [xself]
                    memory > xname
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) (((xself).xpartial)) ((((unsupported)) (((xc_functools).xpartial)) (((xpy_functools).xpartial))))).if
                          xname.write "functools.partial"
                          xname.write (((xself).xpartial).x__name__)
                        xf.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xf)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf)))) (("%s(...)".mod (((unsupported)) ((xname))))))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        xf.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) ((xf)))) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf)))) (("%s(%r, ...)".mod (((unsupported)) ((xname)) ((xcapture))))))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        xf.write ((((xself).xpartial)) ((xcapture)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) ("a") ((xf)))) ((((unsupported)) 0)))))
                        (((unsupported)) 0)
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((xf)))) (("%s(%r, a=...)".mod (((unsupported)) ((xname)) ((xcapture))))))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                xtest_pickle.write
                  [xself]
                    memory > xf_copy
                    memory > xf
                    seq > @
                      (((unsupported)) (((((xself).xAllowPickle)) 0)))
                        seq
                          xf.write (((unsupported)) (((xself).xpartial)) ((xsignature)) ((((unsupported)) ("asdf"))) ((((unsupported)) (TRUE))))
                          (((unsupported)) (((xf).xattr)) ((((unsupported)) 0)))
                          (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            seq
                              xf_copy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xf)) ((xproto)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf_copy)))) ((((xsignature)) ((xf)))))
                xtest_copy.write
                  [xself]
                    memory > xf_copy
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)) (((xself).xpartial)) ((xsignature)) ((((unsupported)) ("asdf"))) ((((unsupported)) (TRUE))))
                        (((unsupported)) (((xf).xattr)) ((((unsupported)) 0)))
                        xf_copy.write ((((xcopy).xcopy)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf_copy)))) ((((xsignature)) ((xf)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xf_copy).xattr)) (((xf).xattr)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xf_copy).xargs)) (((xf).xargs)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xf_copy).xkeywords)) (((xf).xkeywords)))
                xtest_deepcopy.write
                  [xself]
                    memory > xf_copy
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)) (((xself).xpartial)) ((xsignature)) ((((unsupported)) ("asdf"))) ((((unsupported)) (TRUE))))
                        (((unsupported)) (((xf).xattr)) ((((unsupported)) 0)))
                        xf_copy.write ((((xcopy).xdeepcopy)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf_copy)))) ((((xsignature)) ((xf)))))
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((xf_copy).xattr)) (((xf).xattr)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((xf_copy).xargs)) (((xf).xargs)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((unsupported)) (((xf_copy).xargs)) (0))) ((((unsupported)) (((xf).xargs)) (0))))
                        bogusForceDataize.write ((((xself).xassertIsNot)) (((xf_copy).xkeywords)) (((xf).xkeywords)))
                        bogusForceDataize.write ((((xself).xassertIsNot)) ((((unsupported)) (((xf_copy).xkeywords)) ("bar"))) ((((unsupported)) (((xf).xkeywords)) ("bar"))))
                xtest_setstate.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xself).xpartial)) ((xsignature)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (10))) ((((unsupported)) ((xdict)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf)))) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (10))) ((((unsupported)) ((xdict)) ((((unsupported)) 0)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (2) (20))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ("a") (10) ("b") (20))))))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (10))) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf)))) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (10))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (2) (20))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ("a") (10) ("b") (20))))))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (2) (20))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) ("b") (20))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (2))) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) 0)) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xsignature)) ((xf)))) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (2) (20))) ((((unsupported)) ((((unsupported)) (2))) ((((unsupported)) ("b") (20))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (2))) ((((unsupported)) ((((unsupported)) (2))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) 0)) ((((unsupported)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                xtest_setstate_errors.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xself).xpartial)) ((xsignature)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ("None: is there a None literal in the EO language?") ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ("None: is there a None literal in the EO language?") ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                xtest_setstate_subclasses.write
                  [xself]
                    memory > xs
                    memory > xr
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xself).xpartial)) ((xsignature)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((xMyTuple)) ((((unsupported)) (1))))) ((((unsupported)) ((xMyDict)) (10))) ("None: is there a None literal in the EO language?"))))
                        xs.write (((xsignature)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) ((xdict)) (10))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xs)) (1))))) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xs)) (2))))) ((xdict)))
                        xr.write (((xf)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xr)) ((((unsupported)) ((((unsupported)) (1))) ((((unsupported)) ("a") (10))))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xr)) (0))))) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xr)) (1))))) ((xdict)))
                        bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((xBadTuple)) ((((unsupported)) (1))))) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))))
                        xs.write (((xsignature)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xs)) ((((unsupported)) ((xcapture)) ((((unsupported)) (1))) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xs)) (1))))) ((xtuple)))
                        xr.write (((xf)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xr)) ((((unsupported)) ((((unsupported)) (1) (2))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xtype)) ((((unsupported)) ((xr)) (0))))) ((xtuple)))
                xtest_recursive_pickle.write
                  [xself]
                    memory > xf_copy
                    memory > xf
                    seq > @
                      (((unsupported)) (((((xself).xAllowPickle)) 0)))
                        seq
                          xf.write ((((xself).xpartial)) ((xcapture)))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xf)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                          (((unsupported)) 0)
                            (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                              (((unsupported)) (((((xself).xassertRaises)) ((xRecursionError)))))
                                bogusForceDataize.write ((((xpickle).xdumps)) ((xf)) ((xproto)))
                            bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                          xf.write ((((xself).xpartial)) ((xcapture)))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) ((xf)))) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                          (((unsupported)) 0)
                            (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                              seq
                                xf_copy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xf)) ((xproto)))))
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((xf_copy).xargs)) (0))) ((xf_copy)))
                                  bogusForceDataize.write ((((xf_copy).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                            bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                          xf.write ((((xself).xpartial)) ((xcapture)))
                          bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) ("a") ((xf)))) ((((unsupported)) 0)))))
                          (((unsupported)) 0)
                            (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                              seq
                                xf_copy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xf)) ((xproto)))))
                                (((unsupported)) 0)
                                  bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) (((xf_copy).xkeywords)) ("a"))) ((xf_copy)))
                                  bogusForceDataize.write ((((xf_copy).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                            bogusForceDataize.write ((((xf).x__setstate__)) ((((unsupported)) ((xcapture)) ((((unsupported)) 0)) ((((unsupported)) 0)) ((((unsupported)) 0)))))
                xtest_setstate_refcount.write
                  [xself]
                    memory > x__getitem__
                    memory > x__len__
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (4))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  seq
                                    ((xkey).eq 0).if
                                      (((unsupported)) ((xmax)))
                                      ((xkey).eq 1).if
                                        (((unsupported)) ((((xtuple)) ((((xrange)) (1000000))))))
                                        (((unsupported)) ((xkey)) ((((unsupported)) (2) (3)))).if
                                          (((unsupported)) ((((unsupported)) 0)))
                                    (((unsupported)) ((xIndexError)))
                        xf.write ((((xself).xpartial)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xf).x__setstate__)) ((((xBadSequence)) 0)))
            (((unsupported)) ((xTestPartial)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_functools)) ("requires the C _functools module"))))
              seq
                (xc_functools).if
                  xpartial.write ((xc_functools).xpartial)
                (((unsupported)) 0)
                  seq
                    x__enter__.write
                      [xself]
                        seq > @
                          (((unsupported)) ((xself)))
                    x__exit__.write
                      [xself xtype xvalue xtb]
                        seq > @
                          (((unsupported)) (FALSE))
                xtest_attributes_unwritable.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)) (((xself).xpartial)) ((xcapture)) (1) (2) (10) (20))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xp)) ("func") ((xmap)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xp)) ("args") ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xAttributeError)) ((xsetattr)) ((xp)) ("keywords") ((((unsupported)) ((xdict)) (1) (2))))
                        xp.write ((((xself).xpartial)) ((xhex)))
                        (((unsupported)) ((xTypeError)))
                          (((unsupported)) ((((unsupported)) (((xp).x__dict__)))))
                          bogusForceDataize.write ((((xself).xfail)) ("partial object allowed __dict__ to be deleted"))
                xtest_manually_adding_non_string_keyword.write
                  [xself]
                    memory > xr
                    memory > xp
                    seq > @
                      seq
                        xp.write ((((xself).xpartial)) ((xcapture)))
                        (((unsupported)) ((((unsupported)) (((xp).xkeywords)) (1234))) ("value"))
                        xr.write (((xrepr)) ((xp)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("1234") ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("'value'") ((xr)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xp)) 0)
                xtest_keystr_replaces_value.write
                  [xself]
                    memory > x__str__
                    memory > xr
                    memory > xp
                    seq > @
                      seq
                        xp.write ((((xself).xpartial)) ((xcapture)))
                        (((unsupported)) ((xobject)))
                          x__str__.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)) ((((unsupported)) (((xp).xkeywords)) ((xself)))) ((((unsupported)) ("sth2"))))
                                  (((unsupported)) ("astr"))
                        (((unsupported)) ((((unsupported)) (((xp).xkeywords)) ((((xMutatesYourDict)) 0)))) ((((unsupported)) ("sth"))))
                        xr.write (((xrepr)) ((xp)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("astr") ((xr)))
                        bogusForceDataize.write ((((xself).xassertIn)) ("['sth']") ((xr)))
            (((unsupported)) ((xTestPartial)) (((xunittest).xTestCase)))
              seq
                xpartial.write ((xpy_functools).xpartial)
                (((unsupported)) 0)
                  seq
                    x__init__.write
                      [xself]
                        seq > @
                          (((unsupported)) (((xself).x_cm)) ((((xreplaced_module)) ("functools") ((xpy_functools)))))
                    x__enter__.write
                      [xself]
                        seq > @
                          (((unsupported)) ((((((xself).x_cm).x__enter__)) 0)))
                    x__exit__.write
                      [xself xtype xvalue xtb]
                        seq > @
                          (((unsupported)) ((((((xself).x_cm).x__exit__)) ((xtype)) ((xvalue)) ((xtb)))))
            (xc_functools).if
              (((unsupported)) (((xc_functools).xpartial)))
            (((unsupported)) (((xpy_functools).xpartial)))
            (((unsupported)) ((xTestPartialC)) (((((xunittest).xskipUnless)) ((xc_functools)) ("requires the C _functools module"))))
              seq
                (xc_functools).if
                  xpartial.write (xCPartialSubclass)
                xtest_nested_optimization.write "None: is there a None literal in the EO language?"
            (((unsupported)) ((xTestPartialPy)))
              xpartial.write (xPyPartialSubclass)
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) ((xobject)))
                  seq
                    xnothing.write ((((xfunctools).xpartialmethod)) ((xcapture)))
                    xpositional.write ((((xfunctools).xpartialmethod)) ((xcapture)) (1))
                    xkeywords.write (((unsupported)) (((xfunctools).xpartialmethod)) ((xcapture)) (2))
                    xboth.write (((unsupported)) (((xfunctools).xpartialmethod)) ((xcapture)) (3) (4))
                    xspec_keywords.write (((unsupported)) (((xfunctools).xpartialmethod)) ((xcapture)) (1) (2))
                    xnested.write ((((xfunctools).xpartialmethod)) ((xpositional)) (5))
                    xover_partial.write ((((xfunctools).xpartialmethod)) ((((unsupported)) (((xfunctools).xpartial)) ((xcapture)) (6))) (7))
                    xstatic.write ((((xfunctools).xpartialmethod)) ((((xstaticmethod)) ((xcapture)))) (8))
                    xcls.write (((unsupported)) (((xfunctools).xpartialmethod)) ((((xclassmethod)) ((xcapture)))) (9))
                xa.write (((xA)) 0)
                xtest_arg_combinations.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xnothing)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xnothing)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (5))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xnothing)) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xnothing)) (5) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (5))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xpositional)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xpositional)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xpositional)) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xpositional)) (5) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xkeywords)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("a") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xkeywords)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (5))) ((((unsupported)) ("a") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xkeywords)) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("a") (2) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xkeywords)) (5) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (5))) ((((unsupported)) ("a") (2) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xboth)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)) (3))) ((((unsupported)) ("b") (4))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xboth)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (3) (5))) ((((unsupported)) ("b") (4))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xboth)) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (3))) ((((unsupported)) ("b") (4) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xboth)) (5) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (3) (5))) ((((unsupported)) ("b") (4) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xA).xboth)) (((xself).xa)) (5) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (3) (5))) ((((unsupported)) ("b") (4) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xspec_keywords)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("self") (1) ("func") (2))))))
                xtest_nested.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xnested)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xnested)) (6))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5) (6))) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xnested)) (7))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5))) ((((unsupported)) ("d") (7))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xnested)) (6) (7))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5) (6))) ((((unsupported)) ("d") (7))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xA).xnested)) (((xself).xa)) (6) (7))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (1) (5) (6))) ((((unsupported)) ("d") (7))))))
                xtest_over_partial.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xover_partial)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xa)) (7))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xself).xa).xover_partial)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (7) (5))) ((((unsupported)) ("c") (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xover_partial)) (8))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (7))) ((((unsupported)) ("c") (6) ("d") (8))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xover_partial)) (5) (8))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (7) (5))) ((((unsupported)) ("c") (6) ("d") (8))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xA).xover_partial)) (((xself).xa)) (5) (8))) ((((unsupported)) ((((unsupported)) (((xself).xa)) (7) (5))) ((((unsupported)) ("c") (6) ("d") (8))))))
                xtest_bound_method_introspection.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        xobj.write ((xself).xa)
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xobj).xboth).x__self__)) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xobj).xnested).x__self__)) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xobj).xover_partial).x__self__)) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertIs)) ((((xobj).xcls).x__self__)) (((xself).xA)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xself).xA).xcls).x__self__)) (((xself).xA)))
                xtest_unbound_method_retrieval.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        xobj.write ((xself).xA)
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) (((xobj).xboth)) ("__self__"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) (((xobj).xnested)) ("__self__"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) (((xobj).xover_partial)) ("__self__"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) (((xobj).xstatic)) ("__self__"))))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((((xself).xa).xstatic)) ("__self__"))))
                xtest_descriptors.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xobj)) ((((unsupported)) (((xself).xA)) (((xself).xa)))))
                        (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xobj)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).xstatic)) 0)) ((((unsupported)) ((((unsupported)) (8))) ((((unsupported)) 0)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).xstatic)) (5))) ((((unsupported)) ((((unsupported)) (8) (5))) ((((unsupported)) 0)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xobj).xstatic)) (8))) ((((unsupported)) ((((unsupported)) (8))) ((((unsupported)) ("d") (8))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xobj).xstatic)) (5) (8))) ((((unsupported)) ((((unsupported)) (8) (5))) ((((unsupported)) ("d") (8))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).xcls)) 0)) ((((unsupported)) ((((unsupported)) (((xself).xA)))) ((((unsupported)) ("d") (9))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((((xobj).xcls)) (5))) ((((unsupported)) ((((unsupported)) (((xself).xA)) (5))) ((((unsupported)) ("d") (9))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xobj).xcls)) (8))) ((((unsupported)) ((((unsupported)) (((xself).xA)))) ((((unsupported)) ("c") (8) ("d") (9))))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xobj).xcls)) (5) (8))) ((((unsupported)) ((((unsupported)) (((xself).xA)) (5))) ((((unsupported)) ("c") (8) ("d") (9))))))
                xtest_overriding_keywords.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xa).xkeywords)) (3))) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("a") (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xself).xA).xkeywords)) (((xself).xa)) (3))) ((((unsupported)) ((((unsupported)) (((xself).xa)))) ((((unsupported)) ("a") (3))))))
                xtest_invalid_args.write
                  [xself]
                    memory > xmethod
                    memory > xb
                    seq > @
                      seq
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) ((xobject)))
                            xmethod.write ((((xfunctools).xpartialmethod)) ("None: is there a None literal in the EO language?") (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          (((unsupported)) 0)
                            xmethod.write ((((xfunctools).xpartialmethod)) 0)
                        (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                          (((unsupported)) 0)
                            xmethod.write (((unsupported)) (((xfunctools).xpartialmethod)) ((xcapture)) (1))
                        xb.write (((xB)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xb).xmethod)) (2) (3))) ((((unsupported)) ((((unsupported)) ((xb)) (2))) ((((unsupported)) ("a") (1) ("x") (3))))))
                xtest_repr.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xrepr)) ((((unsupported)) ((((xvars)) (((xself).xA)))) ("both"))))) (((("functools.partialmethod({}, 3, b=4)".xformat)) ((xcapture)))))
                xtest_abstract.write
                  [xself]
                    memory > xadd5
                    memory > xadd
                    seq > @
                      seq
                        (((unsupported)) (((xabc).xABCMeta)))
                          seq
                            xadd.write
                              [xself xx xy]
                                seq > @
                                  (((unsupported)) 0)
                            xadd5.write ((((xfunctools).xpartialmethod)) ((xadd)) (5))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xAbstract).xadd).x__isabstractmethod__)))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xAbstract).xadd5).x__isabstractmethod__)))
                        (((unsupported)) ((xfunc)) ((((unsupported)) ((((xself).xA).xstatic)) ((((xself).xA).xcls)) ((((xself).xA).xover_partial)) ((((xself).xA).xnested)) ((((xself).xA).xboth)))))
                          bogusForceDataize.write ((((xself).xassertFalse)) ((((xgetattr)) ((xfunc)) ("__isabstractmethod__") (FALSE))))
                xtest_positional_only.write
                  [xself]
                    memory > xp
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xa xb]
                            seq > @
                              (((unsupported)) (((xa).add (xb))))
                        xp.write ((((xfunctools).xpartial)) ((xf)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xp)) (2))) ((((xf)) (1) (2))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xcheck_wrapper.write
                  [xself xwrapper xwrapped xassigned xupdated]
                    memory > xwrapper_attr
                    memory > xwrapped_attr
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((xname)) ((xassigned)))
                          bogusForceDataize.write ((((xself).xassertIs)) ((((xgetattr)) ((xwrapper)) ((xname)))) ((((xgetattr)) ((xwrapped)) ((xname)))))
                        (((unsupported)) ((xname)) ((xupdated)))
                          seq
                            xwrapper_attr.write (((xgetattr)) ((xwrapper)) ((xname)))
                            xwrapped_attr.write (((xgetattr)) ((xwrapped)) ((xname)))
                            (((unsupported)) ((xkey)) ((xwrapped_attr)))
                              seq
                                (((xname).eq "__dict__").and ((xkey).eq "__wrapped__")).if
                                  (((unsupported)) 0)
                                bogusForceDataize.write ((((xself).xassertIs)) ((((unsupported)) ((xwrapped_attr)) ((xkey)))) ((((unsupported)) ((xwrapper_attr)) ((xkey)))))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xwrapper).x__wrapped__)) ((xwrapped)))
                x_default_update.write
                  [xself]
                    memory > xwrapper
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                        (((unsupported)) (((xf).xattr)) ("This is also a test"))
                        (((unsupported)) (((xf).x__wrapped__)) ("This is a bald faced lie"))
                        xwrapper.write
                          [xb]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)))
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((xf)))))
                xtest_default_update.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((xf)))) (((((xself).x_default_update)) 0)))
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xwrapper).x__wrapped__)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("f"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xattr)) ("This is also a test"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xwrapper).x__annotations__)) ("a"))) ("This is a new annotation"))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("b") (((xwrapper).x__annotations__)))
                xtest_default_update_doc.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((xf)))) (((((xself).x_default_update)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("This is a test"))
                xtest_no_update.write
                  [xself]
                    memory > xwrapper
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              seq
                                unsupported
                        (((unsupported)) (((xf).xattr)) ("This is also a test"))
                        xwrapper.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("wrapper"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__annotations__)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xwrapper)) ("attr"))))
                xtest_selective_update.write
                  [xself]
                    memory > xwrapper
                    memory > xupdate
                    memory > xassign
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        (((unsupported)) (((xf).xattr)) ("This is a different test"))
                        (((unsupported)) (((xf).xdict_attr)) ((((unsupported)) ((xdict)) (1) (2) (3))))
                        xwrapper.write
                          []
                            seq > @
                        (((unsupported)) (((xwrapper).xdict_attr)) ((((unsupported)) 0)))
                        xassign.write (((unsupported)) ("attr"))
                        xupdate.write (((unsupported)) ("dict_attr"))
                        bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("wrapper"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xattr)) ("This is a different test"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xdict_attr)) (((xf).xdict_attr)))
                xtest_missing_attributes.write
                  [xself]
                    memory > xwrapper
                    memory > xupdate
                    memory > xassign
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        xwrapper.write
                          []
                            seq > @
                        (((unsupported)) (((xwrapper).xdict_attr)) ((((unsupported)) 0)))
                        xassign.write (((unsupported)) ("attr"))
                        xupdate.write (((unsupported)) ("dict_attr"))
                        bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                        bogusForceDataize.write ((((xself).xassertNotIn)) ("attr") (((xwrapper).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xdict_attr)) ((((unsupported)) 0)))
                        (((unsupported)) ((((unsupported)) (((xwrapper).xdict_attr)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                        (((unsupported)) (((xwrapper).xdict_attr)) (1))
                        (((unsupported)) (((((xself).xassertRaises)) ((xAttributeError)))))
                          bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                xtest_builtin_update.write
                  [xself]
                    memory > xwrapper
                    seq > @
                      (((unsupported)) 0)
                        xwrapper.write
                          []
                            seq > @
                        bogusForceDataize.write ((((xfunctools).xupdate_wrapper)) ((xwrapper)) ((xmax)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("max"))
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((((xwrapper).x__doc__).xstartswith)) ("max("))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__annotations__)) ((((unsupported)) 0)))
            (((unsupported)) ((xTestUpdateWrapper)))
              seq
                x_default_update.write
                  [xself]
                    memory > xwrapper
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              seq
                                unsupported
                        (((unsupported)) (((xf).xattr)) ("This is also a test"))
                        (((unsupported)) (((xf).x__wrapped__)) ("This is still a bald faced lie"))
                        xwrapper.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((xf)))))
                xtest_default_update.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((xf)))) (((((xself).x_default_update)) 0)))
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("f"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xattr)) ("This is also a test"))
                xtest_default_update_doc.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((unsupported)) ((xwrapper)) ((x_)))) (((((xself).x_default_update)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("This is a test"))
                xtest_no_update.write
                  [xself]
                    memory > xwrapper
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              seq
                                unsupported
                        (((unsupported)) (((xf).xattr)) ("This is also a test"))
                        xwrapper.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)) ((((unsupported)) 0)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("wrapper"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xwrapper)) ("attr"))))
                xtest_selective_update.write
                  [xself]
                    memory > xassign
                    memory > xadd_dict_attr
                    memory > xf
                    memory > xupdate
                    memory > xwrapper
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                        (((unsupported)) (((xf).xattr)) ("This is a different test"))
                        (((unsupported)) (((xf).xdict_attr)) ((((unsupported)) ((xdict)) (1) (2) (3))))
                        xadd_dict_attr.write
                          [xf]
                            seq > @
                              seq
                                (((unsupported)) (((xf).xdict_attr)) ((((unsupported)) 0)))
                                (((unsupported)) ((xf)))
                        xassign.write (((unsupported)) ("attr"))
                        xupdate.write (((unsupported)) ("dict_attr"))
                        xwrapper.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xcheck_wrapper)) ((xwrapper)) ((xf)) ((xassign)) ((xupdate)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__name__)) ("wrapper"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) (((xwrapper).x__qualname__)) (((xf).x__qualname__)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).x__doc__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xattr)) ("This is a different test"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xwrapper).xdict_attr)) (((xf).xdict_attr)))
            (((unsupported)) 0)
              seq
                xtest_reduce.write
                  [xself]
                    memory > x__iter__
                    memory > x__getitem__
                    memory > x__init__
                    memory > xadd
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xmax]
                                seq > @
                                  seq
                                    (((unsupported)) (((xself).xmax)) ((xmax)))
                                    (((unsupported)) (((xself).xsofar)) ((((unsupported)) 0)))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)) ((((xlen)) (((xself).xsofar)))))
                            x__getitem__.write
                              [xself xi]
                                memory > xn
                                seq > @
                                  seq
                                    ((((unsupported)) (0) ((xi)) (((xself).xmax))).not).if
                                      (((unsupported)) ((xIndexError)))
                                    xn.write (((xlen)) (((xself).xsofar)))
                                    while.
                                      ((xn).leq (xi))
                                      [unused]
                                        seq > @
                                          seq
                                            bogusForceDataize.write (((((xself).xsofar).xappend)) (((xn).mul (xn))))
                                            (((unsupported)) ((xn)) (1))
                                    (((unsupported)) ((((unsupported)) (((xself).xsofar)) ((xi)))))
                        xadd.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((xx).add (xy))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((unsupported)) ("a") ("b") ("c"))) (""))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((unsupported)) ((((unsupported)) ("a") ("c"))) ((((unsupported)) 0)) ((((unsupported)) ("d") ("w"))))) ((((unsupported)) 0)))) ((((unsupported)) ("a") ("c") ("d") ("w"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((((unsupported)) (((xx).mul (xy))))) ((((xrange)) (2) (8))) (1))) (5040))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((((unsupported)) (((xx).mul (xy))))) ((((xrange)) (2) (21))) (1))) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSquares)) (10))))) (285))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSquares)) (10))) (0))) (285))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSquares)) (0))) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) (42) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) (42) (42) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) (42) ("1"))) ("1"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) (42) ("") ("1"))) ("1"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) (42) ((((unsupported)) (42) (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) ((xadd)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) ((xadd)) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) ((xadd)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) ((xadd)) ((((xobject)) 0)))
                        (((unsupported)) 0)
                          x__iter__.write
                            [xself]
                              seq > @
                                (((unsupported)) ((xRuntimeError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xRuntimeError)) (((xself).xreduce)) ((xadd)) ((((xTestFailingIter)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((unsupported)) 0)) ("None: is there a None literal in the EO language?"))) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((unsupported)) 0)) (42))) (42))
                        (((unsupported)) 0)
                          x__getitem__.write
                            [xself xindex]
                              seq > @
                                (((unsupported)) ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xValueError)) (((xself).xreduce)) (42) ((((xBadSeq)) 0)))
                xtest_iterator_usage.write
                  [xself]
                    memory > xd
                    memory > x__getitem__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xn]
                                seq > @
                                  (((unsupported)) (((xself).xn)) ((xn)))
                            x__getitem__.write
                              [xself xi]
                                seq > @
                                  (((unsupported)) (0) ((xi)) (((xself).xn))).if
                                    (((unsupported)) ((xi)))
                                    (((unsupported)) ((xIndexError)))
                        (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (5))))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (5))) (42))) (52))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) (((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (0))) (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (1))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((((xSequenceClass)) (1))) (42))) (42))
                        xd.write (((unsupported)) ("one") (1) ("two") (2) ("three") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xself).xreduce)) ((xadd)) ((xd)))) (((("".xjoin)) (((((xd).xkeys)) 0)))))
            (((unsupported)) ((xTestReduce)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_functools)) ("requires the C _functools module"))))
              (xc_functools).if
                xreduce.write ((xc_functools).xreduce)
            (((unsupported)) ((xTestReduce)) (((xunittest).xTestCase)))
              xreduce.write (((xstaticmethod)) (((xpy_functools).xreduce)))
            (((unsupported)) 0)
              seq
                xtest_cmp_to_key.write
                  [xself]
                    memory > xcmp1
                    memory > xcmp2
                    memory > xkey
                    seq > @
                      seq
                        xcmp1.write
                          [xx xy]
                            seq > @
                              (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                        xkey.write ((((xself).xcmp_to_key)) ((xcmp1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xkey)) (3))) ((((xkey)) (3))))
                        bogusForceDataize.write ((((xself).xassertGreater)) ((((xkey)) (3))) ((((xkey)) (1))))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)) ((((xkey)) (3))) ((((xkey)) (3))))
                        xcmp2.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((((xint)) ((xx))).sub (((xint)) ((xy))))))
                        xkey.write ((((xself).xcmp_to_key)) ((xcmp2)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xkey)) (4.0))) ((((xkey)) ("4"))))
                        bogusForceDataize.write ((((xself).xassertLess)) ((((xkey)) (2))) ((((xkey)) ("35"))))
                        bogusForceDataize.write ((((xself).xassertLessEqual)) ((((xkey)) (2))) ((((xkey)) ("35"))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)) ((((xkey)) (2))) ((((xkey)) ("35"))))
                xtest_cmp_to_key_arguments.write
                  [xself]
                    memory > xcmp1
                    memory > xkey
                    seq > @
                      seq
                        xcmp1.write
                          [xx xy]
                            seq > @
                              (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                        xkey.write (((unsupported)) (((xself).xcmp_to_key)) ((xcmp1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xkey)) (3))) ((((unsupported)) ((xkey)) (3))))
                        bogusForceDataize.write ((((xself).xassertGreater)) ((((unsupported)) ((xkey)) (3))) ((((unsupported)) ((xkey)) (1))))
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((((unsupported)) ((xTypeError)) ((xAttributeError)))))))
                          unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xkey.write ((((xself).xcmp_to_key)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          xkey.write ((((xself).xcmp_to_key)) ((xcmp1)) ("None: is there a None literal in the EO language?"))
                        xkey.write ((((xself).xcmp_to_key)) ((xcmp1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xkey)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xkey)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                xtest_bad_cmp.write
                  [xself]
                    memory > x__lt__
                    memory > xcmp1
                    memory > xkey
                    seq > @
                      seq
                        xcmp1.write
                          [xx xy]
                            seq > @
                              (((unsupported)) ((xZeroDivisionError)))
                        xkey.write ((((xself).xcmp_to_key)) ((xcmp1)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          unsupported
                        (((unsupported)) 0)
                          x__lt__.write
                            [xself xother]
                              seq > @
                                (((unsupported)) ((xZeroDivisionError)))
                        xcmp1.write
                          [xx xy]
                            seq > @
                              (((unsupported)) ((((xBadCmp)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xZeroDivisionError)))))
                          unsupported
                xtest_obj_field.write
                  [xself]
                    memory > xcmp1
                    memory > xkey
                    seq > @
                      seq
                        xcmp1.write
                          [xx xy]
                            seq > @
                              (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                        xkey.write (((unsupported)) (((xself).xcmp_to_key)) ((xcmp1)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xkey)) (50)).xobj)) (50))
                xtest_sort_int.write
                  [xself]
                    memory > xmycmp
                    seq > @
                      seq
                        xmycmp.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((xy).sub (xx))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xsorted)) ((((xrange)) (5))) (((((xself).xcmp_to_key)) ((xmycmp)))))) ((((unsupported)) (4) (3) (2) (1) (0))))
                xtest_sort_int_str.write
                  [xself]
                    memory > xmycmp
                    memory > xvalues
                    seq > @
                      seq
                        xmycmp.write
                          [xx xy]
                            seq > @
                              seq
                                (((unsupported)) ((((unsupported)) ((xx)) ((xy)))) ((((unsupported)) ((((xint)) ((xx)))) ((((xint)) ((xy)))))))
                                (((unsupported)) ((((xx).greater (xy)).sub ((xx).less (xy)))))
                        xvalues.write (((unsupported)) (5) ("3") (7) (2) ("0") ("1") (4) ("10") (1))
                        xvalues.write (((unsupported)) ((xsorted)) ((xvalues)) (((((xself).xcmp_to_key)) ((xmycmp)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xint)) ((xvalue)))) ((xvalue)) ((xvalues)))) ((((unsupported)) (0) (1) (1) (2) (3) (4) (5) (7) (10))))
                xtest_hash.write
                  [xself]
                    memory > xk
                    memory > xmycmp
                    memory > xkey
                    seq > @
                      seq
                        xmycmp.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((xy).sub (xx))))
                        xkey.write ((((xself).xcmp_to_key)) ((xmycmp)))
                        xk.write (((xkey)) (10))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xTypeError)) ((xhash)) ((xk)))
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)) ((xk)) ((((xcollections).xabc).xHashable)))
            (((unsupported)) ((xTestCmpToKey)) (((xunittest).xTestCase)) (((((xunittest).xskipUnless)) ((xc_functools)) ("requires the C _functools module"))))
              (xc_functools).if
                xcmp_to_key.write ((xc_functools).xcmp_to_key)
            (((unsupported)) ((xTestCmpToKey)) (((xunittest).xTestCase)))
              xcmp_to_key.write (((xstaticmethod)) (((xpy_functools).xcmp_to_key)))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_total_ordering_lt.write
                  [xself]
                    memory > x__eq__
                    memory > x__lt__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).less (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).greater (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xA)) (1)).greater (((xA)) (2)))))
                xtest_total_ordering_le.write
                  [xself]
                    memory > x__eq__
                    memory > x__le__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__le__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).leq ((xother).xvalue))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).less (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).greater (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xA)) (1)).geq (((xA)) (2)))))
                xtest_total_ordering_gt.write
                  [xself]
                    memory > x__eq__
                    memory > x__init__
                    memory > x__gt__
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__gt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).greater ((xother).xvalue))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).less (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).greater (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xA)) (2)).less (((xA)) (1)))))
                xtest_total_ordering_ge.write
                  [xself]
                    memory > x__eq__
                    memory > x__ge__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__ge__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).geq ((xother).xvalue))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).less (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).greater (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertFalse)) (((((xA)) (2)).leq (((xA)) (1)))))
                xtest_total_ordering_no_overwrite.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((xint)) (((xfunctools).xtotal_ordering)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).less (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).greater (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (1)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).leq (((xA)) (2)))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA)) (2)).geq (((xA)) (2)))))
                xtest_no_operations_defined.write
                  [xself]
                    seq > @
                      (((unsupported)) (((((xself).xassertRaises)) ((xValueError)))))
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                xtest_type_error_when_not_implemented.write
                  [xself]
                    memory > x__eq__
                    memory > xb
                    memory > x__gt__
                    memory > x__init__
                    memory > x__le__
                    memory > x__lt__
                    memory > x__ge__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsLessThan))).if
                                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsLessThan))).if
                                      (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
                                    (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsGreaterThan))).if
                                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__gt__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsGreaterThan))).if
                                      (((unsupported)) ((((xself).xvalue).greater ((xother).xvalue))))
                                    (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsLessThanEqualTo))).if
                                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__le__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsLessThanEqualTo))).if
                                      (((unsupported)) ((((xself).xvalue).leq ((xother).xvalue))))
                                    (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsGreaterThanEqualTo))).if
                                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__ge__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xImplementsGreaterThanEqualTo))).if
                                      (((unsupported)) ((((xself).xvalue).geq ((xother).xvalue))))
                                    (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) (((xfunctools).xtotal_ordering)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)) (((xself).xvalue)) ((xvalue)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xisinstance)) ((xother)) ((xComparatorNotImplemented))).if
                                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
                                    (((unsupported)) (FALSE))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((xNotImplemented)))
                        (((unsupported)) (((((xself).xsubTest)) ("LT < 1"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("LT < LE"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("LT < GT"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("LE <= LT"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("LE <= GE"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("GT > GE"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("GT > LT"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("GE >= GT"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("GE >= LE"))) (((((xself).xassertRaises)) ((xTypeError)))))
                          unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("GE when equal"))))
                          seq
                            xa.write (((xComparatorNotImplemented)) (8))
                            xb.write (((xComparatorNotImplemented)) (8))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              unsupported
                        (((unsupported)) (((((xself).xsubTest)) ("LE when equal"))))
                          seq
                            xa.write (((xComparatorNotImplemented)) (9))
                            xb.write (((xComparatorNotImplemented)) (9))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xa)) ((xb)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                              unsupported
                xtest_pickle.write
                  [xself]
                    memory > xmethod
                    memory > xmethod_copy
                    seq > @
                      (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                        (((unsupported)) ((xname)) ((((unsupported)) ("__lt__") ("__gt__") ("__le__") ("__ge__"))))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xname)) ((xproto)))))
                            seq
                              xmethod.write (((xgetattr)) ((xOrderable_LT)) ((xname)))
                              xmethod_copy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xmethod)) ((xproto)))))
                              bogusForceDataize.write ((((xself).xassertIs)) ((xmethod_copy)) ((xmethod)))
            (((unsupported)) (((xfunctools).xtotal_ordering)))
              seq
                x__init__.write
                  [xself xvalue]
                    seq > @
                      (((unsupported)) (((xself).xvalue)) ((xvalue)))
                x__lt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xvalue).less ((xother).xvalue))))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)) ((((xself).xvalue).eq ((xother).xvalue))))
            (((unsupported)) 0)
              seq
                xtest_lru.write
                  [xself]
                    memory > xexpected
                    memory > xorig
                    memory > xf_cnt
                    memory > xf
                    memory > xactual
                    memory > xdomain
                    seq > @
                      seq
                        xorig.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((3.mul (xx)).add (xy))))
                        xf.write (((((unsupported)) ((((xself).xmodule).xlru_cache)) (20))) ((xorig)))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmaxsize)) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (0))
                        xdomain.write (((xrange)) (5))
                        (((unsupported)) ((xi)) ((((xrange)) (1000))))
                          seq
                            (((unsupported)) ((((unsupported)) ((xx)) ((xy)))) ((((unsupported)) ((((xchoice)) ((xdomain)))) ((((xchoice)) ((xdomain)))))))
                            xactual.write (((xf)) ((xx)) ((xy)))
                            xexpected.write (((xorig)) ((xx)) ((xy)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xactual)) ((xexpected)))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((xhits).greater (xmisses))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xhits).add (xmisses))) (1000))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (20))
                        bogusForceDataize.write ((((xf).xcache_clear)) 0)
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (0))
                        bogusForceDataize.write (((xf)) ((xx)) ((xy)))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)) (((xf).x__wrapped__)) ((xorig)))
                        bogusForceDataize.write ((((xf).x__wrapped__)) ((xx)) ((xy)))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (1))
                        xf.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) ((xf_cnt)) (1))
                                (((unsupported)) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xmaxsize)) (0))
                        xf_cnt.write 0
                        (((unsupported)) ((xi)) ((((xrange)) (5))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) 0)) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xf_cnt)) (5))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (0))
                        xf.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) ((xf_cnt)) (1))
                                (((unsupported)) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xmaxsize)) (1))
                        xf_cnt.write 0
                        (((unsupported)) ((xi)) ((((xrange)) (5))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) 0)) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xf_cnt)) (1))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (1))
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) ((xf_cnt)) (1))
                                (((unsupported)) (((xx).mul 10)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xmaxsize)) (2))
                        xf_cnt.write 0
                        (((unsupported)) ((xx)) ((((unsupported)) (7) (9) (7) (9) (7) (9) (8) (8) (8) (9) (9) (9) (8) (8) (8) (7))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xx)))) (((xx).mul 10)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xf_cnt)) (4))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (2))
                xtest_lru_no_args.write
                  [xself]
                    memory > xsquare
                    seq > @
                      seq
                        xsquare.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((unsupported)) ((xx)) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlist)) ((((xmap)) ((xsquare)) ((((unsupported)) (10) (20) (10))))))) ((((unsupported)) (100) (400) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xhits)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xmisses)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xmaxsize)) (128))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xcurrsize)) (2))
                xtest_lru_bug_35780.write
                  [xself]
                    memory > xonce
                    memory > xf
                    seq > @
                      seq
                        xonce.write TRUE
                        xf.write
                          [xx]
                            memory > xonce
                            memory > xrv
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                xrv.write ".{x}."
                                (((xx).eq 20).and (xonce)).if
                                  seq
                                    xonce.write FALSE
                                    xrv.write (((xf)) ((xx)))
                                (((unsupported)) ((xrv)))
                        (((unsupported)) ((xx)) ((((xrange)) (15))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xx)))) (".{x}."))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xcurrsize)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (20))) (".20."))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xcurrsize)) (10))
                xtest_lru_bug_36650.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                        bogusForceDataize.write (((xf)) (0))
                        bogusForceDataize.write (((xf)) (0) ((((unsupported)) ((((unsupported)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xf).xcache_info)) 0).xhits)) (1))
                xtest_lru_hash_only_once.write
                  [xself]
                    memory > xmock_int
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx xy]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xx).mul 3).add (xy))))
                        xmock_int.write (((((xunittest).xmock).xMock)) 0)
                        (((unsupported)) (((xmock_int).x__mul__)) ((((unsupported)) ((((xunittest).xmock).xMock)) (15))))
                        (((unsupported)) (((xmock_int).x__hash__)) ((((unsupported)) ((((xunittest).xmock).xMock)) (999))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xmock_int)) (1))) (16))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmock_int).x__hash__).xcall_count)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (0) (1) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xmock_int)) (1))) (16))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmock_int).x__hash__).xcall_count)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (1) (1) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (6) (2))) (20))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmock_int).x__hash__).xcall_count)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (1) (2) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xmock_int)) (1))) (16))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xmock_int).x__hash__).xcall_count)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (1) (3) (1) (1))))
                xtest_lru_reentrancy_with_len.write
                  [xself]
                    memory > xold_len
                    seq > @
                      seq
                        xold_len.write ((xbuiltins).xlen)
                        (((unsupported)) 0)
                          seq
                            (((unsupported)) (((xbuiltins).xlen)) ((((((((xself).xmodule).xlru_cache)) (4))) ((xlen)))))
                            (((unsupported)) ((xi)) ((((unsupported)) (0) (0) (1) (2) (3) (3) (4) (5) (6) (1) (7) (2) (1))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((((unsupported)) ("abcdefghijklmn") ((((unsupported)) ((xi)))))))) ((xi)))
                          (((unsupported)) (((xbuiltins).xlen)) ((xold_len)))
                xtest_lru_star_arg_handling.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) (1) (2))) ((((unsupported)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((((unsupported)) (1) (2))))) ((((unsupported)) ((((unsupported)) (1) (2))))))
                xtest_lru_type_error.write
                  [xself]
                    memory > xlimited_cache
                    memory > xinfinite_cache
                    seq > @
                      seq
                        xinfinite_cache.write
                          [xo]
                            seq > @
                              (((unsupported)) 0)
                        xlimited_cache.write
                          [xo]
                            seq > @
                              (((unsupported)) 0)
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xinfinite_cache)) ((((unsupported)) 0)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))))
                          bogusForceDataize.write (((xlimited_cache)) ((((unsupported)) 0)))
                xtest_lru_with_maxsize_none.write
                  [xself]
                    memory > xfib
                    seq > @
                      seq
                        xfib.write
                          [xn]
                            seq > @
                              (((unsupported)) 0)
                                ((xn).less 2).if
                                  (((unsupported)) ((xn)))
                                (((unsupported)) (((((xfib)) (((xn).sub 1))).add (((xfib)) (((xn).sub 2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xfib)) ((xn)))) ((xn)) ((((xrange)) (16))))) ((((unsupported)) (0) (1) (1) (2) (3) (5) (8) (13) (21) (34) (55) (89) (144) (233) (377) (610))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (28) (16) ("None: is there a None literal in the EO language?") (16))))
                        bogusForceDataize.write ((((xfib).xcache_clear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (0) (0) ("None: is there a None literal in the EO language?") (0))))
                xtest_lru_with_maxsize_negative.write
                  [xself]
                    memory > xeq
                    seq > @
                      seq
                        xeq.write
                          [xn]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((xn)))
                        (((unsupported)) ((xi)) ((((unsupported)) (0) (1))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((xeq)) ((xn)))) ((xn)) ((((xrange)) (150))))) ((((xlist)) ((((xrange)) (150))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xeq).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (0) (300) (0) (0))))
                xtest_lru_with_exceptions.write
                  [xself]
                    memory > xfunc
                    seq > @
                      (((unsupported)) ((xmaxsize)) ((((unsupported)) ("None: is there a None literal in the EO language?") (128))))
                        seq
                          xfunc.write
                            [xi]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ((((unsupported)) ("abc") ((xi)))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xfunc)) (0))) ("a"))
                          (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))) ((xcm)))
                            bogusForceDataize.write (((xfunc)) (15))
                          bogusForceDataize.write ((((xself).xassertIsNone)) ((((xcm).xexception).x__context__)))
                          (((unsupported)) (((((xself).xassertRaises)) ((xIndexError)))))
                            bogusForceDataize.write (((xfunc)) (15))
                xtest_lru_with_types.write
                  [xself]
                    memory > xsquare
                    seq > @
                      (((unsupported)) ((xmaxsize)) ((((unsupported)) ("None: is there a None literal in the EO language?") (128))))
                        seq
                          xsquare.write
                            [xx]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (((xx).mul (xx))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xsquare)) (3))) (9))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xsquare)) (3))))) ((((xtype)) (9))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xsquare)) (3.0))) (9.0))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((xsquare)) (3.0))))) ((((xtype)) (9.0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xsquare)) (3))) (9))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((unsupported)) ((xsquare)) (3))))) ((((xtype)) (9))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xsquare)) (3.0))) (9.0))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xtype)) ((((unsupported)) ((xsquare)) (3.0))))) ((((xtype)) (9.0))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xhits)) (4))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((((xsquare).xcache_info)) 0).xmisses)) (4))
                xtest_lru_with_keyword_args.write
                  [xself]
                    memory > xfib
                    seq > @
                      seq
                        xfib.write
                          [xn]
                            seq > @
                              (((unsupported)) 0)
                                ((xn).less 2).if
                                  (((unsupported)) ((xn)))
                                (((unsupported)) (((((unsupported)) ((xfib)) (((xn).sub 1))).add (((unsupported)) ((xfib)) (((xn).sub 2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xfib)) ((xnumber)))) ((xnumber)) ((((xrange)) (16))))) ((((unsupported)) (0) (1) (1) (2) (3) (5) (8) (13) (21) (34) (55) (89) (144) (233) (377) (610))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (28) (16) (128) (16))))
                        bogusForceDataize.write ((((xfib).xcache_clear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (0) (0) (128) (0))))
                xtest_lru_with_keyword_args_maxsize_none.write
                  [xself]
                    memory > xfib
                    seq > @
                      seq
                        xfib.write
                          [xn]
                            seq > @
                              (((unsupported)) 0)
                                ((xn).less 2).if
                                  (((unsupported)) ((xn)))
                                (((unsupported)) (((((unsupported)) ((xfib)) (((xn).sub 1))).add (((unsupported)) ((xfib)) (((xn).sub 2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((((unsupported)) ((xfib)) ((xnumber)))) ((xnumber)) ((((xrange)) (16))))) ((((unsupported)) (0) (1) (1) (2) (3) (5) (8) (13) (21) (34) (55) (89) (144) (233) (377) (610))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (28) (16) ("None: is there a None literal in the EO language?") (16))))
                        bogusForceDataize.write ((((xfib).xcache_clear)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xfib).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (0) (0) ("None: is there a None literal in the EO language?") (0))))
                xtest_kwargs_order.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xlist)) (((((xkwargs).xitems)) 0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (1) (2))) ((((unsupported)) ((((unsupported)) ("a") (1))) ((((unsupported)) ("b") (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xf)) (2) (1))) ((((unsupported)) ((((unsupported)) ("b") (2))) ((((unsupported)) ("a") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) ((((xself).xmodule).x_CacheInfo)) (0) (2) (10) (2))))
                xtest_lru_cache_decoration.write
                  [xself]
                    memory > xg
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xzomg]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                (((unsupported)) (42))
                        xg.write (((((((xself).xmodule).xlru_cache)) 0)) ((xf)))
                        (((unsupported)) ((xattr)) ((((xself).xmodule).xWRAPPER_ASSIGNMENTS)))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((xgetattr)) ((xg)) ((xattr)))) ((((xgetattr)) ((xf)) ((xattr)))))
                xtest_lru_cache_threaded.write
                  [xself]
                    memory > xorig
                    memory > xclear
                    memory > xthreads
                    memory > xstart
                    memory > xf
                    memory > xfull
                    memory > xorig_si
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xn)) ((xm)))) ((((unsupported)) (5) (11))))
                        xorig.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((3.mul (xx)).add (xy))))
                        xf.write (((((unsupported)) ((((xself).xmodule).xlru_cache)) (((xn).mul (xm))))) ((xorig)))
                        (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) (0))
                        xstart.write ((((xthreading).xEvent)) 0)
                        xfull.write
                          [xk]
                            seq > @
                              seq
                                bogusForceDataize.write ((((xstart).xwait)) (10))
                                (((unsupported)) ((x_)) ((((xrange)) ((xm)))))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xk)) (0))) ((((xorig)) ((xk)) (0))))
                        xclear.write
                          []
                            seq > @
                              seq
                                bogusForceDataize.write ((((xstart).xwait)) (10))
                                (((unsupported)) ((x_)) ((((xrange)) ((2.mul (xm))))))
                                  bogusForceDataize.write ((((xf).xcache_clear)) 0)
                        xorig_si.write ((((xsys).xgetswitchinterval)) 0)
                        bogusForceDataize.write ((((xsupport).xsetswitchinterval)) ((((unsupported)) 0)))
                        (((unsupported)) 0)
                          seq
                            xthreads.write (((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((xfull)) ((((unsupported)) ((xk)))))) ((xk)) ((((xrange)) ((xn)))))
                            (((unsupported)) (((((xsupport).xstart_threads)) ((xthreads)))))
                              bogusForceDataize.write ((((xstart).xset)) 0)
                            (((unsupported)) ((((unsupported)) ((xhits)) ((xmisses)) ((xmaxsize)) ((xcurrsize)))) (((((xf).xcache_info)) 0)))
                            (((unsupported)) (((xself).xmodule)) ((xpy_functools))).if
                              seq
                                bogusForceDataize.write ((((xself).xassertLessEqual)) ((xmisses)) ((xn)))
                                bogusForceDataize.write ((((xself).xassertLessEqual)) ((xhits)) ((((xm).mul (xn)).sub (xmisses))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xmisses)) ((xn)))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((xhits)) ((((xm).mul (xn)).sub (xmisses))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xcurrsize)) ((xn)))
                            xthreads.write (((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((xclear)))))
                            (((unsupported)) ((xthreads)) ((((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((xfull)) ((((unsupported)) ((xk)))))) ((xk)) ((((xrange)) ((xn)))))))
                            bogusForceDataize.write ((((xstart).xclear)) 0)
                            (((unsupported)) (((((xsupport).xstart_threads)) ((xthreads)))))
                              bogusForceDataize.write ((((xstart).xset)) 0)
                          bogusForceDataize.write ((((xsys).xsetswitchinterval)) ((xorig_si)))
                xtest_lru_cache_threaded2.write
                  [xself]
                    memory > xpause
                    memory > xthreads
                    memory > xstart
                    memory > xf
                    memory > xtest
                    memory > xstop
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) ((xn)) ((xm)))) ((((unsupported)) (5) (7))))
                        xstart.write ((((xthreading).xBarrier)) (((xn).add 1)))
                        xpause.write ((((xthreading).xBarrier)) (((xn).add 1)))
                        xstop.write ((((xthreading).xBarrier)) (((xn).add 1)))
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xpause).xwait)) (10))
                                (((unsupported)) ((3.mul (xx))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (0) (0) (((xm).mul (xn))) (0))))
                        xtest.write
                          []
                            seq > @
                              (((unsupported)) ((xi)) ((((xrange)) ((xm)))))
                                seq
                                  bogusForceDataize.write ((((xstart).xwait)) (10))
                                  bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xi)))) ((3.mul (xi))))
                                  bogusForceDataize.write ((((xstop).xwait)) (10))
                        xthreads.write (((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((xtest)))) ((xk)) ((((xrange)) ((xn)))))
                        (((unsupported)) (((((xsupport).xstart_threads)) ((xthreads)))))
                          (((unsupported)) ((xi)) ((((xrange)) ((xm)))))
                            seq
                              bogusForceDataize.write ((((xstart).xwait)) (10))
                              bogusForceDataize.write ((((xstop).xreset)) 0)
                              bogusForceDataize.write ((((xpause).xwait)) (10))
                              bogusForceDataize.write ((((xstart).xreset)) 0)
                              bogusForceDataize.write ((((xstop).xwait)) (10))
                              bogusForceDataize.write ((((xpause).xreset)) 0)
                              bogusForceDataize.write ((((xself).xassertEqual)) (((((xf).xcache_info)) 0)) ((((unsupported)) (0) ((((xi).add 1).mul (xn))) (((xm).mul (xn))) (((xi).add 1)))))
                xtest_lru_cache_threaded3.write
                  [xself]
                    memory > xtest
                    memory > xthreads
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                bogusForceDataize.write ((((xtime).xsleep)) ((((unsupported)) 0)))
                                (((unsupported)) ((3.mul (xx))))
                        xtest.write
                          [xi xx]
                            seq > @
                              (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xi)))))
                                bogusForceDataize.write ((((xself).xassertEqual)) ((((xf)) ((xx)))) ((3.mul (xx))) ((xi)))
                        xthreads.write (((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((xtest)) ((((unsupported)) ((xi)) ((xv)))))) ((((unsupported)) ((xi)) ((xv)))) ((((xenumerate)) ((((unsupported)) (1) (2) (2) (3) (2))))))
                        (((unsupported)) (((((xsupport).xstart_threads)) ((xthreads)))))
                xtest_need_for_rlock.write
                  [xself]
                    memory > x__eq__
                    memory > x__hash__
                    memory > xtest_func
                    memory > x__init__
                    seq > @
                      seq
                        xtest_func.write
                          [xx]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                (((unsupported)) ((xx)))
                        (((unsupported)) 0)
                          seq
                            unsupported
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) (((xself).xx)) ((xx)))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)) (((xself).xx)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((xself).xx).eq 2).if
                                      bogusForceDataize.write (((xtest_func)) ((((xDoubleEq)) (1))))
                                    (((unsupported)) ((((xself).xx).eq ((xother).xx))))
                        bogusForceDataize.write (((xtest_func)) ((((xDoubleEq)) (1))))
                        bogusForceDataize.write (((xtest_func)) ((((xDoubleEq)) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xtest_func)) ((((xDoubleEq)) (2))))) ((((xDoubleEq)) (2))))
                xtest_lru_method.write
                  [xself]
                    memory > xc
                    memory > xb
                    memory > xf_cnt
                    memory > xf
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) ((xint)))
                          seq
                            xf_cnt.write 0
                            xf.write
                              [xself xx]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xf_cnt)) (1))
                                    (((unsupported)) ((((xx).mul 10).add (xself))))
                        xa.write (((xX)) (5))
                        xb.write (((xX)) (5))
                        xc.write (((xX)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xX).xf).xcache_info)) 0)) ((((unsupported)) (0) (0) (2) (0))))
                        (((unsupported)) ((xx)) ((((unsupported)) (1) (2) (2) (3) (1) (1) (1) (2) (3) (3))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xf)) ((xx)))) ((((xx).mul 10).add 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xa).xf_cnt)) (((xb).xf_cnt)) (((xc).xf_cnt)))) ((((unsupported)) (6) (0) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xX).xf).xcache_info)) 0)) ((((unsupported)) (4) (6) (2) (2))))
                        (((unsupported)) ((xx)) ((((unsupported)) (1) (2) (1) (1) (1) (1) (3) (2) (2) (2))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xb).xf)) ((xx)))) ((((xx).mul 10).add 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xa).xf_cnt)) (((xb).xf_cnt)) (((xc).xf_cnt)))) ((((unsupported)) (6) (4) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xX).xf).xcache_info)) 0)) ((((unsupported)) (10) (10) (2) (2))))
                        (((unsupported)) ((xx)) ((((unsupported)) (2) (1) (1) (1) (1) (2) (1) (3) (2) (1))))
                          bogusForceDataize.write ((((xself).xassertEqual)) (((((xc).xf)) ((xx)))) ((((xx).mul 10).add 7)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xa).xf_cnt)) (((xb).xf_cnt)) (((xc).xf_cnt)))) ((((unsupported)) (6) (4) (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xX).xf).xcache_info)) 0)) ((((unsupported)) (15) (15) (2) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xa).xf).xcache_info)) 0)) ((((((xX).xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xb).xf).xcache_info)) 0)) ((((((xX).xf).xcache_info)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xc).xf).xcache_info)) 0)) ((((((xX).xf).xcache_info)) 0)))
                xtest_pickle.write
                  [xself]
                    memory > xf_copy
                    memory > xcls
                    seq > @
                      seq
                        xcls.write ((xself).x__class__)
                        (((unsupported)) ((xf)) ((((unsupported)) ((((unsupported)) (((xcls).xcached_func)) (0))) (((xcls).xcached_meth)) (((xcls).xcached_staticmeth)))))
                          (((unsupported)) ((xproto)) ((((xrange)) ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                            (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xproto)) ((xf)))))
                              seq
                                xf_copy.write ((((xpickle).xloads)) (((((xpickle).xdumps)) ((xf)) ((xproto)))))
                                bogusForceDataize.write ((((xself).xassertIs)) ((xf_copy)) ((xf)))
                xtest_copy.write
                  [xself]
                    memory > xorig
                    memory > xpart
                    memory > xfuncs
                    memory > xcls
                    memory > xf_copy
                    seq > @
                      seq
                        xcls.write ((xself).x__class__)
                        xorig.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((3.mul (xx)).add (xy))))
                        xpart.write (((((xself).xmodule).xpartial)) ((xorig)) (2))
                        xfuncs.write (((unsupported)) ((((unsupported)) (((xcls).xcached_func)) (0))) (((xcls).xcached_meth)) (((xcls).xcached_staticmeth)) ((((((((xself).xmodule).xlru_cache)) (2))) ((xpart)))))
                        (((unsupported)) ((xf)) ((xfuncs)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xf)))))
                            seq
                              xf_copy.write ((((xcopy).xcopy)) ((xf)))
                              bogusForceDataize.write ((((xself).xassertIs)) ((xf_copy)) ((xf)))
                xtest_deepcopy.write
                  [xself]
                    memory > xorig
                    memory > xpart
                    memory > xfuncs
                    memory > xcls
                    memory > xf_copy
                    seq > @
                      seq
                        xcls.write ((xself).x__class__)
                        xorig.write
                          [xx xy]
                            seq > @
                              (((unsupported)) (((3.mul (xx)).add (xy))))
                        xpart.write (((((xself).xmodule).xpartial)) ((xorig)) (2))
                        xfuncs.write (((unsupported)) ((((unsupported)) (((xcls).xcached_func)) (0))) (((xcls).xcached_meth)) (((xcls).xcached_staticmeth)) ((((((((xself).xmodule).xlru_cache)) (2))) ((xpart)))))
                        (((unsupported)) ((xf)) ((xfuncs)))
                          (((unsupported)) ((((unsupported)) (((xself).xsubTest)) ((xf)))))
                            seq
                              xf_copy.write ((((xcopy).xdeepcopy)) ((xf)))
                              bogusForceDataize.write ((((xself).xassertIs)) ((xf_copy)) ((xf)))
            xpy_cached_func.write
              [xx xy]
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) (((3.mul (xx)).add (xy))))
            xc_cached_func.write
              [xx xy]
                seq > @
                  (((unsupported)) 0)
                    (((unsupported)) (((3.mul (xx)).add (xy))))
            (((unsupported)) ((xTestLRU)) (((xunittest).xTestCase)))
              seq
                xmodule.write (xpy_functools)
                xcached_func.write (((unsupported)) ((xpy_cached_func)))
                xcached_meth.write
                  [xself xx xy]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((3.mul (xx)).add (xy))))
                xcached_staticmeth.write
                  [xx xy]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((3.mul (xx)).add (xy))))
            (((unsupported)) ((xTestLRU)) (((xunittest).xTestCase)))
              seq
                xmodule.write (xc_functools)
                xcached_func.write (((unsupported)) ((xc_cached_func)))
                xcached_meth.write
                  [xself xx xy]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((3.mul (xx)).add (xy))))
                xcached_staticmeth.write
                  [xx xy]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) (((3.mul (xx)).add (xy))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_simple_overloads.write
                  [xself]
                    memory > xg_int
                    memory > xg
                    seq > @
                      seq
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        xg_int.write
                          [xi]
                            seq > @
                              (((unsupported)) ("integer"))
                        bogusForceDataize.write ((((xg).xregister)) ((xint)) ((xg_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ("str"))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) (1))) ("integer"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((((unsupported)) (1) (2) (3))))) ("base"))
                xtest_mro.write
                  [xself]
                    memory > xg_B
                    memory > xg
                    memory > xg_A
                    seq > @
                      seq
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        (((unsupported)) 0)
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xA)))
                        (((unsupported)) ((xC)) ((xB)))
                        xg_A.write
                          [xa]
                            seq > @
                              (((unsupported)) ("A"))
                        xg_B.write
                          [xb]
                            seq > @
                              (((unsupported)) ("B"))
                        bogusForceDataize.write ((((xg).xregister)) ((xA)) ((xg_A)))
                        bogusForceDataize.write ((((xg).xregister)) ((xB)) ((xg_B)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((((xA)) 0)))) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((((xB)) 0)))) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((((xC)) 0)))) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((((xD)) 0)))) ("B"))
                xtest_register_decorator.write
                  [xself]
                    memory > xg_int
                    memory > xg
                    seq > @
                      seq
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        xg_int.write
                          [xi]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (("int %s".mod (((unsupported)) ((xi))))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) (""))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) (12))) ("int 12"))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xg).xdispatch)) ((xint)))) ((xg_int)))
                        bogusForceDataize.write ((((xself).xassertIs)) (((((xg).xdispatch)) ((xobject)))) (((((xg).xdispatch)) ((xstr)))))
                xtest_wrapping_attributes.write
                  [xself]
                    memory > xg
                    seq > @
                      seq
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                unsupported
                                (((unsupported)) ("Test"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xg).x__name__)) ("g"))
                        ((((xsys).xflags).xoptimize).less 2).if
                          bogusForceDataize.write ((((xself).xassertEqual)) (((xg).x__doc__)) ("Simple test"))
                xtest_c_classes.write
                  [xself]
                    memory > x_
                    memory > xg
                    memory > xrnd
                    memory > xsubn
                    seq > @
                      (((unsupported)) 0)
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        x_.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) (((xobj).xargs)))
                        xsubn.write ((((xdecimal).xSubnormal)) ("Exponent < Emin"))
                        xrnd.write ((((xdecimal).xRounded)) ("Number got rounded"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xsubn)))) ((((unsupported)) ("Exponent < Emin"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xrnd)))) ((((unsupported)) ("Number got rounded"))))
                        x_.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("Too small to care."))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xsubn)))) ("Too small to care."))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xrnd)))) ((((unsupported)) ("Number got rounded"))))
                xtest_compose_mro.write
                  [xself]
                    memory > x__call__
                    memory > xbases
                    memory > xm
                    memory > xmro
                    memory > xc
                    seq > @
                      seq
                        xc.write ((xcollections).xabc)
                        xmro.write ((xfunctools).x_compose_mro)
                        xbases.write (((unsupported)) (((xc).xSequence)) (((xc).xMutableMapping)) (((xc).xMapping)) (((xc).xSet)))
                        (((unsupported)) ((xhaystack)) ((((xpermutations)) ((xbases)))))
                          seq
                            xm.write (((xmro)) ((xdict)) ((xhaystack)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((unsupported)) ((xdict)) (((xc).xMutableMapping)) (((xc).xMapping)) (((xc).xCollection)) (((xc).xSized)) (((xc).xIterable)) (((xc).xContainer)) ((xobject)))))
                        xbases.write (((unsupported)) (((xc).xContainer)) (((xc).xMapping)) (((xc).xMutableMapping)) (((xcollections).xOrderedDict)))
                        (((unsupported)) ((xhaystack)) ((((xpermutations)) ((xbases)))))
                          seq
                            xm.write (((xmro)) (((xcollections).xChainMap)) ((xhaystack)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((unsupported)) (((xcollections).xChainMap)) (((xc).xMutableMapping)) (((xc).xMapping)) (((xc).xCollection)) (((xc).xSized)) (((xc).xIterable)) (((xc).xContainer)) ((xobject)))))
                        xbases.write (((unsupported)) (((xc).xContainer)) (((xc).xSized)) ((xstr)))
                        (((unsupported)) ((xhaystack)) ((((xpermutations)) ((xbases)))))
                          seq
                            xm.write (((xmro)) (((xcollections).xdefaultdict)) ((((unsupported)) (((xc).xSized)) (((xc).xContainer)) ((xstr)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((unsupported)) (((xcollections).xdefaultdict)) ((xdict)) (((xc).xSized)) (((xc).xContainer)) ((xobject)))))
                        (((unsupported)) (((xcollections).xdefaultdict)))
                        bogusForceDataize.write (((((xc).xMutableSequence).xregister)) ((xD)))
                        xbases.write (((unsupported)) (((xc).xMutableSequence)) (((xc).xMutableMapping)))
                        (((unsupported)) ((xhaystack)) ((((xpermutations)) ((xbases)))))
                          seq
                            xm.write (((xmro)) ((xD)) ((xbases)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((unsupported)) ((xD)) (((xc).xMutableSequence)) (((xc).xSequence)) (((xc).xReversible)) (((xcollections).xdefaultdict)) ((xdict)) (((xc).xMutableMapping)) (((xc).xMapping)) (((xc).xCollection)) (((xc).xSized)) (((xc).xIterable)) (((xc).xContainer)) ((xobject)))))
                        (((unsupported)) (((xcollections).xdefaultdict)))
                          x__call__.write
                            [xself]
                              seq > @
                        xbases.write (((unsupported)) (((xc).xSized)) (((xc).xCallable)) (((xc).xContainer)) (((xc).xMapping)))
                        (((unsupported)) ((xhaystack)) ((((xpermutations)) ((xbases)))))
                          seq
                            xm.write (((xmro)) ((xC)) ((xhaystack)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((xm)) ((((unsupported)) ((xC)) (((xc).xCallable)) (((xcollections).xdefaultdict)) ((xdict)) (((xc).xMapping)) (((xc).xCollection)) (((xc).xSized)) (((xc).xIterable)) (((xc).xContainer)) ((xobject)))))
                xtest_register_abc.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xg
                    memory > xt
                    memory > xl
                    memory > xf
                    memory > xs
                    seq > @
                      seq
                        xc.write ((xcollections).xabc)
                        xd.write (((unsupported)) ("a") ("b"))
                        xl.write (((unsupported)) (1) (2) (3))
                        xs.write (((unsupported)) ((((xobject)) 0)) ("None: is there a None literal in the EO language?"))
                        xf.write (((xfrozenset)) ((xs)))
                        xt.write (((unsupported)) (1) (2) (3))
                        xg.write
                          [xobj]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("base"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xSized)) ((((unsupported)) ("sized"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xMutableMapping)) ((((unsupported)) ("mutablemapping"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xcollections).xChainMap)) ((((unsupported)) ("chainmap"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xMutableSequence)) ((((unsupported)) ("mutablesequence"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xMutableSet)) ((((unsupported)) ("mutableset"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xMapping)) ((((unsupported)) ("mapping"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sized"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xSequence)) ((((unsupported)) ("sequence"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("sized"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xSet)) ((((unsupported)) ("set"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) ((xdict)) ((((unsupported)) ("dict"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("mutablesequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) ((xlist)) ((((unsupported)) ("list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("mutableset"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) ((xset)) ((((unsupported)) ("concrete-set"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("concrete-set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) ((xfrozenset)) ((((unsupported)) ("frozen-set"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("concrete-set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("frozen-set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("sequence"))
                        bogusForceDataize.write ((((xg).xregister)) ((xtuple)) ((((unsupported)) ("tuple"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xs)))) ("concrete-set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xf)))) ("frozen-set"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xt)))) ("tuple"))
                xtest_c3_abc.write
                  [xself]
                    memory > xmany_abcs
                    memory > x__len__
                    memory > xmro
                    memory > xc
                    memory > x__call__
                    memory > xexpected
                    seq > @
                      seq
                        xc.write ((xcollections).xabc)
                        xmro.write ((xfunctools).x_c3_mro)
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xA)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        (((unsupported)) ((xobject)) ((((xc).xContainer).xregister)))
                        (((unsupported)) ((xobject)))
                        (((unsupported)) ((xD)) ((xC)) ((xB)))
                          x__call__.write
                            [xself]
                              seq > @
                        xexpected.write (((unsupported)) ((xX)) (((xc).xCallable)) ((xD)) ((xC)) (((xc).xContainer)) ((xB)) (((xc).xSized)) ((xA)) ((xobject)))
                        (((unsupported)) ((xabcs)) ((((xpermutations)) ((((unsupported)) (((xc).xSized)) (((xc).xCallable)) (((xc).xContainer)))))))
                          bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xmro)) ((xX)) ((xabcs)))) ((xexpected)))
                        xmany_abcs.write (((unsupported)) (((xc).xMapping)) (((xc).xSized)) (((xc).xCallable)) (((xc).xContainer)) (((xc).xIterable)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) ((xmro)) ((xX)) ((xmany_abcs)))) ((xexpected)))
                xtest_false_meta.write
                  [xself]
                    memory > xaa
                    memory > x_
                    memory > xfun
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        (((unsupported)) ((xMetaA)))
                        (((unsupported)) ((xA)))
                        xfun.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base A"))
                        x_.write
                          [xa]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("fun A"))
                        xaa.write (((xAA)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xfun)) ((xaa)))) ("fun A"))
                xtest_mro_conflicts.write
                  [xself]
                    memory > xu
                    memory > xc
                    memory > xo
                    memory > xq
                    memory > xg
                    memory > xt
                    memory > xh
                    memory > x_
                    memory > xp
                    memory > xr
                    memory > xi
                    memory > xv
                    memory > x__len__
                    memory > xj
                    seq > @
                      seq
                        xc.write ((xcollections).xabc)
                        xg.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        (((unsupported)) (((xc).xSized)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        xo.write (((xO)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xo)))) ("base"))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xIterable)) ((((unsupported)) ("iterable"))))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xContainer)) ((((unsupported)) ("container"))))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xSized)) ((((unsupported)) ("sized"))))
                        bogusForceDataize.write ((((xg).xregister)) (((xc).xSet)) ((((unsupported)) ("set"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xo)))) ("sized"))
                        bogusForceDataize.write (((((xc).xIterable).xregister)) ((xO)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xo)))) ("sized"))
                        bogusForceDataize.write (((((xc).xContainer).xregister)) ((xO)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xo)))) ("sized"))
                        bogusForceDataize.write (((((xc).xSet).xregister)) ((xO)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xo)))) ("set"))
                        (((unsupported)) 0)
                        xp.write (((xP)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xp)))) ("base"))
                        bogusForceDataize.write (((((xc).xIterable).xregister)) ((xP)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xp)))) ("iterable"))
                        bogusForceDataize.write (((((xc).xContainer).xregister)) ((xP)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xre_one)))
                          bogusForceDataize.write (((xg)) ((xp)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xstr)) (((xre_one).xexception)))) ((((unsupported)) ("Ambiguous dispatch: <class 'collections.abc.Container'> or <class 'collections.abc.Iterable'>") ("Ambiguous dispatch: <class 'collections.abc.Iterable'> or <class 'collections.abc.Container'>"))))
                        (((unsupported)) (((xc).xSized)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        xq.write (((xQ)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xq)))) ("sized"))
                        bogusForceDataize.write (((((xc).xIterable).xregister)) ((xQ)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xq)))) ("sized"))
                        bogusForceDataize.write (((((xc).xSet).xregister)) ((xQ)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xq)))) ("set"))
                        xh.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("sized"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("container"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xre_two)))
                          bogusForceDataize.write (((xh)) (((((xcollections).xdefaultdict)) ((((unsupported)) (0))))))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xstr)) (((xre_two).xexception)))) ((((unsupported)) ("Ambiguous dispatch: <class 'collections.abc.Container'> or <class 'collections.abc.Sized'>") ("Ambiguous dispatch: <class 'collections.abc.Sized'> or <class 'collections.abc.Container'>"))))
                        (((unsupported)) (((xcollections).xdefaultdict)))
                        bogusForceDataize.write (((((xc).xMutableSequence).xregister)) ((xR)))
                        xi.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("mapping"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("sequence"))
                        xr.write (((xR)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ((xr)))) ("sequence"))
                        (((unsupported)) 0)
                        (((unsupported)) ((xS)) (((xc).xSized)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        xt.write (((xT)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) ((xt)))) ("sized"))
                        bogusForceDataize.write (((((xc).xContainer).xregister)) ((xT)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) ((xt)))) ("sized"))
                        (((unsupported)) 0)
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        xu.write (((xU)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xh)) ((xu)))) ("sized"))
                        bogusForceDataize.write (((((xc).xContainer).xregister)) ((xU)))
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xre_three)))
                          bogusForceDataize.write (((xh)) ((xu)))
                        bogusForceDataize.write ((((xself).xassertIn)) ((((xstr)) (((xre_three).xexception)))) ((((unsupported)) ("Ambiguous dispatch: <class 'collections.abc.Container'> or <class 'collections.abc.Sized'>") ("Ambiguous dispatch: <class 'collections.abc.Sized'> or <class 'collections.abc.Container'>"))))
                        (((unsupported)) (((xc).xSized)) ((xS)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)) (0))
                        xj.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("s"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("container"))
                        xv.write (((xV)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xj)) ((xv)))) ("s"))
                        bogusForceDataize.write (((((xc).xContainer).xregister)) ((xV)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xj)) ((xv)))) ("container"))
                xtest_cache_invalidation.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xclear
                    memory > xg
                    memory > x__getitem__
                    memory > xl
                    memory > xtd
                    memory > x__setitem__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                        (((unsupported)) 0)
                        (((unsupported)) ((xUserDict)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)) 0)
                                    bogusForceDataize.write ((((((xsuper)) ((xTracingDict)) ((xself))).x__init__)) ((((unsupported)) ((xargs)))) ((((unsupported)) ((xkwargs)))))
                                    (((unsupported)) (((xself).xset_ops)) ((((unsupported)) 0)))
                                    (((unsupported)) (((xself).xget_ops)) ((((unsupported)) 0)))
                            x__getitem__.write
                              [xself xkey]
                                memory > xresult
                                seq > @
                                  seq
                                    xresult.write (((unsupported)) (((xself).xdata)) ((xkey)))
                                    bogusForceDataize.write (((((xself).xget_ops).xappend)) ((xkey)))
                                    (((unsupported)) ((xresult)))
                            x__setitem__.write
                              [xself xkey xvalue]
                                seq > @
                                  seq
                                    bogusForceDataize.write (((((xself).xset_ops).xappend)) ((xkey)))
                                    (((unsupported)) ((((unsupported)) (((xself).xdata)) ((xkey)))) ((xvalue)))
                            xclear.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write (((((xself).xdata).xclear)) 0)
                        xtd.write (((xTracingDict)) 0)
                        (((unsupported)) (((((xsupport).xswap_attr)) ((xweakref)) ("WeakKeyDictionary") ((((unsupported)) ((xtd)))))))
                          seq
                            xc.write ((xcollections).xabc)
                            xg.write
                              [xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("base"))
                            xd.write (((unsupported)) 0)
                            xl.write (((unsupported)) 0)
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xdict)))) ((((unsupported)) (((xg).xregistry)) ((xobject)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) 0)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xdict)))) ((((unsupported)) (((xg).xregistry)) ((xobject)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xlist)))) ((((unsupported)) (((xg).xregistry)) ((xobject)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xdict)))) ((((unsupported)) (((xtd).xdata)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xg).xregister)) ((xlist)) ((((unsupported)) ("list"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xdict)))) (((((xfunctools).x_find_impl)) ((xdict)) (((xg).xregistry)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((unsupported)) (((xtd).xdata)) ((xlist)))) (((((xfunctools).x_find_impl)) ((xlist)) (((xg).xregistry)))))
                            (((unsupported)) 0)
                            bogusForceDataize.write (((((xc).xMutableMapping).xregister)) ((xX)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("base"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xg).xregister)) (((xc).xSized)) ((((unsupported)) ("sized"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("sized"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("sized"))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)) ((xdict)) ((xlist)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write ((((xg).xdispatch)) ((xlist)))
                            bogusForceDataize.write ((((xg).xdispatch)) ((xdict)))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xget_ops)) ((((unsupported)) ((xlist)) ((xdict)) ((xdict)) ((xlist)) ((xlist)) ((xdict)) ((xlist)) ((xdict)))))
                            bogusForceDataize.write ((((xself).xassertEqual)) (((xtd).xset_ops)) ((((unsupported)) ((xdict)) ((xlist)) ((xdict)) ((xlist)) ((xdict)) ((xlist)))))
                            bogusForceDataize.write (((((xc).xMutableSet).xregister)) ((xX)))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (1))
                            bogusForceDataize.write ((((xg).xregister)) (((xc).xMutableMapping)) ((((unsupported)) ("mutablemapping"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("mutablemapping"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (2))
                            bogusForceDataize.write ((((xg).xregister)) ((xdict)) ((((unsupported)) ("dict"))))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xd)))) ("dict"))
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xg)) ((xl)))) ("list"))
                            bogusForceDataize.write ((((xg).x_clear_cache)) 0)
                            bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xtd)))) (0))
                xtest_annotations.write
                  [xself]
                    memory > x__eq__
                    memory > x_
                    memory > x__init__
                    memory > xi
                    seq > @
                      seq
                        xi.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("mapping"))
                        x_.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("sequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ("None: is there a None literal in the EO language?"))) ("base"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ((((unsupported)) ("a") (1))))) ("mapping"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ((((unsupported)) (1) (2) (3))))) ("sequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ((((unsupported)) (1) (2) (3))))) ("sequence"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ("str"))) ("sequence"))
                        (((unsupported)) (((((xi).xregister)) ((xstr)))))
                          seq
                            x__init__.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) (((xself).xarg)) ((xarg)))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)) ((((xself).xarg).eq (xother))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xi)) ("str"))) ("str"))
                xtest_method_register.write
                  [xself]
                    memory > xaa
                    memory > xt
                    memory > x_
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xt.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xarg)) ("base"))
                            x_.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xarg)) ("int"))
                            x_.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) (((xself).xarg)) ("str"))
                        xa.write (((xA)) 0)
                        bogusForceDataize.write ((((xa).xt)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xarg)) ("int"))
                        xaa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xaa)) ("arg"))))
                        bogusForceDataize.write ((((xa).xt)) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xarg)) ("str"))
                        xaa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xaa)) ("arg"))))
                        bogusForceDataize.write ((((xa).xt)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xarg)) ("base"))
                        xaa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertFalse)) ((((xhasattr)) ((xaa)) ("arg"))))
                xtest_staticmethod_register.write
                  [xself]
                    memory > xt
                    memory > x_
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xt.write
                              [xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((xarg)))
                            x_.write
                              [xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xisinstance)) ((xarg)) ((xint)))))
                            x_.write
                              [xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xisinstance)) ((xarg)) ((xstr)))))
                        xa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA).xt)) (0))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((xA).xt)) (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xA).xt)) (0.0))) (0.0))
                xtest_classmethod_register.write
                  [xself]
                    memory > xt
                    memory > x_
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) (((xself).xarg)) ((xarg)))
                            xt.write
                              [xcls xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xcls)) ("base"))))
                            x_.write
                              [xcls xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xcls)) ("int"))))
                            x_.write
                              [xcls xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xcls)) ("str"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) (0)).xarg)) ("int"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) ("")).xarg)) ("str"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) (0.0)).xarg)) ("base"))
                xtest_callable_register.write
                  [xself]
                    memory > xt
                    memory > x_
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            x__init__.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) (((xself).xarg)) ((xarg)))
                            xt.write
                              [xcls xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ((((xcls)) ("base"))))
                        x_.write
                          [xcls xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xcls)) ("int"))))
                        x_.write
                          [xcls xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ((((xcls)) ("str"))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) (0)).xarg)) ("int"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) ("")).xarg)) ("str"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((((xA).xt)) (0.0)).xarg)) ("base"))
                xtest_abstractmethod_register.write
                  [xself]
                    memory > xadd
                    seq > @
                      seq
                        (((unsupported)) (((xabc).xABCMeta)))
                          xadd.write
                            [xself xx xy]
                              seq > @
                                (((unsupported)) 0)
                        bogusForceDataize.write ((((xself).xassertTrue)) ((((xAbstract).xadd).x__isabstractmethod__)))
                xtest_type_ann_register.write
                  [xself]
                    memory > xt
                    memory > x_
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)) 0)
                          seq
                            xt.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("base"))
                            x_.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("int"))
                            x_.write
                              [xself xarg]
                                seq > @
                                  (((unsupported)) 0)
                                    (((unsupported)) ("str"))
                        xa.write (((xA)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xt)) (0))) ("int"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xt)) (""))) ("str"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xa).xt)) (0.0))) ("base"))
                xtest_invalid_registrations.write
                  [xself]
                    memory > xmsg_suffix
                    memory > xmsg_prefix
                    memory > x_
                    memory > xi
                    seq > @
                      seq
                        xmsg_prefix.write "Invalid first argument to `register()`: "
                        xmsg_suffix.write ". Use either `@register(some_class)` or plain `@register` on an annotated function."
                        xi.write
                          [xarg]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) ("base"))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xexc)))
                          x_.write
                            [xarg]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ("I annotated with a non-type"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xstartswith)) (((xmsg_prefix).add "42")))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xendswith)) ((xmsg_suffix)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xexc)))
                          x_.write
                            [xarg]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ("I forgot to annotate"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xstartswith)) (((xmsg_prefix).add "<function TestSingleDispatch.test_invalid_registrations.<locals>._")))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xendswith)) ((xmsg_suffix)))))
                        (((unsupported)) (((((xself).xassertRaises)) ((xTypeError)))) ((xexc)))
                          x_.write
                            [xarg]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) ("I annotated with a generic collection"))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xstartswith)) ("Invalid annotation for 'arg'."))))
                        bogusForceDataize.write ((((xself).xassertTrue)) (((((((xstr)) (((xexc).xexception))).xendswith)) ("typing.Iterable[str] is not a class."))))
                xtest_invalid_positional_argument.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          []
                            seq > @
                              (((unsupported)) 0)
                        xmsg.write "f requires at least 1 positional argument"
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write (((xf)) 0)
            (((unsupported)) 0)
              seq
                x_cost.write 1
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).xlock)) (((((xpy_functools).xRLock)) 0)))
                xcost.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        unsupported
                        (((unsupported)) (((xself).xlock)))
                          (((unsupported)) (((xself).x_cost)) (1))
                        (((unsupported)) (((xself).x_cost)))
            (((unsupported)) 0)
              seq
                x_cost.write 1
                xget_cost.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)) (((xself).x_cost)) (1))
                        (((unsupported)) (((xself).x_cost)))
                xcached_cost.write ((((xpy_functools).xcached_property)) ((xget_cost)))
            (((unsupported)) 0)
              seq
                x__init__.write
                  [xself xevent]
                    seq > @
                      seq
                        (((unsupported)) (((xself).x_cost)) (1))
                        (((unsupported)) (((xself).xlock)) (((((xpy_functools).xRLock)) 0)))
                        (((unsupported)) (((xself).xevent)) ((xevent)))
                xcost.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        bogusForceDataize.write (((((xself).xevent).xwait)) (1))
                        (((unsupported)) (((xself).xlock)))
                          (((unsupported)) (((xself).x_cost)) (1))
                        (((unsupported)) (((xself).x_cost)))
            (((unsupported)) 0)
              seq
                x__slots__.write "_cost"
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)) (((xself).x_cost)) (1))
                xcost.write
                  [xself]
                    seq > @
                      (((unsupported)) 0)
                        (((unsupported)) ((((xRuntimeError)) ("never called, slots not supported"))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                xtest_cached.write
                  [xself]
                    memory > xitem
                    seq > @
                      seq
                        xitem.write (((xCachedCostItem)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xitem).xcost)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xitem).xcost)) (2))
                xtest_cached_attribute_name_differs_from_func_name.write
                  [xself]
                    memory > xitem
                    seq > @
                      seq
                        xitem.write (((xOptionallyCachedCostItem)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xitem).xget_cost)) 0)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xitem).xcached_cost)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((xitem).xget_cost)) 0)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xitem).xcached_cost)) (3))
                xtest_threaded.write
                  [xself]
                    memory > xthreads
                    memory > xgo
                    memory > xitem
                    memory > xorig_si
                    memory > xnum_threads
                    seq > @
                      seq
                        xgo.write ((((xthreading).xEvent)) 0)
                        xitem.write (((xCachedCostItemWait)) ((xgo)))
                        xnum_threads.write 3
                        xorig_si.write ((((xsys).xgetswitchinterval)) 0)
                        bogusForceDataize.write ((((xsys).xsetswitchinterval)) ((((unsupported)) 0)))
                        (((unsupported)) 0)
                          seq
                            xthreads.write (((unsupported)) ((((unsupported)) (((xthreading).xThread)) ((((unsupported)) (((xitem).xcost)))))) ((xk)) ((((xrange)) ((xnum_threads)))))
                            (((unsupported)) (((((xsupport).xstart_threads)) ((xthreads)))))
                              bogusForceDataize.write ((((xgo).xset)) 0)
                          bogusForceDataize.write ((((xsys).xsetswitchinterval)) ((xorig_si)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xitem).xcost)) (2))
                xtest_object_with_slots.write
                  [xself]
                    memory > xitem
                    seq > @
                      seq
                        xitem.write (((xCachedCostItemWithSlots)) 0)
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("No '__dict__' attribute on 'CachedCostItemWithSlots' instance to cache 'cost' property."))))
                          unsupported
                xtest_immutable_dict.write
                  [xself]
                    memory > xprop
                    seq > @
                      seq
                        (((unsupported)) ((xtype)))
                          xprop.write
                            [xself]
                              seq > @
                                (((unsupported)) 0)
                                  (((unsupported)) (TRUE))
                        (((unsupported)) ((xMyMeta)))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("The '__dict__' attribute on 'MyMeta' instance does not support item assignment for caching 'prop' property."))))
                          unsupported
                xtest_reuse_different_names.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)) (((((xself).xassertRaises)) ((xRuntimeError)))) ((xctx)))
                          (((unsupported)) 0)
                            seq
                              xa.write
                                [xself]
                                  seq > @
                                    (((unsupported)) 0)
                              xb.write (xa)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xstr)) ((((xctx).xexception).x__context__)))) ((((xstr)) ((((xTypeError)) ("Cannot assign the same cached_property to two different names ('a' and 'b')."))))))
                xtest_reuse_same_name.write
                  [xself]
                    memory > xcounter
                    memory > xb
                    memory > x_cp
                    memory > xcp
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        xcounter.write 0
                        x_cp.write
                          [x_self]
                            seq > @
                              (((unsupported)) 0)
                                (((unsupported)) 0)
                                (((unsupported)) ((xcounter)) (1))
                                (((unsupported)) ((xcounter)))
                        (((unsupported)) 0)
                          xcp.write (x_cp)
                        (((unsupported)) 0)
                          xcp.write (x_cp)
                        xa.write (((xA)) 0)
                        xb.write (((xB)) 0)
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xcp)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xb).xcp)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xa).xcp)) (1))
                xtest_set_name_not_called.write
                  [xself]
                    memory > xcp
                    seq > @
                      seq
                        xcp.write ((((xpy_functools).xcached_property)) ((((unsupported)) ("None: is there a None literal in the EO language?"))))
                        (((unsupported)) 0)
                        (((unsupported)) (((xFoo).xcp)) ((xcp)))
                        (((unsupported)) (((((xself).xassertRaisesRegex)) ((xTypeError)) ("Cannot use cached_property instance without calling __set_name__ on it."))))
                          unsupported
                xtest_access_from_class.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsInstance)) (((xCachedCostItem).xcost)) (((xpy_functools).xcached_property)))
                xtest_doc.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)) ((((xCachedCostItem).xcost).x__doc__)) ("The cost of the item."))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)