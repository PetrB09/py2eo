memory > xcm
memory > xc
memory > xwarnings
memory > xrange
memory > xb
memory > xeval
memory > xtempfile
memory > xopen
memory > xsys
memory > xbytes
memory > xos
memory > xSyntaxError
memory > x__import__
memory > xlen
memory > x__name__
memory > xw
memory > xrepr
memory > xDeprecationWarning
memory > xchr
memory > xshutil
memory > xunittest
[] > test_string_literals
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_file_iso_8859_1
        memory > xtest_file_utf_8
        memory > xtest_eval_str_u
        memory > xtest_eval_str_raw
        memory > xcheck_encoding
        memory > xtest_eval_str_incomplete
        memory > xtest_file_utf_8_error
        memory > xtest_template
        memory > xbyte
        memory > xtearDown
        memory > xtest_eval_str_normal
        memory > xtest_eval_bytes_normal
        memory > xtest_file_utf8
        memory > xtest_eval_bytes_raw
        memory > xtest_eval_bytes_incomplete
        memory > xTEMPLATE
        memory > xtest_eval_bytes_invalid_escape
        memory > xsetUp
        memory > xtest_file_latin9
        memory > xtest_eval_str_invalid_escape
        memory > xtest_file_latin_1
        seq > @
          seq
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            (((unsupported)) 0)
            xTEMPLATE.write (((unsupported)) 0)
            xbyte.write
              [xi]
                seq > @
                  (((unsupported)) ((((xbytes)) ((((unsupported)) ((xi)))))))
            (((unsupported)) (((xunittest).xTestCase)))
              seq
                (((unsupported)) 0)
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) (((xself).xsave_path)) ((((unsupported)) (((xsys).xpath)) ((((unsupported)) 0)))))
                        (((unsupported)) (((xself).xtmpdir)) (((((xtempfile).xmkdtemp)) 0)))
                        bogusForceDataize.write (((((xsys).xpath).xinsert)) (0) (((xself).xtmpdir)))
                xtearDown.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)) ((((unsupported)) (((xsys).xpath)) ((((unsupported)) 0)))) (((xself).xsave_path)))
                        (((unsupported)) (((xshutil).xrmtree)) (((xself).xtmpdir)) (TRUE))
                xtest_template.write
                  [xself]
                    seq > @
                      (((unsupported)) ((xc)) ((xTEMPLATE)))
                        (((unsupported)) ((((xc).eq "n").or (((unsupported)) (" ") ((xc)) ("~")))) ((((xrepr)) ((xc)))))
                xtest_eval_str_normal.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'x01' "))) ((((xchr)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'x01' "))) ((((xchr)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'x81' "))) ((((xchr)) (129))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'x81' "))) ((((xchr)) (129))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'u1881' "))) ((((xchr)) (6273))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'u1881' "))) ((((xchr)) (6273))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'U0001d120' "))) ((((xchr)) (119072))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" 'U0001d120' "))) ((((xchr)) (119072))))
                xtest_eval_str_incomplete.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'x' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'x0' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'u' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'u0' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'u00' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'u000' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U0' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U00' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U000' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U0000' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U00000' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U000000' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" 'U0000000' "))
                xtest_eval_str_invalid_escape.write
                  [xself]
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) ((xb)) ((((xrange)) (1) (128))))
                          seq
                            (((unsupported)) ((xb)) ((((unsupported)) 0))).if
                              (((unsupported)) 0)
                            (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("'%c'".mod (xb))))) (("\\".add (((xchr)) ((xb))))))
                        (((unsupported)) ((((unsupported)) (((xwarnings).xcatch_warnings)) (TRUE))) ((xw)))
                          seq
                            (((unsupported)) (((xwarnings).xsimplefilter)) ("always") ((xDeprecationWarning)))
                            bogusForceDataize.write (((xeval)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xw)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xw)) (0)).xfilename)) ("<string>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xw)) (0)).xlineno)) (1))
                        (((unsupported)) ((((unsupported)) (((xwarnings).xcatch_warnings)) (TRUE))) ((xw)))
                          seq
                            (((unsupported)) (((xwarnings).xsimplefilter)) ("error") ((xDeprecationWarning)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcm)))
                              bogusForceDataize.write (((xeval)) ((((unsupported)) 0)))
                            xexc.write ((xcm).xexception)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xw)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xexc).xfilename)) ("<string>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xexc).xlineno)) (1))
                xtest_eval_str_raw.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'x01' "))) (("\\".add "x01")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'x01' "))) ((((xchr)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'x81' "))) (("\\".add "x81")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'x81' "))) ((((xchr)) (129))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'u1881' "))) (("\\".add "u1881")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'u1881' "))) ((((xchr)) (6273))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'U0001d120' "))) (("\\".add "U0001d120")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" r'U0001d120' "))) ((((xchr)) (119072))))
                xtest_eval_bytes_normal.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" b'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" b'x01' "))) ((((xbyte)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" b'x01' "))) ((((xbyte)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" b'x81' "))) ((((xbyte)) (129))))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" b'x81' "))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'u1881' "))) (("\\".add "u1881")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" b'u1881' "))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'U0001d120' "))) (("\\".add "U0001d120")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" b'U0001d120' "))
                xtest_eval_bytes_incomplete.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" b'x' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" b'x0' "))
                xtest_eval_bytes_invalid_escape.write
                  [xself]
                    memory > xexc
                    seq > @
                      seq
                        (((unsupported)) ((xb)) ((((xrange)) (1) (128))))
                          seq
                            (((unsupported)) ((xb)) ((((unsupported)) 0))).if
                              (((unsupported)) 0)
                            (((unsupported)) (((((xself).xassertWarns)) ((xDeprecationWarning)))))
                              bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (("b'%c'".mod (xb))))) (("\\".add (((xbytes)) ((((unsupported)) ((xb))))))))
                        (((unsupported)) ((((unsupported)) (((xwarnings).xcatch_warnings)) (TRUE))) ((xw)))
                          seq
                            (((unsupported)) (((xwarnings).xsimplefilter)) ("always") ((xDeprecationWarning)))
                            bogusForceDataize.write (((xeval)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xlen)) ((xw)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xw)) (0)).xfilename)) ("<string>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((((unsupported)) ((xw)) (0)).xlineno)) (1))
                        (((unsupported)) ((((unsupported)) (((xwarnings).xcatch_warnings)) (TRUE))) ((xw)))
                          seq
                            (((unsupported)) (((xwarnings).xsimplefilter)) ("error") ((xDeprecationWarning)))
                            (((unsupported)) (((((xself).xassertRaises)) ((xSyntaxError)))) ((xcm)))
                              bogusForceDataize.write (((xeval)) ((((unsupported)) 0)))
                            xexc.write ((xcm).xexception)
                        bogusForceDataize.write ((((xself).xassertEqual)) ((xw)) ((((unsupported)) 0)))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xexc).xfilename)) ("<string>"))
                        bogusForceDataize.write ((((xself).xassertEqual)) (((xexc).xlineno)) (1))
                xtest_eval_bytes_raw.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'x01' "))) (("\\".add "x01")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'x01' "))) (("\\".add "x01")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'x01' "))) ((((xbyte)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'x01' "))) ((((xbyte)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'x81' "))) (("\\".add "x81")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'x81' "))) (("\\".add "x81")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" br'x81' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rb'x81' "))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'u1881' "))) (("\\".add "u1881")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'u1881' "))) (("\\".add "u1881")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" br'u1881' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rb'u1881' "))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" br'U0001d120' "))) (("\\".add "U0001d120")))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" rb'U0001d120' "))) (("\\".add "U0001d120")))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" br'U0001d120' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rb'U0001d120' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" bb'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rr'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" brr'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" bbr'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rrb'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" rbb'' "))
                xtest_eval_str_u.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" u'x' "))) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" U'u00e4' "))) ("ä"))
                        bogusForceDataize.write ((((xself).xassertEqual)) ((((xeval)) (" u'N{LATIN SMALL LETTER A WITH DIAERESIS}' "))) ("ä"))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" ur'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" ru'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" bu'' "))
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) ((xeval)) (" ub'' "))
                xcheck_encoding.write
                  [xself xencoding xextra]
                    memory > xfn
                    memory > xf
                    memory > xmodname
                    seq > @
                      (((unsupported)) 0)
                        xmodname.write ("xx_".add ((((xencoding).xreplace)) ("-") ("_")))
                        xfn.write (((((xos).xpath).xjoin)) (((xself).xtmpdir)) (((xmodname).add ".py")))
                        xf.write (((unsupported)) ((xopen)) ((xfn)) ("w") ((xencoding)))
                        (((unsupported)) 0)
                          seq
                            bogusForceDataize.write ((((xf).xwrite)) (((xTEMPLATE).mod (xencoding))))
                            bogusForceDataize.write ((((xf).xwrite)) ((xextra)))
                          bogusForceDataize.write ((((xf).xclose)) 0)
                        bogusForceDataize.write (((x__import__)) ((xmodname)))
                        (((unsupported)) ((((unsupported)) ((((unsupported)) (((xsys).xmodules)) ((xmodname)))))))
                xtest_file_utf_8.write
                  [xself]
                    memory > xextra
                    seq > @
                      seq
                        xextra.write "z = 'u1234'; assert ord(z) == 0x1234n"
                        bogusForceDataize.write ((((xself).xcheck_encoding)) ("utf-8") ((xextra)))
                xtest_file_utf_8_error.write
                  [xself]
                    memory > xextra
                    seq > @
                      seq
                        xextra.write "b'x80'n"
                        bogusForceDataize.write ((((xself).xassertRaises)) ((xSyntaxError)) (((xself).xcheck_encoding)) ("utf-8") ((xextra)))
                xtest_file_utf8.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_encoding)) ("utf-8"))
                xtest_file_iso_8859_1.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_encoding)) ("iso-8859-1"))
                xtest_file_latin_1.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_encoding)) ("latin-1"))
                xtest_file_latin9.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_encoding)) ("latin9"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)) 0)