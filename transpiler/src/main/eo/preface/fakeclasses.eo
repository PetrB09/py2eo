+package preface
+alias pybool preface.pybool
+alias pyint preface.pyint
+alias pyfloat preface.pyfloat
+alias pystring preface.pystring
+alias newUID preface.newUID
+alias stdout org.eolang.io.stdout

[] > fakeclasses
  [x__id__] > fakeclass
    newUID.apply 0 > x__id__normal
    [x] > eq
      seq > @
        stdout "eq\n"
        pybool (x__id__.eq (x.x__id__))

  fakeclass 5 > pyIntClass
  fakeclass 6 > pyBoolClass
  fakeclass 7 > pyFloatClass

  [typ1 typ2] > gt
    seq > @
      (typ1.eq pyFloatClass).and (typ2.eq pyIntClass)

  [obj typ] > has-type
    obj.x__class__.eq typ > @

  [obj dst] > convert-to
    seq > @
      stdout "convert-to\n"
      if.
        dst.eq pyIntClass
        pyint (obj.value)
        if.
          dst.eq pyFloatClass
          seq
            stdout "converting to float\n"
            pyfloat (obj.value.as-float)
          seq
            stdout "Oblom\n"
            (pystring "Oblom")

  [fst snd] > pair

  [a b] > convert
    seq > @
      stdout "convert\n"
      if.
        gt (a.x__class__) (b.x__class__)
        seq
          pair
            a
            convert-to b (a.x__class__)
        seq
          stdout "false\n"
          pair
            convert-to a (b.x__class__)
            b
